

# evaluating initial population...
1,43022,72
2,43198,72
3,42917,69
4,43022,70
5,43022,79
6,43211,71
7,43022,70
8,43001,69
9,43022,65
10,38297,72
11,43022,70
12,43022,70
13,43022,63
14,42252,75
15,43022,67
16,43127,67
17,43190,74
18,43211,70
19,43043,72
20,43022,69
21,43034,74
22,43022,72
23,42854,67
24,42854,70
25,43043,70
26,43022,77
27,42854,69
28,42938,70
29,20923398,69
30,43022,70
31,43169,78
32,43106,72
33,43022,66
34,43050,69
35,43022,77
36,42252,70
37,36694,66
38,43012,67
39,42938,68
40,43967,71
41,42252,71
42,43022,65
43,42917,73
44,43137,72
45,43022,75
46,43190,74
47,43022,77
48,43022,64
49,43001,74
50,42959,72
51,43043,69
52,43022,72
53,43022,66
54,43043,69
55,43001,69
56,43022,75
57,43011,75
58,43043,68
59,43022,67
60,43106,75
61,43043,71
62,42917,71
63,43022,66
64,42896,77
65,43022,69
66,43001,82
67,43169,68
68,43059,70
69,42938,72
70,43022,72
71,43190,75
72,43043,70
73,43148,72
74,43043,71
75,43022,70
76,42076,67
77,43022,66
78,43001,66
79,43253,76
80,43148,69
81,43001,62
82,43169,69
83,42981,75
84,43023,82
85,43043,72
86,43022,71
87,43064,71
88,43022,70
89,42938,71
90,43169,69
91,43792,64
92,43022,67
93,43031,74
94,45542,74
95,42959,72
96,43106,69
97,42854,73
98,43043,75
99,43106,73
100,42875,74
# After 0 updates
# 36694: "+ 8 -9 x * - 0 + 8 * inc x 8 + x inc + 9 x 9 x 4 + 9 x x * inc 8 *"
# 38297: "9 - 2 dec / x x x inc -1 / 5 x x 8 x / + x x -7 -6 * dec -9 -8 3 * dec *"
# 42076: "x / inc -2 x x / 4 x x + - x x - -6 x / - inc / inc x - x + - x * +"
# 42252: "x - - x -9 x 3 inc / dec x -6 inc x -6 dec + / x + -5 x inc x * x x x dec *"
# 42252: "x 0 -10 x -7 x / -7 / x / inc 4 -1 -7 2 -9 - 3 x dec -8 x x x x x / - *"
# 42252: "-5 x x * x inc x x * / -4 x x x / x x x x x dec dec x inc + -8 - x x *"
# 42854: "4 0 inc dec 3 x / / - x + x 7 x x 4 x / - x x 5 -7 -10 -8 0 x dec -9 -"
# 42854: "1 inc 5 x 0 -3 x x dec 7 0 x + -9 * -8 0 9 -1 * x x 1 / * x x inc 2 8"
# 42854: "0 / -1 4 / dec 2 x dec inc -2 x x 3 / x dec -10 - -7 x x - 5 7 * x -6 + 8"
# 42854: "9 -6 8 3 x x + x / x 9 dec 5 x x inc 9 x + dec + - x x * * x -1 x 8"
# 42875: "- 5 x + -2 x -10 -2 -1 x / 1 x x inc x 2 x inc x inc x inc inc * 0 x x x 7"
# 42896: "+ inc 4 dec + x -10 * x + + dec dec x x 9 inc -6 x -1 -10 - x -1 x -4 x 2 x 6"
# 42917: "-6 - -7 x x 4 x 2 + -7 inc / * x x - -3 * dec -5 * x 7 x * 6 x -5 * 5"
# 42917: "- + - -5 9 inc 4 -7 dec x inc x * x / 3 + x + -5 x inc / 6 x -2 4 x x 5"
# 42917: "* 2 / dec 9 9 + inc - x x x 1 x inc 7 / x x -1 -4 + x dec inc x -2 + -2 5"
# 42938: "x x -5 -6 x x -9 x -10 x inc 8 1 * 1 -10 x 8 inc 6 x / x x dec 6 x 3 + 4"
# 42938: "/ * dec x x * x -9 + x -4 x dec x 5 4 - - -9 -2 x -10 x x x - -8 x x 4"
# 42938: "+ - -1 x 7 -10 6 x -6 -5 1 dec 9 x -7 / + -7 5 x / * 0 x x * x x x 4"
# 42938: "-2 dec 7 x x 3 x 3 -8 x x dec / 5 / x -10 inc - x x x + 9 + + -3 -2 + +"
# 42959: "0 x 9 dec dec 9 x -6 4 / x 5 x -8 x x x / + inc -3 x * inc x x inc 3 x +"
# 42959: "* 4 3 x -4 / x 5 3 dec inc 1 x x 7 x x x - x -10 -2 -6 -3 x -10 -4 x x 3"
# 42981: "x dec dec x x 2 inc -3 * 0 x 9 4 - x x -7 + -10 7 5 -1 x -3 x inc x x / inc"
# 43001: "x x + x - x 7 x * * x 2 x + -1 3 x 9 x 9 2 x - / -4 -7 * 6 - 1"
# 43001: "9 9 7 -2 x 6 x x -8 x x 1 x x x + dec 6 / 9 -8 0 inc * x x + 8 x 1"
# 43001: "-1 x 3 x -7 x 0 3 -6 8 inc inc + -1 x x dec x x x * * -3 x + 9 dec / 2 dec"
# 43001: "x x 0 x 3 x -3 5 x x x x 4 5 x -3 dec -4 5 dec 2 - x / -7 9 x 2 + dec"
# 43001: "x - inc x inc -10 dec inc dec / 4 x x -7 * * x / inc / -10 dec 6 5 inc x x x x inc"
# 43001: "4 x -10 - -6 / * * x 8 - x x + -1 0 x - dec 7 x + -2 2 * - -5 / x inc"
# 43011: "x -10 0 x 8 -9 x x + x x 2 9 inc -7 * -8 / / -5 -5 -4 inc * inc - x dec x /"
# 43012: "- + / / * x -1 2 8 x 3 x - x 3 -5 x x x -5 x x * dec x -2 x x dec /"
# 43022: "x x inc - -8 -5 9 x + dec x x 5 inc x dec inc -4 * x -4 inc x + inc + x 0 8 x"
# 43022: "x inc -9 8 dec * x x * x / -2 x / * - -1 2 x 8 x dec inc dec x 3 * x x -"
# 43022: "-9 x * / 6 x 8 x x x / -5 x x + -4 inc x x / -3 - 9 x x x -6 * 2 x"
# 43022: "x + -4 x inc x -9 / - 4 -3 8 + x dec - 4 * x x 0 -9 x * 8 x -8 x -10 x"
# 43022: "-9 -3 5 / 2 -9 x -2 / / + inc -3 3 x x 1 -2 * x inc x 5 -10 dec x inc x -10 x"
# 43022: "x inc x -1 x x x 4 7 -7 -6 x 3 x 0 x dec -8 * dec x 9 / * x * 0 -8 - 0"
# 43022: "* x -5 x x 8 x x + dec - 2 x + x x x x + 4 -8 x inc x dec x + x 0 /"
# 43022: "/ + * -3 + / -6 x -4 -1 dec x dec 8 x dec x dec * -9 x 6 -1 inc x dec x -8 -5 x"
# 43022: "* x * -6 x x - 0 - inc x inc inc x - -9 8 / dec x / x 6 x 0 -4 x / + x"
# 43022: "x x dec x x -7 -3 -2 -3 + x -4 x -4 x dec x x 7 -10 0 9 x x x x 3 + + 0"
# 43022: "- -2 -7 dec -7 -6 -3 -2 0 x x x x x inc x x -5 * / / x -8 -2 9 2 * - x *"
# 43022: "x x 2 x x / x 3 / -3 / - * 7 x -2 1 x 1 x x x x dec x + -7 -5 * x"
# 43022: "4 inc x / x 4 + x + x -6 -10 x 6 x - x x + x dec * x x inc -8 7 + -3 x"
# 43022: "x 6 -10 x -7 x 9 x x 5 / / * 8 - dec x x / -2 2 9 * + 9 x x x - +"
# 43022: "-6 x -5 6 - * x inc * 9 8 x - -7 dec -1 x -10 + * - -7 1 * inc x -3 inc - x"
# 43022: "-6 -4 x 3 * / / dec x / -4 / x + x 2 -3 9 x x x 5 x 0 x x -2 x * x"
# 43022: "4 inc 1 -2 / 6 / -8 8 3 -9 3 x x 7 x 5 dec x -8 + inc / x dec -10 -3 -2 inc 0"
# 43022: "3 * + / x / -1 dec + -3 x x * x * + -1 - x 9 8 x * x - x x x x x"
# 43022: "* -2 x x -7 + -5 x x / * / / -9 0 * inc x x * / x x -4 5 x 7 0 x -"
# 43022: "dec / + / 4 1 dec + 4 x -9 x + -10 x x -8 6 3 x -7 -1 -2 / * x 4 x x -"
# 43022: "x x x / x -7 / x x - / x + -1 -7 / dec 3 dec x x dec * 6 x / -3 * -2 x"
# 43022: "inc x / x -9 - x 3 x inc -1 -9 x x 2 x dec 3 x 0 inc x + -8 - x / 1 -8 x"
# 43022: "7 x 1 + x 0 -2 -1 8 x x -8 1 -6 x * x - + 8 7 inc 9 x x -2 - x - *"
# 43022: "+ - -8 x -2 x / 8 x 0 -2 x x 6 x -9 x inc inc x x inc x * x * -4 + inc x"
# 43022: "6 x 7 7 / * x dec x dec + 6 inc x -1 -8 / -5 x x 3 x 6 * -1 -8 9 7 x x"
# 43022: "+ * x -5 dec - / -8 -4 - x + -8 x * x x -1 x dec x -9 -2 -10 -7 5 -9 x -3 x"
# 43022: "/ -8 4 x 6 1 x + 6 5 x dec x / x x x x + / + + x - - x - x -8 x"
# 43022: "+ + x x -8 + 3 + x inc x x x - -8 + + / / x -10 inc / x -6 * -7 2 x x"
# 43022: "- x x -5 * x - x inc - x x x 5 x -3 + -3 x x x * - + 0 + x -4 dec x"
# 43022: "- 7 x x 0 x + 5 3 x 3 -4 -3 1 / 3 -4 -4 1 x - x 9 inc -5 -1 x + x x"
# 43022: "inc / x - * x -3 2 * 5 5 7 x - -10 + 3 x + * * dec / x + x x -4 dec x"
# 43023: "inc -10 4 3 -6 - -8 -6 x x x + - inc -10 dec + x -3 dec -8 x * dec 4 dec x x / dec"
# 43031: "x x x x dec + x -2 dec x x dec x -8 x dec x - dec 7 - x * + x x dec x -6 /"
# 43034: "* -1 + x -5 dec inc x -10 dec x 9 + x - x 0 * / 5 x / 9 + inc -5 dec x * /"
# 43043: "x x dec 1 / x x 2 x x 9 3 -10 x 3 -2 x 4 -3 x 4 -5 x x - x + x + dec"
# 43043: "* + - x + -10 x * 5 dec + * x / inc 5 inc -6 dec x x x 9 x * x 3 x * dec"
# 43043: "-10 x 5 * -1 x x x 9 -5 -5 + - 7 -3 x 5 -4 x inc + + dec dec 0 0 inc 2 -3 /"
# 43043: "x -1 8 x x * 6 x -4 -6 / -7 -7 + + + * x x * x x + 3 -10 -4 -5 x x dec"
# 43043: "-1 + x -7 x + 3 inc 6 * -4 x inc -1 4 0 -3 -8 8 x x inc x x 3 x - / 3 -1"
# 43043: "/ x 6 x dec + + -6 - inc x x x x + -9 -1 x x x - -3 x x -3 5 * * x -1"
# 43043: "x * x x 3 -5 + / -4 x / / + x x inc 0 -5 -10 -2 x x -3 x x 5 2 x - -1"
# 43043: "8 - -10 + 2 x -1 -5 inc 8 x x / - 6 x x x / 2 dec x x x -6 0 -3 / x -1"
# 43043: "x * / -8 * x 4 - / x x x x x x inc x x -7 -10 / -1 -7 * x * + inc x dec"
# 43043: "- -7 x x x + x -10 -4 -5 -6 -4 / x x x x x -4 x 3 x -5 + dec x - 7 9 -1"
# 43050: "-4 x - x x x inc -3 inc -1 x + * x * 9 / x x -5 x + * -5 x -3 x - x /"
# 43059: "7 -8 x / / 5 x 9 * / -7 + -10 x x dec x -6 x -8 x - 2 x x -5 / x / dec"
# 43064: "+ + 8 inc 0 -6 inc x x x + * * dec 5 x -6 7 inc x -5 + * 1 x - x x 4 -2"
# 43106: "x * * * x x x 3 -9 x inc / inc x -6 x -8 -7 * x 2 x + * x x - -3 1 -4"
# 43106: "x 7 x x x x 0 x dec - -3 x x - - inc x 7 -7 * x / -7 x -10 -1 6 -3 -3 dec"
# 43106: "/ inc x x x * x inc - -4 0 + / / x x x -6 inc x -5 x x -4 x x inc -3 dec -4"
# 43106: "/ - x + 4 / - -9 dec dec -1 inc x x / x x / inc 9 x x -9 x -6 x x 0 * -4"
# 43127: "9 x - 7 x 1 x 4 - x / 6 x x x -6 9 inc -9 - / - + -3 x * -5 - - dec"
# 43137: "x x + 6 * / 1 x inc 3 + x -5 / -8 1 / inc * x x inc -1 x inc x dec / 6 -"
# 43148: "/ inc - x x x x -3 - x x + 7 - 8 x x x dec -6 0 2 / x inc * x dec / +"
# 43148: "- x x -6 x x 1 + x x x x -10 8 inc x x x x -8 -5 dec 7 9 x 0 -7 + dec -6"
# 43169: "x x dec * x 3 dec x 0 * -1 -9 x -5 x x 7 dec inc inc -2 -6 - -9 x / 8 inc x -7"
# 43169: "* 3 * 2 3 2 -3 x * x x x / x x -8 -2 x x -3 -8 x x x inc -4 x x - -7"
# 43169: "/ 5 1 x -2 x x x + 1 -1 -7 x 3 x x 7 + -10 x x + * x -1 x x -10 -4 -7"
# 43169: "inc -4 + x 2 dec / * x x 7 * inc - + x x * 8 inc / x x x - x x -7 x +"
# 43190: "x + x x -10 9 x -9 dec 0 x - x x x / x inc dec -8 x 3 * x -10 x dec -8 x -"
# 43190: "2 x / x x x x inc x * -10 x x -7 x inc x x / + -5 dec x inc -3 - x x -7 -8"
# 43190: "-10 7 9 + - * x -5 inc dec x x dec 3 inc x 0 + x 6 x inc -9 x -9 + x x * -8"
# 43198: "x -1 0 -4 * x -10 + -2 x dec 9 x x x inc + x 9 5 x / -1 -3 6 * * - inc +"
# 43211: "x x x 6 -10 8 - * 8 / dec x x -4 x / / dec + -5 -10 7 + -7 - 2 7 x x -9"
# 43211: "-6 x 5 x 1 -6 inc x - x x x x x dec x - -4 + 5 4 -8 3 x dec x x x 2 -9"
# 43253: "x -5 1 -3 inc 8 x 3 inc 9 + inc 1 0 x -6 - inc * x x x x x -5 - 2 -4 -10 dec"
# 43792: "- -3 3 -1 -6 x x - * / 8 9 x x x x x x * * dec x - x / x x x * -"
# 43967: "* x inc x 6 5 8 -3 x x -1 0 -8 - -1 4 x x -8 x 4 -6 x -8 dec / 2 5 -9 *"
# 45542: "/ 4 + x -4 + * x 0 -10 dec 1 6 -6 0 / -5 x - -7 7 / 7 -10 8 -10 inc -6 + *"
# 20923398: "/ x x -10 3 -10 0 - - x 3 x / dec x + -3 x x * * * -7 + * dec * 0 - *"
101,43022,73
102,43022,78
103,43022,70
104,43022,70
105,43022,73
106,43022,74
107,43043,64
108,43064,70
109,43169,72
110,42981,73
111,43001,73
112,43001,72
113,43043,63
114,43792,69
115,43001,69
116,43043,71
117,43022,66
118,43022,68
119,43022,75
120,42938,71
121,43031,70
122,43022,68
123,64547,73
124,43022,70
125,42938,75
126,43001,70
127,43043,75
128,43246,68
129,43002,66
130,42938,68
131,43022,69
132,36694,72
133,43022,73
134,43106,77
135,43085,65
136,43022,68
137,43022,72
138,43002,66
139,43022,72
140,43022,65
141,43030,65
142,43022,71
143,43169,75
144,43022,73
145,43001,74
146,43022,69
147,43022,73
148,43043,69
149,43050,67
150,43022,70
151,43022,76
152,43001,74
153,42938,74
154,43043,69
155,43148,76
156,43059,74
157,43022,72
158,43169,71
159,43022,79
160,43022,76
161,43022,78
162,43064,69
163,43022,73
164,43001,75
165,42854,68
166,38402,78
167,43253,75
168,43022,74
169,43043,74
170,42917,75
171,43001,71
172,43022,65
173,43022,68
174,43001,68
175,43022,77
176,42917,70
177,43022,74
178,43022,69
179,42854,80
180,43179,72
181,43001,65
182,43022,61
183,43001,65
184,43022,66
185,43064,79
186,43022,69
187,43211,68
188,42917,69
189,43001,80
190,43001,65
191,43022,65
192,42981,78
193,42917,73
194,42938,81
195,43023,80
196,43022,72
197,43022,68
198,43022,71
199,42252,65
200,43106,69
201,43001,75
202,43169,67
203,42917,70
204,44270,66
205,43043,75
206,43001,72
207,44198,68
208,43148,69
209,43001,70
210,43022,62
211,43022,68
212,42917,71
213,42854,68
214,78868,70
215,43064,68
216,42686,69
217,42854,69
218,43022,67
219,43022,76
220,42875,76
221,43085,77
222,43022,83
223,43232,77
224,43022,72
225,42252,83
226,43001,66
227,43022,68
228,36694,70
229,43064,72
230,43106,85
231,43022,76
232,43022,65
233,43031,77
234,43001,65
235,43022,67
236,43022,82
237,42875,70
238,43022,75
239,42854,75
240,42959,72
241,43011,74
242,43012,74
243,42833,70
244,42854,75
245,43043,68
246,43043,71
247,42834,74
248,43001,70
249,43022,70
250,42938,74
251,43022,73
252,42917,72
253,43022,65
254,42854,68
255,43001,85
256,43022,69
257,42938,75
258,42917,76
259,42854,75
260,42968,70
261,43022,71
262,42252,75
263,43022,70
264,43001,65
265,42252,73
266,43169,76
267,43041,77
268,43106,80
269,43001,66
270,43001,64
271,42252,74
272,43001,76
273,43001,68
274,42938,78
275,43022,76
276,43022,74
277,42917,67
278,43043,71
279,43002,67
280,43064,67
281,43001,68
282,42917,70
283,42875,74
284,43022,71
285,43032,73
286,43022,79
287,42854,73
288,43022,77
289,42938,72
290,42854,70
291,43022,68
292,43022,74
293,43001,73
294,43043,67
295,43001,71
296,43022,79
297,43022,73
298,43022,69
299,36694,72
300,42938,78
301,42938,85
302,42938,74
303,43001,85
304,43274,74
305,43202,70
306,42917,68
307,43022,73
308,42938,77
309,42917,69
310,42917,67
311,43082,76
312,43022,76
313,43022,81
314,43001,75
315,42252,70
316,43002,71
317,42185,72
318,42854,65
319,43001,67
320,42959,72
321,43001,74
322,43022,68
323,43022,78
324,42854,70
325,42917,66
326,42854,81
327,42914,74
328,43022,71
329,43001,64
330,42854,69
331,42854,77
332,85058,68
333,43012,88
334,42252,75
335,42917,64
336,42854,75
337,42959,79
338,42854,77
339,42875,73
340,42854,86
341,43022,75
342,42854,79
343,42917,76
344,42854,71
345,42917,74
346,42252,70
347,43001,69
348,43022,71
349,43022,79
350,43022,72
351,43002,66
352,43022,74
353,42917,68
354,21000000,79
355,43022,73
356,42833,74
357,21000000,72
358,43022,68
359,42252,69
360,42917,69
361,43001,83
362,42252,73
363,43022,78
364,42875,74
365,43630,72
366,42252,78
367,43022,80
368,42854,66
369,42938,77
370,43148,71
371,42938,68
372,42252,98
373,43001,70
374,43002,69
375,42938,65
376,43043,76
377,43022,75
378,42854,71
379,42252,78
380,42854,75
381,43001,76
382,42252,76
383,42875,73
384,43022,83
385,21000000,72
386,42854,74
387,42854,69
388,42252,87
389,42252,84
390,42252,72
391,42252,84
392,42854,76
393,43022,80
394,42252,68
395,43001,74
396,42252,71
397,42917,77
398,42938,80
399,42854,78
400,43001,76
401,42854,64
402,43001,77
403,42854,77
404,43967,71
405,43022,77
406,42854,70
407,43106,85
408,42252,71
409,42938,73
410,42917,70
411,43022,77
412,36694,75
413,42938,71
414,42854,70
415,43295,72
416,42252,80
417,43022,77
418,43056,74
419,43022,75
420,43022,73
421,42875,83
422,43022,87
423,42875,77
424,42875,79
425,42854,77
426,43022,80
427,42854,74
428,83832,80
429,42896,81
430,42938,71
431,42981,86
432,42252,67
433,43022,65
434,42854,82
435,42854,71
436,42854,75
437,43022,77
438,42917,72
439,42854,74
440,42854,82
441,42854,74
442,42252,67
443,43001,77
444,42833,84
445,42854,79
446,43022,72
447,43042,72
448,42252,74
449,42938,70
450,42854,76
451,42833,71
452,36694,66
453,42917,72
454,43022,69
455,42917,65
456,42854,77
457,42854,78
458,42959,74
459,42917,70
460,42896,80
461,42896,77
462,43022,70
463,43043,76
464,42854,80
465,42252,79
466,42854,80
467,42875,70
468,42252,80
469,43022,76
470,42833,73
471,42938,67
472,43085,81
473,42854,65
474,42938,70
475,43022,75
476,43190,79
477,42938,71
478,21000000,68
479,42252,75
480,67494,77
481,42854,79
482,42917,71
483,43022,72
484,43127,68
485,42854,70
486,43022,77
487,42252,78
488,42854,83
489,42938,71
490,42938,75
491,42938,67
492,42833,71
493,42917,73
494,43022,69
495,42854,67
496,42252,82
497,43022,69
498,42252,79
499,42854,72
500,42252,68
501,42854,80
502,43022,73
503,42854,74
504,42959,75
505,42854,70
# After 200 updates
# 36694: "+ 8 -9 x * - 0 + 8 * inc x 8 + x inc + 9 x 9 x 4 + 9 x x * inc 8 *"
# 36694: "-9 -3 5 / 2 -9 x -2 / ≤ + copy -3 3 x x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "x + -4 x inc x -9 / - dec inc x 8 + x inc + 9 x 9 x -3 + 9 x x * inc 8 *"
# 36694: "x T x / 2 -9 x -2 / ¬ + copy -8 3 x x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "-2 dec 7 x 2 ¬ x -2 / ¬ - copy -8 3 swap x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "x 6 5 x > F 9 x x 5 inc x 8 + x inc + 9 - 9 x -3 + 9 x x * inc 8 *"
# 38297: "9 - 2 dec / x x x inc -1 / 5 x x 8 x / + x x -7 -6 * dec -9 -8 3 * dec *"
# 38402: "x -5 1 -3 inc 8 x 3 inc 9 + inc 1 0 x -6 ungreedy inc * x x x x x -5 - - * - *"
# 42076: "x / inc -2 x x / 4 x x + - x x - -6 x / - inc / inc x - x + - x * +"
# 42185: "x x x / x -7 -1 ∨ - x x x -10 ≥ -2 dec + / x + + -10 inc x * F x eql x *"
# 42252: "x / inc -2 x x / > x x + - x x - -6 x / - inc / inc x x x x x / - *"
# 42252: "greedy 7 F x -8 -10 x x inc -2 x + 4 depth ∧ x -6 T inc x -5 -10 F x x x x x dec *"
# 42252: "-6 - -7 x x x x ≥ 4 T x 5 -3 F x x x x + + -5 -10 inc x * x x x x *"
# 42252: "-5 x x * ungreedy inc ≤ -2 -1 x / 1 x x inc x 2 x inc x inc x inc copy 5 0 x x dec *"
# 42252: "x x x / x -7 -1 ∨ - x 1 x -10 F -2 dec + -4 x + -5 -10 inc x * x greedy? x dec *"
# 42252: "3 * 5 F x 8 x dec x dec + 6 inc x ≤ dec + / x + -5 -10 inc x x x x x dec *"
# 42252: "≥ * dec x x * x T inc - x x x 5 1 -3 eql inc inc 0 x -10 inc x * T x x x *"
# 42252: "-10 x x / x -7 -1 -4 x T x -1 -10 ≥ -2 dec + / x + -5 -10 inc x * F x x x *"
# 42252: "x 0 -10 x -7 x / -7 / x / inc 4 -1 -7 2 -9 - 3 x dec -8 x x x x x / - *"
# 42252: "- x x -8 * x - T inc - x x x 5 x -3 eql inc inc 6 x -10 inc x * T x x x *"
# 42252: "x - - x -9 x 3 inc / dec x -6 inc x -6 dec + / x + -5 x inc x * x x x dec *"
# 42252: "inc 5 x inc -4 x x x * * -4 x x x / x x x x x dec dec x inc + -8 - x x *"
# 42252: "x x + x - x 7 x + * + 6 -6 x -2 ∧ ungreedy -10 + x dec dec ungreedy inc + -8 - x x *"
# 42252: "/ be / x T 1 -5 x x / 6 / -6 ≤ F * inc x x * / T inc x * x x x dec *"
# 42252: "6 x 7 7 / * 0 dec x dec + 6 inc T -2 dec + / x + -5 -10 inc x * x x x x *"
# 42252: "+ - greedy? -2 -2 x / F x 0 -2 x greedy? ≥ -2 dec + F x + -5 - inc x * F x x x *"
# 42252: "x -1 inc eql x * 6 x -4 -6 / -7 -7 -1 -7 -6 x / - inc ∨ inc x x x x x / - *"
# 42252: "x x -10 - -6 / -2 * x 8 - x x + ∧ 0 x - dec 7 x + -2 -7 * -6 - x x *"
# 42252: "6 x 7 7 / * 0 dec x dec + 6 inc x -2 dec + / x + -5 -10 inc x * x x x dec *"
# 42252: "- x x -6 x 7 1 + x x x x -10 ≥ -2 dec + / x + -5 -10 inc x * F x x x *"
# 42252: "x x x x dec x x -2 if x F dec copy -6 x ungreedy > - x 8 7 inc x x * F x x x *"
# 42252: "x T x / 2 -9 x -2 / ¬ + copy -8 inc x x 1 greedy be 5 > * depth -1 x -2 x x x *"
# 42252: "-9 x dec 5 depth -7 -3 -2 -3 ungreedy 8 x ≤ -7 dec -7 + / x + ≥ -10 inc x * x x x dec *"
# 42252: "1 inc swap x 0 T x + dec 2 0 x x -7 dec -1 2 -10 + x dec dec x inc + -8 - x x *"
# 42252: "9 x - depth x 1 x greedy - x / x greedy? ≥ -2 dec + ≤ x + -5 - 5 x * F x x x *"
# 42252: "x x dec 5 depth -7 -3 -2 -3 9 8 x -4 -7 dec -1 2 -10 + x dec dec x inc + -8 - x x *"
# 42252: "inc / x - * x ∨ x * * + 6 -6 x -2 dec + / x + x -10 F x * x x x dec *"
# 42252: "greedy inc x -6 x 7 1 + x x x swap -10 ≥ -2 dec + F x + -5 - inc x * F x x x *"
# 42686: "9 -6 8 3 x x + T / x 9 dec 5 x x inc 9 x + dec + - 9 dec x -2 - x - *"
# 42833: "x 8 greedy x x -5 9 x -8 x x copy x -10 x + dec greedy? / 9 -8 0 inc * x T -2 -3 + 9"
# 42833: "≥ * / x x * 5 T inc - x x x 5 1 -3 eql inc dec -8 x 3 * x -10 x dec 9 x -"
# 42833: "0 / -1 4 / dec eql -9 dec 0 x x x x x / x 2 dec -8 x 3 * x -10 x dec 9 x -"
# 42833: "x / inc -2 x x / T x x + 0 x -10 x + dec 7 / 9 -8 0 inc * x T -2 -3 + 9"
# 42833: "x -10 9 dec T 0 + -6 4 x x x x F x x x 2 dec -8 x 3 * x -10 x dec 9 x -"
# 42854: "0 5 F 4 / dec 2 x dec dec x x x inc F dec inc -4 * 9 -4 inc x 7 inc -1 x 0 2 8"
# 42854: "0 / T / dec * x x * x / + 7 - 8 T x x dec -6 0 2 / * x x + 8 x 8"
# 42854: "x * x x 3 -5 9 x + dec x x x inc x dec inc -4 * 9 -4 inc x + inc -1 x 0 2 8"
# 42854: "x x inc 3 -8 -5 9 x + dec x copy 5 inc x dec inc -4 * 9 -4 inc x + inc + x 0 2 8"
# 42854: "/ 7 / x -8 -10 x x inc -2 x + -5 / x ungreedy x x + ∨ + + x - - x -9 x x 8"
# 42854: "- + ≥ / * x -1 2 - x x swap 1 x x inc 9 x x -7 + - x x x * 2 2 x 8"
# 42854: "9 - 2 dec x x x x inc -1 / 5 x x 8 x / + x ≤ -7 -6 * dec -9 ∨ F -6 + 8"
# 42854: "4 0 inc dec 3 * / / - x + x 7 ungreedy x 4 x / - x x 5 -7 -10 -8 0 x dec -9 -"
# 42854: "0 x 9 dec dec be x -6 4 / x F -4 ungreedy x 4 x / - x x 5 -7 -10 -2 0 x dec -9 -"
# 42854: "depth ∨ 3 -1 -6 x x - 7 x inc 8 1 4 be -10 < 8 inc 6 x / x x * < greedy? F 2 8"
# 42854: "x / x -1 x x + inc - x x x 1 x x inc 9 x x -7 + - x x x * x 2 x 8"
# 42854: "9 -6 ungreedy 3 x x + T / F x T copy -6 x -8 x - x 8 7 inc x x * T F -6 + 8"
# 42854: "x 8 x x x -5 < x + inc -2 neg x ∧ / x dec greedy? 1 x -7 -6 * / * x x inc 2 8"
# 42854: "7 F x / / copy x T * / -7 + x 3 / x greedy? -10 - -7 x x - 5 7 T x -6 + 8"
# 42854: "x x + 6 * / 1 F inc 3 + greedy? -5 / x ungreedy x x + ∨ + + x - - x -9 x x 8"
# 42854: "x - 9 pop dec 9 x inc - x x x 1 x x inc + x x -7 + - x x x * x 2 neg 8"
# 42854: "-2 dec 7 x 2 ¬ x -2 / ¬ - copy -8 3 swap ¬ 1 -2 * x inc / + 9 x < greedy? F 2 8"
# 42854: "x 0 depth * x -2 x greedy T x > / inc x 3 < -8 -7 x x 2 x + * x -1 - x 2 8"
# 42854: "x -1 F greedy depth -7 -3 8 -3 9 8 x -4 / x ungreedy x F + ∨ + pop x - - x -9 x x 8"
# 42854: "* 2 / dec 9 9 + inc - x x x 1 x x inc 9 x x dec + - x x x * x -1 x 8"
# 42854: "6 x 7 7 / 6 0 dec x dec + 6 inc T -2 dec + 8 x + -5 -10 inc x -3 5 ∧ * T 8"
# 42854: "be + - x + -10 x * 5 dec + * x / inc 5 x x + F + + x - x x -9 x -6 8"
# 42854: "x / inc -2 x x / 4 x x + - x x - -6 x x - inc / inc x + x + - x * 8"
# 42854: "9 - F dec / dec x x neg -1 / 5 x x 8 x / -10 - dec x x - 5 7 * x -6 + 8"
# 42854: "-4 x dec 1 / x / / - x ∧ x 7 x T 4 x / - x -7 5 -7 -10 -8 0 x dec -9 -"
# 42854: "0 x 9 dec x x + T / x x greedy copy -6 x ungreedy x ≤ 6 8 7 x x 6 * x x * * 8"
# 42875: "4 inc 1 ∨ / ¬ / -8 eql 3 -10 3 x x 7 x 5 dec x -8 + x / x -3 5 * * * 7"
# 42896: "x -5 1 -3 F 8 x 3 inc 9 + inc 1 0 x -6 ungreedy inc if x x x x -1 copy -4 x 2 x 6"
# 42917: "8 - -10 + 2 x -1 -5 inc F x x * - 6 x x x x 2 dec x x x -6 -7 4 x greedy? 5"
# 42917: "- + - -5 9 inc 4 -7 dec x inc x * x / 3 + x + -5 x inc / 6 x -2 4 x x 5"
# 42917: "x x - x -9 x -3 -2 -3 ∨ x ≤ x -4 -8 inc x x * 5 1 * inc T x -2 4 x x 5"
# 42917: "* 4 3 x -4 / x x 3 dec inc 1 x x 7 x x x - x -10 -2 -6 -3 x F F -5 * 5"
# 42917: "x - -7 x < -8 x 0 / dec 2 dec x x 1 x 9 -7 x x x inc / 6 x -4 - x x 5"
# 42917: "-7 x if -3 x x 4 -7 dec x inc x * x / 3 + x + -5 x F / 6 x -2 4 x x 5"
# 42917: "x x dec x > -7 -3 -2 -3 ∨ x ≤ x -4 x / x x * 5 1 * inc T x -2 4 x x 5"
# 42917: "- 7 x x 0 x + 5 3 x 3 ≤ T -4 x / x x * 5 -4 -1 inc T x -2 4 x x 5"
# 42917: "inc -4 + x 2 dec / * x x 7 * inc - + 3 / * dec -5 * x 7 x * 6 - -5 * 5"
# 42938: "/ - x + 4 / - -9 dec dec copy inc / x / inc x 7 -7 * x -10 x x x - x x 7 4"
# 42938: "+ 0 -7 x < -8 x 0 / dec x dec x x - -4 + -7 5 x -5 * 0 x x * x x x 4"
# 42938: "inc x 0 x 3 x T 5 x x inc x 4 5 T -1 2 -10 + 6 greedy / x x x * x x x 4"
# 42938: "* -1 + x be dec x x -10 0 x 9 + x ∧ 0 x - dec x x neg 0 ≥ x * greedy? x F 4"
# 42938: "x 4 1 -3 F 8 x 3 inc 8 - x 7 + - x 0 * / -3 x / 2 * swap x -9 x + 4"
# 42938: "x -1 7 x x 3 x 3 -8 x x x / 5 / x -10 8 - x x x + 9 + + -3 -2 + +"
# 42968: "3 * + -4 x / x -2 dec x F dec x -8 / x x inc - x > x + 9 + + -3 -2 + +"
# 43001: "5 x x -10 3 -10 0 - - 6 3 x / dec > + + / x + x x inc x * -8 F 8 x 1"
# 43012: "inc + greedy? x -10 -7 -1 2 8 x 3 x - x 3 -5 greedy x x -5 x x * dec greedy -2 x x dec /"
# 43022: "x * / 6 9 x 4 - / x x dec -3 5 -10 x -2 inc x 0 x 3 x 6 -2 / -9 x -2 x"
# 43022: "x -10 4 x inc -10 x x dec * x dec -3 5 -10 x -2 inc x 0 x 3 x 6 -2 / -9 x -2 x"
# 43022: "x x 2 be x / copy + F x -9 + + -10 x x x neg * -9 x 6 x 0 x dec * 2 x x"
# 43022: "+ + x x -8 + 3 + x inc x x x F -8 + + 3 ¬ 0 inc x + -8 ≥ x -2 1 -8 x"
# 43022: "copy > -2 x -9 - x 3 pop inc -1 -9 x 1 2 x dec / / x -10 inc / x -6 * -7 2 1 x"
# 43022: "* -10 -8 x x -10 x x dec * x dec -3 5 -10 x -2 inc x 0 x 3 x 6 -2 / -9 x -2 x"
# 43022: "x x T -2 x x / 4 x x + - inc 8 x dec / 6 3 x greedy? -1 -2 F -9 inc x 9 x x"
# 43022: "x - - x -9 x 3 inc + * -1 -9 x 8 - x * dec inc eql -2 -6 - * inc x -3 x 0 x"
# 43041: "* 3 * 2 -5 dec inc x -10 x x 9 + greedy? - x 0 * / 5 x / 9 x inc -5 dec x * /"
# 45542: "/ 4 + x -4 + * x 0 -10 dec 1 6 -6 0 / -5 x - -7 7 / 7 -10 8 -10 inc -6 + *"
506,43022,73
507,43148,70
508,43022,73
509,43001,82
510,21000000,67
511,42938,79
512,42917,71
513,43022,70
514,42917,72
515,42959,65
516,36092,67
517,42252,74
518,43001,68
519,44264,69
520,42896,79
521,42252,72
522,42854,78
523,42252,69
524,42833,79
525,43022,72
526,43031,75
527,42252,77
528,42252,73
529,42938,72
530,42833,71
531,42854,76
532,43022,95
533,43022,76
534,42854,73
535,43169,73
536,43022,74
537,42854,71
538,42917,64
539,42938,78
540,42231,69
541,42917,72
542,42252,74
543,42252,78
544,59360,70
545,45542,85
546,43022,71
547,43022,70
548,42833,76
549,42833,72
550,42252,77
551,36694,72
552,42854,74
553,42252,78
554,42854,69
555,42252,82
556,42854,68
557,43022,83
558,43022,67
559,42917,73
560,43022,76
561,42252,75
562,42938,65
563,42833,68
564,42854,71
565,42833,64
566,42917,76
567,42252,81
568,43043,87
569,42854,72
570,43022,71
571,42252,83
572,43041,75
573,42252,78
574,42854,68
575,42854,78
576,42252,78
577,43022,80
578,42917,63
579,42252,76
580,42252,84
581,42252,67
582,41461,87
583,42252,83
584,42917,70
585,42252,78
586,42854,79
587,43022,68
588,43022,73
589,43022,68
590,42854,66
591,42252,69
592,42812,76
593,41342,78
594,43022,73
595,42252,71
596,42252,78
597,42252,73
598,42833,80
599,42917,79
600,43190,78
601,42252,74
602,42252,75
603,42252,84
604,21000000,71
605,43274,67
606,42854,70
607,42252,72
608,42875,77
609,42252,77
610,43022,76
611,42854,64
612,42917,72
613,21000000,79
614,43022,73
615,42917,72
616,42854,65
617,42252,82
618,42252,89
619,43148,74
620,43022,77
621,42252,79
622,43022,76
623,42252,68
624,42854,71
625,42490,75
626,42252,69
627,42252,70
628,43148,76
629,41461,83
630,42252,84
631,21000000,80
632,42252,66
633,41342,73
634,42252,67
635,43022,67
636,43022,72
637,42252,65
638,43022,86
639,42854,64
640,42917,79
641,42252,71
642,43022,73
643,43043,74
644,42252,68
645,43022,69
646,42252,82
647,43022,72
648,42252,76
649,42252,81
650,42854,68
651,42252,73
652,42854,76
653,43022,70
654,42252,72
655,43064,74
656,42252,71
657,42959,81
658,42252,85
659,43022,81
660,42917,71
661,43022,79
662,42273,81
663,42252,84
664,42252,82
665,42854,80
666,42252,88
667,43022,75
668,35903,77
669,43043,80
670,42252,75
671,42896,73
672,43022,80
673,42854,73
674,43358,76
675,42252,64
676,42252,82
677,42252,80
678,42252,83
679,42920,73
680,42252,60
681,43064,71
682,42854,67
683,42105,84
684,42252,75
685,42812,79
686,42252,68
687,42252,84
688,49952,71
689,42252,82
690,42252,66
691,42917,75
692,42942,71
693,42252,66
694,42854,65
695,42252,69
696,42854,76
697,42252,72
698,42896,61
699,42854,66
700,42252,74
701,42252,77
702,42252,80
703,42252,72
704,36694,78
705,42252,68
706,43022,75
707,44702,67
708,42252,68
709,42252,75
710,42252,86
711,42252,80
712,42252,72
713,42252,65
714,42854,75
715,41482,85
716,47670,65
717,42252,67
718,43456,89
719,43022,80
720,43211,76
721,39942,79
722,43022,75
723,42854,66
724,43022,79
725,43792,69
726,42854,78
727,43022,72
728,21000000,72
729,43190,69
730,42854,65
731,42252,72
732,42252,71
733,42896,71
734,42854,82
735,35903,80
736,42854,70
737,42917,81
738,43022,72
739,42252,79
740,42252,85
741,37632,64
742,49952,69
743,42252,79
744,42252,76
745,42252,70
746,38297,80
747,43022,73
748,43169,75
749,42252,77
750,42252,89
751,43169,78
752,42252,70
753,42252,65
754,21000000,75
755,42833,79
756,42252,75
757,42252,70
758,42854,79
759,42833,85
760,42252,78
761,42854,83
762,42252,73
763,42252,84
764,43001,79
765,42252,83
766,43022,78
767,42833,74
768,46872,68
769,42833,77
770,41867,74
771,21000000,67
772,40838,77
773,42252,73
774,42252,81
775,36694,72
776,42252,66
777,42854,72
778,43337,69
779,42252,70
780,43022,81
781,42854,67
782,42938,72
783,42917,69
784,43022,65
785,42252,73
786,42854,80
787,42252,64
788,42252,71
789,42252,75
790,39998,67
791,42854,70
792,42231,74
793,42252,78
794,42252,74
795,42252,87
796,43001,84
797,43022,65
798,42252,68
799,42854,81
800,42252,75
801,42917,76
802,42252,70
803,42252,73
804,42252,69
805,43022,87
806,42252,75
807,42252,92
808,42252,83
809,42252,72
810,36694,81
811,42917,76
812,42231,72
813,36694,74
814,49952,68
815,42231,71
816,42854,78
817,43022,78
818,43022,79
819,36694,79
820,39998,70
821,42231,72
822,42252,75
823,43022,78
824,42252,72
825,36694,70
826,44508,72
827,43022,68
828,42252,69
829,42252,68
830,42252,75
831,42231,72
832,42252,69
833,42854,70
834,43043,77
835,42252,76
836,42252,70
837,36694,67
838,43022,72
839,42252,86
840,43022,82
841,38402,84
842,43211,71
843,36694,71
844,42252,80
845,42854,71
846,42252,73
847,42252,72
848,36694,79
849,42854,75
850,42252,75
851,36694,70
852,42252,74
853,42252,83
854,43148,76
855,43043,72
856,36454,66
857,42854,69
858,42252,75
859,36694,69
860,42252,68
861,42252,78
862,42252,84
863,36694,65
864,21000000,83
865,47642,83
866,43128,90
867,35903,78
868,42854,81
869,42252,70
870,42252,67
871,42252,73
872,36694,71
873,36694,80
874,42252,67
875,49952,82
876,42252,71
877,43022,73
878,41342,71
879,42252,86
880,42252,72
881,42231,73
882,42252,69
883,42854,66
884,39172,80
885,36092,67
886,42875,83
887,43022,80
888,42848,73
889,42252,77
890,43022,84
891,43042,69
892,42252,75
893,43001,76
894,39942,78
895,36694,77
896,42252,85
897,42252,70
898,42854,76
899,41132,73
900,42252,89
901,42252,68
902,73997,66
903,32438,70
904,36694,70
905,42252,81
906,21000000,65
907,42252,73
908,42854,74
909,43106,82
910,43022,65
# After 400 updates
# 32438: "9 - 2 dec x x x -8 inc -1 x 5 x x 8 x / + 6 ≤ -7 -10 inc T * 8 x T - *"
# 35903: "eql - F dec / dec x x neg -1 / 5 x 7 swap x 1 -2 x depth inc 4 + 9 x x * inc F *"
# 35903: "x -1 7 x 2 ¬ x -2 / ¬ - copy -8 3 swap x 1 -2 x depth inc 4 + 9 x x * inc F *"
# 35903: "T inc swap x > - copy + neg * x x 6 + 5 4 1 -2 x depth inc 4 + 9 x x * inc F *"
# 36092: "inc x 0 x 3 x < -5 x x + - ¬ x if x T x * x T 1 + 9 x x * inc dec *"
# 36092: "-6 x -7 x x x x ≥ 4 T x 5 -3 F x x x x + + -5 -10 inc x * 8 x T - *"
# 36454: "-6 x -7 x x x x ≥ 4 T x 5 9 F x x x x + + -5 -10 inc > * 8 x T - *"
# 36694: "* -1 + pop be dec neg -2 / ¬ + copy T 3 x x 1 -2 * x T 1 + 9 x x * inc 8 *"
# 36694: "-3 3 7 x x x x -9 x x / -7 -6 ≤ inc * ∧ x dec F ≤ inc + 9 x x * inc 8 *"
# 36694: "x T x / 2 -9 x -2 / ¬ + copy -8 3 x x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "+ 8 -9 x * - 0 + 8 * inc x 8 + x inc + 9 x 9 x 4 + 9 x x * inc 8 *"
# 36694: "+ - -3 9 x + x be -10 x x 9 -10 greedy? - dec + / -3 + pop -10 x 9 x x * inc 8 *"
# 36694: "-2 dec 7 x 2 ¬ x -2 / ¬ - copy -8 3 swap x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "x 7 F -2 copy x / eql T x + - x + x inc greedy? -3 x pop x -3 + 9 x x * inc 8 *"
# 36694: "x / x x * - 0 + 8 * inc x 8 + greedy? inc + 9 x 9 * 4 T 9 x x * inc 8 *"
# 36694: "-6 x -7 x x x x / - + inc x 8 F x inc + 9 x 9 x x + 9 x x * inc 8 *"
# 36694: "≥ be / -10 T 1 dec ∧ x T 6 / -6 ≤ x * inc x x F ≤ x + 9 x x * inc 8 *"
# 36694: "x pop 7 x 2 ¬ x if / ¬ - copy -8 3 swap ¬ dec -2 * x inc / -2 -7 x x * inc 8 *"
# 36694: "T be / -10 T 1 dec ∧ x -1 6 / -6 ≤ inc * inc x x F ≤ x + 9 x x * inc 8 *"
# 36694: "9 -6 8 3 x pop pop T x x if / -6 ≤ inc * ≤ ungreedy x F ≤ x x 9 x x * inc 8 *"
# 36694: "x be x -1 x x pop T x x neg / -6 ≤ inc * inc ungreedy x F ≤ x + 9 x x * inc 8 *"
# 36694: "x 6 5 x > F 9 x x 5 inc x 8 + x inc + 9 - 9 x -3 + 9 x x * inc 8 *"
# 36694: "x x dec T x x / x x x + - x 9 - -6 dec inc inc 6 inc -10 inc x greedy x * inc 8 *"
# 36694: "x / inc -2 x x / eql T x + - x + x inc + -3 x 9 x -3 + 9 x x * inc 8 *"
# 36694: "inc x 0 x 3 x < -5 x x + - ¬ x / x 1 -2 * x T 1 + 9 x x * inc 8 *"
# 36694: "3 * dec x x * < T inc ∧ inc T 8 6 x inc + 9 - 9 x -3 + 9 x x * inc 8 *"
# 36694: "-9 -3 5 / 2 -9 x -2 / ≤ + copy -3 3 x x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 37632: "- x 7 x 9 ≥ x 3 -8 F x x / 5 / x -10 8 - 9 > T inc x * 8 x T - *"
# 38297: "9 - 2 dec / x x x inc -1 / 5 x x 8 x / + x x -7 -6 * dec -9 -8 3 * dec *"
# 38297: "x 0 8 x -7 x / -7 / ¬ + copy -8 inc x x 1 greedy be x 7 -6 * dec -9 -8 3 * dec *"
# 38402: "x -5 1 -3 inc 8 x 3 inc 9 + inc 1 0 x -6 ungreedy inc * x x x x x -5 - - * - *"
# 38402: "0 T 9 dec x x ungreedy T / ≥ x greedy copy -6 x ungreedy x ≤ 6 8 7 x x 6 * x x * - *"
# 39172: "be + - x + eql x x / ¬ - copy -8 3 swap x 1 -2 x depth inc 4 + 9 x x * depth F *"
# 39942: "≤ x - x + eql x x / ¬ - copy -8 3 swap x x ∧ x depth inc x + 9 x x * depth F *"
# 40838: "x 0 depth * pop -2 x greedy T x inc x 8 + x 5 + 9 x 9 x 4 + 9 x x * depth 8 *"
# 41132: "x / x 5 -7 x / < / x neg inc F -1 ∨ ∧ -9 - 5 + -7 5 -7 -10 -8 0 x ≤ dec *"
# 41342: "x -10 9 F x 8 x dec x dec 3 6 inc -6 ≤ dec x / x ≤ -7 greedy + 9 x x < inc 8 *"
# 41342: "* / - x -9 x 3 F F -8 x -6 inc x -6 dec -9 / x + F -3 + 9 x x ≤ inc 8 *"
# 41342: "x - - x -9 x 3 inc F dec x -6 inc x -6 dec + / x + F -3 + 9 x x ≤ inc 8 *"
# 41461: "- x x -8 * x - x greedy - x x F greedy? x -1 2 -10 F F dec dec x inc x + copy x * +"
# 41461: "x x dec 5 depth -7 -3 -2 -3 pop 8 x -4 -7 dec -1 2 -10 + F dec dec x inc x + copy x * +"
# 41867: "-8 3 7 x x x T x x x / x -10 ≥ -2 dec + / swap + + -10 inc x * F x eql x *"
# 42105: "x x x x dec x ∧ -2 if x F dec copy T x ungreedy > - x 8 dec dec T inc x + copy x * +"
# 42185: "x x x / x -7 -1 ∨ - x x x -10 ≥ -2 dec + / x + + -10 inc x * F x eql x *"
# 42231: "-8 - x + 4 x -9 8 - dec inc x 8 + x inc + -3 x 9 x -3 + 9 x x * inc 8 if"
# 42231: "inc x 0 x 3 x T 4 x x + - x x - -6 x / - inc ≤ inc x - x + copy x * +"
# 42231: "x x x / x -7 / 4 if ∧ x - x x > -6 dec x inc 6 -5 x neg 3 x x dec x dec *"
# 42231: "+ 0 x x swap -8 x 0 / dec x dec x x - -4 + -7 5 x < * 0 inc x + x x * +"
# 42252: "+ 8 -9 x * - 0 + x x -3 - T 9 - -6 x / F inc F * if -1 -7 -2 x x x *"
# 42252: "x x x / x -7 -1 ∨ - x 1 x -10 F -2 dec + -4 x + -5 -10 inc x * x greedy? x dec *"
# 42252: "x / x -1 x x be greedy - x / x greedy? ≤ -2 dec + ≤ neg -10 -5 -10 inc x x x x x dec *"
# 42252: "x / inc -2 x x / eql T x + - x + x inc + -3 9 9 x -3 + T x x x copy dec *"
# 42252: "0 x ≥ dec be dec neg x x 0 x 4 -3 F x if x x + + -5 x inc x F x x x x *"
# 42252: "-2 dec 7 x 2 4 x -2 / ¬ - copy -8 3 be x 1 -2 * x inc / -2 -7 ∨ x - x x *"
# 42252: "inc x 7 x x ≥ x 3 -8 x x x x 5 / x -4 8 - x > T inc x * x x x eql *"
# 42252: "-7 -6 4 3 x x + T x F inc dec 1 F -2 dec -1 ≤ x x -5 - 5 x * F x x x *"
# 42252: "0 x 9 dec be dec neg x x 0 x 9 -3 F x if x x + + -5 x inc x * x swap x * +"
# 42252: "9 -6 8 3 x pop pop T x x x / x pop / x x x x 7 x + pop -7 * -6 - x x *"
# 42252: "x x + ∨ > -7 -3 -2 -2 x T x x 5 x -3 eql inc inc 6 x -10 inc -6 / T ≤ x x *"
# 42252: "* -10 -8 x x -10 x x dec * x dec -3 5 -10 x -2 inc x + -5 -10 inc x F 8 x T x *"
# 42252: "x pop x x 2 ¬ x if 9 ¬ - copy -8 3 swap ¬ dec -2 * x inc / -2 -7 x -8 - x x *"
# 42252: "1 inc swap x 0 T x + dec 2 0 > * greedy? x -1 2 T F F dec dec x inc x pop be x * +"
# 42252: "0 x x x dec x ∧ -2 if x F dec copy T x ungreedy > - -2 8 dec -10 depth -1 x -2 0 x x *"
# 42252: "9 x - depth x -4 x T - x / x greedy? ≥ x x x x + + -5 -10 inc x * x -2 x x *"
# 42252: "-9 x dec 5 depth -7 -3 T -3 ungreedy T x x inc swap ungreedy x ∨ + ∨ / T inc T * x x F dec *"
# 42252: "3 greedy? 5 F x 8 x dec x dec + 6 inc x ≤ dec + / x + x - 5 x * - x dec x *"
# 42252: "+ 8 -9 9 * x / copy x x swap - T 9 - -6 x / F inc -10 * if -1 -7 -2 x x x *"
# 42252: "x pop 7 x 2 ¬ x if / ¬ - copy -8 < swap inc dec depth * x inc / -2 -7 x x x ¬ dec *"
# 42252: "x 0 8 x -2 -2 * * F x x 5 -8 inc x 7 -3 x + x dec dec x inc + -8 5 x x *"
# 42252: "- -3 x ≤ ≤ * 0 7 2 x -3 6 -6 - T dec + / x + x 3 x 6 T F x x ¬ *"
# 42252: "8 8 x x -9 x x -2 x x inc dec copy -6 x 5 > T inc x -5 -10 F x x x x x dec *"
# 42252: "x - -7 x * -7 -1 ∨ - x x x -10 ≥ -2 dec + / x + + -10 inc x + 1 x eql x *"
# 42252: "x ≤ 9 F x 8 x dec x dec 3 6 inc -6 ≤ dec x / T ≤ dec dec x inc + -6 - x x *"
# 42252: "+ - greedy? -2 -9 x / F x 0 -2 x greedy? ≥ -2 dec + be x + -5 ∨ inc x * ∧ x x dec *"
# 42252: "x x -10 - -6 / -2 * x 8 - x x + ∧ 0 x - dec 7 x + -2 -7 * -6 - x x *"
# 42252: "x x + ∨ > -7 -3 -2 -2 x T x x 5 x -3 eql inc inc 6 x -10 inc x / T x x x *"
# 42252: "0 / -1 4 / dec eql 0 dec 0 > / inc x ungreedy -5 -8 -7 F T / T inc ∨ * x x x x *"
# 42252: "inc x 0 x 3 x < -5 x -1 F 4 x x x / x / inc x -1 F 7 * x x dec x x *"
# 42252: "6 x 7 7 / * 0 dec x dec + 6 inc T -2 dec + / x + -5 -10 inc x * x x x x *"
# 42252: "x x x depth x 1 x greedy x x / x + ≥ -2 dec + 6 x + T - F x * -2 x F x *"
# 42252: "copy -4 + x 2 0 / * x x 7 * inc - + 3 / * dec -5 * 5 7 x * 6 x x dec *"
# 42252: "x 8 greedy x / -5 9 x -8 x 0 / * greedy? + -1 2 T F F pop x + depth x -1 ungreedy x x *"
# 42252: "- x x ≤ x 7 1 + x dec 6 / -6 F F x F x / + -5 -10 -10 x * ≤ x x dec *"
# 42252: "x x dec 5 T - 0 + 8 + inc x 8 + x F F 9 x 9 x dec + 9 x -1 -9 x x *"
# 42252: "x * 5 F x 8 x dec if x x x -10 ≥ -2 dec + -7 x + -5 -10 inc x * F x x x *"
# 42252: "/ + + -9 dec x -5 dec dec inc x inc dec x depth -9 dec x pop x be x + * x -1 x x x *"
# 42252: "x x x / inc -7 0 dec x -8 dec 6 inc x ≥ greedy? + / x + x -10 T x * T x x x *"
# 42252: "0 x F dec ∨ x + T / x / + 7 x -3 T x - 3 + -5 -10 neg 3 x x x x dec *"
# 42252: "depth 7 - x x x x -9 if x / -7 -7 -1 -7 -6 8 / - inc ∨ + x x x x x / - *"
# 42252: "9 -6 - 3 x x + T / F inc dec copy -6 8 ungreedy > T inc x -5 -10 F x x x ≥ x dec *"
# 42252: "depth 7 F ≤ -8 -10 x x inc -2 x + 4 depth ∧ x x - x + -5 - inc -1 * F x x x *"
# 42252: "greedy inc x -6 x 7 1 + eql x x swap -10 ≥ -2 -7 + F x 8 F inc ¬ x x -7 x T x *"
# 42833: "x 4 1 greedy F 8 x x inc 8 - x 7 + - x 0 * dec -8 x 3 * x F x dec 9 x -"
# 42854: "x * x x 3 -5 9 x + dec x x x inc x dec inc -4 * 9 -4 inc x + inc -1 x 0 2 8"
# 42854: "x 8 ¬ T x -5 < x + inc + ungreedy 7 ungreedy x 4 x / - x x 5 -7 -10 ∧ 0 T dec -9 -"
# 42854: "0 / T / dec * x x * x / + 7 - 8 T x x dec -6 0 2 / * x x + 8 x 8"
# 42854: "x / inc -2 x x / 4 x x + - x x - -6 x x - inc / inc x + x + - x * 8"
# 42917: "x pop 7 x 2 ¬ x if / ¬ - copy -8 3 7 ¬ dec -2 * neg inc / x x -6 -7 x x greedy? 5"
# 42917: "6 x T 7 / * 0 dec x dec + 6 inc x -2 dec + / x -5 F inc / 6 x -2 4 -8 x 5"
# 42917: "x - T 7 / * 0 dec x dec + 6 -9 x -2 dec + / x -5 7 inc / 6 x -2 4 x x 5"
911,42938,79
912,42833,68
913,43001,78
914,43106,68
915,42917,69
916,46102,76
917,42252,77
918,42252,81
919,38402,69
920,41510,68
921,46102,71
922,42252,76
923,42917,81
924,40334,72
925,42854,82
926,42252,84
927,38297,75
928,43085,78
929,48606,75
930,42252,92
931,42252,74
932,42252,86
933,40502,67
934,39172,81
935,40376,84
936,42854,78
937,43148,70
938,36694,78
939,42252,71
940,36694,71
941,42854,64
942,43106,76
943,41650,68
944,43022,81
945,43106,67
946,42252,78
947,36092,76
948,36694,78
949,41461,84
950,43190,79
951,21000000,70
952,42252,74
953,43792,73
954,42252,73
955,49542,64
956,42252,77
957,42231,78
958,42252,72
959,49952,71
960,43022,71
961,43022,87
962,42917,74
963,42252,71
964,42917,75
965,42252,70
966,42252,67
967,43085,74
968,42252,83
969,43022,73
970,42938,74
971,42252,75
972,42252,81
973,43022,81
974,42252,78
975,43022,72
976,21000000,82
977,35903,80
978,36694,74
979,42252,72
980,42252,75
981,38402,84
982,42854,81
983,42854,74
984,34552,74
985,21000000,88
986,43022,75
987,42833,73
988,29932,81
989,21000000,72
990,42770,79
991,42917,76
992,43043,70
993,43022,81
994,21000000,71
995,43694,69
996,42252,75
997,42252,68
998,42252,84
999,42504,91
1000,37632,66
1001,42105,89
1002,43022,72
1003,43022,76
1004,36694,68
1005,42252,68
1006,43001,82
1007,36694,73
1008,42252,79
1009,36694,74
1010,36862,73
1011,36694,66
1012,42917,70
1013,36694,75
1014,36694,68
1015,43022,78
1016,42252,73
1017,42854,73
1018,42252,68
1019,42350,67
1020,43043,71
1021,38297,82
1022,43022,72
1023,43022,65
1024,43358,71
1025,43379,81
1026,42252,71
1027,40502,75
1028,42252,70
1029,35322,80
1030,42770,90
1031,42252,73
1032,41132,70
1033,36862,63
1034,42252,69
1035,42854,72
1036,42252,75
1037,41342,77
1038,42252,71
1039,44177,75
1040,42252,77
1041,41054,74
1042,42833,71
1043,42252,67
1044,42252,74
1045,42252,72
1046,42833,74
1047,47726,73
1048,40670,77
1049,39172,71
1050,42854,71
1051,42252,71
1052,43526,84
1053,43022,77
1054,21000000,74
1055,36694,64
1056,43022,80
1057,43022,75
1058,36694,71
1059,42854,79
1060,34552,82
1061,21000000,68
1062,35322,67
1063,42252,69
1064,43022,71
1065,43022,70
1066,42252,80
1067,38297,80
1068,43042,76
1069,20447,83
1070,42231,73
1071,36694,65
1072,42308,77
1073,37485,80
1074,38297,85
1075,40670,70
1076,42252,79
1077,43722,74
1078,43958,77
1079,42252,69
1080,40838,76
1081,42252,80
1082,42252,86
1083,39053,78
1084,41342,68
1085,33782,72
1086,43022,78
1087,42252,69
1088,42252,68
1089,43022,67
1090,43031,79
1091,36694,65
1092,42252,76
1093,42252,73
1094,35903,82
1095,43148,76
1096,43022,80
1097,35903,65
1098,43022,63
1099,36862,80
1100,21000000,83
1101,33012,77
1102,35322,68
1103,42252,68
1104,41342,84
1105,35903,69
1106,42252,75
1107,43064,74
1108,40670,69
1109,43022,77
1110,43022,67
1111,42252,76
1112,41342,78
1113,42252,77
1114,42252,89
1115,43022,74
1116,39620,79
1117,41342,76
1118,36071,75
1119,42854,83
1120,32242,77
1121,42252,74
1122,42854,72
1123,42252,73
1124,35903,77
1125,36694,72
1126,21000000,73
1127,42252,81
1128,43022,73
1129,43022,85
1130,43022,81
1131,43022,72
1132,43022,79
1133,42252,73
1134,36454,69
1135,42770,73
1136,42252,84
1137,42252,72
1138,38297,74
1139,36694,77
1140,41846,75
1141,36694,71
1142,36694,76
1143,43022,79
1144,42252,75
1145,42252,72
1146,42252,68
1147,42252,69
1148,43022,86
1149,36694,71
1150,44562,68
1151,36694,66
1152,43022,83
1153,43001,73
1154,43022,79
1155,42854,66
1156,42252,80
1157,42252,78
1158,42980,86
1159,42231,79
1160,41342,81
1161,42252,77
1162,43022,92
1163,42854,68
1164,21000000,74
1165,29932,74
1166,42252,75
1167,36694,64
1168,38402,68
1169,42182,97
1170,33782,79
1171,36862,80
1172,42252,72
1173,42854,75
1174,36694,74
1175,42854,76
1176,20447,79
1177,36694,63
1178,42252,70
1179,42252,72
1180,48412,77
1181,43211,74
1182,43022,66
1183,43708,85
1184,56262,67
1185,30702,99
1186,36694,80
1187,35903,70
1188,38297,75
1189,42854,75
1190,43022,67
1191,104454,71
1192,42854,73
1193,35322,67
1194,34552,98
1195,42231,84
1196,43022,82
1197,35322,75
1198,43022,73
1199,42252,73
1200,43022,70
1201,43022,71
1202,43022,71
1203,39172,76
1204,36694,74
1205,35322,72
1206,27874,74
1207,46872,76
1208,43022,75
1209,36694,84
1210,43022,76
1211,36694,76
1212,43022,74
1213,42252,83
1214,43022,79
1215,38402,73
1216,42854,72
1217,36694,83
1218,42350,78
1219,36694,62
1220,38486,77
1221,38402,77
1222,36694,73
1223,36694,76
1224,38297,79
1225,43022,81
1226,42252,81
1227,42875,74
1228,39172,76
1229,42854,70
1230,42875,71
1231,36694,65
1232,42854,70
1233,36694,67
1234,48027,77
1235,43022,84
1236,21000000,74
1237,36862,80
1238,34430,72
1239,35903,71
1240,88074,74
1241,43022,71
1242,43862,64
1243,42182,71
1244,42854,77
1245,42854,77
1246,38297,80
1247,36694,65
1248,41510,69
1249,43022,68
1250,43085,73
1251,43358,77
1252,43022,64
1253,42252,79
1254,42252,71
1255,42063,71
1256,32242,70
1257,42854,84
1258,43022,76
1259,36694,63
1260,21000000,73
1261,36694,76
1262,41342,75
1263,43232,84
1264,21000000,84
1265,36694,69
1266,36694,72
1267,42252,77
1268,42252,86
1269,43792,64
1270,41342,67
1271,33782,70
1272,40670,73
1273,21000000,71
1274,35322,64
1275,42812,74
1276,43792,78
1277,38402,77
1278,42252,84
1279,36694,72
1280,51436,72
1281,42854,69
1282,35903,78
1283,36694,81
1284,35322,67
1285,33012,73
1286,42854,71
1287,38402,73
1288,32242,69
1289,42854,66
1290,42770,65
1291,29162,74
1292,44366,78
1293,38402,76
1294,42854,78
1295,36694,75
1296,43022,75
1297,44786,82
1298,39494,75
1299,42252,71
1300,39347,80
1301,38402,87
1302,36694,75
1303,42812,78
1304,41951,73
1305,43136,78
1306,43127,74
1307,35322,89
1308,43022,70
1309,43022,87
1310,36862,83
1311,46872,76
1312,43022,82
1313,41062,75
1314,38402,86
1315,39858,74
# After 600 updates
# 20447: "inc x swap x + x < / x x + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "+ - greedy? 4 -9 T / x / ¬ + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 27874: "be + - x + eql x x / + - copy -8 3 swap x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 29162: "x F F -2 x x x ≥ 4 T x x inc x swap x 1 -2 x -10 inc 4 + 9 x x * depth F *"
# 29932: "* / 8 x -9 x x F F -8 x -6 inc x -6 x 1 -2 x -10 inc 4 + 9 x x * depth F *"
# 29932: "inc x 7 x x ≥ x 3 -8 -6 ungreedy x x 5 / x -4 -2 x depth -2 4 + 9 x x * depth F *"
# 30702: "0 T 9 dec x x ungreedy T copy ≥ x greedy copy -6 x ungreedy 1 -2 x depth inc T + -2 x x * depth F *"
# 32242: "3 greedy? 5 F x 8 x -10 x dec + 6 inc x ≤ inc T 9 - ≤ x 4 8 9 x x * depth T *"
# 32242: "8 3 -4 ¬ > F x x x 5 x x 5 + x inc + 9 x x inc T + -2 x x * depth F *"
# 32242: "x 6 5 x > F 9 x x 5 inc x 8 + x inc + 9 x x inc T + -2 x x * depth F *"
# 32438: "9 - 2 dec x x x -8 inc -1 x 5 x x 8 x / + 6 ≤ -7 -10 inc T * 8 x T - *"
# 33012: "x - -7 x * -7 -1 neg - x x x -10 ≥ -2 x 1 x x depth inc 4 + 9 x x * depth F *"
# 33012: "inc x 5 -2 x F 9 x x F inc x 8 + > inc + 9 x x inc T + -2 x x * depth F *"
# 33782: "x greedy 5 x > F 9 x x 5 inc x 8 F x inc + 9 - ≤ x 4 + 9 x x * depth T *"
# 33782: "+ 4 5 x > F 9 x x F inc x 8 + x inc + 9 x x inc T + -2 x x * depth F *"
# 34430: "x -10 9 F dec 8 x dec * -8 x 5 9 F x x x x + swap -5 F inc < * 8 x T - *"
# 34552: "x -10 9 F x 8 x dec * dec 3 6 inc -6 ≤ dec x / x ≤ x 4 + 9 x x * depth F *"
# 34552: "1 inc swap x 0 T x < pop ¬ - copy -8 3 swap x - -2 x depth inc T ungreedy -2 x x * depth greedy? *"
# 34552: "¬ x 0 x 3 eql x x pop ¬ - copy -8 3 swap x - -2 x depth inc T + -2 x x * depth F *"
# 35322: "0 x -1 4 / dec eql 0 8 0 > / inc x ungreedy -5 -8 -7 F T / T + F x x * depth F *"
# 35322: "dec dec 5 -2 x depth x ≥ * T x 5 x F x x x x if + -5 -10 T x * 8 x T - *"
# 35322: "eql - F dec / dec x x neg -1 / -1 x greedy? swap x 1 -2 x depth inc 4 ≥ 9 x x * depth F *"
# 35322: "x x / x dec ≥ x 3 -8 F x x / 5 / x -10 8 pop x T -10 T x * 8 x T - *"
# 35903: "9 - - dec x x if -8 inc -1 x 5 x x 8 greedy? / + x depth inc 4 + 9 x x * inc F *"
# 35903: "* -1 + pop be dec T -2 / ¬ if + 8 F x inc + 9 x 9 F x + 9 x x * inc F *"
# 35903: "x be x -1 x x pop T x x neg copy -10 3 swap x 1 -2 x depth inc < + 9 x x * inc F *"
# 35903: "T x / eql T 1 dec -7 x -1 ≥ / -6 dec copy * + ∨ x 9 depth -3 + 9 x x * inc F *"
# 35903: "x -1 7 x 2 ¬ x -2 / ¬ - copy -8 3 swap x 1 -2 x depth inc 4 + 9 x x * inc F *"
# 35903: "+ F -3 9 x + x 5 -10 x x 9 T greedy? - dec + / -3 + pop -10 x 9 x x * inc F *"
# 35903: "-2 x -7 x x x 1 / x F x x / 5 / x ≥ 8 - x inc 4 + 9 x x * inc F *"
# 35903: "0 copy -7 x x x x / - + inc + 8 F x inc + 9 x 9 T x + 9 x x * inc F *"
# 36071: "-3 3 7 x x x x -9 x x / -7 -6 3 swap x 1 swap x -8 inc < + 9 be x * inc F *"
# 36092: "-6 x -7 x x x x ≥ 4 T x 5 -3 F x x x x + + -5 -10 inc x * 8 x T - *"
# 36092: "x pop -7 x x x x ≥ 4 T ungreedy 5 -3 F x x x x + + eql -10 inc x * 8 x T - *"
# 36092: "inc x 0 x 3 x < -5 x x + - ¬ x if x T x * x T 1 + 9 x x * inc dec *"
# 36694: "7 8 -9 x -9 x 0 + x x 2 7 x 9 - -6 x x x 9 * 4 T 9 x x * inc 8 *"
# 36694: "inc x 0 x 3 x < -5 x x + - ¬ x / x 1 -2 * x T 1 + 9 x x * inc 8 *"
# 36694: "9 -6 x 3 x pop pop T x x + x greedy? 3 x x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "-10 greedy? 5 T x 8 x 1 x dec + 6 inc x ≤ inc T 9 - ≤ x 4 8 9 x x * inc 8 *"
# 36694: "9 -6 8 3 x pop pop T x x if / -6 ≤ inc * ≤ ungreedy x F ≤ x x 9 x x * inc 8 *"
# 36694: "x 0 dec 5 depth 7 -3 -2 x pop 8 x -4 -7 dec -1 2 -10 + F ≤ x x 9 x x * inc 8 *"
# 36694: "9 ∨ 8 x -7 x x 3 x dec x - ¬ x / x 1 * * x T / ≤ -7 x x * inc 8 *"
# 36694: "x / x x * - 0 + 8 * inc x 8 + greedy? inc + 9 x 9 * 4 T 9 x x * inc 8 *"
# 36694: "0 x F / ∨ x + T / eql if / -6 ≤ inc x ≤ ungreedy x F ≤ x x 9 x x * inc 8 *"
# 36694: "x pop 7 x x ¬ -3 greedy T x inc x 8 + x 5 + x < 9 x F T 9 x x * inc 8 *"
# 36694: "9 x dec 5 T - 0 + 8 + ¬ T > 5 / inc -9 -7 x < greedy dec inc x x F * inc 8 *"
# 36694: "T be / -10 T 1 dec ∧ x -1 6 / -6 ≤ inc * inc x x F ≤ x + 9 x x * inc 8 *"
# 36694: "/ x -6 pop be dec -4 -2 / ¬ + copy T - x x 1 -2 * x T 1 + be x x * inc 8 *"
# 36694: "x T 9 T x x ungreedy T / ≥ x greedy copy -6 x ungreedy x ≤ 6 8 7 x T 9 x x * inc 8 *"
# 36694: "x x x / x -7 / 4 be ∧ + eql ¬ x / x 1 ¬ * x T 1 + 9 x x * inc 8 *"
# 36694: "x ≤ 9 F x - 0 + 8 ≤ inc x 8 + greedy? inc + 9 x greedy? * 4 x 9 x x * inc 8 *"
# 36694: "-6 x -7 x x x x / - + inc x 8 F x inc + 9 x 9 x x + 9 x x * inc 8 *"
# 36694: "x T x / 2 -9 dec -2 / ¬ + copy F 3 / x 1 -2 * x inc x + 9 x x * inc 8 *"
# 36694: "eql - T be x -1 < -5 x x + - ¬ x / swap 1 -2 * x T / -2 -7 x x * inc 8 *"
# 36694: "x -4 x F x 8 x dec pop dec 3 6 inc -6 ≤ dec x / x ≤ x -10 x 9 x x * inc 8 *"
# 36694: "-9 -3 5 / 2 -9 x -2 / ≤ + copy -3 3 x x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "+ F -3 9 x + x 5 -10 x x 9 8 6 x inc + 9 -4 -8 x -3 > 7 x x * inc 8 *"
# 36694: "inc x 7 x x ≥ x 3 -8 -6 T x x 5 / inc + ∨ x 9 x -3 + 9 x x * inc 8 *"
# 36694: "inc x 7 x x x x 3 x dec + - ¬ x / x 1 -2 * x T / ≤ -7 x x * inc 8 *"
# 36694: "-2 dec 7 x 2 ¬ x -2 / ¬ - copy -8 3 swap x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "x ≤ 9 F x - x + 8 dec x x 8 x x x + 1 x 9 x x + 9 x x * inc 8 *"
# 36694: "3 * T x x * < T inc ∧ inc T 8 6 x inc + F - 9 x -3 + x greedy x * inc 8 *"
# 36694: "/ x 0 be x x < -5 x x + - ¬ x / x 1 -2 * x T / -2 -7 x x * inc 8 *"
# 36862: "0 -8 T x -4 T -10 -1 -7 - - inc -10 greedy? - dec + -9 -3 + pop -10 x 9 x x * F 8 *"
# 36862: "0 x x dec dec x ∧ -2 if x x x -10 greedy? - dec + / -3 + pop -10 x 9 x x * F 8 *"
# 38297: "9 - 2 dec / x x x inc -1 / 5 x x 8 x / + x x -7 -6 * dec -9 -8 3 * dec *"
# 38297: "3 * T x x x be greedy - x -5 -1 x 3 8 x / + x x -4 -6 * dec -9 -8 3 * dec *"
# 38297: "greedy? x 7 x 9 ≥ x greedy - x / ≤ x x 8 x / + x x -4 -6 ungreedy dec -9 -8 3 * dec *"
# 38297: "copy -4 + x 2 T / -7 / ¬ + copy x inc x x 5 greedy be x 7 -6 * dec -9 -8 3 * dec *"
# 38402: "eql - T be x -1 < x x x + - ¬ x / swap T / x -8 F x x 6 * greedy? x 0 - *"
# 38402: "x F 8 x -2 -2 * * F x x 5 -8 depth x 7 4 inc * x x x x x -5 - - * - *"
# 38402: "+ - greedy? x -9 x / 4 if dec + 6 inc x ≤ inc 8 9 T ≤ x 4 / 9 x x * depth T *"
# 38402: "x F inc -2 x x x ≥ x x + - ¬ x / swap T ≥ x -8 F x x 6 * greedy? x depth - *"
# 38402: "9 - greedy 4 -9 T / x / ¬ + copy x inc x -6 ungreedy ¬ * ungreedy x x x x -5 x - * - *"
# 39053: "0 -5 1 -3 T 8 x 3 inc 9 + inc 1 0 x x -4 -2 x depth -2 4 x 9 x x eql depth F *"
# 39494: "4 T 7 x x ∨ x copy x x x - x x -5 -6 x / F inc T * if pop -7 -2 * depth T *"
# 39620: "x - - x -9 x 3 inc F dec -6 -6 1 0 x x inc x x depth -2 4 x 9 x x eql depth F *"
# 40670: "+ 8 -9 9 x ¬ x x T pop inc > 8 + x 5 + copy T 9 x 4 T 9 x inc x depth 8 *"
# 40670: "x F 7 x x ¬ x x T pop inc > 8 + x 5 + x T 9 x 4 T 9 x inc * depth 8 *"
# 40838: "x pop 7 x x ¬ x greedy T pop inc x 8 + x 5 + x 0 9 x 4 T 9 x inc * depth 8 *"
# 41132: "x / x 5 -7 x / < / x neg inc F -1 ∨ ∧ -9 - 5 + -7 5 -7 -10 -8 0 x ≤ dec *"
# 41342: "- x x -8 * x - greedy / T -5 5 -9 F x inc greedy? -3 x pop x -3 + 7 x < * inc 8 *"
# 41342: "- x x -8 * 9 - greedy / T -5 5 x F x inc -9 -3 x pop x -3 + 7 x < * inc 8 *"
# 41867: "-8 3 7 x x x T x x x / x -10 ≥ -2 dec + / swap + + -10 inc x * F x eql x *"
# 42185: "x x x / x -7 -1 ∨ - x x x -10 ≥ -2 dec + / x + + -10 inc x * F x eql x *"
# 42231: "-8 - x + 4 x -9 8 - dec inc x 8 + x inc + -3 x 9 x -3 + 9 x x * inc 8 if"
# 42252: "inc x 0 x 3 x < -5 x F be dec copy -6 8 ungreedy > T inc -10 -5 -10 F x x x -8 x eql *"
# 42252: "x x 6 x 2 ¬ 0 / F greedy? 6 / -6 T F x F x / + -5 -10 -10 x * ≤ x x dec *"
# 42252: "/ -2 + * dec x -5 dec dec inc x / inc x ungreedy -5 -8 -7 F T / T > ∨ * x x x x *"
# 42252: "9 -6 - 3 x * 0 dec ∨ dec + x x -5 -2 dec + / x + + -10 inc F * x x x x *"
# 42252: "x -4 x 7 T 8 x dec x dec 3 6 inc -6 ≤ dec x / x ≤ x -10 T x * neg x x x *"
# 42252: "-2 dec 7 x 2 4 x -2 / ¬ - copy -8 3 be x 1 -2 * x inc / -2 -7 ∨ x - x x *"
# 42252: "+ 8 -9 ∨ > -7 -10 -2 < x T x x 5 x -3 eql inc inc 6 x -10 inc -6 / T 0 x x *"
# 42252: "x x - ∨ > -7 -10 -2 < x T x x 5 x -3 inc greedy? x 9 T x + < F 0 x F x *"
# 42252: "6 x T 7 -1 * 0 dec x dec + 6 x ¬ -2 dec -1 ≤ x x / - 5 x * F x x x *"
# 42252: "x pop x x 2 ¬ x if 9 ¬ - copy -8 3 swap ¬ dec -2 * x inc / -2 -7 x -8 - x x *"
# 42252: "dec x 5 -2 x x 0 ≥ / ¬ - copy -8 x swap inc dec depth * x 1 / -9 -7 x x x F ∧ *"
# 42252: "* greedy - x -9 x 5 F F -8 x -6 inc x -6 dec -9 / x + / -3 + 9 x inc * x x *"
# 42252: "x -3 ≥ 3 x x + T x neg x dec 1 x x x ∨ / inc -5 F inc / T x T ≤ x ∨ *"
# 42252: "9 -6 8 3 x T x + dec 2 0 > * greedy? x -1 2 greedy F x dec dec x inc x pop be greedy? * +"
1316,43022,67
1317,43022,77
1318,43211,76
1319,43022,67
1320,43022,74
1321,44366,78
1322,42252,78
1323,42294,87
1324,36071,72
1325,33012,82
1326,40712,76
1327,34552,67
1328,21000000,71
1329,40502,72
1330,42854,66
1331,36694,71
1332,36092,78
1333,42854,74
1334,43022,69
1335,36862,81
1336,43028,68
1337,43022,73
1338,29162,80
1339,41342,77
1340,36694,76
1341,42252,81
1342,35903,79
1343,49847,69
1344,43792,63
1345,43022,77
1346,36694,72
1347,42252,76
1348,36862,74
1349,36694,65
1350,43022,77
1351,36092,69
1352,43022,63
1353,36862,77
1354,42854,74
1355,43022,69
1356,43022,95
1357,27166,69
1358,42252,70
1359,40187,82
1360,39494,81
1361,30702,66
1362,36071,77
1363,41846,92
1364,36694,74
1365,43022,86
1366,42252,71
1367,33012,80
1368,36694,66
1369,42812,80
1370,29162,75
1371,36694,72
1372,36694,72
1373,21000000,77
1374,36694,77
1375,36694,85
1376,36862,73
1377,43148,82
1378,35903,68
1379,35462,74
1380,41482,80
1381,43358,81
1382,43022,72
1383,43022,69
1384,36092,76
1385,48783,74
1386,43022,73
1387,31472,75
1388,43211,76
1389,38297,85
1390,35322,85
1391,36694,75
1392,21000000,72
1393,35322,77
1394,36694,80
1395,35903,75
1396,36092,84
1397,43022,74
1398,36694,76
1399,42854,70
1400,35903,70
1401,42252,79
1402,42231,72
1403,36694,80
1404,38402,74
1405,41552,76
1406,29932,81
1407,35322,92
1408,35903,86
1409,43022,77
1410,43022,68
1411,43022,67
1412,43001,76
1413,42252,92
1414,38297,80
1415,42518,73
1416,43022,69
1417,48412,81
1418,42854,69
1419,36694,72
1420,40082,74
1421,44030,67
1422,43022,74
1423,36694,69
1424,36694,67
1425,43022,68
1426,43022,76
1427,36092,78
1428,47558,66
1429,44262,65
1430,21000000,76
1431,36694,77
1432,42014,69
1433,43022,65
1434,42252,71
1435,42854,88
1436,43022,79
1437,36694,75
1438,36694,78
1439,42231,66
1440,36092,70
1441,42252,69
1442,42497,84
1443,21000000,72
1444,43022,70
1445,35903,72
1446,36694,78
1447,33012,75
1448,43022,77
1449,21000000,70
1450,36694,69
1451,42518,84
1452,42273,80
1453,35322,77
1454,36694,72
1455,36694,71
1456,43022,74
1457,43022,78
1458,39662,79
1459,42854,73
1460,31472,79
1461,35903,69
1462,36694,72
1463,42602,78
1464,33012,67
1465,32242,71
1466,43022,68
1467,39662,74
1468,42854,79
1469,31472,75
1470,48881,76
1471,34430,72
1472,20447,79
1473,35462,73
1474,43022,76
1475,36092,79
1476,43022,80
1477,36694,78
1478,36694,79
1479,36694,66
1480,35322,77
1481,42252,75
1482,36092,78
1483,36092,73
1484,35903,85
1485,35903,70
1486,43022,73
1487,43022,74
1488,39942,81
1489,33012,72
1490,36694,74
1491,35903,67
1492,42833,68
1493,42749,73
1494,36092,73
1495,29162,84
1496,36694,69
1497,21000000,76
1498,43022,95
1499,43358,82
1500,33012,72
1501,36694,70
1502,43022,74
1503,42896,70
1504,37030,82
1505,43022,70
1506,27698,84
1507,42728,72
1508,43022,69
1509,20447,81
1510,43022,77
1511,39942,68
1512,35903,75
1513,42546,82
1514,39172,81
1515,37604,87
1516,36092,76
1517,33012,95
1518,33012,79
1519,43022,67
1520,42749,78
1521,29162,79
1522,43022,80
1523,49754,75
1524,33012,84
1525,36694,67
1526,36694,74
1527,33012,94
1528,35322,88
1529,43211,70
1530,42098,71
1531,36694,70
1532,43022,72
1533,43022,73
1534,36694,76
1535,43022,82
1536,34552,90
1537,43542,78
1538,43568,84
1539,42598,76
1540,40838,67
1541,33782,70
1542,42833,73
1543,43757,81
1544,30702,90
1545,35903,80
1546,37632,79
1547,41342,68
1548,35903,63
1549,42686,75
1550,46102,70
1551,36694,82
1552,43022,77
1553,36694,67
1554,42854,66
1555,43022,84
1556,20447,80
1557,36862,83
1558,36694,72
1559,32242,80
1560,36694,76
1561,35903,74
1562,36694,71
1563,35322,87
1564,29932,83
1565,35903,73
1566,35322,77
1567,33782,75
1568,43022,81
1569,32242,71
1570,35322,68
1571,36694,78
1572,21000000,77
1573,43022,77
1574,35903,71
1575,43022,70
1576,36092,77
1577,40712,75
1578,36694,69
1579,48412,66
1580,31472,89
1581,42854,77
1582,35903,70
1583,43169,67
1584,33012,88
1585,42854,70
1586,43442,69
1587,33012,88
1588,42252,75
1589,31472,77
1590,44639,74
1591,30702,98
1592,42833,84
1593,36694,77
1594,34552,77
1595,43022,69
1596,42252,65
1597,28392,86
1598,67662,102
1599,36694,70
1600,20447,84
1601,36694,96
1602,33782,84
1603,36694,75
1604,32242,86
1605,35322,82
1606,42854,76
1607,42644,78
1608,42854,82
1609,42833,78
1610,33782,71
1611,43652,81
1612,36862,94
1613,33782,84
1614,43022,77
1615,34552,83
1616,31472,74
1617,17626,75
1618,43022,69
1619,43022,79
1620,35903,69
1621,40634,73
1622,42833,72
1623,44625,69
1624,34552,78
1625,43022,84
1626,20447,76
1627,45332,76
1628,42252,83
1629,36092,82
1630,39242,81
1631,43127,69
1632,43022,77
1633,42854,63
1634,43253,79
1635,43106,67
1636,34552,88
1637,43169,69
1638,36092,70
1639,36092,70
1640,36092,82
1641,35903,75
1642,45065,64
1643,50932,72
1644,42954,69
1645,44604,74
1646,43022,73
1647,44562,76
1648,30702,85
1649,38402,76
1650,36092,76
1651,35322,64
1652,32242,82
1653,36092,70
1654,43022,77
1655,43022,90
1656,33012,83
1657,33782,81
1658,42497,80
1659,35903,74
1660,29932,67
1661,42770,73
1662,36092,80
1663,31472,67
1664,43022,74
1665,36694,65
1666,43022,90
1667,42525,85
1668,27128,90
1669,35903,72
1670,36092,86
1671,43022,76
1672,29932,67
1673,21000000,74
1674,35903,64
1675,43022,85
1676,31694,80
1677,50890,83
1678,40712,75
1679,35322,81
1680,31472,72
1681,35322,78
1682,20447,80
1683,43022,83
1684,31472,75
1685,45850,77
1686,31472,73
1687,29162,77
1688,36694,68
1689,42875,77
1690,43022,73
1691,43022,75
1692,43022,101
1693,36092,81
1694,42252,73
1695,39347,86
1696,35322,72
1697,68884,69
1698,43022,74
1699,29932,65
1700,33012,91
1701,33782,78
1702,36092,66
1703,27698,69
1704,31472,79
1705,42518,69
1706,41405,76
1707,34552,76
1708,30702,80
1709,36694,67
1710,43022,102
1711,44562,69
1712,34552,82
1713,33012,80
1714,43022,84
1715,42252,75
1716,35903,80
1717,35322,69
1718,34552,72
1719,35903,73
1720,29162,67
# After 800 updates
# 17626: "0 x -1 4 x x 7 ≥ 4 T ungreedy 5 -3 x x x 9 x * + + -10 inc -5 * 8 * inc 8 *"
# 20447: "inc x swap x + x < / x x x < x 1 copy x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "inc x swap x + x < / x x + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-8 inc 7 neg x ≥ x 3 -8 -6 + x x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x F F -2 x x x eql 4 T x x inc x swap x 1 -2 x -10 7 -6 * dec T -8 3 * dec *"
# 20447: "+ - greedy? 4 -9 T / x / ¬ + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-9 x -3 T -3 2 inc 1 * x x copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-5 x 7 3 -8 x 4 ≥ T 7 inc copy x eql x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x x dec dec 3 < T inc ∧ inc copy x eql x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 27128: "4 greedy? T x x ∨ x copy x x x 9 ungreedy x -2 depth 1 x x depth inc 4 x 9 x x * depth F *"
# 27166: "0 copy -7 x x x x / - + inc + 8 F x inc + ∨ x 9 x ¬ + 9 x + * inc 8 *"
# 27698: "x x 8 x -9 x x 7 T -8 x 8 ungreedy x -6 x 1 -2 ∨ -10 inc 4 + greedy? x x * depth F *"
# 27698: "2 x 0 x 3 eql x x x x x x 8 + x 0 6 x -9 -5 inc 4 F 9 x x * depth F *"
# 27874: "be + - x + eql x x / + - copy -8 3 swap x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 28392: "9 x x 4 swap T F 6 be x dec x T F x inc 8 -2 x depth inc T ungreedy -2 x x * depth F *"
# 29162: "-2 x -7 x x x F / x F inc 7 8 x x x 6 x < 9 x F + 9 x x * depth F *"
# 29162: "x be x -1 x x pop T x x F -6 inc / -6 x 1 -2 x -10 greedy 4 T x x x * depth F *"
# 29162: "x - greedy? dec x x x -8 inc -1 x 9 -10 ≥ -2 x 1 x x depth inc 4 x 9 x x * depth F *"
# 29162: "x 0 T 5 depth 7 -3 x x pop 8 x -4 -7 dec -1 2 -10 + 9 x F + 9 x x * depth T *"
# 29162: "inc x 8 x -9 x x F T -8 x 8 inc x -6 x 1 -2 ∨ -10 inc 4 + 9 x x * depth F *"
# 29932: "2 x 0 x 3 eql x x x x x x 8 + x x 6 x < 9 x T + 9 x x * depth F *"
# 29932: "x -5 7 x x ¬ -3 x x x inc x 8 + x x 6 x < 9 x F + 9 x x * depth F *"
# 29932: "inc x 7 x x ≥ x 3 -8 -6 ungreedy x x 5 / x -4 -2 x depth -2 4 + 9 x x * depth F *"
# 29932: "x -5 7 x x ¬ -3 x x x inc 6 8 + T x 6 x < 9 x F + 9 x x * depth T *"
# 29932: "x F / -2 x x x ≥ 4 x x x inc x swap x 1 -2 x -10 inc 4 ungreedy 9 x x * depth F *"
# 30702: "x 3 7 x x x x x x F F x 8 + > inc + 9 x x 6 T + -2 x x * depth F *"
# 30702: "9 x 7 x x ≥ x 3 -8 -6 ungreedy x x 5 / x -4 -2 x depth eql 4 + 9 x x * depth F *"
# 30702: "9 x x 4 -9 T F 6 be > dec x T F x inc - -2 x depth inc T ungreedy -2 x x * depth greedy? *"
# 30702: "9 T 9 dec x x ungreedy x -10 ≥ x greedy copy -6 x ungreedy 1 -2 T depth inc T + -2 x x * depth F *"
# 30702: "0 x -1 4 / dec x 0 8 ¬ - T -8 3 greedy? x - -2 x depth 6 T ungreedy 9 x x * depth F *"
# 31472: "x -5 7 x x ¬ -3 ≤ x x inc x 8 + x x 6 x < 9 x F + 9 x x * depth F *"
# 31472: "9 x x 4 / dec x x neg x / -1 x greedy? swap copy 1 greedy x depth x 4 ≥ x x x * depth F *"
# 31472: "- x x -8 * 9 -1 greedy / -9 -5 5 x F x inc x 9 x x 6 T + -2 x x * depth F *"
# 31472: "-2 dec 7 4 7 T -6 4 F ∧ x x -9 F x inc + 9 - depth x 4 + 9 x x * depth F *"
# 31472: "1 + - x -5 x x F T -8 x -9 swap x -6 x 1 -2 ∨ -10 inc 4 + 9 x x * depth F *"
# 31472: "+ F -3 9 be dec -4 -2 / -8 F -6 inc x -6 x 1 -2 x -10 inc 4 + x x x * depth F *"
# 31472: "inc x 7 4 7 T -6 4 F ∧ x x copy F x inc + x - depth x 4 + 9 x x * depth F *"
# 31472: "inc x 5 -2 x F 9 x x F inc x 8 + * inc + 9 x x inc T x -4 x x * depth F *"
# 31472: "x F ungreedy -2 7 pop x F -7 x T x x inc / -8 + 9 T x 6 T + 9 x x * depth T *"
# 31694: "greedy? F 8 x -2 -2 * * F x T 5 -8 depth -2 7 4 inc * x x x x x -5 - * depth F *"
# 32242: "inc x 5 -2 x F 9 x 6 T x x 8 + x inc + x ungreedy inc inc T ∧ -2 x x * depth F *"
# 32242: "9 x x 4 -9 T F x be ∧ x x x F > inc + F -4 x inc T + -2 x x * depth F *"
# 32242: "F - -5 be x x depth ≥ T -8 x x -10 ≥ -2 x 1 x x depth inc 4 + ungreedy x x * depth F *"
# 32242: "dec dec 5 -2 x depth x ≥ * T x 5 x F x dec + x swap F -5 -10 inc x x x * depth F *"
# 32438: "9 - 2 dec x x x -8 inc -1 x 5 x x 8 x / + 6 ≤ -7 -10 inc T * 8 x T - *"
# 33012: "9 x x 4 -9 T F 4 be ∧ x x T F x inc + 9 - ≤ x 4 + 9 x x * depth T *"
# 33012: "-4 / x x * + x T ∨ x x 9 8 6 T inc + 9 greedy? -8 x 4 ungreedy -2 x x * depth ungreedy *"
# 33012: "F x x x dec x x -10 dec -1 + -1 x dec * inc 8 9 T ≤ x 4 / 9 x x * depth T *"
# 33012: "x F + -2 7 pop x F -7 x T x x inc / inc + 9 x x 6 T + -2 x x * depth F *"
# 33012: "copy -4 + x 2 T 6 -7 / ¬ 0 copy x inc x x 5 greedy be x 7 -6 * dec x x * depth F *"
# 33012: "x - -7 x * -7 -1 neg - x x x -10 ≥ -2 x 1 x x depth inc 4 + 9 x x * depth F *"
# 33012: "* neg F pop -3 dec -4 -2 / -8 swap -6 x greedy? swap x 1 -2 x -5 6 4 ≥ 9 x x * depth F *"
# 33012: "inc x 5 -2 x F 9 x x F inc x 8 + > inc + 9 x x inc T + -2 x x * depth F *"
# 33012: "inc x 7 x T x 4 ≥ T T x x 8 + x inc + 9 x inc inc T ∧ -2 x x * depth F *"
# 33012: "x F + -2 7 pop x F -7 x pop x x be / inc + 9 x x 6 T 4 -2 x x * depth ungreedy *"
# 33782: "eql T 9 T x x ungreedy T / ≥ F greedy copy -6 x 1 x ≤ 6 8 inc T + -2 x x * depth F *"
# 33782: "x F 7 x / ¬ x dec T pop inc > 8 + x 5 + x T 9 x 4 T greedy? x x * depth F *"
# 33782: "9 -6 8 > x pop 7 T x x F / x F ungreedy x + 9 x inc inc x ∧ -2 x x * depth ∨ *"
# 33782: "+ 4 5 x > F 9 x x F inc x 8 + x inc + 9 x x inc T + -2 x x * depth F *"
# 34552: "x x x / x -7 F 4 be ∧ x x T F x inc + 9 - ≤ x 4 + 9 x x * depth T *"
# 34552: "3 * T x x * < T inc ¬ - 4 -8 3 swap x - -2 x depth inc T x -2 x x * depth F *"
# 34552: "depth T x + x 4 if -7 inc -1 x 5 x x > x / + x depth inc 4 + 9 x x * depth F *"
# 35322: "T 3 ≥ > x x T x x x / x / 5 -2 x x x if + -5 -10 T x * 8 x T - *"
# 35322: "x x / x dec ≥ x 3 -8 F x x / 5 / x -10 8 pop x T -10 T x * 8 x T - *"
# 35322: "T x / pop T 1 dec -7 x -1 ≥ / -6 dec copy * + ∨ x 9 F -3 x -2 x x * depth F *"
# 35322: "9 - 2 dec / x 2 x inc -1 / 5 x x 8 inc / + x x inc T ungreedy F x x * depth greedy? *"
# 35322: "0 x -1 4 / dec eql depth * 5 x x 5 + F inc + 9 x x inc T + -2 x x * depth F *"
# 35322: "0 x -3 4 / dec eql depth * T x x 5 + F inc + 9 x x inc T + -2 x x * depth F *"
# 35462: "0 x -1 4 x x 7 ≥ 4 T ungreedy 5 -3 x x x 9 x + + 8 -10 inc -5 * 8 x T - *"
# 35903: "0 copy -7 x x x x / - + inc + 8 ≥ x inc + 9 x > T x + 9 x x * inc F *"
# 35903: "-2 dec 7 x x < x -2 / ¬ - copy -8 3 swap x depth ¬ neg x inc 4 x 9 x x * inc F *"
# 35903: "x x 6 x 2 ¬ -6 / F -2 T > 8 + x 5 + x / 9 x 1 T 9 x x * inc T *"
# 35903: "-2 dec 7 x x < x -2 / ¬ - copy -8 3 swap x depth -2 * x inc 4 + 9 x x * inc F *"
# 35903: "-6 T x / 2 - dec -2 / ¬ + copy F 3 / x x x T x inc 4 + 9 x x * inc F *"
# 35903: "0 copy 2 x x x x / - + inc + 8 F x -9 + 9 x 9 T x + 9 x x * inc T *"
# 35903: "inc 7 T -2 x F 9 -10 -6 F inc x -3 F x x neg 9 x > T x + 9 x x * inc F *"
# 35903: "x - - x x x -2 inc F dec -6 -3 1 x T x 1 * * pop x -3 + 9 x x * inc swap *"
# 35903: "-9 -3 5 / F -9 0 -2 / ≤ -8 copy -3 x swap ungreedy 1 -2 + -10 inc 4 + 9 x x * inc F *"
# 35903: "x be x -1 x x ∨ T x x ≤ copy -10 3 T x 1 -2 x depth inc < + 9 x x * inc F *"
# 35903: "x F 0 -2 x - x ≥ 4 x x x inc x x x 1 -2 x -10 inc 4 + 9 x x * inc F *"
# 35903: "inc x 0 x 3 x < -5 - x + - if x if x x x T x inc 4 + 9 x x * inc F *"
# 36092: "T ∧ x 4 -9 T F 4 be ∧ x 4 -3 F x x x x pop + eql -10 inc x * 8 x T - *"
# 36092: "-9 x copy depth -3 x x ≥ 4 T ungreedy x -3 F x x x x + + eql -10 inc x * 8 x T - *"
# 36092: "-2 dec 7 4 7 T -6 4 be ∧ x x -9 F greedy? ungreedy x x inc ≤ x 4 + 9 ∨ x * F T *"
# 36092: "T ∧ x 4 -9 T greedy? 4 be ∧ 1 4 -3 F x x x x pop greedy eql -10 inc x * 8 x T - *"
# 36092: "-9 x -3 T -3 x x ≥ 4 T ungreedy x -3 F x x x x + + eql -10 inc x * 8 x T - *"
# 36694: "7 8 -9 x -9 x 0 + x x 2 7 x 9 - -6 x x x 9 * 4 T 9 x x * inc 8 *"
# 36694: "F 4 x x dec x 1 -10 8 dec x x 8 x x x + 1 x neg x x + 9 x x * inc 8 *"
# 36694: "F F -5 ∨ x + x 5 -10 x x x ¬ x / x 1 -2 * F T 1 + 9 x x * inc 8 *"
# 36694: "9 -6 x 3 x pop pop T x x + x greedy? 3 x x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 36694: "x - - x x x 3 inc F dec -6 -3 1 x / 5 5 copy x depth * 4 T 9 x x * inc 8 *"
# 36694: "x x ∧ x -4 copy depth ≥ T -8 x T 8 F x inc + 9 x T x x + 9 x x * inc 8 *"
# 36694: "inc x 7 x T x depth ≥ T -8 x x 8 F x inc + 9 x 6 x x + 9 x x * inc 8 *"
# 36694: "-4 / x x * + x -9 ∨ x x 9 8 6 T inc eql 9 6 8 x x T 9 x x * inc 8 *"
# 36694: "- x x -8 * x - greedy / T -5 5 -9 / x 7 greedy? -3 x F -2 x + 9 x x * inc 8 *"
# 39494: "inc x 7 x x ≥ x 3 -8 -6 ungreedy x x 5 / x -4 -2 x depth -2 4 x 9 x x 9 depth 8 *"
# 39942: "* greedy - x F < x -2 / ¬ ∧ ≤ x x ∨ x / -2 x -10 inc 4 ungreedy x x ¬ * depth F *"
# 41132: "x / x 5 -7 x / < / x neg inc F -1 ∨ ∧ -9 - 5 + -7 5 -7 -10 -8 0 x ≤ dec *"
# 42231: "-8 - x + 4 x -9 8 - dec inc x 8 + x inc + -3 x 9 x -3 + 9 x x * inc 8 if"
# 42252: "-10 greedy? 5 x x 8 x 1 T dec + 6 x x ≤ inc T 9 - ≤ x T > ∨ * x x x x *"
1721,43043,70
1722,43022,67
1723,43022,77
1724,43043,73
1725,43127,73
1726,35903,72
1727,29932,70
1728,54572,78
1729,35182,68
1730,33012,85
1731,49322,93
1732,35322,83
1733,20447,83
1734,32518,80
1735,31694,73
1736,42854,67
1737,43022,80
1738,36862,71
1739,30702,73
1740,29932,73
1741,43022,76
1742,43792,65
1743,72912,77
1744,31472,77
1745,33012,69
1746,29932,82
1747,35322,69
1748,73766,86
1749,40712,69
1750,49574,72
1751,26558,77
1752,46550,75
1753,40904,86
1754,30702,78
1755,42644,90
1756,29162,83
1757,43022,67
1758,43022,76
1759,43337,83
1760,33446,80
1761,43022,91
1762,42252,77
1763,43022,81
1764,43043,80
1765,35322,76
1766,42854,67
1767,42854,69
1768,43022,74
1769,33012,77
1770,43022,82
1771,36092,79
1772,44534,70
1773,41132,75
1774,42252,68
1775,43064,69
1776,43967,70
1777,43022,86
1778,31852,68
1779,43022,67
1780,35322,75
1781,42252,62
1782,30702,78
1783,43022,91
1784,42791,76
1785,20447,76
1786,42252,72
1787,39942,83
1788,43022,75
1789,20972,76
1790,43043,77
1791,27698,73
1792,43022,90
1793,43022,71
1794,29932,70
1795,32242,72
1796,35322,74
1797,43022,83
1798,43022,68
1799,20447,83
1800,43022,78
1801,35903,76
1802,43022,77
1803,42497,85
1804,52094,81
1805,36092,77
1806,45122,79
1807,77035,81
1808,44562,87
1809,43022,70
1810,36694,76
1811,32242,65
1812,42959,73
1813,27166,84
1814,31472,83
1815,29932,73
1816,43022,73
1817,17626,77
1818,36092,89
1819,21350,77
1820,43085,70
1821,43022,74
1822,36694,73
1823,53153,77
1824,42497,87
1825,36092,67
1826,35903,67
1827,45958,71
1828,43022,76
1829,29162,83
1830,43022,73
1831,43022,77
1832,45395,72
1833,43022,78
1834,43169,76
1835,37268,76
1836,42833,84
1837,36694,79
1838,30702,66
1839,31472,74
1840,43022,76
1841,43022,72
1842,44597,78
1843,31472,70
1844,44604,84
1845,42998,70
1846,45198,77
1847,43022,82
1848,20447,67
1849,42854,79
1850,36694,80
1851,29932,94
1852,42497,71
1853,29932,77
1854,29162,82
1855,33782,78
1856,40502,92
1857,43022,67
1858,43022,86
1859,121058,74
1860,29162,90
1861,43022,85
1862,39347,95
1863,49847,72
1864,35322,92
1865,35903,72
1866,30702,77
1867,43022,81
1868,49952,78
1869,52262,71
1870,43358,65
1871,33012,77
1872,43022,89
1873,41482,72
1874,42854,72
1875,43022,71
1876,35903,80
1877,56822,77
1878,43211,74
1879,31472,83
1880,42812,79
1881,27698,74
1882,36694,71
1883,43022,67
1884,36092,75
1885,29932,78
1886,43148,78
1887,34552,81
1888,47222,77
1889,43022,86
1890,43022,83
1891,35322,64
1892,34552,80
1893,43022,68
1894,43190,73
1895,30702,78
1896,42231,68
1897,36862,74
1898,35903,70
1899,33782,83
1900,20447,87
1901,32242,69
1902,35322,81
1903,26558,103
1904,42644,71
1905,42854,68
1906,43022,83
1907,53802,72
1908,42980,78
1909,43022,71
1910,43547,73
1911,42182,77
1912,33012,75
1913,35903,74
1914,29162,67
1915,27698,89
1916,28392,89
1917,43022,96
1918,20447,85
1919,43022,77
1920,43022,81
1921,36858,82
1922,31472,72
1923,34552,71
1924,43190,73
1925,43022,80
1926,35903,79
1927,43106,77
1928,43022,73
1929,31472,77
1930,42854,87
1931,20447,79
1932,20447,86
1933,20447,85
1934,21000000,75
1935,29162,77
1936,20972,89
1937,43022,88
1938,30702,75
1939,36694,75
1940,31472,76
1941,35903,67
1942,43022,74
1943,31080,74
1944,43547,90
1945,46872,72
1946,43211,75
1947,42728,74
1948,38276,71
1949,43022,68
1950,35903,76
1951,67308,65
1952,50489,80
1953,35903,68
1954,43232,69
1955,43358,69
1956,36092,71
1957,31472,80
1958,42231,73
1959,43526,78
1960,42602,77
1961,43022,88
1962,31472,93
1963,47642,82
1964,27698,70
1965,41818,82
1966,29162,95
1967,32242,80
1968,42497,80
1969,42252,87
1970,43022,67
1971,32242,82
1972,40187,71
1973,27128,85
1974,36654,82
1975,33454,72
1976,43778,76
1977,37632,80
1978,43022,89
1979,59478,77
1980,43022,82
1981,42917,79
1982,43316,91
1983,20447,87
1984,44786,87
1985,27698,67
1986,33782,75
1987,33012,76
1988,36862,78
1989,29162,69
1990,30702,84
1991,29932,87
1992,31472,88
1993,20447,79
1994,41132,82
1995,38402,80
1996,43022,78
1997,30702,97
1998,29162,75
1999,43232,77
2000,20972,74
2001,35903,71
2002,33012,71
2003,33012,81
2004,43022,72
2005,46872,82
2006,31472,77
2007,33782,81
2008,21000000,91
2009,20447,71
2010,43022,78
2011,20447,81
2012,17626,77
2013,20447,70
2014,76132,72
2015,43022,71
2016,43022,88
2017,43022,82
2018,32242,78
2019,43022,74
2020,43022,73
2021,41027,77
2022,35322,83
2023,20447,83
2024,32242,89
2025,27128,88
2026,43022,70
2027,43022,75
2028,20447,68
2029,36092,86
2030,42518,91
2031,37772,78
2032,28392,75
2033,30702,77
2034,43022,97
2035,29162,75
2036,27128,116
2037,33012,68
2038,43547,84
2039,32242,80
2040,29932,74
2041,41958,85
2042,43022,70
2043,43932,87
2044,29932,71
2045,42749,101
2046,29162,73
2047,32518,73
2048,32438,81
2049,30702,74
2050,43022,79
2051,27128,75
2052,35903,69
2053,43316,81
2054,33012,72
2055,31472,75
2056,20447,86
2057,28392,73
2058,29932,88
2059,43022,84
2060,39662,82
2061,42707,78
2062,32627,84
2063,17626,79
2064,42791,89
2065,47912,83
2066,34552,90
2067,33830,77
2068,40712,69
2069,73822,77
2070,33782,85
2071,20447,76
2072,42231,73
2073,43022,84
2074,29162,76
2075,43022,82
2076,29162,75
2077,31476,74
2078,43022,83
2079,21350,92
2080,33012,84
2081,43022,72
2082,20447,74
2083,47642,96
2084,43022,68
2085,30702,79
2086,35322,75
2087,35322,66
2088,43106,81
2089,36694,63
2090,43169,79
2091,20447,76
2092,39347,84
2093,31472,92
2094,21350,66
2095,20447,80
2096,43400,91
2097,43547,87
2098,35903,83
2099,43022,76
2100,43022,72
2101,43022,82
2102,256984,83
2103,35903,80
2104,32242,84
2105,29932,70
2106,49952,86
2107,43043,69
2108,34552,81
2109,43022,89
2110,43022,81
2111,27698,67
2112,36862,84
2113,47747,75
2114,27698,83
2115,29932,80
2116,20447,91
2117,49397,82
2118,43022,83
2119,28392,76
2120,30702,97
2121,35462,72
2122,76132,86
2123,43022,83
2124,30702,92
2125,33782,89
# After 1000 updates
# 17626: "0 x -1 4 x x 7 ≥ 4 dec ungreedy 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "x ≥ -1 4 x x 0 ≥ 7 dec ungreedy 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "≤ greedy? T x inc ∨ x x / ¬ 0 copy x inc / x 5 x * + + -10 inc -5 * 8 * inc 8 *"
# 20447: "+ F greedy? 4 -9 T / greedy copy F + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T x -3 2 x 1 * x x copy x - x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "F x x x dec x < / 0 T + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-9 x -3 T -3 2 inc 1 * x x copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "- x x -9 T x x x x 5 T x 5 + ¬ x x dec ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x swap dec dec dec eql be * copy x x 5 + ¬ x x greedy ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "-2 dec 7 x 7 T -6 4 F F x x x 1 copy ≥ greedy? greedy F x 7 -6 * dec T -8 3 * dec *"
# 20447: "x F F -2 x x x eql 4 T x x inc x swap x 1 -2 x -10 7 -6 * dec T -8 3 * dec *"
# 20447: "copy x T x x T F 4 be 5 x 4 T F x T -5 x be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -1 x / x x -5 8 F - T -8 x greedy? x - greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-8 inc 7 neg x ≥ x 3 -8 -6 + x x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "F x 5 x + x < / neg x x < x 1 copy x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "9 -6 x swap x x ungreedy x eql ≥ x x x -6 x ungreedy 1 -2 x x 7 -6 * dec T -8 3 * dec *"
# 20447: "inc x swap x + x < / x x + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T -3 -3 2 x 1 * x x copy x - x x 5 greedy greedy x 7 -6 * dec T -8 3 * dec *"
# 20447: "T x ungreedy T -3 2 inc 1 * x ∨ copy x inc x x 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "inc 3 8 1 -9 dec -7 F T -8 x 8 inc x x T 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -3 4 / 3 < ungreedy inc ∧ inc copy x T x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "4 inc F -4 / x / x / 2 + copy x inc x x 5 pop be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -3 4 / dec eql depth * copy x x 5 + ¬ x + greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "F x 5 x + x < / x x x < x 1 copy x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "+ - greedy? x -9 T / x / F + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-5 x 7 3 -8 x 4 ≥ T 7 inc copy x eql x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20972: "-2 x -7 x x pop x / F x T > x eql x < 5 greedy T x 7 -6 * ∧ T -8 3 * dec *"
# 20972: "-9 x -3 T -3 x x ≥ T 7 inc -2 x eql x < 5 greedy T x 7 -6 * ∧ T -8 3 * dec *"
# 20972: "-2 greedy? T x / ∨ < copy x -6 + copy x 1 x x 5 greedy be x 7 -6 * greedy? T -8 3 * dec *"
# 21350: "x x F x x x greedy? ≥ 4 T ungreedy 5 -3 ≥ depth ≥ greedy? greedy F x 7 -6 * dec T -8 3 * ∧ *"
# 26558: "0 x F 4 x x 6 ≥ 4 T ungreedy 5 -3 x x x x x T 9 x 4 T greedy? x x * depth F *"
# 26558: "x greedy? T x x depth x copy x x x 9 ungreedy x -2 5 1 x x depth inc 4 ungreedy F x x * depth greedy? *"
# 27128: "ungreedy greedy? T x greedy? depth x copy x x x 9 ungreedy x -2 5 F x x depth inc 4 ungreedy F x x * depth greedy? *"
# 27128: "x greedy? T x x depth x copy x x x 9 ungreedy x -2 5 ∧ x x depth ¬ 4 1 F x x * depth F *"
# 27128: "4 greedy? T x x ∨ x copy x x x 9 ungreedy x -2 depth 1 x x depth inc 4 x 9 x x * depth F *"
# 27128: "4 x T x x ∨ x copy x x x 9 ungreedy x -2 depth 1 -9 x x x 4 / greedy? x x * depth F *"
# 27698: "x x 8 x -9 x x 7 T -8 x 8 ungreedy x -6 x 1 -2 ∨ -10 inc 4 + greedy? x x * depth F *"
# 27698: "-2 x -7 x x x F / x F inc F 8 x x x 6 x < 9 x F F 9 x x * depth F *"
# 27698: "F 2 0 1 swap T F 6 be x dec x T F x inc 8 1 x depth x T ungreedy -2 x x * depth F *"
# 27698: "-2 x -7 x x x F / x F inc F 8 x x x 6 x < 9 x 0 x 9 x x * depth F *"
# 27698: "2 x 0 x 3 eql x x x x x x 8 + x 0 6 x -9 -5 inc 4 F 9 x x * depth F *"
# 27698: "0 x -1 4 x F 9 x x x inc x 8 -9 x x ∨ x copy 9 x F * T x x * depth F *"
# 27874: "be + - x + eql x x / + - copy -8 3 swap x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 28392: "9 x x 4 swap T F 6 be x dec x T F x inc 8 -2 x depth inc T ungreedy -2 x x * depth F *"
# 29162: "x x x T x x -3 ≤ x x inc x -9 ¬ x T + x x depth inc 4 x 9 x x * depth F *"
# 29162: "F x greedy ∨ T T F ≥ x T x 5 x F x x 7 x swap F -5 -10 inc x x x * depth F *"
# 29162: "inc x 8 x -9 x x F T -8 x 8 inc x -6 x 1 -2 ∨ -10 inc 4 + 9 x x * depth F *"
# 29162: "x x -1 4 greedy? F 0 x x x inc x 8 x x x ∨ x copy 9 x F * T x < * depth F *"
# 29162: "x x F 4 x x greedy? ≥ 4 T ungreedy 5 -3 x x x 6 x < greedy? x T + 9 x x * depth F *"
# 29162: "x x -1 4 x F 9 x x x inc x 8 T x x ∨ x copy 9 x F * T x < * depth F *"
# 29162: "F x 7 x T x x ≥ T T x x -8 3 swap x - -2 neg depth inc T x -4 x x * depth F *"
# 29162: "x 0 T 5 depth 7 -3 x x pop 8 x -4 -7 dec -1 2 -10 + 9 x F + 9 x x * depth T *"
# 29162: "x - greedy? dec x x x -8 inc -1 x 9 -10 ≥ -2 x 1 x x depth inc 4 x 9 x x * depth F *"
# 29162: "inc x x x -9 x x F T -8 x x inc x -6 x x -2 ∨ -10 inc 4 + 9 x x * depth F *"
# 29162: "x be x -1 x x pop T x x F -6 inc / -6 x 1 -2 x -10 greedy 4 T x x x * depth F *"
# 29932: "x be x T x x -3 ≤ x x inc x 8 + x x 6 x copy 9 x F + T x x * depth F *"
# 29932: "x -5 7 x x ¬ -3 x x x inc x 8 depth x x 6 x < 9 eql 4 + x x x * depth F *"
# 29932: "0 x 7 x T x x ≥ x T x x -8 3 * inc + 9 x -9 inc T x -4 x x * depth F *"
# 29932: "F - -5 be x x depth ≥ T -8 x x -10 ≥ -2 x 1 x x depth inc 4 + ungreedy x F * ∧ F *"
# 29932: "9 -6 x x x x ungreedy x -10 ≥ x greedy x -6 x ungreedy 1 -2 T depth inc T + -2 x x * depth F *"
# 29932: "0 x F 4 x / 6 ≥ 4 T ungreedy 5 -3 x be x x x T 9 x 4 + -2 x x * depth F *"
# 29932: "inc x 7 x x ≥ x 3 -8 -6 ungreedy x x 5 / x -4 -2 x depth -2 4 + 9 x x * depth F *"
# 29932: "-5 x 7 3 x x 4 inc T 7 inc copy x x x < 5 greedy be x 7 F + 9 x x * depth T *"
# 29932: "9 x x 4 -9 T F 6 be > dec x T F x pop 8 -2 x depth x 4 + T x x * depth F *"
# 29932: "x F / -2 x x x ≥ 4 x x x inc x swap x 1 -2 x -10 inc 4 ungreedy 9 x x * depth F *"
# 29932: "9 x x 4 / x x x neg x / -1 x greedy? swap x 1 -2 x -10 inc 4 ungreedy 9 x x * depth F *"
# 30702: "5 - depth dec x x -1 -8 inc -1 x 5 x x 8 x -10 -2 T ≥ inc T + x x x * depth F *"
# 30702: "0 x -1 4 x x 7 ≥ 4 T ungreedy 8 ungreedy x -6 x 1 copy neg -10 inc swap + greedy? x x * depth F *"
# 30702: "5 - 2 dec x x -1 -8 inc -1 x 5 x x 8 x 1 -2 T ≥ inc T + -2 x x * depth F *"
# 30702: "-8 inc swap neg x x x ≥ 4 x x x inc x swap x 1 -2 greedy? -10 ¬ 4 ungreedy 9 x x * depth F *"
# 30702: "9 x x 4 -9 T F 6 be > dec x T F x inc - -2 x depth inc T ungreedy -2 x x * depth greedy? *"
# 31472: "x -5 7 x x ¬ -3 ≤ x x inc x 8 + x x 6 x < 9 x F + 9 x x * depth F *"
# 31472: "1 + - x -5 x x F T -8 x -9 swap < -6 x 1 -2 x -10 inc 4 + 9 x x * depth F *"
# 31472: "inc + - x -5 x x x T x x -9 swap x -6 x 1 -2 ∨ -10 inc 4 + 9 x x * depth F *"
# 31472: "inc x 8 x -9 ¬ -3 x x x inc x 8 depth x -4 6 be < 9 eql 4 + x x x * depth F *"
# 31472: "x -5 dec x x ¬ -3 x x x inc 6 8 + T x 6 x x 9 if F + 9 x x * depth T *"
# 31472: "T -5 7 x x ¬ -3 0 / ¬ - copy -8 3 swap x depth -2 F x inc x + -2 x x * depth F *"
# 31472: "1 + - x -5 x x F T -8 x -9 swap x -6 x 1 -2 ∨ -10 inc 4 + 9 x x * depth F *"
# 33012: "inc x 5 -2 x F 9 x x F inc x 8 + > inc + 9 x x inc T + -2 x x * depth F *"
# 33012: "-6 T x / 2 - -7 -2 T ¬ + copy F 3 / x x depth T x inc 4 + 9 x x * depth F *"
# 33012: "x F + -2 7 pop x F -7 x T x x inc / inc + 9 x x 6 T + -2 x x * depth F *"
# 33012: "9 -6 8 ∨ x pop 7 T x x F / x F ungreedy x + 6 x x inc T + -2 x x * depth F *"
# 33782: "eql T 9 T x x ungreedy T / ≥ F greedy copy -6 x 1 x ≤ 6 8 inc T + -2 x x * depth F *"
# 34552: "* greedy - x F < x -2 / ¬ x ≤ x x -2 depth 1 -9 x x x 4 / greedy? x x * depth T *"
# 35322: "x x / x dec ≥ x 3 -8 F x x / 5 / x -10 8 pop x T -10 T x * 8 x T - *"
# 35322: "pop 3 ≥ ≥ x x T x x x / x / 5 -2 9 x x if x -5 -10 T x * 8 x T - *"
# 35322: "+ - greedy? -6 -9 T / x / ¬ x copy / F -2 x x x if + -5 -10 T x * 8 x T - *"
# 35903: "0 x -3 x / 3 < ungreedy 4 T ungreedy x -3 x x x -9 x x 9 T neg + 9 x x * inc T *"
# 35903: "ungreedy x F 4 x / ∧ ≥ 4 T ungreedy 5 -3 x be x x -2 x copy inc 4 + 9 x x * inc F *"
# 35903: "-9 -3 5 / F -9 0 -2 / ≤ -8 copy -3 x swap ungreedy 1 -2 + -10 inc 4 + 9 x x * inc F *"
# 35903: "inc inc F x + x < / x x x < x 1 copy x 5 ≤ x > T x + 9 x x * inc F *"
# 36092: "-9 x copy depth -3 x x ≥ 4 T ungreedy x -3 F x x x x + + eql -10 inc x * 8 x T - *"
# 36092: "-2 dec 7 4 7 T -6 4 be ∧ x x -9 F greedy? ungreedy x x inc ≤ x 4 + 9 ∨ x * F T *"
# 36092: "T ∧ x 4 -9 T greedy? 4 be ∧ 1 4 -3 F x x x x pop greedy eql -10 inc x * 8 x T - *"
# 36694: "x ∧ x 4 -9 x 0 + x x T 7 x 9 - -6 x x x 9 * 4 T x x x * inc 8 *"
# 38402: "0 greedy - x F < x -2 / ¬ ∧ ≤ x x ∨ x / -2 x -4 inc 4 ungreedy x x ¬ * depth F *"
# 39494: "inc x 7 x x ≥ x 3 -8 -6 ungreedy x x 5 / x -4 -2 x depth -2 4 x 9 x x 9 depth 8 *"
# 42231: "8 x -3 4 / x -9 8 - x inc x 8 / x inc -7 -3 x 9 x -3 + pop x x * inc 8 if"
# 42644: "/ * 4 x * x x x 5 < 4 - inc 1 x 4 x 9 x be inc T ∧ -2 x dec * depth F *"
# 43022: "dec 1 inc dec inc / -8 -9 - 3 dec -2 x x 1 0 x x x dec 2 + 9 x 4 8 dec -3 0 x"
2126,43001,73
2127,43030,74
2128,43022,68
2129,43022,70
2130,43223,74
2131,43232,92
2132,42497,80
2133,20447,76
2134,43022,76
2135,43022,86
2136,31472,90
2137,35322,75
2138,28392,97
2139,43022,76
2140,29932,71
2141,41510,91
2142,39872,82
2143,43022,75
2144,43022,82
2145,36694,73
2146,36092,71
2147,17626,76
2148,43001,83
2149,20447,76
2150,43022,91
2151,43547,82
2152,42959,70
2153,31472,92
2154,29162,67
2155,31472,78
2156,43022,90
2157,42497,81
2158,52322,79
2159,42728,75
2160,44562,76
2161,34552,74
2162,43022,101
2163,43022,67
2164,33012,78
2165,31472,81
2166,29162,79
2167,21350,75
2168,32242,85
2169,39998,83
2170,31472,73
2171,29932,72
2172,21350,87
2173,42231,66
2174,32242,73
2175,43022,79
2176,25186,73
2177,43022,77
2178,29162,71
2179,55076,74
2180,33782,72
2181,43022,86
2182,35322,81
2183,43022,82
2184,30702,85
2185,36862,67
2186,42930,79
2187,42266,73
2188,43022,67
2189,43022,79
2190,43547,82
2191,42119,75
2192,30702,70
2193,43358,78
2194,43022,84
2195,30702,85
2196,43022,68
2197,43022,74
2198,42854,78
2199,41972,72
2200,43022,87
2201,42854,70
2202,35322,81
2203,37632,82
2204,50489,74
2205,33446,73
2206,43022,76
2207,21000000,75
2208,36694,85
2209,43022,79
2210,43358,77
2211,20447,82
2212,52154,72
2213,43022,69
2214,28392,88
2215,43022,72
2216,32242,75
2217,44597,77
2218,50882,91
2219,28392,89
2220,26558,98
2221,42252,83
2222,20447,79
2223,21000000,77
2224,77035,84
2225,42252,74
2226,43022,83
2227,13426,75
2228,37352,72
2229,33012,75
2230,43022,75
2231,45332,84
2232,74368,82
2233,32242,78
2234,28392,69
2235,43526,73
2236,28392,103
2237,41510,83
2238,43022,80
2239,29162,70
2240,29162,67
2241,43022,68
2242,43022,73
2243,31472,94
2244,27698,85
2245,31472,79
2246,43022,79
2247,36113,83
2248,42581,85
2249,20972,76
2250,27698,71
2251,43190,77
2252,20447,80
2253,33614,69
2254,32242,66
2255,42938,94
2256,27128,75
2257,30702,89
2258,28392,82
2259,30702,85
2260,42854,69
2261,29932,86
2262,43022,78
2263,36092,71
2264,42644,84
2265,27128,71
2266,28392,92
2267,42875,76
2268,43022,83
2269,42749,86
2270,36067,77
2271,43190,81
2272,43022,95
2273,295974,75
2274,36862,73
2275,43547,72
2276,31472,81
2277,29162,67
2278,43211,68
2279,43022,88
2280,20972,79
2281,61747,87
2282,43022,90
2283,39347,89
2284,142331,73
2285,43022,76
2286,42497,77
2287,43022,83
2288,49350,84
2289,41237,82
2290,43022,72
2291,29162,78
2292,47558,76
2293,34552,81
2294,33012,87
2295,20447,78
2296,29162,83
2297,35966,75
2298,34552,78
2299,42182,77
2300,21000000,84
2301,76132,78
2302,44597,73
2303,43547,80
2304,28392,79
2305,26558,70
2306,31472,79
2307,20447,88
2308,35903,72
2309,45122,81
2310,33782,75
2311,30686,101
2312,20447,73
2313,36092,80
2314,42938,72
2315,36092,80
2316,42854,79
2317,43022,71
2318,28392,77
2319,42497,78
2320,44618,76
2321,39128,69
2322,33012,84
2323,27698,68
2324,43022,93
2325,50882,90
2326,29162,80
2327,33012,79
2328,20972,81
2329,43547,70
2330,31472,78
2331,42497,96
2332,20447,79
2333,43526,85
2334,27128,73
2335,43232,103
2336,43022,71
2337,27698,87
2338,29162,77
2339,43022,68
2340,17626,79
2341,30702,72
2342,28392,74
2343,43098,62
2344,50489,86
2345,43022,100
2346,43022,91
2347,33782,73
2348,43022,84
2349,20447,90
2350,43022,84
2351,43277,76
2352,42252,93
2353,43022,88
2354,28392,102
2355,43547,82
2356,29162,78
2357,29162,69
2358,28392,87
2359,43022,63
2360,50489,77
2361,43022,71
2362,20447,81
2363,42772,78
2364,50489,79
2365,27128,69
2366,42644,72
2367,47558,83
2368,43022,74
2369,43022,83
2370,42497,84
2371,20972,75
2372,42854,78
2373,29932,109
2374,42497,78
2375,34937,80
2376,43022,82
2377,56802,83
2378,42875,84
2379,79310,97
2380,27128,87
2381,30702,83
2382,17626,77
2383,43022,65
2384,42252,80
2385,43904,72
2386,43022,94
2387,30702,75
2388,29162,77
2389,43589,69
2390,44030,89
2391,43022,79
2392,31472,67
2393,36694,77
2394,206954,69
2395,17626,72
2396,40922,79
2397,31472,88
2398,29162,77
2399,32242,72
2400,42749,86
2401,30702,76
2402,44770,78
2403,49952,72
2404,27698,89
2405,42252,73
2406,60018,84
2407,33782,104
2408,20447,73
2409,43190,77
2410,82222,77
2411,43925,68
2412,35819,78
2413,43022,78
2414,42497,77
2415,20447,80
2416,32242,79
2417,33782,89
2418,50882,71
2419,33782,71
2420,30702,72
2421,30702,86
2422,39347,89
2423,42252,78
2424,31472,64
2425,43022,80
2426,43022,68
2427,49182,81
2428,33012,94
2429,43022,76
2430,20447,75
2431,21000000,83
2432,43022,82
2433,30702,79
2434,43526,81
2435,43043,91
2436,28392,78
2437,34552,82
2438,20447,80
2439,39347,80
2440,40712,77
2441,17626,79
2442,31472,72
2443,43022,85
2444,38486,71
2445,20447,76
2446,28392,88
2447,30702,83
2448,45038,75
2449,20447,78
2450,20447,75
2451,43022,76
2452,27128,73
2453,42581,79
2454,43358,86
2455,42252,72
2456,32242,69
2457,297346,83
2458,28392,72
2459,66542,82
2460,43022,75
2461,27128,86
2462,28392,79
2463,20972,76
2464,47747,85
2465,38983,83
2466,35322,70
2467,44954,80
2468,44198,74
2469,30702,71
2470,35322,78
2471,69734,72
2472,43022,78
2473,17626,85
2474,35322,75
2475,43022,96
2476,43526,83
2477,41699,70
2478,33012,77
2479,20447,76
2480,20447,66
2481,28392,78
2482,36092,64
2483,73997,83
2484,42833,80
2485,30702,73
2486,42623,74
2487,29162,75
2488,29162,73
2489,41342,83
2490,43022,79
2491,50882,93
2492,42497,74
2493,31472,79
2494,31472,76
2495,32242,80
2496,40922,77
2497,34552,84
2498,43022,76
2499,33782,81
2500,42854,73
2501,43022,75
2502,27698,68
2503,30702,75
2504,29162,76
2505,29932,65
2506,43442,74
2507,29932,75
2508,28392,89
2509,20447,82
2510,43358,99
2511,29162,89
2512,43022,76
2513,42917,74
2514,43792,85
2515,32242,85
2516,31115,67
2517,32242,86
2518,27128,90
2519,31857,80
2520,43022,76
2521,31472,85
2522,43022,76
2523,42644,103
2524,35322,81
2525,32242,97
2526,29372,83
2527,43022,74
2528,21350,70
2529,50802,74
2530,26558,71
# After 1200 updates
# 13426: "-2 x -7 x x pop x / F x T > copy eql x < 5 greedy 9 x 7 -6 * ∧ T -8 * ∧ 8 *"
# 17626: "9 x x 4 swap T copy -1 + x -10 x x 4 1 + -1 T - + -6 -10 inc -5 * 8 * inc 8 *"
# 17626: "≤ greedy? T x inc ∨ x x / ¬ 0 copy x inc / x 5 x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "0 x -1 4 x x 7 ≥ 4 dec ungreedy 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "x ≥ -1 4 x x 0 ≥ 7 dec ungreedy 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "x greedy? x x x x x 3 -8 x T x 2 1 2 inc + 9 eql + dec -10 inc -5 * 8 * inc 8 *"
# 17626: "x x * 9 x -7 copy -1 + x -10 x x 4 1 + -1 - - + dec -10 inc -5 * 8 * inc 8 *"
# 17626: "< x ≥ 3 -8 x 4 3 neg greedy x x / eql / x ungreedy 8 pop x x -10 inc -5 * 8 * inc 8 *"
# 17626: "-2 x -7 x x x F / 7 copy -5 5 * x x x T x * + T -10 inc -5 * 8 * inc 8 *"
# 17626: "-2 x -7 x x x F / 7 copy ungreedy 5 -3 x x x T x * + T -10 inc -5 * 8 * inc 8 *"
# 20447: "x -7 -3 x / 3 x ungreedy 4 T ungreedy F -3 x -4 -5 5 greedy be F 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -1 4 x F 9 x F F x x 5 + ¬ 4 x T ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x < eql / x x neg 8 F - T -8 x greedy? x - greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "< x 7 3 -8 x 4 -5 T 7 x copy x eql x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "4 inc F -4 / x / x / 2 + copy x inc x x 5 pop be x 7 -6 * dec T -8 3 * dec *"
# 20447: "+ F greedy? 4 -9 T / greedy copy F + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "inc x swap x + x < / x x + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T -3 -3 2 x 1 * x x copy x - x x 5 greedy greedy x 7 -6 * dec T -8 3 * dec *"
# 20447: "5 x 7 3 x -7 if inc T 7 inc copy T 1 x x 5 7 be x 7 -6 * dec T -8 3 * dec *"
# 20447: "+ - greedy? x -9 T / x / F + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "9 x x 4 x x if eql 4 T x T inc x swap x 1 -2 x -10 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x swap dec dec dec eql be * copy x x 5 + ¬ x x greedy ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "F x 5 x + x < / neg x x < x 1 copy x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "∧ x 5 x + x < / x x x < x 1 copy / 5 greedy be dec 7 -6 * dec T -8 3 * dec *"
# 20447: "F x x x dec x < / 0 T + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -3 4 / 3 < ungreedy inc ∧ inc copy x T x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "copy x T x x T F 4 be 5 x 4 T F x T -5 x be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-9 x -3 T -3 2 inc 1 * x x copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T x -3 2 x 1 * x x copy x - x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x F F -2 x x x eql 4 T x x inc x swap x 1 -2 x -10 7 -6 * dec T -8 3 * dec *"
# 20447: "¬ x -1 4 x x 7 ≥ 4 T F 8 x -1 x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-2 dec 7 x 7 T -6 4 F F x x x 1 copy ≥ greedy? greedy F x 7 -6 * dec T -8 3 * dec *"
# 20447: "x F 8 x -9 x x 7 T -8 x T inc x swap x 6 -7 x 8 7 -6 * dec T -8 3 * dec *"
# 20447: "inc 3 8 1 -9 dec -7 F T -8 x 8 inc x x T 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T x -3 2 x 1 * ≤ x copy x - x x 5 ¬ x x 7 -6 * dec T -8 3 * dec *"
# 20447: "4 x T ∨ x ≤ x copy x x x copy x - x ≤ 5 greedy 1 x 7 -6 * dec T -8 3 * dec *"
# 20447: "T x ungreedy T -3 2 inc 1 * x ∨ copy x inc x x 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "-3 x < x 7 + greedy? x 9 -4 * + dec x inc x / * -1 x 7 -6 * dec T -8 3 * dec *"
# 20447: "x ≥ -1 4 x x 0 ≥ 7 dec ungreedy x x inc x x 5 greedy be x 7 4 * dec - -8 T * dec *"
# 20447: "x 1 -8 dec -9 -1 -7 F T be x 8 inc x x T 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -3 4 / dec eql depth * copy x x 5 + ¬ x + greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "8 T -3 -7 2 x -9 8 depth ¬ + 5 x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x F dec dec dec eql be * 8 x x 5 + ¬ x x greedy ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "- x x -9 -5 x x x x 5 T x be T copy ≥ x greedy F x 7 -6 * dec T -8 3 * dec *"
# 20972: "0 x -1 4 x x 9 x F F x 9 be T 0 ≥ greedy? greedy F x 7 -6 * F ¬ -8 3 * dec *"
# 20972: "0 x -3 T -3 x x ≥ T 7 inc -2 x eql x < 5 greedy x + 7 -6 * ∧ T -8 3 * dec *"
# 20972: "-2 x -7 x x pop x / F x T > x eql x < 5 greedy T x 7 -6 * ∧ T -8 3 * dec *"
# 20972: "-2 greedy? T x / ∨ < copy x -6 + copy x 1 x x 5 greedy be x 7 -6 * greedy? T -8 3 * dec *"
# 20972: "F 2 0 greedy? swap T ≥ 6 be pop dec x T F x inc 8 1 T x 7 -6 * ∧ T -8 3 * dec *"
# 21350: "< F 7 3 -8 x 4 -5 T 7 x copy x eql x < 5 2 9 x 7 -6 * dec T -8 3 * F *"
# 21350: "T inc 7 x x ¬ -3 0 / ¬ x x inc x swap x 1 -2 if -10 7 -6 * dec T -8 3 * ¬ *"
# 21350: "x x F x x x greedy? ≥ 4 T ungreedy 5 -3 ≥ depth ≥ greedy? greedy F x 7 -6 * dec T -8 3 * ∧ *"
# 26558: "-2 x -7 x x x F / x F inc F 8 x 9 F 6 x 3 depth F 4 1 F x x * depth F *"
# 26558: "x greedy? T x x depth x copy x x x 9 ungreedy x -2 5 1 x x depth inc 4 ungreedy F x x * depth greedy? *"
# 26558: "0 x F 4 x x 6 ≥ 4 T ungreedy 5 -3 x x x x x T 9 x 4 T greedy? x x * depth F *"
# 26558: "-2 x -6 x x x F / x F -1 x 8 x x F 6 x x depth ¬ 4 1 F x x * depth F *"
# 27128: "neg x 7 x -9 ¬ -3 x x 1 T T 8 depth x x F x x depth inc 4 ungreedy F x x * depth greedy? *"
# 27128: "x greedy? T x x depth x copy x x x 9 ungreedy x -2 5 ∧ x x depth ¬ 4 1 F x x * depth F *"
# 27128: "0 x F 4 x x 6 ≥ + T -10 5 -3 x x x x x T -6 x 4 T greedy? x x * depth F *"
# 27128: "4 x T x x ∨ x copy x x x 9 ungreedy x -2 depth 1 -9 x x x 4 / greedy? x x * depth F *"
# 27128: "x F 8 x F x x 7 T -8 x 9 eql x -2 5 -4 x x depth inc 4 ungreedy F x x * depth greedy? *"
# 27128: "4 greedy? T x x ∨ x x x x x 9 ungreedy x -2 6 1 x T -6 x neg T greedy? x x * depth F *"
# 27128: "-2 x -7 x x x F / x F inc F 8 x x F 6 x x depth ¬ 4 1 F x x * depth F *"
# 27698: "2 x 0 x 3 eql x x x x x x 8 + x 0 6 x -9 -5 inc 4 F 9 x x * depth F *"
# 27698: "x -5 7 4 / x x x neg x x -1 F greedy? swap -6 1 -2 x -10 x 4 ungreedy 9 x x * depth T *"
# 27698: "2 x 0 x 3 eql x x x x x x 8 x -2 x x 2 F x inc 7 > 9 x x * depth F *"
# 27698: "-2 x -7 x x x F / x F inc F 8 x x x 6 x < 9 x 0 x 9 x x * depth F *"
# 27698: "-2 1 -7 x x x F / x x inc 6 x x x x 6 ∨ -9 9 x F F 9 x x * depth F *"
# 27698: "x 0 T 5 depth 7 -3 x neg x x -1 F greedy? F x 1 -2 + -10 inc 4 ungreedy 9 x x * depth F *"
# 27698: "-2 x -7 x x x F / x F inc F 8 x x x 6 x < 9 x F F 9 x x * depth F *"
# 27874: "be + - x + eql x x / + - copy -8 3 swap x 1 -2 * x inc 4 + 9 x x * inc 8 *"
# 28392: "∨ dec T x greedy? depth x F T x x 9 ungreedy x -2 5 F x x depth inc 4 ungreedy F x x * depth greedy? *"
# 28392: "4 inc F dec x dec x -8 T x x 9 -10 ≥ -2 x 1 x x depth inc 4 x 9 x x * depth F *"
# 28392: "x -5 7 4 / x x x neg x x -1 F greedy? swap x 1 -2 x -10 inc 4 ungreedy 9 x x * depth F *"
# 28392: "x x depth x x x greedy? ≥ 4 T ungreedy 5 -3 ≥ depth T greedy? 1 x depth x T ungreedy -1 x x * depth F *"
# 28392: "x F x -1 x x < T x -5 F -6 inc / -6 x -8 -2 x -10 greedy 9 T x x x * depth F *"
# 28392: "depth x F 4 x x greedy? F 4 T ungreedy inc -3 x x x 6 x < greedy? x T + 9 x x * depth F *"
# 29162: "T inc - x -5 x x F T -8 x -9 swap < -6 x 1 x x -10 inc 4 x 9 x x * depth T *"
# 29162: "inc x 8 x -9 x x F T -8 x 8 inc x -6 x 1 -2 ∨ -10 inc 4 + 9 x x * depth F *"
# 29162: "T inc 7 3 -5 x x F T -8 x -9 swap x -6 x 1 x ∨ -10 inc F if 9 x x * depth F *"
# 29162: "0 x F 4 T -8 0 x x greedy? inc x 8 x x x ∨ x copy 9 x F * T x < * depth F *"
# 29162: "T inc 7 x -5 x x F T -8 x -9 swap x -6 x 1 -2 ∨ -10 inc F if 9 x x * depth F *"
# 29162: "x x -1 F x / 6 ≥ 4 T ungreedy 5 -3 x 0 x x 4 T 9 x 4 + -2 x x * depth F *"
# 29162: "x x F 4 x x greedy? ≥ 4 T ungreedy 5 -3 x x x 6 x < greedy? x T + 9 x x * depth F *"
# 29372: "9 x x 4 x x F 6 be T ungreedy F -3 x -4 -5 5 greedy be F 7 pop * dec T -8 3 * dec *"
# 29932: "x -5 7 x x ¬ -3 x x x inc x 8 depth x x 6 x < 9 eql 4 + x x x * depth F *"
# 29932: "F - -5 be x x depth ≥ T -8 x x -10 ≥ -2 x 1 x x depth inc 4 + ungreedy x F * ∧ F *"
# 29932: "0 x 5 -2 ≥ F 9 x x F x ∧ 8 x F x -3 x < 9 x F - 9 x x * depth F *"
# 29932: "0 x 7 x T x x ≥ x T x x -8 3 * inc + 9 x -9 inc T x -4 x x * depth F *"
# 30702: "-2 dec 7 x 7 6 x x 5 -10 greedy? - inc F x 4 ∧ 9 x F inc T ∧ -2 x x * depth greedy? *"
# 30702: "x greedy? T -3 -3 2 x 1 * x x copy x - x inc 3 -3 x copy x -3 + pop x x * depth T *"
# 30702: "pop 3 x 3 ∧ x T x x x / x / 5 -2 9 x x -8 -10 inc 4 + 9 x x * depth F *"
# 30702: "5 - 2 dec x x -1 -8 inc -1 x 5 x x 8 x 1 -2 T ≥ inc T + -2 x x * depth F *"
# 30702: "0 x 5 -2 T F 9 x x -4 inc x 8 + > inc + 9 x x inc T 1 -2 x x * depth F *"
# 31472: "F - -5 be x x depth ≥ 3 -8 x - -10 x -6 x 1 -2 -8 -10 inc 4 + 9 x x * depth F *"
# 31472: "x -5 7 x x ¬ -3 ≤ x x inc x 8 + x x 6 x < 9 x F + 9 x x * depth F *"
# 31472: "x F + -2 4 pop x F -7 x T x 8 x x x < x < 9 x F + 9 x x * depth F *"
# 35322: "∨ dec T dec x copy 5 * inc ¬ T copy F 3 / x x depth T x inc 4 + ≥ x x * depth F *"
# 35322: "+ - greedy? -6 -9 T / x / ¬ x copy / F -2 x x x if + -5 -10 T x * 8 x T - *"
# 35903: "-9 -3 5 / F -9 0 -2 / ≤ -8 copy -3 x swap ungreedy 1 -2 + -10 inc 4 + 9 x x * inc F *"
2531,42833,72
2532,43022,75
2533,43127,72
2534,43022,66
2535,43022,68
2536,28392,82
2537,36092,71
2538,28392,77
2539,27128,78
2540,29932,72
2541,42252,70
2542,46172,79
2543,27698,68
2544,43022,83
2545,43022,84
2546,26558,103
2547,25694,71
2548,43022,84
2549,38927,85
2550,50882,81
2551,29932,78
2552,41372,79
2553,43442,81
2554,17626,80
2555,42644,69
2556,41552,76
2557,43022,88
2558,17626,77
2559,43547,78
2560,43211,74
2561,43022,82
2562,43022,82
2563,27128,83
2564,43085,77
2565,31472,77
2566,46974,71
2567,42140,72
2568,43022,75
2569,17626,71
2570,20447,82
2571,64694,81
2572,45038,76
2573,43064,71
2574,29932,87
2575,27128,87
2576,27698,82
2577,32242,72
2578,20447,92
2579,28392,93
2580,112700,83
2581,43022,81
2582,50162,76
2583,42854,86
2584,21350,70
2585,28392,68
2586,43022,80
2587,46046,75
2588,39347,68
2589,20972,75
2590,34895,85
2591,17626,76
2592,60599,76
2593,239386,77
2594,286246,80
2595,43022,75
2596,27128,68
2597,36694,73
2598,31472,73
2599,43022,69
2600,39872,74
2601,43400,80
2602,36092,77
2603,39494,82
2604,76132,78
2605,39872,79
2606,43190,91
2607,42833,66
2608,43022,77
2609,36092,69
2610,43456,93
2611,26558,98
2612,42518,72
2613,39809,87
2614,62818,93
2615,40712,74
2616,43022,78
2617,32242,74
2618,51025,81
2619,17626,77
2620,43022,74
2621,43022,72
2622,69034,82
2623,15974,75
2624,42833,81
2625,43022,66
2626,444794,68
2627,28392,85
2628,22253,84
2629,15974,88
2630,43022,66
2631,30702,82
2632,30702,85
2633,42497,84
2634,42644,79
2635,20447,77
2636,43022,75
2637,21350,77
2638,43022,80
2639,42896,77
2640,42938,82
2641,20972,74
2642,20972,82
2643,43022,81
2644,27698,95
2645,27698,70
2646,43022,77
2647,42854,74
2648,20447,68
2649,43022,70
2650,71638,83
2651,43022,79
2652,97846,75
2653,20447,76
2654,25207,91
2655,42833,83
2656,42210,80
2657,43022,84
2658,42749,79
2659,20447,86
2660,20447,81
2661,42518,79
2662,295974,83
2663,42497,77
2664,17626,87
2665,43064,70
2666,76153,74
2667,43022,93
2668,43022,73
2669,42602,83
2670,26558,98
2671,27698,95
2672,37247,77
2673,43022,80
2674,42854,81
2675,34552,75
2676,43022,82
2677,42252,76
2678,29932,93
2679,42497,73
2680,27698,78
2681,43022,78
2682,21350,84
2683,32242,70
2684,28392,89
2685,40397,76
2686,29162,73
2687,42980,89
2688,17626,79
2689,21350,76
2690,29162,95
2691,43022,66
2692,20972,74
2693,17626,81
2694,43274,71
2695,43022,77
2696,31472,79
2697,46172,76
2698,20447,86
2699,43232,78
2700,17297,78
2701,28392,82
2702,43022,104
2703,43064,90
2704,13475,77
2705,43043,80
2706,27698,74
2707,20447,73
2708,43022,69
2709,67522,73
2710,22694,84
2711,17626,82
2712,21350,76
2713,33782,85
2714,31472,73
2715,39347,78
2716,43022,76
2717,29932,72
2718,13223,86
2719,43022,74
2720,35441,82
2721,51610,67
2722,43001,93
2723,45101,94
2724,41510,77
2725,52154,77
2726,21350,92
2727,42518,82
2728,15974,77
2729,35840,74
2730,43022,100
2731,27698,82
2732,31472,79
2733,42497,80
2734,42917,82
2735,41867,78
2736,27128,77
2737,17626,76
2738,44198,73
2739,43526,74
2740,17626,73
2741,43022,78
2742,42497,81
2743,56882,73
2744,27128,88
2745,43031,87
2746,20972,73
2747,33012,93
2748,45862,82
2749,43022,83
2750,29162,78
2751,50890,85
2752,20447,71
2753,42497,75
2754,20447,85
2755,43022,92
2756,43022,83
2757,27924,81
2758,42497,69
2759,43022,71
2760,17626,77
2761,43022,79
2762,42497,77
2763,43127,87
2764,42497,71
2765,17626,78
2766,42497,87
2767,43547,93
2768,51610,80
2769,42497,81
2770,65492,79
2771,20447,89
2772,43694,85
2773,21854,82
2774,43022,72
2775,43022,74
2776,43022,91
2777,20447,84
2778,35903,93
2779,43022,81
2780,32242,75
2781,43148,72
2782,45647,74
2783,43085,75
2784,43022,75
2785,80927,77
2786,52322,78
2787,22253,76
2788,20447,83
2789,58373,76
2790,43792,69
2791,58247,79
2792,43022,80
2793,47747,85
2794,17297,75
2795,43022,76
2796,20447,85
2797,43400,85
2798,46172,83
2799,61397,70
2800,35273,84
2801,13223,78
2802,15974,81
2803,27128,82
2804,43022,79
2805,50882,80
2806,20447,79
2807,39809,85
2808,28392,97
2809,43022,82
2810,43169,74
2811,27698,85
2812,13475,79
2813,20972,75
2814,17626,84
2815,94626,82
2816,46256,74
2817,43022,94
2818,17626,74
2819,17626,80
2820,46974,82
2821,43022,80
2822,20972,87
2823,35903,75
2824,42497,85
2825,43022,87
2826,43022,74
2827,41426,94
2828,26558,74
2829,44912,69
2830,17626,71
2831,43022,81
2832,45608,88
2833,5033,73
2834,39998,74
2835,20447,75
2836,20447,80
2837,67697,84
2838,20447,83
2839,28392,89
2840,33446,97
2841,33782,83
2842,42350,76
2843,148498,77
2844,20447,89
2845,61082,72
2846,43022,94
2847,47054,81
2848,43694,76
2849,240602,80
2850,43022,78
2851,13475,75
2852,39641,73
2853,20447,79
2854,43022,82
2855,43022,78
2856,17626,73
2857,32186,77
2858,29162,74
2859,27128,86
2860,43022,84
2861,32198,76
2862,29932,83
2863,42497,77
2864,27698,90
2865,45542,93
2866,115430,81
2867,78106,91
2868,20447,81
2869,43547,83
2870,43022,85
2871,20447,83
2872,47054,69
2873,30702,79
2874,42098,76
2875,35503,85
2876,47912,68
2877,43022,80
2878,29897,84
2879,43022,82
2880,43022,88
2881,42854,78
2882,43358,77
2883,43022,88
2884,5033,73
2885,21350,74
2886,40922,94
2887,43547,85
2888,45542,77
2889,15974,71
2890,21350,68
2891,29162,78
2892,28392,82
2893,295974,84
2894,73997,77
2895,13475,89
2896,83174,70
2897,17275,77
2898,43085,81
2899,29343,69
2900,38837,82
2901,42497,74
2902,33012,77
2903,13426,73
2904,26773,73
2905,21350,80
2906,63791,82
2907,42497,81
2908,43547,71
2909,42518,72
2910,20447,80
2911,43337,86
2912,15974,80
2913,46802,79
2914,98462,92
2915,43022,86
2916,17626,81
2917,25207,83
2918,33418,84
2919,43085,74
2920,21350,69
2921,30702,82
2922,20447,87
2923,29932,88
2924,96922,80
2925,42854,70
2926,20972,81
2927,20447,79
2928,43022,87
2929,45647,87
2930,42497,72
2931,45752,74
2932,44828,81
2933,43022,73
2934,27698,82
2935,28392,87
# After 1400 updates
# 5033: "∧ x 5 x + x < / x x x < x T x / 5 greedy be dec 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x x x x < dec eql be * copy x x x + ¬ x x x ∧ x 7 -6 inc -5 * 8 * inc 9 *"
# 13223: "x x * 9 x -7 copy -1 + x -10 x T 4 T T T greedy be x 7 -6 * dec T -8 4 * dec *"
# 13223: "T x ungreedy T -3 2 inc 1 * x ∨ copy x inc x T T greedy be x 7 -6 * dec T -8 4 * dec *"
# 13426: "-2 x -7 x x pop x / F x T > copy eql x < 5 greedy 9 x 7 -6 * ∧ T -8 * ∧ 8 *"
# 13426: "T inc 7 3 -5 x x F T -8 x -9 -10 x x < 5 greedy 9 x 7 -6 * ∧ T -8 * ∧ 8 *"
# 13475: "x x * -2 x x x eql -8 T / x inc x swap x 1 -2 x + 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "x greedy? T -3 -3 ∧ x 1 * x x x x - x x 5 greedy greedy x 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "x F F -2 copy ¬ x eql -8 T x x inc x swap x 1 F x -10 7 -6 inc -5 * 8 * inc ∨ *"
# 15974: "be 5 x x F x x -2 ∨ -8 x 9 x x -2 5 -4 x T + -3 -5 inc -5 * 8 * inc 8 *"
# 15974: "x -7 -3 x / 3 x ungreedy 4 T ungreedy F x x -4 -5 5 greedy x + + -5 inc -5 * 8 * inc 8 *"
# 15974: "/ -7 -3 x / 3 x ungreedy 4 T F F x x -4 -5 5 greedy + + + -5 inc -5 * 8 * inc 8 *"
# 15974: "x ≥ -1 4 x x 0 ≥ 7 be ungreedy 5 -3 8 x x T x * + + -5 inc -5 * 8 * inc 8 *"
# 15974: "-2 x -7 x x x 0 ≥ 7 be ungreedy 5 -3 8 x x T ≥ * + -3 -5 inc -5 * 8 * inc 8 *"
# 15974: "/ -7 -3 x / 3 x ungreedy 4 T x F x x -4 F x greedy + + + -5 inc -5 * 8 * inc 8 *"
# 17275: "+ - * 8 x F copy eql 4 T x T inc x swap + 1 -2 x -10 + 5 * dec T -8 3 * dec *"
# 17297: "x F x -2 x x x eql 4 T x -10 inc x swap x 1 -2 x -10 8 -6 * dec T -8 3 * dec *"
# 17297: "neg x 7 x x ¬ -3 x < swap T T 8 depth x ≤ F x x + 8 -6 * dec T -8 3 * dec *"
# 17626: "0 T -6 dec greedy? x 6 6 be pop dec x T eql x inc 8 1 T x 7 -10 inc -5 * 8 * inc 8 *"
# 17626: "+ - * 8 x F copy -1 + x -10 9 x 4 1 + 3 > - + dec -10 inc -5 * 8 * inc 8 *"
# 17626: "0 x < eql x 7 copy -1 + x -10 9 x x 1 + -1 > - x dec -10 inc -5 * 8 * inc 8 *"
# 17626: "copy x -1 4 x x 7 ≥ 4 dec ungreedy 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "-2 x -7 x x x F / 7 copy ungreedy 5 -3 x x x T x * + T -10 inc -5 * 8 * inc 8 *"
# 17626: "-4 -10 / -5 < x x x T dec 4 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "F x 5 x + > copy x + x -10 9 x 4 1 + 3 > F + dec -10 inc -5 * 8 * inc 8 *"
# 17626: "x > x -2 ∧ x x eql 4 T x -10 8 x swap x 1 -2 eql + -3 -10 inc -5 * 8 * inc 8 *"
# 17626: "4 greedy? T x x ∨ x 3 neg F inc x / eql / x ungreedy x pop x x -10 inc -5 * 8 * inc 8 *"
# 17626: "F 2 0 greedy? x x 0 ≥ 7 dec ungreedy 5 1 x x x T 7 5 + + -10 inc -5 * 8 * inc 8 *"
# 17626: "2 x 0 x 3 eql x x x x x F F + greedy? x - greedy * x T -10 inc -5 * 8 * inc 8 *"
# 17626: "-2 x -7 x x x F / 7 copy -5 5 * x x x T x * + T -10 inc -5 * 8 * inc 8 *"
# 17626: "x ≥ -1 4 x x 0 ≥ 7 dec ungreedy 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "0 dec -1 greedy? x x x 3 -8 - T x 2 1 2 inc + 9 eql + dec -10 inc -5 * 8 * inc 8 *"
# 17626: "≥ ≥ inc 4 x / 7 x 4 dec ungreedy x T eql x inc 8 1 T x 7 -10 inc -5 * 8 * inc 8 *"
# 17626: "9 x x 4 swap T copy -1 + x -10 x x 4 1 + -1 T - + -6 -10 inc -5 * 8 * inc 8 *"
# 17626: "≤ greedy? T x inc ∨ x x / ¬ 0 copy x inc / x 5 x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "< x ≥ 3 -8 x 4 3 neg greedy x x / eql / x ungreedy 8 pop x x -10 inc -5 * 8 * inc 8 *"
# 17626: "0 x F 4 T x x ≥ 4 T ungreedy x x 4 1 x -1 - - + dec -10 inc -5 * 8 * inc 8 *"
# 20447: "∧ greedy? T inc x depth x copy x x x x ungreedy - x + 5 ¬ x x 7 -6 * dec T -8 3 * dec *"
# 20447: "inc 3 8 1 -9 dec -7 F T neg x copy x - x x 5 0 depth ∨ 7 -6 * dec T -8 3 * dec *"
# 20447: "x 1 -8 dec -9 -1 -7 F T be x 8 inc x x T 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -3 4 / dec eql depth * copy x x 5 + ¬ x + greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "9 < T x greedy? x F x x F inc F 8 x x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "∧ x 5 x + x < / x x x < x 1 copy / 5 greedy be dec 7 -6 * dec T -8 3 * dec *"
# 20447: "x F F -2 x ¬ x eql -8 dec x eql 5 + ¬ x x greedy -5 x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x F dec dec dec eql be * 8 x x 5 + ¬ x x greedy ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "+ F greedy? 4 -9 T / greedy copy F + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "T greedy? neg x -3 x x 1 * x x copy x T x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x ≥ 8 x if x x 7 T -8 x T inc x swap -1 6 -7 x dec 7 -6 * dec T -8 3 * dec *"
# 20447: "x x 8 x F -7 -1 7 T -8 x 9 x inc inc x 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "¬ x -1 4 x x 7 ≥ 4 T F 8 x -1 x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x x T x x x F / x F inc F 8 x x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T x -3 2 x 1 * ≤ x copy x - x x 5 ¬ x x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? neg ≥ -9 -1 -7 F T be x 8 inc T x T greedy greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -1 4 x F 9 x F F x x 5 + ¬ 4 x T ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T x -3 neg x if * x x copy x -8 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x -7 -3 ¬ / 3 x ungreedy 4 T x T x x ¬ x 9 greedy ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "5 x 7 3 x -7 if inc T 7 inc copy T 1 x x 5 7 be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-9 x x T -3 copy inc x / ¬ + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "copy x T x x T F 4 be 5 x 4 T F x T -5 x be x 7 -6 * dec T -8 3 * dec *"
# 20447: "∨ dec T x greedy? depth x > T x x -7 ungreedy T -2 x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "4 x T ∨ x ≤ x copy x x x copy x - x ≤ 5 greedy 1 x 7 -6 * dec T -8 3 * dec *"
# 20447: "F x x x dec x < / 0 T + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-9 x -3 - -3 T inc 1 * x x copy x inc * x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "T x ungreedy T -3 2 inc 1 * x ∨ copy x inc x x 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "< x 7 3 -8 x 4 -5 T 7 x copy x eql x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-2 dec 7 x 7 T -6 4 F F x x x 1 copy ≥ greedy? greedy F x 7 -6 * dec T -8 3 * dec *"
# 20447: "-1 x < T 8 dec eql be be copy F 0 5 + swap ∧ 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "inc x swap x + x < / x x + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x x -1 T dec F 9 - T 7 inc x x 1 x x 5 7 be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -3 4 / 3 < ungreedy inc ∧ inc copy x T x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "F greedy? T -3 -3 dec eql be T copy x 0 5 + ¬ x 5 greedy ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "-1 x < x 7 + greedy? x 9 -4 * + dec x inc x ungreedy * -1 x 7 -6 * dec if -8 3 * dec *"
# 20972: "0 x -3 T -3 x x ≥ T 7 inc -2 x eql x < 5 greedy x + 7 -6 * ∧ T -8 3 * dec *"
# 20972: "F * -5 be x x depth ≥ T greedy? x x -10 ≥ > x 1 greedy T F 7 -6 * ∧ T -8 3 * dec *"
# 20972: "-2 greedy? T x / ∨ < copy x -6 + copy x 1 x x 5 greedy be x 7 -6 * greedy? T -8 3 * dec *"
# 20972: "0 x -1 4 x x 9 x F F x 9 be T 0 ≥ greedy? greedy F x 7 -6 * F ¬ -8 3 * dec *"
# 20972: "0 x copy x x pop x / F x T > x eql x < 5 greedy T F 7 -6 * ∧ T -8 3 * dec *"
# 21350: "< F 7 3 -8 x 4 -5 T 7 x copy x eql x < 5 2 9 x 7 -6 * dec T -8 3 * F *"
# 21350: "0 x 6 x T x x ≥ x F x copy ≤ eql x < F 2 9 x 7 -6 * dec be -8 3 * F *"
# 21350: "0 x 6 x T x x ≥ x T x copy x eql x < F 2 9 x 7 -6 * dec T -8 3 * F *"
# 26558: "x depth copy x x x greedy? x x greedy x 9 ungreedy 5 F x -4 x T -6 x neg T F x x * depth greedy? *"
# 26558: "x greedy? T x x depth x copy x x x 9 ungreedy x -2 5 1 x x depth inc 4 ungreedy F x x * depth greedy? *"
# 26558: "-2 x -6 x x x F / x F -1 x 8 x x F 6 x x depth ¬ 4 1 F x x * depth F *"
# 26558: "-2 x -6 x 4 x x F -7 x ungreedy 5 x x 0 x x 4 T x x 4 + -2 x x * depth F *"
# 27128: "-2 x -7 x x x F / x F inc F 8 x x F 6 x x depth ¬ 4 1 F x x * depth F *"
# 27128: "4 x T x x ∨ x copy x x x 9 ungreedy x -2 depth 1 -9 x x x 4 / greedy? x x * depth F *"
# 27128: "x x x 4 -9 x x x neg x x 5 F greedy? swap x 1 -2 x -10 inc 4 ungreedy 9 x x * depth F *"
# 27128: "x greedy? x x x ∨ x x F x x 9 ungreedy x -2 6 1 x T -6 x neg T greedy? x x * depth F *"
# 27128: "4 greedy? T x x ∨ x x x x x 9 ungreedy x -2 6 1 x T -6 x neg T greedy? x x * depth F *"
# 27698: "x -5 7 x x x x x neg x x 5 F greedy? swap x 1 -2 x -10 inc 4 eql 9 x x * depth F *"
# 27698: "0 x F 4 T copy 0 + x greedy? inc 9 -10 neg -2 x 1 x x depth inc 4 x 9 x x * depth F *"
# 27698: "x greedy? x x x ∨ x -8 T x x 9 -10 ≥ -2 x 1 x 3 depth inc 4 copy x x x * depth F *"
# 28392: "x -5 7 4 / x x x neg x x -1 F greedy? swap x 1 -2 x -10 inc 4 ungreedy 9 x x * depth F *"
# 28392: "depth x F 4 x x greedy? F 4 T ungreedy inc -3 x x x 6 x < greedy? x T + 9 x x * depth F *"
# 29162: "inc x 8 x -9 x x F T -8 x 8 inc x -6 x 1 -2 ∨ -10 inc 4 + 9 x x * depth F *"
# 29372: "9 x x 4 x x F 6 be T ungreedy F -3 x -4 -5 5 greedy be F 7 pop * dec T -8 3 * dec *"
# 30702: "-2 dec 7 x 7 6 x x 5 -10 greedy? - inc F x 4 ∧ 9 x F inc T ∧ -2 x x * depth greedy? *"
# 31472: "* -7 9 x / dec x x -9 + x x greedy? x x F / x x x ¬ 4 1 F x x * depth F *"
# 35322: "+ - greedy? -6 -9 T / x / ¬ x copy / F -2 x x x if + -5 -10 T x * 8 x T - *"
# 42497: "x > -3 x / 3 x ungreedy 4 x eql F x x -4 -5 5 greedy x + + -5 x x -1 -8 3 * dec *"
2936,43022,76
2937,43148,69
2938,43022,72
2939,43022,69
2940,43022,71
2941,43358,81
2942,51610,80
2943,28392,82
2944,26558,84
2945,20972,87
2946,20447,78
2947,27128,82
2948,42497,76
2949,43148,81
2950,41447,73
2951,47054,76
2952,43022,80
2953,42497,76
2954,69034,81
2955,26558,75
2956,17458,89
2957,5033,75
2958,17626,89
2959,33012,84
2960,42497,87
2961,20447,85
2962,55141,83
2963,33012,80
2964,32732,77
2965,43001,82
2966,20447,76
2967,20447,81
2968,51610,77
2969,20447,74
2970,43022,81
2971,28392,75
2972,44366,84
2973,43022,80
2974,43022,80
2975,27698,86
2976,42497,75
2977,55342,66
2978,33782,79
2979,73997,78
2980,60872,78
2981,42854,71
2982,32242,90
2983,41510,79
2984,43127,75
2985,27128,78
2986,44408,81
2987,17626,74
2988,17626,75
2989,43022,88
2990,43022,78
2991,41993,84
2992,35322,70
2993,42854,74
2994,44072,76
2995,20447,80
2996,43904,78
2997,43106,67
2998,42518,73
2999,42497,88
3000,20447,70
3001,43547,82
3002,49574,78
3003,13475,72
3004,43022,80
3005,42896,73
3006,88382,78
3007,48759,80
3008,20447,82
3009,72394,74
3010,40712,76
3011,13475,90
3012,52322,83
3013,51058,82
3014,20972,76
3015,43022,75
3016,20447,91
3017,20447,81
3018,43022,84
3019,45647,75
3020,43022,90
3021,43022,80
3022,52322,75
3023,43022,72
3024,42497,93
3025,22694,78
3026,17297,76
3027,43337,73
3028,48642,91
3029,54950,79
3030,44702,83
3031,43085,76
3032,43022,91
3033,28392,85
3034,43022,75
3035,35322,70
3036,48146,69
3037,41447,73
3038,43211,80
3039,39662,86
3040,33446,75
3041,17458,89
3042,20447,77
3043,49574,90
3044,45142,90
3045,21287,79
3046,43022,75
3047,27698,96
3048,56882,80
3049,20972,81
3050,21287,83
3051,42497,91
3052,21000000,86
3053,782054,75
3054,73430,71
3055,55230,81
3056,47054,66
3057,46697,75
3058,43022,92
3059,13223,76
3060,32242,82
3061,43358,81
3062,55412,77
3063,36662,69
3064,17297,82
3065,29372,76
3066,2702,73
3067,2184194,76
3068,39998,80
3069,20447,86
3070,20447,75
3071,58114,84
3072,39942,82
3073,43022,73
3074,17297,81
3075,49574,91
3076,44828,87
3077,42497,84
3078,9898,89
3079,43022,82
3080,21000000,77
3081,38822,82
3082,14147,68
3083,54162,74
3084,14147,73
3085,43022,74
3086,37247,79
3087,43187,67
3088,21000000,78
3089,43127,91
3090,42959,81
3091,43022,76
3092,20447,73
3093,41846,67
3094,20447,82
3095,43022,73
3096,20447,78
3097,44562,90
3098,39200,77
3099,47642,85
3100,30702,84
3101,17297,75
3102,28392,84
3103,42308,74
3104,20447,79
3105,43526,83
3106,43190,89
3107,2885,74
3108,42854,75
3109,44395,87
3110,9422,85
3111,42854,76
3112,43327,76
3113,41510,74
3114,71897,73
3115,43547,76
3116,43652,88
3117,52242,83
3118,43022,87
3119,42497,74
3120,42518,70
3121,43022,79
3122,42833,83
3123,43022,77
3124,39998,89
3125,42497,81
3126,43697,82
3127,42833,84
3128,43573,73
3129,40397,73
3130,42896,79
3131,29162,84
3132,43547,76
3133,43022,73
3134,43022,69
3135,20447,78
3136,39347,85
3137,63098,87
3138,17626,88
3139,69034,83
3140,43022,80
3141,43526,74
3142,40397,76
3143,28392,81
3144,26558,92
3145,43022,74
3146,28392,95
3147,13475,96
3148,33782,104
3149,17626,87
3150,30926,67
3151,43022,98
3152,28392,98
3153,39830,84
3154,20447,82
3155,13475,91
3156,51730,91
3157,42518,73
3158,63182,82
3159,20447,80
3160,43022,75
3161,42497,75
3162,43022,87
3163,247118,81
3164,42350,99
3165,42875,87
3166,27698,91
3167,42497,79
3168,24178,90
3169,43022,81
3170,43022,86
3171,5033,84
3172,17458,82
3173,41699,71
3174,43022,71
3175,20447,85
3176,43077,68
3177,86142,90
3178,63791,81
3179,43022,88
3180,17626,80
3181,43022,92
3182,42497,80
3183,50962,72
3184,20447,71
3185,17297,83
3186,42854,71
3187,43022,83
3188,58288,85
3189,13475,78
3190,20447,78
3191,28098,91
3192,43118,74
3193,42161,76
3194,43211,88
3195,45634,74
3196,29932,84
3197,35609,88
3198,110894,75
3199,43547,88
3200,20447,85
3201,43547,75
3202,49860,79
3203,43022,79
3204,32186,85
3205,43022,75
3206,20447,72
3207,66114,79
3208,46974,81
3209,21000000,90
3210,38297,75
3211,20447,90
3212,21854,78
3213,49112,81
3214,15974,74
3215,35322,75
3216,13223,74
3217,17458,77
3218,43022,74
3219,38297,93
3220,17626,84
3221,33047,82
3222,42497,83
3223,43022,73
3224,43022,84
3225,53522,83
3226,100646,74
3227,42518,77
3228,42875,73
3229,21350,85
3230,42980,75
3231,13916,80
3232,43190,89
3233,43022,79
3234,109172,93
3235,21350,69
3236,13475,87
3237,42497,85
3238,42770,87
3239,43400,79
3240,43022,88
3241,42497,78
3242,42602,88
3243,36654,75
3244,41972,79
3245,43022,72
3246,20447,72
3247,20972,77
3248,46974,79
3249,20447,77
3250,17626,75
3251,5033,91
3252,30372,82
3253,43085,80
3254,43169,70
3255,20972,92
3256,53606,86
3257,45017,79
3258,20972,78
3259,27745,80
3260,43022,74
3261,17297,85
3262,44051,71
3263,43031,87
3264,79982,81
3265,50882,88
3266,35322,100
3267,27128,92
3268,43022,77
3269,43358,72
3270,5033,83
3271,49860,88
3272,42119,84
3273,43022,80
3274,20447,84
3275,42252,76
3276,13475,70
3277,47054,73
3278,42854,79
3279,42252,74
3280,42854,80
3281,27698,89
3282,51947,78
3283,52242,74
3284,33614,75
3285,36134,85
3286,46886,82
3287,13475,78
3288,13916,77
3289,42833,71
3290,38864,86
3291,303082,88
3292,40502,87
3293,275252,77
3294,42518,78
3295,403654,78
3296,66500,69
3297,43085,75
3298,20447,82
3299,27128,86
3300,33992,83
3301,17626,76
3302,43547,80
3303,39872,86
3304,274687,83
3305,10045,84
3306,9254,88
3307,42491,77
3308,9254,75
3309,39088,77
3310,43127,93
3311,17297,74
3312,31472,78
3313,42560,85
3314,43022,82
3315,247118,85
3316,43148,77
3317,35441,76
3318,13622,84
3319,13475,87
3320,40222,87
3321,43148,86
3322,42686,76
3323,43022,81
3324,10045,83
3325,37982,84
3326,42119,74
3327,42518,72
3328,42812,83
3329,121058,80
3330,42182,75
3331,29932,89
3332,21350,70
3333,52322,72
3334,20447,96
3335,20447,80
3336,43022,83
3337,42497,82
3338,49952,84
3339,42497,78
3340,43022,82
# After 1600 updates
# 2702: "be inc 7 3 -5 x x F T -8 x 8 -10 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2885: "/ -7 -3 x / 3 x F 4 T F F x x -4 -5 5 greedy + + + -5 dec -5 * 8 * inc 9 *"
# 5033: "∧ x 5 x + x < / x x x < x T x / 5 greedy be dec 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "T ≥ 7 x if if < 3 neg greedy x x x x - F ungreedy x pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x 5 x if x < 3 neg greedy x x x eql - F ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "4 greedy? T 4 x ∨ x 3 neg F inc x / x / x x x x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x x x x < dec eql be * copy x x x + ¬ x x x ∧ x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth copy x x x greedy? x x greedy x x x ¬ - F ungreedy 8 6 0 -9 -6 inc -5 * 8 * inc 9 *"
# 9254: "x x * 9 x -7 ≤ -1 T x T x swap eql -2 < F 2 > -10 x -6 inc -5 * 8 * inc 8 *"
# 9254: "x depth 7 ungreedy -5 x x F T x T copy swap eql -2 < F 2 9 -10 x -6 inc -5 * 8 * inc 8 *"
# 9422: "x T x ≥ -9 if -7 F T be x 8 inc T x T greedy greedy x x 7 -6 inc -5 * 8 * greedy? 8 *"
# 9898: "-9 x 4 T -3 copy inc x / ¬ + copy x inc x x 5 greedy be x 7 -10 inc -5 * 8 * greedy? be *"
# 10045: "/ -7 -3 x / 3 x ≤ eql copy ungreedy x T x x inc 8 ≤ -9 x 7 -10 inc -5 * 8 * inc T *"
# 13223: "x F x -10 ≤ x x F T + ungreedy 5 x x 0 x x > ∧ x 7 -6 * dec T -8 4 * dec *"
# 13223: "T x ungreedy T -3 2 inc 1 * x ∨ copy x inc x T T greedy be x 7 -6 * dec T -8 4 * dec *"
# 13223: "-2 x -6 x 4 x x F -7 + ungreedy 5 x x 0 x x > be x 7 -6 * dec T -8 4 * dec *"
# 13426: "T inc 7 3 -5 x x F T -8 x -9 -10 x x < 5 greedy 9 x 7 -6 * ∧ T -8 * ∧ 8 *"
# 13426: "-2 x -7 x x pop x / F x T > copy eql x < 5 greedy 9 x 7 -6 * ∧ T -8 * ∧ 8 *"
# 13475: "x x * -2 x x x eql -8 T / x inc x swap x 1 -2 x + 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "/ -7 -3 x / 3 x F ∧ T F F 1 x 2 x 1 -2 x -10 7 -6 inc -5 * 8 * inc T *"
# 13475: "x greedy? T -3 -3 ∧ x 1 * x x x x - x x 5 greedy greedy x 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "x F F -2 copy ¬ x eql -8 T x x inc x swap x 1 F x -10 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "-2 x eql x x pop x / F x x x x - x -2 5 greedy greedy x 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "9 < T x greedy? x x x x F inc F 8 x x < x greedy x x 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "9 2 T x greedy? x x x x F inc x 8 x x < x greedy x x 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "< -8 * 3 -8 x 4 3 neg greedy x x / eql / x ungreedy 8 pop * 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "x greedy? T x x depth x copy x x x F ungreedy x -2 5 1 x x depth 7 -6 inc -5 * 8 * inc greedy? *"
# 13622: "0 dec -1 greedy? x x x 3 -8 - F x 2 x swap x 1 -2 x be 7 -6 inc -5 * 8 * greedy? ∨ *"
# 14147: "-2 x -7 x x pop x / x F inc F x x x < 5 F be be 9 -6 * dec T -8 3 * dec *"
# 15974: "be / x x F pop x -2 ∨ -8 x 9 -9 x -2 5 -4 x T + -3 -5 inc -5 * 8 * inc 8 *"
# 15974: "be 5 x x F x x -2 ∨ -8 x 9 x x -2 5 -4 x T + -3 -5 inc -5 * 8 * inc 8 *"
# 15974: "x -7 -3 x / 3 x ungreedy 4 T ungreedy F x x -4 -5 5 greedy x + + -5 inc -5 * 8 * inc 8 *"
# 15974: "/ -7 -3 x / 3 x ungreedy 4 T x F x x -4 F x greedy + + + -5 inc -5 * 8 * inc 8 *"
# 15974: "-2 x -7 x x x 0 ≥ 7 be ungreedy 5 -3 8 x x T ≥ * + -3 -5 inc -5 * 8 * inc 8 *"
# 15974: "x ≥ -1 4 x x 0 ≥ 7 be ungreedy 5 -3 8 x x T x * + + -5 inc -5 * 8 * inc 8 *"
# 17275: "+ - * 8 x F copy eql 4 T x T inc x swap + 1 -2 x -10 + 5 * dec T -8 3 * dec *"
# 17297: "x ≥ -1 4 x ≤ 0 ≥ 7 dec ungreedy 7 -3 x x x T x * + 8 -6 * dec T -8 3 * dec *"
# 17297: "F 2 0 greedy? x x 0 ≥ 7 x ungreedy T x depth x ≤ F x x + 8 -6 * dec T -8 3 * dec *"
# 17297: "ungreedy x 7 x x ¬ -3 x < swap T T inc depth x ≤ F x x x 8 -6 * dec copy -8 3 * dec *"
# 17297: "3 F x -2 x x x eql 4 T x -10 inc -10 swap x 1 -2 x -10 8 -6 * dec if -8 3 * dec *"
# 17297: "x -5 7 x x x x x 7 dec copy 7 -3 dec x x T x * + 8 -6 * dec T -8 3 * dec *"
# 17297: "x F x -2 x x x eql 4 T x -10 inc x swap x 1 -2 x -10 8 -6 * dec T -8 3 * dec *"
# 17297: "9 x -8 4 x T copy -1 x T x -10 inc -10 swap x 1 -2 x -10 8 -6 * dec if -8 3 * dec *"
# 17297: "neg x 7 x x ¬ -3 x < swap T T 8 depth x ≤ F x x + 8 -6 * dec T -8 3 * dec *"
# 17297: "-2 dec 7 x x F / x < swap T T 8 depth x T F x x + 8 -6 * dec T -8 3 * dec *"
# 17458: "-2 x -7 x x x 0 ≥ 7 T ungreedy if F 4 1 x -1 - - + dec -10 inc -5 * 8 * F 8 *"
# 17626: "2 x 0 x 3 eql x x x x x F F + greedy? x - greedy * x T -10 inc -5 * 8 * inc 8 *"
# 17626: "copy x -1 4 x x 7 ≥ 4 dec ungreedy 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "F 2 0 greedy? x x 0 ≥ 7 x -10 9 x T 1 * 3 > F + dec -10 inc -5 * 8 * inc 8 *"
# 17626: "< x ≥ 3 -8 x 4 3 neg greedy x x / eql / x ungreedy 8 pop x x -10 inc -5 * 8 * inc 8 *"
# 17626: "-2 x -7 x x x F / 7 copy ungreedy 5 -3 x x x T x * + T -10 inc -5 * 8 * inc 8 *"
# 17626: "-2 x -7 x x x F / 7 copy -5 5 * x x x T x * + T -10 inc -5 * 8 * inc 8 *"
# 17626: "0 x < eql x 7 copy -1 + x -10 9 x x 1 + -1 > - x dec -10 inc -5 * 8 * inc 8 *"
# 17626: "+ - * 8 x F copy -1 + x -10 9 x 4 1 + 3 > - + dec -10 inc -5 * 8 * inc 8 *"
# 17626: "x 1 -3 - -3 T inc ≥ * x x copy x inc * x 4 1 F x T -10 inc -5 * 8 * inc 8 *"
# 17626: "-2 x -7 copy x x x x 4 T ungreedy x x 4 1 x x x - + dec -10 inc -5 * 8 * inc 8 *"
# 17626: "T depth 7 ungreedy -5 x x F T -8 x -9 F x x < 5 greedy neg + + -10 inc -5 * 8 * inc 8 *"
# 17626: "x -7 -3 swap / 3 x ungreedy 4 T ungreedy F x x x inc 8 1 T x -5 -10 inc -5 * 8 * inc 8 *"
# 17626: "-4 -10 / -5 < x x x T dec 4 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 20447: "T x ungreedy T -3 T x F T neg x copy x - - x 5 0 if ∨ 7 -6 * dec T -8 3 * dec *"
# 20447: "-9 x T dec -9 -1 -7 F x be x x inc x swap 5 x -7 ∧ pop 7 -6 * dec T -8 3 * dec *"
# 20447: "F x x x dec F 9 greedy F F x T 5 + ¬ 4 x T 7 x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 ∨ -3 4 / 3 eql be be copy F 7 5 + x ∧ -3 greedy copy x 7 -6 * dec T -8 3 * dec *"
# 20447: "T x ungreedy T -3 2 inc 1 * x ∨ copy x inc x x 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 2 -1 greedy? x x T 7 T -8 x T inc x swap -1 0 -7 ∧ dec 7 -6 * dec T -8 3 * dec *"
# 20447: "-2 dec ungreedy x 7 T -6 4 F F x x x 1 9 ≥ greedy? < F x 7 -6 * dec T -8 3 * dec *"
# 20447: "F x x x dec x < / 0 T + copy x 1 x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -3 4 / 3 < ungreedy inc ∧ inc copy x T x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "¬ x -1 4 x x 7 ≥ 4 T F 8 x -1 x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x -7 -3 ¬ / 3 x ungreedy 4 T x T x x ¬ x 9 greedy ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x -3 4 / dec eql depth * copy x x 5 + ¬ x + greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x F dec dec dec eql be * 8 x x 5 + ¬ x x greedy ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T x -3 2 x 1 * ≤ x copy x - x x 5 ¬ x x 7 -6 * dec T -8 3 * dec *"
# 20447: "2 x T 3 -8 x 4 -5 T 7 ∨ copy x eql neg < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-2 dec 7 x 7 T x 4 F F x x x 1 x ≥ greedy? greedy F greedy 7 -6 * dec T -8 3 * dec *"
# 20447: "5 x 7 3 x -7 if inc T 7 inc copy T 1 x x 5 7 be x 7 -6 * dec T -8 3 * dec *"
# 20447: "∧ x 5 x + x < / T copy x 0 5 -10 x x 5 x ∧ x 7 -6 * dec T -8 3 * dec *"
# 20447: "< x 7 3 x x 4 -5 T 7 x copy x eql x < 5 2 9 x 7 -6 * dec T -8 3 * dec *"
# 20447: "-1 x < x 7 + greedy? x 9 -4 * + dec x inc x ungreedy * -1 x 7 -6 * dec if -8 3 * dec *"
# 20447: "< x 7 3 -8 x 4 -5 T 7 x copy x eql x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "T x neg x -3 x T 7 T -8 x T inc x swap -1 x -7 ∧ pop 7 -6 * dec T -8 3 * dec *"
# 20447: "4 x T ∨ x ≤ x copy x x x copy x - x ≤ 5 greedy 1 x 7 -6 * dec T -8 3 * dec *"
# 20447: "x greedy? T x / ∨ < copy x -6 + copy T x x T ungreedy greedy x x 7 -6 * dec T -8 3 * dec *"
# 20447: "∧ greedy? T inc x depth x copy x x x x ungreedy - x + 5 ¬ x x 7 -6 * dec T -8 3 * dec *"
# 20447: "ungreedy x 7 x -2 x F / x F inc F 8 x x < -6 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "+ F greedy? 4 -9 T / greedy copy F + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "x F F -2 x ¬ x eql -8 dec x eql 5 + ¬ x x greedy -5 x 7 -6 * dec T -8 3 * dec *"
# 20447: "inc x ungreedy T dec T x F 6 neg x copy x - x x 5 0 depth ∨ 7 -6 * dec T -8 3 * dec *"
# 20447: "x depth T x greedy? depth x > dec x x -7 ungreedy T -2 x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "-2 dec 7 x 7 T -6 4 F F x x x 1 copy ≥ greedy? greedy F x 7 -6 * dec T -8 3 * dec *"
# 20447: "x x 8 x F -7 -1 7 T -8 x 9 x inc inc x 5 greedy x x 7 -6 * dec T -8 3 * dec *"
# 20972: "0 x < 1 / ∨ < copy x -6 + copy x 1 x / 5 greedy x x 7 -6 * greedy? T -8 3 * dec *"
# 20972: "+ greedy? T 4 x / 7 x greedy copy x x T x x - 8 1 T x 7 -6 * ∧ T -8 3 * dec *"
# 20972: "F * -5 be x x depth ≥ T greedy? x x -10 ≥ > x 1 greedy T F 7 -6 * ∧ T -8 3 * dec *"
# 21350: "0 x 6 x T x x ≥ x T x copy x eql x < F 2 9 x 7 -6 * dec T -8 3 * F *"
# 21350: "x dec 7 F T x x ≥ x T x copy x eql x < F 2 9 x 7 -6 * dec T -8 3 * F *"
# 26558: "4 x T x x ∨ x copy -1 x x 9 ungreedy x -2 6 1 x T -6 x neg x greedy? x x * depth F *"
# 26558: "4 x T x x ∨ x copy x depth x 9 ungreedy x -2 depth 1 -9 T -6 x neg x greedy? x x * depth F *"
# 27128: "4 greedy? T x x ∨ x x x x x 9 ungreedy x -2 6 1 x T -6 x neg T greedy? x x * depth F *"
# 32732: "x F x -2 x x x eql 4 T x -10 -8 x swap x x -2 x -10 8 -6 * dec T -3 3 * dec *"
3341,42854,71
3342,43022,71
3343,43022,67
3344,42833,66
3345,43022,72
3346,42854,92
3347,52322,86
3348,20447,84
3349,49322,95
3350,39494,79
3351,40397,83
3352,20447,70
3353,42497,102
3354,20447,92
3355,42518,71
3356,43022,81
3357,2885,73
3358,42518,70
3359,107366,82
3360,17626,79
3361,32732,80
3362,43547,83
3363,5033,78
3364,42119,68
3365,5033,78
3366,43022,83
3367,43022,81
3368,42497,75
3369,42497,80
3370,42644,73
3371,44597,86
3372,20447,85
3373,45647,74
3374,69776,83
3375,39172,85
3376,48797,84
3377,43862,88
3378,17297,91
3379,20447,82
3380,43148,91
3381,43022,84
3382,42854,87
3383,45647,80
3384,42833,78
3385,42875,84
3386,13475,93
3387,42476,100
3388,17626,73
3389,17626,82
3390,20447,87
3391,42770,93
3392,65513,72
3393,17297,81
3394,45647,77
3395,6244,94
3396,42119,74
3397,20447,92
3398,43118,67
3399,43043,79
3400,43022,69
3401,42854,78
3402,38801,88
3403,17626,71
3404,43022,78
3405,43022,73
3406,70049,78
3407,9254,83
3408,17297,74
3409,13622,76
3410,42854,76
3411,20447,79
3412,17297,88
3413,43022,78
3414,43694,83
3415,336812,80
3416,20447,91
3417,20447,86
3418,20447,77
3419,54802,85
3420,43022,87
3421,307902,75
3422,13426,81
3423,39998,79
3424,51610,75
3425,41342,82
3426,43022,82
3427,55617,84
3428,46172,95
3429,39494,83
3430,17626,79
3431,23597,85
3432,43022,77
3433,85232,76
3434,13426,76
3435,13223,75
3436,43022,77
3437,19208,79
3438,43022,78
3439,41342,72
3440,49784,81
3441,39494,96
3442,5411,80
3443,43022,92
3444,43022,76
3445,20447,76
3446,9254,83
3447,42252,82
3448,15974,76
3449,5222,88
3450,42833,89
3451,43169,83
3452,43043,73
3453,43757,82
3454,48797,79
3455,20447,85
3456,41510,75
3457,19208,78
3458,13475,77
3459,36878,85
3460,43022,77
3461,42833,71
3462,42182,82
3463,43715,71
3464,5033,68
3465,20447,82
3466,52737,73
3467,14938,73
3468,43022,87
3469,28910,79
3470,13622,79
3471,17626,69
3472,43022,96
3473,43770,90
3474,17626,77
3475,43022,77
3476,13475,77
3477,17626,72
3478,21518,82
3479,28534,76
3480,95753,74
3481,43022,76
3482,43022,76
3483,43022,80
3484,49754,77
3485,54402,77
3486,43022,78
3487,42875,76
3488,54722,75
3489,95753,87
3490,43022,73
3491,43022,72
3492,43001,73
3493,43358,73
3494,31472,84
3495,43001,71
3496,43904,82
3497,13426,87
3498,17626,93
3499,43274,79
3500,36797,82
3501,41447,74
3502,43232,86
3503,43022,73
3504,37247,81
3505,43547,91
3506,419839,70
3507,40397,84
3508,44702,78
3509,43694,74
3510,17275,78
3511,43064,88
3512,76454,81
3513,42833,79
3514,85232,88
3515,44831,70
3516,43547,87
3517,43022,86
3518,20783,84
3519,42854,72
3520,47078,95
3521,54162,80
3522,88606,74
3523,20447,80
3524,42854,77
3525,17297,73
3526,43022,77
3527,42266,79
3528,20447,82
3529,20447,91
3530,46487,72
3531,88298,77
3532,42518,77
3533,43022,75
3534,5033,91
3535,43022,73
3536,5033,81
3537,42854,66
3538,57722,79
3539,43589,79
3540,42917,99
3541,15974,83
3542,17626,85
3543,15974,77
3544,43022,83
3545,17297,79
3546,25476,77
3547,26434,100
3548,43043,75
3549,42497,81
3550,149156,77
3551,43043,88
3552,20447,70
3553,43085,89
3554,26064,90
3555,13426,74
3556,21000000,79
3557,5033,70
3558,17626,84
3559,13475,96
3560,44576,74
3561,43064,86
3562,44471,81
3563,21350,75
3564,17297,72
3565,43022,98
3566,103313,72
3567,20447,75
3568,5033,79
3569,17275,76
3570,382394,68
3571,44912,85
3572,9898,90
3573,24346,81
3574,7210,77
3575,43022,83
3576,42497,83
3577,47369,74
3578,42833,75
3579,13454,81
3580,50489,91
3581,42875,85
3582,17458,86
3583,43022,69
3584,15974,89
3585,5033,83
3586,49323,85
3587,43022,85
3588,31066,76
3589,43022,91
3590,22022,89
3591,5747,80
3592,51610,82
3593,35462,80
3594,38822,88
3595,52724,78
3596,42833,92
3597,5033,85
3598,42833,74
3599,5222,86
3600,42938,80
3601,42833,66
3602,5033,84
3603,36134,71
3604,43622,80
3605,50078,73
3606,85232,81
3607,13223,77
3608,18662,79
3609,13475,70
3610,43022,73
3611,13454,78
3612,17297,84
3613,43022,83
3614,42518,77
3615,17626,88
3616,67697,81
3617,35147,93
3618,17297,82
3619,5033,81
3620,43022,71
3621,13622,81
3622,5033,75
3623,42833,87
3624,44366,92
3625,38822,92
3626,43022,80
3627,13475,78
3628,13622,90
3629,42980,82
3630,26064,96
3631,35651,93
3632,13622,92
3633,43211,81
3634,17297,74
3635,43190,77
3636,17458,81
3637,5236,90
3638,5033,93
3639,41342,81
3640,13223,81
3641,43022,88
3642,11900,87
3643,49574,88
3644,43022,72
3645,51042,84
3646,42497,87
3647,5033,84
3648,5033,79
3649,15974,71
3650,41510,76
3651,15974,82
3652,56462,81
3653,48398,72
3654,54361,86
3655,21000000,81
3656,16142,73
3657,5033,80
3658,31850,75
3659,20447,90
3660,43098,81
3661,13426,75
3662,5222,93
3663,34013,82
3664,42854,75
3665,17297,77
3666,40334,82
3667,21350,85
3668,42980,90
3669,21350,85
3670,13622,82
3671,21350,94
3672,20447,72
3673,5033,79
3674,42161,80
3675,43022,96
3676,51610,75
3677,25207,73
3678,1652,101
3679,43106,81
3680,42140,86
3681,33614,75
3682,303074,85
3683,38486,75
3684,43022,85
3685,43022,81
3686,44770,90
3687,2502,82
3688,5033,81
3689,17297,92
3690,5033,91
3691,5033,76
3692,17626,84
3693,42854,75
3694,5747,78
3695,9422,86
3696,41972,73
3697,17297,81
3698,46403,87
3699,10045,77
3700,40397,82
3701,5033,78
3702,43022,78
3703,14938,74
3704,9254,82
3705,63287,93
3706,47285,83
3707,39662,87
3708,43022,68
3709,7595,86
3710,30702,93
3711,43148,83
3712,41510,73
3713,37772,89
3714,43085,88
3715,43547,73
3716,14147,72
3717,24930,69
3718,42728,90
3719,13475,79
3720,52535,77
3721,42266,69
3722,37541,83
3723,1806,85
3724,47222,78
3725,42497,77
3726,43190,79
3727,43022,82
3728,5033,68
3729,25476,74
3730,34937,84
3731,43165,82
3732,33446,80
3733,56462,78
3734,17647,80
3735,10045,84
3736,43022,81
3737,5033,76
3738,25018,87
3739,39347,95
3740,42917,92
3741,5033,84
3742,43022,90
3743,43438,85
3744,49743,83
3745,21000000,75
# After 1800 updates
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1806: "-2 if 4 T x copy inc ≥ -6 inc F 8 4 -1 greedy x swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 2502: "9 2 T x greedy? x x T T x T copy swap eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2702: "be inc 7 3 -5 x x F T -8 x 8 -10 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2885: "/ -7 -3 x / 3 x F 4 T F F x x -4 -5 5 greedy + + + -5 dec -5 * 8 * inc 9 *"
# 2885: "< copy 7 3 x x 4 -5 T x x copy x eql / x x x x x 7 -6 -6 -5 * 8 * inc 9 *"
# 5033: "0 x 5 x x x < / T -1 x ≤ 5 -10 x x 5 7 ungreedy 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth copy x x x greedy? x x greedy x x < ¬ - ¬ ungreedy 8 < 0 -9 -6 inc -5 * 8 * inc 9 *"
# 5033: "swap F dec -2 x x x eql 4 T x -10 inc -10 swap F ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "9 2 T x greedy? x 2 x T x T copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 dec 7 * depth T -6 4 F F x 9 x 9 - F ungreedy 8 6 0 -9 -6 inc -5 * 8 * inc 9 *"
# 5033: "x -9 x -2 -3 x < F neg -7 x x x ∧ - F ungreedy -7 pop 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x 5 x if x < 3 neg greedy x x x eql - F ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "3 x 5 x 7 x < 3 neg if x x x eql - 6 ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x 5 x + x < / x x x < x T x / 5 greedy be dec 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "4 x 5 x x x < / T -1 x x 5 -10 x x 5 7 F 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ F ≤ x + x < / T -1 x ≤ 5 -10 x x 5 7 ∧ 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "+ -10 -10 8 x ¬ < / T -1 x ≤ 5 -10 -4 x T 7 ∧ copy 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x 2 T x greedy? x x T T x T 9 swap ¬ ¬ < F 2 9 -10 x -6 inc -5 * 8 * inc 9 *"
# 5033: "x ≥ -1 ungreedy x x 0 inc 7 -1 x ≤ 5 -10 x -10 5 7 ∧ 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "4 greedy? T 4 x ∨ x 3 neg F inc x / x / x x x x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x 0 T -1 -3 x < ∧ neg x x x x ∧ x F ungreedy 8 pop 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "x x x x < dec eql be * copy x x x + ¬ x x x ∧ x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x 0 T x -3 x < ∧ neg -7 x x x ∧ - F ungreedy 8 pop 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "* ≥ eql F ungreedy ¬ -3 x < swap T T 8 depth x ≤ F 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 x eql / ≤ pop x / greedy? x dec x x x F -5 5 swap 6 0 -9 -6 inc -5 * 8 * inc 9 *"
# 5033: "F x x x dec F < / 0 * + copy x 1 x x ungreedy 8 pop 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "F 2 0 greedy? x x 0 pop 7 x -10 / x eql - 6 ungreedy 8 - 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "swap F -6 -2 x x x eql 4 -3 x -10 -1 x - F ungreedy x pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "/ -7 -3 x / 3 x x 4 -1 x pop 5 -10 x x 5 7 ungreedy 0 T -6 inc -5 * 8 * inc 9 *"
# 5033: "swap F 3 -2 x x x eql 4 T x -10 inc x 9 F ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5222: "-2 x 4 T -3 copy inc x / ¬ + copy x inc x x 5 greedy be 4 7 -10 inc -5 * 8 * greedy? 5 *"
# 5222: "x depth x x x x greedy? x x greedy x x x ¬ - F ungreedy 8 6 0 -9 -6 inc -5 * 8 * ungreedy 9 *"
# 5236: "T x ungreedy T -3 F x F T neg ungreedy if < 7 1 x -10 - 6 T 8 -6 * F T -8 ungreedy * dec *"
# 5411: "0 x 5 x -3 x < 3 F -7 x x x ∧ - F ungreedy 8 pop 0 depth -6 inc -5 * 8 * dec 9 *"
# 5747: "T -3 7 x - 4 < 3 be greedy pop x x x x x 5 dec be 4 7 -10 * dec T -8 3 * dec *"
# 5747: "-2 x 4 T x copy inc x / ¬ + copy x inc x x 5 dec be 4 7 -10 * dec T -8 3 * dec *"
# 6244: "x F F -2 greedy? depth x > dec x x -7 ungreedy T -2 F F x 6 T 8 -6 * dec T -8 ungreedy * dec *"
# 7210: "be inc 7 3 -5 x x F T -8 * 8 -10 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 pop * dec *"
# 7595: "be inc 7 3 -5 x x F T -8 x 8 -10 x greedy? < 5 greedy copy -10 7 -6 F -5 * 8 * inc ∨ *"
# 9254: "x x * 9 x -7 ≤ -1 T x T x swap eql -2 < F 2 > -10 x -6 inc -5 * 8 * inc 8 *"
# 9254: "x ≥ -1 depth x x x F pop x x ≥ ungreedy T -2 F F x inc ≤ 5 -6 inc -5 * 8 * inc 8 *"
# 9422: "x T x ≥ -9 if -7 F T be x 8 inc T x T greedy greedy x x 7 -6 inc -5 * 8 * greedy? 8 *"
# 9898: "9 2 T x greedy? x x 3 T x T copy swap eql ¬ < pop if x -10 7 -10 inc -5 * 8 * greedy? be *"
# 10045: "-2 x eql x ≤ pop x dec greedy? -5 x x 4 x -4 inc 8 ≤ -9 x 7 -10 inc -5 * 8 * inc T *"
# 10045: "/ -7 -3 x / 3 x ≤ eql copy ungreedy x T x x inc 8 ≤ -9 x 7 -10 inc -5 * 8 * inc T *"
# 11900: "x ≥ -1 depth x x x F dec x x ≥ ungreedy T -2 F F x 6 T 5 -6 * dec T -8 ungreedy * dec *"
# 13223: "-2 x -6 x 4 x x F -7 + ungreedy 5 x x 0 x x > be x 7 -6 * dec T -8 4 * dec *"
# 13223: "T depth ≥ ungreedy -5 x x F T F x x depth F + < 5 > ∧ x 7 -6 * dec T -8 4 * dec *"
# 13223: "x F x -10 ≤ x x F T + ungreedy 5 x x 0 x x > ∧ x 7 -6 * dec T -8 4 * dec *"
# 13223: "T x ungreedy T -3 2 inc 1 * x ∨ copy x inc x T T greedy be x 7 -6 * dec T -8 4 * dec *"
# 13426: "-2 F if x greedy? x x T x F F F 8 T -2 x 5 greedy 9 x 7 -6 * ∧ F -8 * ∧ 8 *"
# 13426: "+ - T < 1 ∨ x x x x < 9 ungreedy x -2 6 5 greedy 9 x 7 -6 * ∧ T -8 * ∧ 8 *"
# 13426: "x F F -2 greedy? depth x > dec x T x ungreedy T -2 8 5 greedy 9 x 7 -6 * ∧ T -8 * ∧ 8 *"
# 13426: "4 greedy? T -8 x T F x x x x 9 ungreedy x -2 6 5 greedy 9 x 7 -6 * ∧ T -8 * ∧ 8 *"
# 13454: "neg x 7 x x ¬ -3 ≥ 7 be ungreedy x x 7 - pop T x x 9 7 -6 inc -5 * F * inc 8 *"
# 13454: "x ≥ 7 4 x x -3 ≥ 7 be ungreedy x x x - F ungreedy x x 9 7 -6 inc -5 * F * inc 8 *"
# 13475: "x greedy? T x x depth x copy x x x F ungreedy x -2 5 1 x x depth 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "9 < T x greedy? x x x x F inc F 8 x x < x greedy x x 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "x x * -2 x x x eql -8 T / x inc x swap x 1 -2 x + 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "T x -1 -3 -3 ∧ x 1 * T x x x - x x 5 + greedy x 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "-2 x eql x x pop x / F x x x x - x -2 5 greedy greedy x 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "-5 - * 8 x F copy -1 + x F 9 x 4 1 + 3 > x x 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "< -8 * F -8 x 4 3 neg greedy x x / eql / x ungreedy - depth * 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "x F F -2 copy ¬ x eql -8 T x x inc x swap x 1 F x -10 7 -6 inc -5 * 8 * inc ∨ *"
# 13475: "x greedy? T -3 -3 ∧ x 1 * x x x x - x x 5 greedy greedy x 7 -6 inc -5 * 8 * inc greedy? *"
# 13475: "/ -7 -3 x / 3 x F ∧ T F F 1 x 2 x 1 -2 x -10 7 -6 inc -5 * 8 * inc T *"
# 13622: "0 x -3 4 / dec eql depth * copy x x 5 + ¬ x + T be x 7 -8 * T T -8 3 * dec *"
# 13622: "-3 greedy? x - x 1 7 ungreedy * x x copy ≤ x * x 1 x x -4 7 -6 inc -5 * 8 * F T *"
# 13622: "depth x eql x x pop x / F x x -3 x - x -2 5 < greedy x 7 -6 inc -5 * 8 * inc dec *"
# 13622: "x 1 -3 - -3 T inc ungreedy * x x copy ≤ x * x 1 x x -10 7 -6 inc -5 * 8 * F T *"
# 13622: "x depth copy if x x greedy? x x > x x x ¬ - -1 ungreedy 8 x be 7 -6 inc -5 * 8 * greedy? ∨ *"
# 14147: "-5 - * 8 x F copy -1 8 x F 9 F 4 1 + T F be be 9 -6 * dec T -8 3 * dec *"
# 14938: "eql x > 4 x x 7 ≥ 4 T F 8 4 -1 F x 5 greedy be x 7 -6 * dec T -8 * inc 8 *"
# 14938: "¬ x -1 4 x x 7 ≥ 4 T F 8 4 -1 x x 5 greedy be x 7 -6 * dec T -8 * inc 8 *"
# 15974: "be / x x F pop x -2 ∨ -8 x 9 -9 x -2 5 -4 x T + -3 -5 inc -5 * 8 * inc 8 *"
# 15974: "be 5 x x F x x -2 ∨ -8 x 9 x x -2 5 -4 x T + -3 -5 inc -5 * 8 * inc 8 *"
# 17297: "F x -3 ¬ / dec x ≥ 7 x ungreedy T x depth x ≤ F x x + 8 -6 * dec T -8 3 * dec *"
# 17297: "neg x 7 T x ¬ -3 ≥ 7 x ungreedy x x 7 - pop > x * + 8 -6 * dec T -8 3 * dec *"
# 17297: "9 x -8 4 x T copy -1 x T x -10 inc -10 swap x 1 -2 x -10 8 -6 * dec if -8 3 * dec *"
# 17297: "-2 x 4 T x copy inc ≥ -6 inc F 8 4 -1 greedy x - 7 -6 + 8 -6 * dec T -8 3 * dec *"
# 17297: "ungreedy x 7 x x ¬ -3 x < swap 1 T inc depth x ≤ F copy x x 8 -6 * dec copy -8 3 * dec *"
# 17297: "ungreedy x 7 x x ¬ -3 x < swap T T inc depth x ≤ F x x x 8 -6 * dec copy -8 3 * dec *"
# 17458: "-2 x -7 x x x 0 ≥ 7 T ungreedy if F 4 1 x -1 - - + dec -10 inc -5 * 8 * F 8 *"
# 17626: "0 x < eql x 7 copy -1 + x -10 9 x x 1 + -1 > - x dec -10 inc -5 * 8 * inc 8 *"
# 17626: "x -7 -3 swap / 3 x ungreedy 4 T ungreedy F x x x inc 8 1 T x -5 -10 inc -5 * 8 * inc 8 *"
# 17626: "-4 -10 / -5 < x x x T dec 4 5 -3 x x x T x * + + -10 inc -5 * 8 * inc 8 *"
# 17626: "be 5 x x F x x -7 ∨ -8 x 9 T x 3 x x x - + dec -10 inc -5 * 8 * inc 8 *"
# 20447: "F x x x dec F 9 greedy F F x T 5 + ¬ 4 x T 7 x 7 -6 * dec T -8 3 * dec *"
# 20447: "x x x x * dec eql be * x x x x x ¬ x 9 greedy ∧ T 7 -6 * dec T -8 3 * dec *"
# 20447: "+ F greedy? 4 -9 T / greedy copy F + copy x inc x x 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 ∨ -3 4 / 3 eql be be copy F 7 5 + x ∧ -3 greedy copy x 7 -6 * dec T -8 3 * dec *"
# 20447: "0 2 -1 greedy? x x T 7 T -8 x T inc x swap -1 0 -7 ∧ dec 7 -6 * dec T -8 3 * dec *"
# 20447: "5 x 7 3 x -7 if inc T 7 inc copy T 1 x x 5 7 be x 7 -6 * dec T -8 3 * dec *"
# 20447: "4 x T ∨ x ≤ x copy x x x copy x - x ≤ 5 greedy 1 x 7 -6 * dec T -8 3 * dec *"
# 20447: "x ≥ -1 4 x x ≤ ≥ 7 be ungreedy x -3 8 x x T neg * pop 7 -6 * dec T -8 3 * dec *"
# 20447: "0 x - 4 / F < ungreedy inc ∧ inc copy x T x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 21350: "-2 x eql x x pop greedy 5 F x x x x - x -9 5 greedy greedy? x 7 -6 * dec T -8 3 * F *"
# 26064: "4 x -5 x x ∨ x copy -1 x x 9 ungreedy x -2 6 1 -3 T -6 depth neg x greedy? x x * depth greedy? *"
# 42833: "/ -7 -3 x / 3 x F ∧ T ∨ F 1 x 2 x 1 -2 x -10 7 x x + x x 6 pop x 9"
3746,43064,71
3747,43022,67
3748,43022,75
3749,42917,68
3750,43001,70
3751,143990,82
3752,43022,75
3753,44156,77
3754,43022,68
3755,44534,73
3756,17626,84
3757,43085,88
3758,43190,86
3759,43148,84
3760,13622,74
3761,5033,70
3762,42854,87
3763,43022,72
3764,5033,91
3765,95753,82
3766,75362,76
3767,43022,75
3768,59843,72
3769,43022,86
3770,10045,76
3771,9065,78
3772,42833,82
3773,42252,69
3774,43001,79
3775,43022,79
3776,57228,78
3777,127547,91
3778,43043,73
3779,5033,93
3780,2885,75
3781,63738,76
3782,32438,70
3783,42854,82
3784,2885,90
3785,42252,77
3786,42917,69
3787,13223,74
3788,5033,84
3789,43022,70
3790,43169,85
3791,43022,80
3792,47054,76
3793,13223,79
3794,42917,71
3795,38171,78
3796,32270,84
3797,54361,78
3798,43579,72
3799,47078,72
3800,42938,80
3801,42833,99
3802,13475,85
3803,43442,72
3804,9254,87
3805,13475,81
3806,71967,67
3807,9254,80
3808,12593,78
3809,17822,79
3810,17297,84
3811,5033,91
3812,3545,104
3813,45332,86
3814,5033,69
3815,43841,85
3816,38843,79
3817,43211,83
3818,10045,73
3819,17626,75
3820,2885,83
3821,5033,82
3822,44665,85
3823,2885,90
3824,75962,65
3825,192346,78
3826,39872,81
3827,42252,81
3828,42252,70
3829,50393,86
3830,42182,67
3831,43022,78
3832,27272,77
3833,43712,92
3834,5033,70
3835,5033,95
3836,48166,78
3837,42833,70
3838,42896,74
3839,5033,86
3840,17297,91
3841,42749,102
3842,30422,75
3843,36596,80
3844,49743,83
3845,355552,76
3846,42833,80
3847,9254,85
3848,43043,76
3849,43085,101
3850,17626,84
3851,38612,80
3852,56441,82
3853,17297,80
3854,43127,93
3855,13622,76
3856,43862,93
3857,5033,77
3858,49574,76
3859,95753,75
3860,43064,66
3861,43022,83
3862,42812,92
3863,42854,77
3864,51282,69
3865,51905,76
3866,13475,69
3867,5222,95
3868,1166578,81
3869,43190,88
3870,43736,82
3871,5033,78
3872,49743,79
3873,13622,99
3874,5033,90
3875,43513,79
3876,39347,71
3877,29162,79
3878,10045,73
3879,43022,89
3880,1663,81
3881,52242,75
3882,55608,83
3883,320047,88
3884,36113,91
3885,10906,91
3886,9254,87
3887,40397,88
3888,289002,83
3889,43022,76
3890,43022,78
3891,41321,78
3892,42938,78
3893,14147,69
3894,42980,77
3895,42833,74
3896,5033,72
3897,32249,84
3898,5033,76
3899,5222,87
3900,88382,74
3901,9254,72
3902,7595,76
3903,9065,74
3904,42252,87
3905,42896,81
3906,36113,79
3907,47690,74
3908,5033,78
3909,21000000,78
3910,95753,80
3911,9422,76
3912,42644,77
3913,40397,78
3914,382403,76
3915,42854,83
3916,49743,71
3917,10087,84
3918,2885,73
3919,41321,92
3920,13475,73
3921,5222,89
3922,42833,78
3923,5033,77
3924,49743,97
3925,54357,77
3926,44030,79
3927,43022,88
3928,43022,73
3929,42854,80
3930,274687,73
3931,5033,81
3932,43022,77
3933,20447,75
3934,43022,81
3935,43358,77
3936,43043,88
3937,15974,72
3938,5033,67
3939,50771,75
3940,43022,86
3941,43526,87
3942,43022,87
3943,36407,67
3944,38822,82
3945,13475,68
3946,17626,80
3947,5033,81
3948,43022,69
3949,43022,88
3950,50393,70
3951,3185,81
3952,46697,70
3953,38927,92
3954,43064,74
3955,5222,91
3956,43022,82
3957,41467,84
3958,9947,80
3959,46805,87
3960,93166,83
3961,43022,76
3962,44912,83
3963,5222,71
3964,43022,79
3965,5033,72
3966,42875,97
3967,9422,91
3968,43022,72
3969,42644,90
3970,9254,78
3971,5033,78
3972,35273,79
3973,42833,76
3974,41510,74
3975,43526,86
3976,44455,88
3977,5033,70
3978,5033,96
3979,41321,81
3980,43190,86
3981,5033,101
3982,43022,69
3983,245873,79
3984,42917,95
3985,38822,85
3986,6734,79
3987,69335,75
3988,43127,70
3989,1652,87
3990,13223,88
3991,51610,80
3992,5033,78
3993,18830,70
3994,39403,71
3995,5033,78
3996,43118,71
3997,79023,83
3998,9898,85
3999,49574,79
4000,21000000,73
4001,35441,83
4002,49743,66
4003,5747,80
4004,5033,75
4005,43022,83
4006,69874,75
4007,10045,72
4008,5033,81
4009,2885,87
4010,103313,70
4011,9422,76
4012,247853,76
4013,51661,69
4014,13475,78
4015,43001,73
4016,13475,94
4017,42833,87
4018,43043,99
4019,13475,83
4020,13475,77
4021,42833,78
4022,43169,79
4023,95753,74
4024,13475,82
4025,9254,77
4026,43278,82
4027,9898,88
4028,44051,80
4029,25207,78
4030,14672,88
4031,42833,78
4032,22736,78
4033,7595,79
4034,76790,77
4035,5033,84
4036,42833,80
4037,42140,77
4038,43148,92
4039,41321,82
4040,9422,91
4041,41321,76
4042,5033,71
4043,44723,84
4044,43022,90
4045,13475,95
4046,43022,85
4047,43022,85
4048,5033,90
4049,34958,73
4050,332993,76
4051,71967,70
4052,43001,67
4053,2502,79
4054,37772,81
4055,5054,77
4056,5033,82
4057,38276,94
4058,43022,80
4059,43022,87
4060,13426,77
4061,48503,89
4062,38801,89
4063,43841,83
4064,6734,78
4065,39347,77
4066,5033,83
4067,43022,78
4068,60032,71
4069,43022,95
4070,5033,72
4071,5033,79
4072,5222,86
4073,5222,77
4074,2885,81
4075,5033,84
4076,54361,79
4077,42833,90
4078,24689,77
4079,44198,78
4080,38297,85
4081,2885,77
4082,42203,104
4083,171542,88
4084,5222,79
4085,2885,72
4086,59910,89
4087,5033,92
4088,49910,81
4089,5033,80
4090,76853,72
4091,50322,73
4092,41321,75
4093,5033,74
4094,47054,82
4095,42833,75
4096,43022,74
4097,5033,85
4098,5033,80
4099,57138,70
4100,5033,91
4101,32767,76
4102,5033,78
4103,71015,79
4104,5033,79
4105,5033,73
4106,9254,81
4107,48755,86
4108,5033,81
4109,43022,75
4110,5033,79
4111,43022,78
4112,42833,72
4113,38801,93
4114,43118,80
4115,62965,75
4116,32767,70
4117,44345,74
4118,43127,77
4119,14147,73
4120,9422,79
4121,13475,85
4122,5747,78
4123,51610,72
4124,42833,96
4125,5033,71
4126,5033,69
4127,43022,81
4128,5222,89
4129,103313,75
4130,21000000,75
4131,40943,76
4132,42896,83
4133,13426,79
4134,42854,78
4135,35273,79
4136,2885,74
4137,81011,87
4138,42833,86
4139,49743,87
4140,17297,82
4141,41053,83
4142,73822,90
4143,13475,75
4144,42833,73
4145,38612,75
4146,43967,82
4147,17626,92
4148,43579,78
4149,110873,79
4150,5033,76
# After 2000 updates
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1663: "9 2 T x greedy? x x T T 0 x copy x inc x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1806: "-2 if 4 T x copy inc ≥ -6 inc F 8 4 -1 greedy x swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 2502: "9 2 T x greedy? 7 x T T ∧ T copy F eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "9 2 T x greedy? x x T T x T copy swap eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2702: "be inc 7 3 -5 x x F T -8 x 8 -10 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2885: "neg x 7 2 x F -3 x T swap T T 8 depth x ≤ * 8 pop 0 7 F inc -5 * -6 * inc 9 *"
# 2885: "/ -7 -3 x / 3 x F 4 T F F x x -4 -5 5 greedy + + + -5 dec -5 * 8 * inc 9 *"
# 2885: "4 greedy? T -8 x greedy F x x x x 9 ungreedy x -2 6 5 greedy 9 T 7 -5 dec -5 * 8 * inc 9 *"
# 2885: "dec 2 T x greedy? -7 be F 4 x * T x x -4 -5 2 greedy + + + -5 -6 -5 * 8 * inc 9 *"
# 2885: "/ -7 -3 x / 3 x F 4 + F T x x -4 -5 2 greedy + + + -5 -6 -5 * 8 * inc 9 *"
# 2885: "T x ungreedy T -3 F x F T neg ungreedy if < ∧ > x ungreedy 8 pop 0 F -6 ∨ -5 * 8 * inc 9 *"
# 2885: "≤ 4 T x 3 x 4 -5 T x x copy x eql / x eql x 4 ≥ 7 -6 -6 -5 * 8 * inc 9 *"
# 2885: "< copy 7 3 x x 4 -5 T x x -4 x eql / x x -6 x x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "x T * 8 + pop copy -1 9 x F ≤ x x / x x -6 x x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "swap F x -2 ∨ x x eql x T x -10 inc x 9 F ungreedy greedy + + + -5 dec -5 * 8 * inc 9 *"
# 3185: "x x x x * dec x be * x x x x x ¬ 6 ungreedy 8 pop 0 depth -6 inc -5 * 8 * dec T *"
# 3545: "-2 inc 7 copy -5 -3 x F T x neg copy swap 6 ¬ < pop ungreedy swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 5033: "3 x 5 x 7 x < 3 neg if x x x eql - 6 ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth 5 x x x greedy? x x -10 x x < ¬ F ¬ ungreedy 8 < 0 -9 -6 inc -5 * 8 * inc 9 *"
# 5033: "4 x 5 x x x < / T -1 x x 5 -10 x x 5 7 F 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "+ -10 -10 8 x ¬ < / T -1 x ≤ 5 -10 -4 x T 7 ∧ copy 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ F ≤ x + x < / T -1 x ≤ be -10 x x F 7 ∧ 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x -8 F 5 -9 if -7 F T + F 8 inc T x T T -2 x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x x * 8 x pop copy F 9 x 1 9 copy x -10 if 3 > T x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x 5 x + x < / x x x < x T x / 5 greedy be dec 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x F F -2 greedy? depth x x dec x x x ungreedy T -2 F ungreedy x pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x -8 x 5 -9 if -7 F T + T 8 inc T x T greedy greedy x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "swap F -6 -2 x x x eql 4 -3 x -10 -1 x - F ungreedy x pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "< x * F -8 x 4 3 neg T x x / eql x x ungreedy - depth * 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x 0 T x -3 x < ∧ neg -7 x x x ∧ - F ungreedy 8 pop 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "* 2 eql F ungreedy ¬ -3 x < x T T 8 depth x ≤ F 8 pop F 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x 0 T -1 -3 x < ∧ neg x x x x ∧ x F ungreedy 8 pop 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "/ -7 -3 x / 3 x x 4 -1 x pop 5 -10 x x 5 7 ungreedy 0 T -6 inc -5 * 8 * inc 9 *"
# 5033: "T eql 7 x - 4 < 3 be x pop x x ≤ x x 5 greedy x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x 5 inc + x < / -4 x + copy x 1 x x x 8 - + F -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 x eql x x pop x / < x x x x - x -2 5 greedy greedy -4 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "T 4 T x 3 x 4 x T x x ungreedy x eql / x F 8 greedy? 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "F x 7 x x ¬ -3 x depth T T -10 inc -10 swap F ungreedy 8 3 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "¬ x 5 x x x T / 7 x ∨ / x eql x 6 ungreedy 8 - greedy? 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x 5 x if x < 3 neg greedy x x x eql - F ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "/ -7 -10 x / 3 x ≤ eql if ungreedy x inc T x T T -1 x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "be inc 7 > -5 T x F ¬ -8 * 8 -10 if x F -3 8 6 greedy F -6 inc -5 * 8 * inc 9 *"
# 5033: "x * eql F ungreedy ¬ -3 x T swap T T 8 depth x ≤ * 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "/ -7 -3 x * 3 x x 4 greedy? x pop 5 -10 x 7 5 7 ungreedy 0 T -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 x eql x x greedy greedy ∧ F x x x -10 - x -9 5 greedy greedy? x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "be inc 7 > -5 x x F T -8 * 8 -10 if x < 5 greedy 9 x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 x 4 T swap x -3 x < swap T 9 8 depth x ≤ x 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 inc 7 copy ungreedy inc x F T x neg copy swap eql ¬ < pop 2 x -10 ungreedy -6 inc -5 * 8 * inc 9 *"
# 5033: "4 greedy? T 4 x ∨ x 3 neg F inc x / x / x x x x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "T ≥ ungreedy T -3 x -3 x < swap T T 8 depth x ≤ x 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x T * 8 x pop copy F 9 x 1 9 x x -10 if 3 > T x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x -8 ∨ 5 -9 if -7 F T x T 8 T T -5 T T -1 x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "4 x x x x x < / T -1 x x 5 -10 x x -3 7 F x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x ≥ -1 ungreedy x x 0 inc 7 -1 x ≤ 5 -10 x -10 5 7 ∧ 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 > -6 x 4 x x F -7 + ungreedy 5 x x 0 copy x > be x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x greedy? T x x depth x copy x x x F ungreedy > -2 0 1 x > depth 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 F 7 F eql inc x F T T neg copy swap eql ¬ < pop 2 x -10 ungreedy -6 inc -5 * 8 * inc 9 *"
# 5033: "/ -7 -3 x / 3 x + ∧ T F F 1 x 2 x 1 -2 x -10 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x T * 8 x F copy -1 9 x F 9 x x 1 -9 3 > x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "* ≥ eql F ungreedy ¬ -3 x < swap T T 8 depth x ≤ F 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "swap F dec -2 x x x eql 4 T x -10 inc -10 swap F ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "/ x -3 x / 3 x x 2 -1 T pop 5 -10 greedy? if 5 x F x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth copy if x x greedy? x T > x x x pop - -1 ungreedy 8 x be 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "4 x 5 x x x < / T x inc 9 swap x ¬ x F 2 9 -10 x -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 F 7 F ≥ inc x F T T neg copy swap eql x x 5 7 x 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x ≥ 7 4 x x -3 ≥ 7 be 6 x F x depth F 5 greedy greedy -4 7 -6 inc -5 * 8 * inc 9 *"
# 5222: "swap inc 7 > -5 x F F x - * T -10 ¬ > F ungreedy 8 6 0 -9 -6 inc -5 * 8 * F 9 *"
# 5222: "∧ x 5 neg + x < x x x x ¬ x x x F 5 F be be 9 -6 inc -5 * 8 * inc dec *"
# 5222: "x depth x x x x greedy? x x greedy x x x ¬ - F ungreedy 8 6 0 -9 -6 inc -5 * 8 * ungreedy 9 *"
# 5222: "∧ x F x - x < 3 neg greedy x x x eql - F ungreedy if pop 0 7 -6 inc -5 * 8 * ungreedy 9 *"
# 5222: "T x ungreedy T -3 x inc x * x ∨ copy x inc x T T greedy be x ¬ -6 inc -5 * 8 * ungreedy 9 *"
# 5411: "0 x 5 x -3 x < 3 F -7 x x x ∧ - F ungreedy 8 pop 0 depth -6 inc -5 * 8 * dec 9 *"
# 5747: "-2 x 4 T < x inc x / ¬ + copy x inc x x 5 dec be if 7 -10 * dec T -8 3 * dec *"
# 5747: "-2 x 4 T x copy inc x / ¬ + copy x inc x x 5 dec be 4 7 -10 * dec T -8 3 * dec *"
# 6734: "greedy x -3 x / 3 x x 2 x x -3 x - x -2 5 F greedy x 7 -6 * dec T -5 * inc 8 *"
# 7595: "be inc 7 3 -5 x x F T -8 x 8 -10 x greedy? < 5 greedy copy -10 7 -6 F -5 * 8 * inc ∨ *"
# 7595: "∧ x 5 x if x < 3 neg greedy x x x eql - F -9 8 pop * 7 -6 T -5 * 8 * inc ∨ *"
# 7595: "x x * 9 x -7 -1 3 neg greedy x -7 x eql - F -9 -3 pop * 7 -6 T -5 * 8 * inc ∨ *"
# 9065: "x -9 x -2 -3 x < F neg -7 x x 4 -1 greedy x - 7 -6 + 8 -6 * dec 4 -8 ∧ * dec *"
# 9065: "5 9 x inc 0 x x 7 x ≤ / x 1 -1 greedy x - 7 -6 + 8 -6 * dec 4 -8 ∧ * dec *"
# 9254: "T greedy? ≥ ungreedy -5 x x F T F T x swap eql -2 < T 2 > -10 x -6 inc -5 * 8 * inc 8 *"
# 9254: "T greedy? ≥ ungreedy -5 x x F F > T x swap eql -2 < T 2 > -10 x -6 inc -5 * 8 * inc 8 *"
# 9422: "swap x x x x ¬ -3 x < T T x inc depth x ≤ F x x -10 8 -6 inc -5 * 8 * inc dec *"
# 9422: "∧ x 5 x + x < depth x / T 8 inc T x T greedy greedy / greedy? 7 -6 inc -5 * 8 * greedy? 8 *"
# 9898: "be inc 7 > -5 x F F x -8 * T -10 eql ¬ < pop if x -10 7 -10 inc -5 * 8 * greedy? be *"
# 10045: "x ≥ T x 0 inc T x / ¬ + 1 0 x -4 inc 8 ≤ -9 -6 7 -10 inc -5 * 8 * inc T *"
# 10045: "0 x 5 x 0 inc T x / ¬ + 1 x x -4 inc 8 ≤ -9 -6 7 -10 inc -5 * 8 * inc T *"
# 11900: "x ≥ -1 depth x x x F dec x x ≥ ungreedy T -2 F F x 6 T 5 -6 * dec T -8 ungreedy * dec *"
# 13426: "x dec * 9 x -7 -1 3 neg greedy x -7 x eql - F -9 -3 pop x 7 -6 * ∧ T -8 * ∧ 8 *"
# 13475: "x - * 8 x -9 copy x be x pop x ≤ / x x 5 greedy x x 7 -6 inc -5 * 8 * inc F *"
# 13475: "F -8 F pop -9 if -7 F T -8 F 8 inc T x T T -2 x x 7 -6 inc -5 * 8 * inc ∨ *"
# 14938: "¬ x -1 4 x x 7 ≥ 4 T F 8 4 -1 x x 5 greedy be x 7 -6 * dec T -8 * inc 8 *"
# 14938: "eql x > 4 x x 7 ≥ 4 T F 8 4 -1 F x 5 greedy be x 7 -6 * dec T -8 * inc 8 *"
# 17297: "x 0 T x -3 x < ∧ neg inc 1 F inc depth x ≤ F copy x x 8 -6 * dec copy -8 3 * dec *"
# 17458: "-2 x -7 x x x 0 ≥ 7 T ungreedy if F 4 1 x -1 - - + dec -10 inc -5 * 8 * F 8 *"
# 17626: "x x eql x x greedy greedy ∧ F ≤ ungreedy -1 x x greedy? x + x x + + -10 inc -5 * 8 * inc 8 *"
# 20447: "0 x - 4 / F < ungreedy inc ∧ inc copy x T x < 5 greedy be x 7 -6 * dec T -8 3 * dec *"
# 38927: "x -7 * 8 x F * x neg greedy x x / eql / x ungreedy - depth * 7 -6 inc -5 F 8 * inc greedy? *"
4151,43190,74
4152,43043,77
4153,43169,74
4154,42917,71
4155,43030,79
4156,42854,86
4157,42077,79
4158,49842,68
4159,10045,72
4160,50393,84
4161,43904,76
4162,43064,81
4163,2885,77
4164,2885,87
4165,13475,91
4166,42917,87
4167,36785,82
4168,13475,90
4169,77483,89
4170,44723,84
4171,54357,73
4172,55617,74
4173,5033,74
4174,43022,82
4175,5033,79
4176,43118,67
4177,78323,78
4178,5222,90
4179,43022,72
4180,43118,75
4181,43022,76
4182,41510,74
4183,5033,96
4184,5033,80
4185,41321,90
4186,5033,73
4187,5033,89
4188,5033,77
4189,44723,83
4190,5033,82
4191,48062,74
4192,5033,89
4193,15484,76
4194,5222,74
4195,2885,72
4196,48881,81
4197,5222,80
4198,43022,80
4199,43022,78
4200,49007,69
4201,26957,75
4202,5033,77
4203,42833,94
4204,42833,88
4205,42833,87
4206,70567,89
4207,43022,87
4208,95753,71
4209,95753,82
4210,35462,84
4211,5033,78
4212,211751,76
4213,43022,74
4214,49743,71
4215,2885,76
4216,55608,76
4217,73388,81
4218,42980,74
4219,5033,67
4220,49842,77
4221,50393,83
4222,5033,73
4223,73073,78
4224,5033,92
4225,2762,73
4226,333893,72
4227,43510,82
4228,40110,71
4229,43127,87
4230,9065,79
4231,265118,77
4232,38153,77
4233,27713,78
4234,43579,85
4235,2885,80
4236,42833,85
4237,5033,79
4238,42833,75
4239,13475,82
4240,5033,73
4241,43211,84
4242,5747,79
4243,2885,79
4244,9254,74
4245,50393,84
4246,55617,86
4247,56147,87
4248,50582,79
4249,75103,92
4250,2885,86
4251,44302,68
4252,41510,88
4253,97265,89
4254,48017,81
4255,9422,83
4256,39641,85
4257,2885,79
4258,41510,72
4259,42833,84
4260,5033,72
4261,22771,84
4262,5033,86
4263,42833,84
4264,11851,86
4265,43022,75
4266,43022,87
4267,43022,73
4268,43148,73
4269,2762,75
4270,59843,77
4271,43022,80
4272,2502,87
4273,2450,97
4274,43169,78
4275,71736,76
4276,54162,73
4277,42728,83
4278,5033,88
4279,5033,78
4280,41321,80
4281,5033,73
4282,50393,81
4283,50393,75
4284,9898,85
4285,9422,73
4286,5222,76
4287,5033,97
4288,42917,77
4289,37961,74
4290,5033,75
4291,5033,88
4292,2885,78
4293,6734,77
4294,43190,82
4295,5033,79
4296,5033,81
4297,36785,71
4298,5033,73
4299,38087,77
4300,62867,96
4301,5033,87
4302,103313,84
4303,43118,80
4304,5033,94
4305,42812,86
4306,30947,79
4307,91357,85
4308,11851,95
4309,20153,80
4310,50393,109
4311,42854,76
4312,2885,74
4313,5033,77
4314,43022,81
4315,42770,88
4316,5033,74
4317,43022,76
4318,5033,83
4319,2885,80
4320,2885,93
4321,5033,81
4322,54361,81
4323,43112,65
4324,5033,89
4325,42833,74
4326,88193,73
4327,43579,82
4328,22694,88
4329,2885,77
4330,2885,73
4331,39641,79
4332,44340,69
4333,50393,74
4334,50393,88
4335,5033,70
4336,25207,80
4337,103313,86
4338,2885,80
4339,5033,66
4340,2885,79
4341,43022,76
4342,11025601,77
4343,2885,68
4344,5033,90
4345,43098,89
4346,2885,83
4347,85232,91
4348,21000000,84
4349,41321,75
4350,72569,85
4351,1663,76
4352,2885,79
4353,42917,83
4354,42266,91
4355,85358,79
4356,2885,76
4357,2885,78
4358,42938,95
4359,42833,71
4360,43022,83
4361,5033,84
4362,43106,83
4363,85169,88
4364,2885,86
4365,5033,84
4366,5033,75
4367,47558,95
4368,43169,88
4369,1806,72
4370,2885,89
4371,35294,86
4372,33761,74
4373,43022,71
4374,44723,86
4375,43022,82
4376,39953,72
4377,2762,71
4378,50393,84
4379,5033,79
4380,43211,74
4381,5033,80
4382,2702,75
4383,42833,78
4384,43022,78
4385,47117,89
4386,163898,75
4387,42854,71
4388,5033,70
4389,5033,76
4390,38297,80
4391,5033,77
4392,5222,82
4393,42434,82
4394,32249,72
4395,19397,80
4396,44665,76
4397,43022,81
4398,27713,79
4399,16226,90
4400,10045,73
4401,43211,77
4402,9422,90
4403,2502,76
4404,5033,79
4405,5033,88
4406,1806,80
4407,5033,94
4408,171353,74
4409,56319,97
4410,5033,76
4411,44149,83
4412,42833,91
4413,7630,88
4414,5033,79
4415,5033,86
4416,42833,72
4417,57953,86
4418,9422,71
4419,5222,76
4420,5033,73
4421,41321,93
4422,5033,82
4423,2885,85
4424,5033,73
4425,9947,76
4426,42833,85
4427,2885,80
4428,5033,78
4429,5033,69
4430,43022,74
4431,2762,79
4432,43127,80
4433,34958,74
4434,42833,88
4435,38801,79
4436,2885,77
4437,44302,91
4438,42833,82
4439,44450,86
4440,5222,86
4441,13475,92
4442,43022,85
4443,2702,72
4444,2762,77
4445,54361,82
4446,41321,93
4447,43022,84
4448,17458,75
4449,5222,64
4450,5033,72
4451,43022,73
4452,44156,74
4453,5033,70
4454,44302,70
4455,9758,90
4456,43043,86
4457,5033,79
4458,43022,69
4459,2885,87
4460,42833,76
4461,5033,72
4462,103313,94
4463,49070,82
4464,5033,75
4465,26222,81
4466,1663,75
4467,5033,79
4468,42833,71
4469,9758,99
4470,35567,97
4471,2885,72
4472,43169,76
4473,42833,76
4474,42266,80
4475,43085,77
4476,2762,80
4477,80822,75
4478,25207,71
4479,29225,84
4480,44345,80
4481,2762,75
4482,42833,69
4483,2885,77
4484,42833,78
4485,1663,86
4486,14672,78
4487,42833,83
4488,46336,73
4489,2885,72
4490,10087,75
4491,14483,83
4492,2885,84
4493,5222,78
4494,13475,83
4495,5222,89
4496,42833,85
4497,42980,88
4498,49743,74
4499,108983,75
4500,49842,67
4501,43022,72
4502,27713,91
4503,43148,96
4504,41531,80
4505,5033,93
4506,5033,81
4507,2762,74
4508,43118,70
4509,49448,77
4510,41132,76
4511,43118,74
4512,2762,70
4513,9758,95
4514,2885,83
4515,37961,79
4516,121373,86
4517,50393,80
4518,60977,67
4519,5033,80
4520,33523,80
4521,21917,78
4522,44723,80
4523,5222,81
4524,865262,72
4525,38843,85
4526,43298,68
4527,49743,78
4528,35273,77
4529,5033,88
4530,1806,76
4531,1806,71
4532,44340,72
4533,44183,69
4534,51905,84
4535,11081,86
4536,5033,77
4537,21917,93
4538,81011,87
4539,5222,86
4540,70769,80
4541,43732,93
4542,42833,79
4543,44302,68
4544,41321,73
4545,50423,71
4546,42833,76
4547,2885,74
4548,42875,94
4549,42875,69
4550,55617,75
4551,38150,79
4552,2885,71
4553,14483,73
4554,2885,88
4555,44156,80
# After 2200 updates
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1663: "9 2 T x greedy? x x T T 0 x copy x inc x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 > -6 x 4 x x T T 0 x copy x if x x 5 0 be T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ -7 x x T 3 x F T 0 x copy F inc x x 5 0 9 4 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 2 T x greedy? x x T T 0 x copy x inc x x 5 depth be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1806: "-2 if 4 T x copy inc ≥ -6 inc F 8 4 -1 greedy x swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 1806: "≤ 4 4 T x copy inc ≥ 7 x 7 8 4 -1 x x 7 ∨ x x 8 -6 * dec T -5 * inc 8 *"
# 1806: "∧ T 5 x + x T + -6 inc F 8 F -6 greedy x T -7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 2450: "9 2 T x greedy? 7 x T T ∧ T copy 2 6 ¬ < pop ungreedy swap T ungreedy -6 inc -4 * 8 * inc depth *"
# 2502: "9 2 T x greedy? x x T T x T copy swap eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "T eql 7 -4 - dec ≤ 3 be x pop x x ≤ 1 x 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "-2 be 7 copy -5 -3 x F T ungreedy neg copy F 0 ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2702: "be inc 7 3 -5 x x F T -8 x 8 -10 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2702: "< x * F -8 x 4 3 neg be T pop 9 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2702: "/ inc -3 + * 3 x x 4 be -1 pop -10 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2762: "/ -7 -3 8 < pop 3 ∨ 9 inc F ≤ x x / F x -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "be 5 T 3 be x x F T -8 x 8 -10 x greedy? < 5 greedy 9 x 7 -5 dec -5 * 8 * T 9 *"
# 2762: "-2 2 T x -9 if x F T + x 8 inc T x T T -2 -9 T x -5 dec -5 * 8 * T 9 *"
# 2762: "x x ∧ + greedy F < -9 9 swap F F -9 x / x x -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "< copy 7 3 x x 4 -5 T x x -4 x eql / x x -6 x x copy -6 -6 -5 * 8 * F 9 *"
# 2762: "neg x 7 2 x * < x T swap T T 8 depth x ≤ * 8 pop 0 7 F inc -5 * -6 * F 9 *"
# 2762: "swap x x x x ¬ -3 -3 < T + x greedy? -6 -4 greedy? x x + + + x -6 -5 * 8 * ¬ 9 *"
# 2762: "inc T * 8 < pop copy ∨ 9 inc F ≤ x x / -5 x -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "1 -5 x 5 -9 if x F T + x 8 inc T x T T -2 -9 ungreedy x -5 dec -5 * 8 * T 9 *"
# 2885: "neg x 7 2 x F -3 x T swap T T 8 depth x ≤ * 8 pop 0 7 F inc -5 * -6 * inc 9 *"
# 2885: "x -7 * 8 T F * x F neg x x / eql / x ungreedy -6 x x copy x -6 -5 * 8 * inc 9 *"
# 2885: "/ -3 x -4 x 0 -5 -10 dec -10 * ≤ x x / x x -6 x x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "pop x 7 3 -5 x pop x x -8 * T -10 eql / x ungreedy -6 x x copy x -6 -5 * 8 * inc 9 *"
# 2885: "≤ 4 T x 3 x 4 -5 T x x copy x eql / x eql x 4 ≥ 7 -6 -6 -5 * 8 * inc 9 *"
# 2885: "/ x x -10 greedy -5 T ungreedy 8 x x 3 x x / x x -6 depth x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "be 0 T -1 x x 4 -5 T F x -4 x eql / x x F -8 / copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "x x eql -10 greedy -5 T ungreedy 8 x F 3 x x / x x -6 depth x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "swap -9 x -2 ∨ x x ungreedy x T x -10 inc x 9 F ungreedy greedy + + + -5 dec -5 * 8 * inc 9 *"
# 2885: "3 ≤ x x 0 inc T x / x + 1 x 2 -4 inc 8 ≤ -9 -6 7 -5 dec -5 * 8 * inc 9 *"
# 2885: "x x eql -10 greedy -5 T ungreedy 8 x F 3 x x - / x T depth x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "< copy 7 3 x x 4 -5 T x x -4 x eql / x x -6 x x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "/ -7 -10 > / 3 x x eql if ungreedy x inc T x T T -1 x x 3 -6 -6 -5 * 8 * inc 9 *"
# 2885: "-2 inc 7 copy -5 -3 x F 4 x neg copy x eql > x ungreedy 8 pop 0 F -6 ∨ -5 * 8 * inc 9 *"
# 2885: "∧ x 5 neg + x T x x if ungreedy x inc T x T T -1 x x 3 -6 -6 -5 * 8 * inc 9 *"
# 2885: "4 greedy? T -8 x greedy F x x x x 9 ungreedy x -2 6 5 greedy 9 T 7 -5 dec -5 * 8 * inc 9 *"
# 2885: "9 2 T F greedy? x x T T dec x copy x inc x x 5 0 x dec ≥ -6 -6 -5 * 8 * inc 9 *"
# 2885: "/ -7 -3 F < pop 3 ∨ 9 x F ≤ x x -5 x x F -8 T -2 -6 -6 -5 * 8 * inc 9 *"
# 2885: "swap F x -2 ∨ x x eql x T x -10 inc x 9 F ungreedy greedy + + + -5 dec -5 * 8 * inc 9 *"
# 2885: "x x 0 T x copy inc F x -8 x 8 < x greedy? < 5 greedy 3 -10 copy -6 F -5 * 8 * inc 9 *"
# 2885: "dec 2 T x greedy? -7 be F 4 x * T x x -4 -5 2 greedy + + + -5 -6 -5 * 8 * inc 9 *"
# 2885: "-2 x eql x x greedy greedy -9 F x -8 T x x -4 -5 2 greedy * + + -5 -6 -5 * 8 * inc 9 *"
# 2885: "be inc 7 3 be x x F T -8 x 8 -10 x greedy? < 5 greedy 3 -10 copy -6 F -5 * 8 * inc 9 *"
# 2885: "∧ -7 -3 x / 3 x F 4 > F F x x -4 7 5 T + + + -5 dec -5 * 8 * inc 9 *"
# 2885: "x T * 8 + pop copy -1 9 x F ≤ x x / x x -6 x x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "-4 eql * -10 greedy -5 T / x x x 3 x x / x x -6 depth x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "greedy F 7 F F inc x F T T neg copy swap eql ¬ -3 T -1 x x ≥ -6 -6 -5 * 8 * inc 9 *"
# 2885: "0 x ∧ + / -5 T ungreedy 8 x F ≤ x x / x x -6 depth x copy -6 -6 -5 * 8 * inc 9 *"
# 3185: "x x x x * dec x be * x x x x x ¬ 6 ungreedy 8 pop 0 depth -6 inc -5 * 8 * dec T *"
# 5033: "x x ∧ + / -5 F 3 neg F inc x / x T x x x x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x 0 T x -3 x < ∧ neg -7 x x x ∧ - F ungreedy 8 pop 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "x T * eql x pop x F 9 x x 9 4 x 2 x 1 -2 x -10 greedy? -6 inc -5 * 8 * inc 9 *"
# 5033: "T ≥ ungreedy T -3 x * x < 6 T < 8 depth x ≤ greedy -2 pop -1 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "/ -7 -3 x greedy? 3 x F swap T F F x x -4 -5 5 greedy greedy? 0 x -6 inc -5 * 8 * inc 9 *"
# 5033: "4 x x x x x < / T -1 x x 5 -10 x x -3 7 F x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-9 x ungreedy T -3 ∨ x F neg F inc x / x / x x x x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "9 2 T ¬ greedy? 7 x T T ∧ T copy 2 -3 ¬ < pop ungreedy swap T x -6 inc -5 * 8 * inc 9 *"
# 5033: "/ x F x / 3 x x 2 -1 T pop 5 2 greedy? if 5 x F x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "9 T be x T x x x < swap T T 8 x x ≤ x ungreedy T 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "≤ x T x 3 x be * * x * copy / inc x T T 2 greedy? x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "4 x 5 x x x < / T x inc 9 swap x ¬ x F 2 9 -10 x -6 inc -5 * 8 * inc 9 *"
# 5033: "≤ 4 T T x x 0 inc 7 -1 x ≤ 5 -10 x -10 x 7 x 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth x x x x greedy? ungreedy x greedy + x -10 if inc < 5 greedy 9 x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "be be 7 > -5 T 6 F ¬ x x 9 ungreedy x -2 6 5 greedy 9 T 7 -5 T -5 * 8 * inc 9 *"
# 5033: "x x x x x dec x be T T neg copy 0 eql x x 5 7 x ∧ x -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ 4 T T x x 0 inc x -1 8 ≤ 5 -10 x -10 x 7 x 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x ≥ 7 4 x x -3 ≥ 7 be 6 x F x depth F 5 greedy greedy -4 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth copy if x x greedy? x T > x x x pop - -1 ungreedy 8 x be 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x 4 x T x x 0 inc 7 -1 x ≤ 5 -10 x -10 x 7 x T x -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth 5 x x x greedy? x x -10 x x < ¬ F ¬ ungreedy 8 < 0 -9 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth -5 x x neg greedy? x T > x x x pop - -1 ungreedy 8 x ¬ 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x 5 x + x < / x x x < x T x / 5 greedy be dec 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x x eql F ungreedy ¬ -3 x T swap T T 8 x ∨ ≤ * 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x -10 neg + x T x x F ungreedy x inc T x T F 8 pop F 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "be inc 7 > T if -7 F 8 x T 8 T T -5 ∨ T -1 < -10 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x * eql F ungreedy ¬ greedy 3 be x pop x x 5 x x 5 greedy x -4 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "0 x 5 x -3 x < 3 -3 -7 x x x ∧ 3 T ungreedy 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x 0 ∨ 5 -10 if -7 F T x T 8 T T -5 ∨ T -1 x -10 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "/ -7 x x x 3 x + ∧ T F F 1 x -10 if 3 > T x - -6 inc -5 * 8 * inc 9 *"
# 5033: "x -8 x 5 -9 if -7 F T + T 8 inc T x T greedy greedy x x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "T eql 7 x - 4 < x -8 swap T T 8 depth x ≤ pop x pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "≥ inc 7 copy ungreedy x -3 ≥ 7 be 6 x F x depth F < greedy greedy -4 x -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ F ≤ x + x < / T -1 x ≤ be -10 x x F 7 ∧ 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "* ≥ eql F ungreedy ¬ -3 x < swap T T 8 depth x ≤ F 8 pop 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "T F F -2 greedy? depth x x dec x x x ungreedy T -2 F 0 x pop x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "F x 7 x x ¬ -3 x depth T T -10 inc -10 swap F ungreedy 8 3 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x x x if x x 3 F * -8 x x eql - F ungreedy 8 pop x 7 -6 inc -5 * 8 * inc 9 *"
# 5222: "x ≥ - x x neg greedy? x T > x x x ¬ - -1 ungreedy 8 x ¬ 7 -6 inc -5 * 8 * ungreedy 9 *"
# 5222: "/ -7 dec x / 3 x neg x - * T -10 neg > F ungreedy 8 6 0 -9 -6 inc -5 * 8 * F 9 *"
# 5222: "-2 T 5 x + x < x x x x ¬ x T x F x F x + F -6 inc -5 * 8 * F 9 *"
# 9065: "5 9 x inc 0 x x 7 x ≤ / x 1 -1 greedy x - 7 -6 + 8 -6 * dec 4 -8 ∧ * dec *"
# 9422: "swap x x x x ¬ -3 x < T T x inc depth x ≤ F x x -10 8 -6 inc -5 * 8 * inc dec *"
# 11900: "x ≥ -1 depth x x x F dec x x ≥ ungreedy T -2 F F x 6 T 5 -6 * dec T -8 ungreedy * dec *"
# 17297: "x 0 T x -3 x < ∧ neg inc 1 F inc depth x ≤ F copy x x 8 -6 * dec copy -8 3 * dec *"
# 43022: "4 greedy? T 4 x ∨ x 3 neg F inc x / x neg x x < x x 7 x dec F x -7 dec x 9 pop"
4556,43022,68
4557,42252,73
4558,43022,68
4559,43022,75
4560,43190,71
4561,56401,80
4562,2762,67
4563,3545,81
4564,2762,71
4565,2885,82
4566,2885,89
4567,2762,73
4568,2885,84
4569,1806,89
4570,5033,76
4571,85470,77
4572,43022,75
4573,42854,69
4574,43022,78
4575,42833,86
4576,44345,92
4577,5033,92
4578,61166,69
4579,2885,76
4580,179102,92
4581,43077,77
4582,83342,71
4583,54361,76
4584,2885,85
4585,2885,91
4586,43085,85
4587,43022,69
4588,38297,77
4589,2885,86
4590,76853,74
4591,2885,87
4592,5033,82
4593,42686,76
4594,43022,84
4595,9947,84
4596,1663,83
4597,2885,89
4598,2885,87
4599,5033,88
4600,42854,82
4601,43106,87
4602,43022,80
4603,2885,86
4604,43022,75
4605,43029,100
4606,2885,81
4607,2702,72
4608,2885,83
4609,41699,75
4610,2762,76
4611,5033,85
4612,55617,78
4613,2885,74
4614,42644,70
4615,41132,75
4616,43298,90
4617,43022,72
4618,42833,79
4619,2762,77
4620,1663,81
4621,42854,75
4622,5222,71
4623,52314,81
4624,34958,77
4625,2885,84
4626,43022,82
4627,32767,79
4628,5033,80
4629,2885,88
4630,5033,89
4631,43022,76
4632,26138,72
4633,150185,75
4634,43022,77
4635,41846,81
4636,42854,84
4637,42833,89
4638,43022,85
4639,53442,88
4640,2885,70
4641,49743,76
4642,21000000,72
4643,33950,72
4644,41510,69
4645,33761,89
4646,43022,76
4647,27713,79
4648,43022,71
4649,50393,79
4650,43022,77
4651,5033,91
4652,43465,79
4653,5033,80
4654,51905,77
4655,73073,87
4656,2885,84
4657,5033,86
4658,21000000,77
4659,5033,72
4660,5033,74
4661,43715,87
4662,54361,76
4663,43022,71
4664,5033,77
4665,5222,71
4666,55617,78
4667,2172,73
4668,2762,91
4669,43022,76
4670,2762,76
4671,5033,70
4672,9947,82
4673,55968,78
4674,19397,72
4675,73073,71
4676,2885,67
4677,224273,74
4678,5033,73
4679,5033,83
4680,42833,87
4681,2762,69
4682,5033,74
4683,41321,78
4684,2762,74
4685,37772,90
4686,5033,86
4687,5033,71
4688,5033,70
4689,2885,91
4690,9254,97
4691,38150,87
4692,54361,94
4693,42266,77
4694,2885,83
4695,42476,72
4696,38801,77
4697,42833,78
4698,2762,69
4699,2762,88
4700,42833,79
4701,2885,91
4702,5033,81
4703,42833,77
4704,43190,80
4705,10087,87
4706,16814,76
4707,21000000,78
4708,43022,75
4709,88571,78
4710,1663,81
4711,9212,84
4712,5222,75
4713,2885,70
4714,43778,93
4715,90272,81
4716,2702,72
4717,43211,85
4718,2885,78
4719,883078,87
4720,42833,67
4721,42833,76
4722,2885,82
4723,2885,77
4724,2885,81
4725,5033,72
4726,42252,86
4727,5033,78
4728,118262,80
4729,43022,71
4730,37352,80
4731,42833,89
4732,2885,96
4733,42854,79
4734,43022,91
4735,43022,73
4736,21000000,74
4737,73262,76
4738,5033,77
4739,43967,78
4740,2762,73
4741,42833,79
4742,49842,81
4743,43022,74
4744,103313,81
4745,43579,81
4746,2762,73
4747,2885,90
4748,2885,74
4749,25366,74
4750,43022,68
4751,42686,82
4752,5033,71
4753,478853,73
4754,39662,83
4755,42252,81
4756,55617,85
4757,2762,80
4758,36974,87
4759,47747,75
4760,44534,80
4761,41186,74
4762,84413,74
4763,43547,90
4764,42833,73
4765,44812,86
4766,74319,72
4767,79121,76
4768,5033,94
4769,43190,70
4770,2502,92
4771,42812,87
4772,42833,83
4773,5033,88
4774,2762,79
4775,41321,80
4776,43127,77
4777,41531,85
4778,44200,88
4779,55887,92
4780,43694,85
4781,43028,92
4782,54929,72
4783,45715,87
4784,51086,86
4785,42644,74
4786,32438,72
4787,38864,73
4788,42833,89
4789,42875,79
4790,88571,76
4791,2885,93
4792,24346,81
4793,62097,71
4794,29498,67
4795,42833,84
4796,2762,86
4797,150030,78
4798,5033,90
4799,43190,73
4800,2885,81
4801,43022,73
4802,2885,85
4803,110873,72
4804,42833,77
4805,1663,78
4806,43158,83
4807,2885,81
4808,2885,82
4809,42350,84
4810,2885,78
4811,49743,77
4812,82454,83
4813,47495,100
4814,45715,88
4815,2885,97
4816,41510,89
4817,21000000,71
4818,45850,69
4819,2885,73
4820,46802,77
4821,77042,96
4822,49743,77
4823,2502,80
4824,2762,72
4825,21000000,77
4826,12593,86
4827,2885,82
4828,21000000,93
4829,77672,78
4830,99722,77
4831,52472,74
4832,41510,93
4833,83705,82
4834,44891,80
4835,47486,78
4836,27713,72
4837,9758,75
4838,73388,72
4839,44302,90
4840,106337,90
4841,44345,82
4842,2702,81
4843,61375,88
4844,11851,97
4845,30737,77
4846,42833,77
4847,45715,85
4848,2502,81
4849,43022,86
4850,37352,80
4851,49743,79
4852,44340,67
4853,43022,68
4854,43022,81
4855,43022,71
4856,43022,69
4857,44345,80
4858,42086,86
4859,2885,83
4860,44723,80
4861,77042,78
4862,5033,71
4863,2885,77
4864,50393,79
4865,42833,87
4866,43022,78
4867,12593,92
4868,41699,95
4869,42833,74
4870,45850,89
4871,5033,77
4872,2885,75
4873,2019,94
4874,2885,80
4875,49743,78
4876,5033,95
4877,9590,82
4878,2762,72
4879,5033,82
4880,2885,75
4881,1663,78
4882,41510,88
4883,43022,70
4884,183778,70
4885,52472,86
4886,2885,81
4887,43022,84
4888,37877,89
4889,43211,67
4890,55118,77
4891,5033,81
4892,2702,82
4893,2762,81
4894,93665,81
4895,50393,88
4896,43022,88
4897,37163,82
4898,43022,72
4899,53442,75
4900,37352,80
4901,25067,94
4902,38815,76
4903,148673,82
4904,43022,76
4905,36302,76
4906,41321,74
4907,42833,87
4908,46046,91
4909,49742,84
4910,73262,86
4911,42875,88
4912,116995,89
4913,5033,72
4914,41510,76
4915,105662,75
4916,51527,71
4917,2762,78
4918,55617,75
4919,2885,78
4920,43022,90
4921,47031,88
4922,805399,97
4923,2885,73
4924,2885,80
4925,234772,70
4926,2762,72
4927,2762,73
4928,49842,75
4929,2885,84
4930,43318,73
4931,24878,86
4932,2502,82
4933,2762,72
4934,2885,100
4935,2762,69
4936,43022,92
4937,2885,75
4938,42833,78
4939,5033,69
4940,42812,73
4941,43022,87
4942,43022,79
4943,43022,71
4944,42833,75
4945,43022,89
4946,42602,79
4947,36302,88
4948,88207,76
4949,1663,81
4950,105182,79
4951,2885,91
4952,43022,73
4953,43169,83
4954,42833,79
4955,49390,95
4956,43022,77
4957,12782,85
4958,53669,79
4959,7574,76
4960,43022,76
# After 2400 updates
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1663: "9 2 T x greedy? x x T T 0 x copy x inc x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x ≥ -1 depth x x ≥ F dec x x ≥ ungreedy T x x 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x -7 -3 F < x x neg T 0 3 ungreedy x > x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 2 inc x greedy? x x neg T 0 x copy x > x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "T 2 T x greedy? x x neg T 0 2 < x > x x 5 0 -6 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x -7 -3 F < 3 x neg T 0 3 ungreedy x 2 x x 5 0 be 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 eql T x -9 if 9 F T + x swap inc T x T T -2 -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 > -6 x 4 x x T T 0 x copy x if x x 5 0 be T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ -7 x x T 3 x F T 0 x copy F inc x x 5 0 9 4 F -10 inc -5 * 9 * greedy 5 *"
# 1806: "≤ 4 4 T x copy inc ≥ 7 x 7 8 4 -1 x x 7 ∨ x x 8 -6 * dec T -5 * inc 8 *"
# 1806: "-2 if 4 T x copy inc ≥ -6 inc F 8 4 -1 greedy x swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 1806: "∧ T 5 x + x T + -6 inc F 8 F -6 greedy x T -7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 1806: "x if 4 T x copy inc ≥ -6 inc ≤ greedy 4 -1 greedy x swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 2019: "9 2 T F greedy? 7 x T T ∧ T copy x 6 ¬ < pop ungreedy F T ungreedy -6 inc -4 * 8 * inc depth *"
# 2172: "1 x x 5 -9 if x F 9 + x 8 F 0 ¬ < 2 if x -10 7 -10 * greedy T ∨ 3 * dec *"
# 2450: "9 2 T x greedy? 7 x T T ∧ T copy 2 6 ¬ < pop ungreedy swap T ungreedy -6 inc -4 * 8 * inc depth *"
# 2502: "9 2 T x greedy? x x T T x T copy swap eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "9 2 T x greedy? x x -6 T x -1 copy x eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "/ x -3 copy -5 -3 x F T ungreedy neg 9 F 0 ¬ < 2 ∧ x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "T eql 7 -4 - dec ≤ 3 be x pop x x ≤ 1 x 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "-2 be 7 copy -5 -3 x F T ungreedy neg copy F 0 ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "6 -10 -3 / * dec dec -5 - x T copy swap eql -7 > 2 if x -10 7 -10 * dec T ungreedy 3 * dec *"
# 2702: "x depth 5 x be x greedy? x copy -10 x x < ¬ x x 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2702: "/ inc -3 + * 3 x x 4 be -1 pop -10 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2702: "≤ x T x 3 ungreedy be * neg x * copy / -10 x + 5 greedy 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "x -7 -3 F < x x neg T 0 T pop x x x + 5 greedy 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "be inc 7 3 -5 x x F T -8 x 8 -10 x x < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2702: "x -7 * 8 T F * F T -8 -10 T -10 x F < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2762: "≤ 4 * 8 + pop copy -1 F x F ≤ x x / x x -6 x x copy x -6 -5 * 8 * F 9 *"
# 2762: "1 if 4 T x copy inc ≥ -6 inc ≤ F ungreedy x -10 if 3 > T x - -6 T -5 * 8 * ∨ 9 *"
# 2762: "< -3 x -4 -3 ∨ 7 F neg x -1 x F x / x x x x x 7 F inc -5 * -6 * F 9 *"
# 2762: "x -4 1 8 + pop / -1 T x swap ≤ x x / F x -6 pop 0 7 F inc -5 * -6 * F 9 *"
# 2762: "/ x x be greedy -5 depth ungreedy 8 x x 3 x x / x x greedy 9 x > -5 dec -5 * 8 * T 9 *"
# 2762: "x x x 2 x * < x T swap T T -8 depth x ≤ x 8 pop 0 7 F inc -5 * -6 * F 9 *"
# 2762: "4 4 * 8 + pop / -1 T x F ≤ x x / x x -6 x x depth x -6 -5 * 8 * F 9 *"
# 2762: "/ -7 -10 > / 3 x x eql if ungreedy x x T x T T -1 / x pop -6 -6 -5 * 8 * ¬ 9 *"
# 2762: "x ∨ eql -10 greedy -5 x ungreedy 8 x F 3 x x / F x -6 x x copy greedy? -6 -5 * 8 * ∨ 9 *"
# 2762: "1 x x 5 greedy -4 x F 9 + x F 1 x -10 if 3 > T x - pop -6 -5 * 8 * T 9 *"
# 2762: "-4 eql T -10 + pop / -1 T x F ≤ x x > x x -6 x x depth x -6 -5 * 8 * F 9 *"
# 2762: "neg x 7 2 x * < x T swap T T 8 depth x ≤ * 8 pop 0 7 F inc -5 * -6 * F 9 *"
# 2762: "-8 x ungreedy T -3 ∨ x F neg x inc x F x / x x x x x 7 F inc -5 * -6 * F 9 *"
# 2762: "swap F x -2 ∨ x / eql x > x -10 inc x 9 x x x + + -6 T -6 -5 * 8 * ¬ 9 *"
# 2762: "/ -7 -3 8 < pop 3 ∨ 9 inc F ≤ x x / F x -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "inc T * 8 < pop copy ∨ 9 inc F ≤ x x / -5 x -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "x x x x < pop copy ∨ 9 -2 F ≤ x x F -5 x -6 3 x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "x x ∧ + greedy F < -9 9 swap F F -9 x / x x -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "< copy 7 3 x x 4 -5 T x x -4 x eql / x x -6 x x copy -6 -6 -5 * 8 * F 9 *"
# 2762: "swap x x x x ¬ -3 -3 < T + x greedy? -6 -4 greedy? x x + + + x -6 -5 * 8 * ¬ 9 *"
# 2762: "< copy 7 3 x x 4 -5 T x x -4 -4 eql / x x greedy 9 x > -5 dec -5 * 8 * T 9 *"
# 2762: "swap x x x x 7 -3 x < T + x greedy? -6 -4 greedy? x x + + + T -6 -5 * 8 * ¬ 9 *"
# 2885: "greedy F 7 F x x -5 -10 dec -10 * ≤ x x / x / -6 x x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "neg x 7 2 x F -3 x T swap T T 8 depth x ≤ * 8 pop 0 7 F inc -5 * -6 * inc 9 *"
# 2885: "3 ≤ x x 0 inc T x / x + 1 x 2 -4 inc 8 ≤ -9 -6 7 -5 dec -5 * 8 * inc 9 *"
# 2885: "∧ depth -5 x x neg greedy? x T T x F x pop x -1 x 8 x ¬ 7 -6 greedy -5 * 8 * inc 9 *"
# 2885: "5 9 x x 0 x x 7 x F / x 1 -1 greedy x T 7 -6 + 8 -6 F -5 * 8 * inc 9 *"
# 2885: "/ -3 x -4 x copy -5 -10 dec -10 x ¬ x pop / x x x F / copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "3 7 -6 / ≥ / x T T 0 x copy x depth x ≤ * ≤ x 0 7 F inc -5 * -6 * inc 9 *"
# 2885: "dec 2 T x greedy? be be x x x x 9 -2 ≥ -2 6 x greedy neg ≥ 7 -5 dec -5 * 8 * inc 9 *"
# 2885: "9 2 T x greedy? x x T T 0 x x x 8 x x 5 0 -1 + + -5 -6 F * 8 * inc 9 *"
# 2885: "swap > x x / -5 T ungreedy 8 x F x x ≥ / x x -6 depth x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "< ≥ eql F ungreedy ¬ -3 F 4 > F F x x 3 7 5 T + + x -5 dec -5 * 8 * inc 9 *"
# 2885: "≤ 4 T x 3 x 4 -5 T x x copy x eql / x eql x 4 ≥ 7 -6 -6 -5 * 8 * inc 9 *"
# 2885: "¬ * 7 x if x < * pop x F x x ≥ / x x -6 depth x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "< copy 7 3 x x 4 * -3 -8 x ≥ -10 x greedy? < copy greedy -8 -10 copy -6 F -5 * 8 * inc 9 *"
# 2885: "-2 inc 7 copy -5 -3 x F 4 x neg copy x eql > x ungreedy 8 pop 0 F -6 ∨ -5 * 8 * inc 9 *"
# 2885: "x T * x ∨ x x ungreedy x T x T inc x 9 -1 ungreedy greedy + + + -5 dec -5 * 8 * inc 9 *"
# 2885: "9 2 T F greedy? x x T T dec x copy x inc x x 5 0 x dec ≥ -6 -6 -5 * 8 * inc 9 *"
# 2885: "x x 0 T x copy inc F x -8 x 8 < x greedy? < 5 greedy 3 -10 copy -6 F -5 * 8 * inc 9 *"
# 2885: "x x T x greedy? x x T T greedy -1 copy - eql ¬ < 2 x x -10 7 -6 F -5 * 8 * inc 9 *"
# 2885: "5 2 -3 ¬ / 3 F F 4 > x ¬ x pop copy x T x F neg copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "inc be -9 be -5 x 6 F ¬ x x 9 1 -1 greedy ungreedy T 7 -6 + 8 -6 F -5 * 8 * inc 9 *"
# 2885: "9 2 T x greedy? x / T T 0 x copy x inc - x -9 * x dec swap -6 -6 -5 * 8 * inc 9 *"
# 2885: "∧ x 5 neg + x T x x if ungreedy x inc -1 x ∨ T swap x x copy x -6 -5 * 8 * inc 9 *"
# 2885: "-2 8 7 -8 -4 -3 x F 4 x neg x F + / x x -6 depth x copy -6 -6 -5 * 8 * inc 9 *"
# 2885: "x ∨ eql -10 2 -5 x ungreedy neg + x 9 -2 x ungreedy inc 8 ≤ -9 -6 7 -5 dec -5 * 8 * inc 9 *"
# 2885: "x x ∧ + -1 F x -9 9 swap x -10 inc x 9 F ungreedy greedy + + x -5 dec -5 * 8 * inc 9 *"
# 2885: "x ∨ eql 3 -5 x pop T x -8 greedy? x -10 eql / x * -6 x x 3 -6 -6 -5 * 8 * inc 9 *"
# 2885: "/ -3 x -4 F 7 x F 4 T neg copy -4 F ¬ -3 6 -1 x x ≥ x -6 -5 * 8 * inc 9 *"
# 2885: "ungreedy * eql F greedy? T x T T ∧ T greedy? 2 -3 ¬ 9 ∨ ungreedy swap T x -6 -6 -5 * 8 * inc 9 *"
# 5033: "if if T T 2 x 0 inc x -1 8 ≤ 5 T x -2 7 7 x -8 8 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth 5 x / x greedy? x < T + x greedy? -6 -4 -5 5 greedy greedy? > x -6 inc -5 * 8 * inc 9 *"
# 5033: "-4 eql * -10 x -5 -3 / x x x 3 x x / greedy x -6 depth x copy -6 inc -5 * 8 * inc 9 *"
# 5033: "x F x -2 -3 x x inc 7 -1 x ≤ 5 T x -10 x 7 x 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ x 5 x + x < / x x x < x T x / 5 greedy be dec 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-2 if 4 T x copy -3 x 7 be 6 x -6 x depth F 5 greedy greedy -4 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "x depth copy if x x greedy? x T > x x x pop - -1 ungreedy 8 x be 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "greedy F 7 F F inc x x 2 ¬ T pop 5 2 greedy? 4 5 x F x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "swap x x x x ¬ -3 x < T T x inc depth -9 ≤ F x x -8 8 -6 inc -5 * 8 * inc 9 *"
# 5033: "9 2 T x F x x T T 0 x copy x inc F ≤ 5 0 be 4 8 -6 inc -5 * 8 * inc 9 *"
# 5033: "x -4 1 8 + pop / -1 x x x ≤ x x x x -10 x x x x -5 T -5 * 8 * inc 9 *"
# 5033: "-2 eql T x -9 if 9 x 2 6 -5 < 8 depth x ≤ greedy -2 pop -1 pop -6 inc -5 * 8 * inc 9 *"
# 5033: "x 0 T x -3 x < ∧ neg -7 x x x ∧ - F ungreedy 8 pop 0 F -6 inc -5 * 8 * inc 9 *"
# 5033: "neg F ≤ x F x < / T 0 x ≤ be -10 x x F 7 / 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-4 eql T -10 + pop / greedy T x F ≤ x x > x x -6 x T / -6 inc -5 * 8 * inc 9 *"
# 5033: "9 T be x T x x x < swap T T 8 x x ≤ x ungreedy T 0 7 -6 inc -5 * 8 * inc 9 *"
# 26138: "- dec -5 x x / -4 6 -4 x * x inc x x 3 x 7 x 0 T -6 inc -5 * 8 * inc 4 *"
# 36302: "dec 2 T x greedy? be be x T x x 9 -7 ≥ -2 greedy x greedy neg ≥ 7 -5 dec -5 T -8 * ∧ 8 *"
# 42252: "x * x 0 * - x - dec dec -2 1 - / inc x -6 -5 -8 + inc - - / - 4 -10 x x *"
4961,43085,73
4962,43001,73
4963,43148,79
4964,42896,72
4965,42917,75
4966,54162,67
4967,5033,74
4968,1663,84
4969,36302,79
4970,43022,85
4971,42833,78
4972,44156,80
4973,49743,68
4974,5033,85
4975,43022,82
4976,43022,74
4977,44302,78
4978,42833,79
4979,72842,82
4980,2885,71
4981,5033,83
4982,2885,74
4983,42917,82
4984,66647,77
4985,43022,79
4986,66122,87
4987,32578,84
4988,43127,96
4989,79121,74
4990,2172,73
4991,53442,82
4992,12593,83
4993,42770,82
4994,12593,83
4995,34013,90
4996,61922,75
4997,43022,77
4998,1663,70
4999,42252,73
5000,41321,76
5001,1663,92
5002,45715,84
5003,42602,90
5004,42833,90
5005,5033,76
5006,44723,91
5007,42887,77
5008,2019,89
5009,52094,82
5010,43022,70
5011,118433,89
5012,43022,75
5013,42476,70
5014,99533,89
5015,45715,80
5016,41699,85
5017,20342,69
5018,76853,76
5019,2762,85
5020,42252,79
5021,42833,73
5022,42833,80
5023,2762,67
5024,2885,74
5025,17129,93
5026,43967,81
5027,43022,72
5028,2885,73
5029,34454,80
5030,37961,79
5031,59822,77
5032,37352,71
5033,42812,91
5034,46046,77
5035,93863,76
5036,1663,79
5037,43001,85
5038,2885,74
5039,34517,84
5040,1663,90
5041,47747,77
5042,43001,88
5043,43400,79
5044,43022,73
5045,2762,84
5046,42833,76
5047,5033,81
5048,148862,82
5049,42077,86
5050,1663,79
5051,1806,81
5052,42728,82
5053,2762,79
5054,43085,80
5055,5033,77
5056,2019,94
5057,90083,85
5058,2702,89
5059,90272,79
5060,42833,69
5061,1806,71
5062,42917,73
5063,44102,72
5064,44345,77
5065,44912,78
5066,43148,74
5067,45715,77
5068,43022,78
5069,73262,76
5070,44702,76
5071,42455,95
5072,5033,92
5073,13475,89
5074,43085,86
5075,2762,87
5076,12593,90
5077,95391,85
5078,2762,86
5079,42252,79
5080,28847,86
5081,2885,77
5082,2702,71
5083,32438,74
5084,2762,83
5085,2885,68
5086,2762,71
5087,26138,78
5088,2762,78
5089,42896,70
5090,43001,86
5091,42833,85
5092,2885,69
5093,55698,79
5094,38297,73
5095,45850,96
5096,42252,82
5097,40334,74
5098,2762,73
5099,1663,75
5100,1663,79
5101,43022,74
5102,42854,76
5103,2762,80
5104,43778,74
5105,12593,95
5106,2762,77
5107,44366,72
5108,2885,86
5109,42833,71
5110,2885,86
5111,48083,82
5112,2762,82
5113,2885,80
5114,2885,79
5115,41510,72
5116,2885,84
5117,2762,83
5118,2762,77
5119,132797,79
5120,45542,86
5121,5222,90
5122,29522,83
5123,35462,82
5124,17822,79
5125,33523,85
5126,32270,68
5127,43510,80
5128,40334,82
5129,41552,83
5130,2762,80
5131,50393,83
5132,65702,91
5133,103313,68
5134,2762,71
5135,2885,71
5136,41861,74
5137,35651,76
5138,42980,87
5139,2502,83
5140,5033,86
5141,43022,66
5142,1663,74
5143,38297,88
5144,32893,83
5145,5033,81
5146,2702,75
5147,60032,87
5148,2885,73
5149,29414,73
5150,58142,78
5151,48398,79
5152,48692,89
5153,16513,68
5154,43022,75
5155,43022,73
5156,27538,99
5157,5033,94
5158,2702,79
5159,1663,82
5160,2502,82
5161,5033,83
5162,52472,73
5163,240992,80
5164,1663,73
5165,277562,82
5166,42959,87
5167,2762,77
5168,50393,84
5169,5033,73
5170,43211,84
5171,21000000,80
5172,43295,82
5173,43022,81
5174,43022,79
5175,43022,72
5176,42917,77
5177,43579,78
5178,43022,75
5179,44302,71
5180,2702,79
5181,27902,84
5182,44072,80
5183,43232,88
5184,2885,75
5185,5033,81
5186,2885,74
5187,2502,86
5188,2885,73
5189,2762,103
5190,42077,72
5191,2762,80
5192,42938,70
5193,396353,88
5194,42875,89
5195,44302,70
5196,43022,74
5197,34517,82
5198,43022,82
5199,43022,82
5200,2885,89
5201,9212,80
5202,43022,82
5203,55968,79
5204,2885,73
5205,51905,88
5206,2702,79
5207,43190,69
5208,1663,75
5209,2885,80
5210,5831,87
5211,43022,97
5212,43022,87
5213,31472,90
5214,65597,82
5215,43022,78
5216,2762,81
5217,8813,68
5218,111062,79
5219,43022,69
5220,11410,87
5221,45404,95
5222,55698,82
5223,2762,69
5224,86912,80
5225,2502,81
5226,2885,82
5227,1663,77
5228,58845,96
5229,42938,80
5230,11851,77
5231,42812,90
5232,104258,77
5233,1663,77
5234,42833,78
5235,5033,84
5236,42980,74
5237,71830,77
5238,2762,71
5239,41321,93
5240,2762,77
5241,90272,80
5242,42182,70
5243,2762,85
5244,42833,99
5245,2702,80
5246,42833,87
5247,2702,74
5248,55412,76
5249,43022,75
5250,61810,74
5251,42497,87
5252,43022,75
5253,41321,76
5254,42917,70
5255,2702,71
5256,43526,72
5257,43028,75
5258,2762,82
5259,43022,71
5260,1663,77
5261,21000000,85
5262,2702,71
5263,45850,70
5264,2762,71
5265,43022,82
5266,2702,65
5267,22736,102
5268,43022,68
5269,2762,76
5270,53942,70
5271,2885,82
5272,46004,85
5273,1663,81
5274,2885,90
5275,9002,70
5276,42833,74
5277,43022,83
5278,43732,70
5279,50393,87
5280,43232,78
5281,85420,80
5282,25018,73
5283,43967,79
5284,42833,90
5285,2762,75
5286,32893,91
5287,42833,81
5288,24542,74
5289,2702,75
5290,43022,74
5291,3332,76
5292,95753,80
5293,43022,81
5294,43022,71
5295,5033,79
5296,43022,79
5297,43022,87
5298,43190,89
5299,16814,73
5300,1663,86
5301,2885,85
5302,42644,85
5303,124670,75
5304,2702,75
5305,1663,83
5306,43022,85
5307,33523,71
5308,41678,75
5309,43085,72
5310,54162,76
5311,1663,79
5312,5033,94
5313,46336,78
5314,55698,84
5315,43589,81
5316,9898,84
5317,71372,72
5318,82712,91
5319,33523,81
5320,23933,88
5321,1652,86
5322,9898,76
5323,15806,75
5324,37352,70
5325,42938,96
5326,73052,87
5327,2762,82
5328,47222,79
5329,43022,83
5330,43022,77
5331,2762,68
5332,1806,81
5333,42938,82
5334,15722,91
5335,35840,80
5336,1663,77
5337,42833,84
5338,43022,87
5339,80822,77
5340,38297,79
5341,43589,86
5342,2762,72
5343,2762,73
5344,49182,69
5345,9254,93
5346,48734,94
5347,42833,74
5348,42833,87
5349,21000000,74
5350,2762,77
5351,1806,87
5352,79310,88
5353,36302,88
5354,43022,78
5355,43022,88
5356,1663,67
5357,2702,74
5358,55617,83
5359,1663,86
5360,47078,77
5361,43022,75
5362,2762,99
5363,2762,79
5364,1663,75
5365,44198,81
# After 2600 updates
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1663: "x x 0 T x copy inc F 4 8 neg < x eql > -5 5 0 4 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "9 2 T copy -5 -3 -5 9 4 8 neg copy x eql > x 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "5 > -6 x 4 x inc T T 0 x copy x if x x 5 0 be T x -10 inc -5 * 9 * greedy 5 *"
# 1663: "-3 dec x / > x x x x -1 x > inc T ¬ T T -2 -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "dec 2 T x greedy? be be 6 neg x x 9 F ≥ -2 T T -2 -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 eql T x -9 if 9 F T + x swap inc T x T T -2 -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 2 T x greedy? x x T T 0 x copy x inc x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "∧ depth -5 x x neg greedy? x T T x F x pop x -1 x -2 ¬ T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ 4 greedy + * 3 x x T be -1 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "be x x x 2 copy x neg T 0 2 < x > x x ¬ 0 dec 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "∧ T 5 x -3 x -9 < F + x 9 -2 x depth inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "be inc 7 3 -5 x x neg x 0 3 ungreedy x 2 x x 5 0 be 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x 0 T x copy -9 T 4 8 neg < x eql > -5 5 0 4 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x -7 -3 F < 3 x neg T 0 3 ungreedy x 2 x x 5 0 be 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 2 -3 ¬ / x F F T F x copy F inc x x 5 0 9 4 F -10 inc -5 * 9 * F 5 *"
# 1663: "9 2 inc x greedy? x x neg T 0 x copy x > x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 eql 7 copy -5 -3 x F 4 8 neg copy x eql > x 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x -7 -3 F < x x neg T 0 3 ungreedy x > x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "be 2 greedy? x greedy? 7 x 2 T ∧ T copy x 2 x x 5 0 be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 if -4 T x F inc ≥ -6 inc F 8 4 -1 greedy x 5 0 9 -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "-2 -7 x F < x x neg T 0 3 9 ungreedy x x x 5 T 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x depth 5 x be 3 x -6 T 0 3 ungreedy x 2 x x 5 0 T 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x ≥ -1 depth x x ≥ F dec x x ≥ ungreedy T x x 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "T ∨ eql -10 2 -5 -9 ungreedy 1 + x 9 -2 x depth inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x x x < 6 copy ∨ 6 0 F x x x > x 5 0 4 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "/ -7 x 8 < pop 3 ∨ 9 inc F ≤ x 2 x x 7 0 be x 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "T 2 T x greedy? x x neg T 0 2 < x > x x 5 0 -6 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ -7 x x T 3 x F T 0 x copy F inc x x 5 0 9 4 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "6 -10 -3 x * dec neg F T ungreedy neg 9 ¬ 0 ¬ -5 5 ≥ + 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "/ inc greedy + * 3 x x T be -1 pop -10 eql > 7 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1806: "x x 0 T x copy ∨ x 4 8 neg -1 4 -1 greedy x swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 1806: "9 ¬ T x greedy? x x T T 9 x x x 8 2 x 7 ∨ x x 8 -6 * dec T -5 * inc 8 *"
# 1806: "5 2 -3 3 / x ungreedy F x if + x x * copy greedy? swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 2019: "dec 2 T F greedy? 7 x T T ∧ T copy x 6 ¬ < pop F F T ungreedy -6 inc -4 * 8 * inc depth *"
# 2019: "9 2 T F greedy? 7 x T T ∧ T copy x 6 ¬ < pop ungreedy F T ungreedy -6 inc -4 * 8 * inc depth *"
# 2172: "1 x x 5 -9 if x F 9 + x 8 F 0 ¬ < 2 if x -10 7 -10 * greedy T ∨ 3 * dec *"
# 2450: "9 2 T x greedy? 7 x T T ∧ T copy 2 6 ¬ < pop ungreedy swap T ungreedy -6 inc -4 * 8 * inc depth *"
# 2502: "9 2 T x greedy? x x T T x T copy swap dec ¬ ∧ 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "9 2 T x greedy? x x T T x T copy swap eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "-2 be 7 copy ∧ -3 F F T ungreedy neg copy F 8 ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "6 -10 -3 / * dec dec -5 - x T copy swap eql -7 > 2 if x -10 7 -10 * dec T ungreedy 3 * dec *"
# 2502: "-2 be 7 copy -5 -3 x F T ungreedy neg copy F 0 ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "9 2 T x greedy? x x -6 T x -1 copy x eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2702: "< T * 8 < pop copy 8 T 0 T ≥ x x > + 5 greedy x x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "-2 be 7 copy 9 ∨ ¬ F neg x dec copy / -7 x + 5 greedy 9 x 5 -6 * ∧ ∨ -8 * ∧ 8 *"
# 2702: "x -7 * 8 T F * F T -8 -10 T -10 x F < 5 greedy 9 x ≥ -6 * ∧ T -8 * ∧ 8 *"
# 2702: "x T * 8 < pop copy ∨ T 0 T ≥ x x x + 5 greedy x x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "9 2 1 x greedy? x / T T -2 x copy x inc - x -9 * 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "9 2 inc x greedy? x x eql T ∧ T copy / -7 x + 5 x 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "x T swap 3 -5 x pop be x x greedy? x / -7 x + 5 greedy 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "x -7 -3 F < x x neg dec 0 T greedy x x x + eql greedy 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2762: "4 4 * 8 + pop / -1 T x F ≤ x x / x x -6 x x depth x -6 -5 * 8 * F 9 *"
# 2762: "-9 / x + inc F -7 x 3 x 4 -1 -8 x inc x be x pop 3 / -6 T -5 * 8 * F 9 *"
# 2762: "x x x x x 7 -3 eql < T + x greedy? -6 -4 greedy? x x x x 7 F inc -5 * -6 * F 9 *"
# 2762: "greedy x x x x copy -3 x < T + x greedy? -6 -4 greedy? x -3 + + F T -6 -5 * 8 * ¬ 9 *"
# 2762: "1 -5 x 5 greedy -4 x F 9 + x F 1 x -10 if -2 > T T 1 -6 -6 -5 * 8 * greedy? 9 *"
# 2762: "x depth 5 2 -5 + x F 0 < neg 9 F 0 ¬ < 2 ∧ x -10 greedy? -6 -6 -5 * 8 * T 9 *"
# 2762: "9 2 T F greedy? x x T T dec inc 9 1 / 8 -4 x / * x - pop -6 -5 * 8 * greedy? 9 *"
# 2762: "< copy 7 3 x x 4 -5 T x x -4 -4 eql / x x greedy 9 x > -5 dec -5 * 8 * T 9 *"
# 2762: "9 2 T x greedy? x x T T x T copy swap ¬ ¬ ∧ 2 if x -10 7 -6 -6 -5 * 8 * T 9 *"
# 2762: "< copy 7 3 x x 4 -5 T x x -4 x eql / x x -6 x x copy -6 -6 -5 * 8 * F 9 *"
# 2762: "ungreedy * eql F greedy? ∨ x T eql ∧ ≥ greedy? 2 -3 pop x ∨ ungreedy swap x - pop -6 -5 * 8 * T 9 *"
# 2762: "x x ∧ + greedy F < -9 9 swap F F -9 x / x x -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "-2 eql 7 copy swap -3 x F 4 8 neg copy x x / F -4 -6 4 0 7 F inc -5 * -6 * F 9 *"
# 2762: "x x x 2 x * < x T swap T T -8 depth x ≤ x 8 pop 0 7 F inc -5 * -6 * F 9 *"
# 2762: "9 2 8 4 greedy? x x -6 T x -1 copy x eql ¬ < x x x -10 3 greedy? -6 -5 * 8 * ∨ 9 *"
# 2762: "neg x 7 2 x * < x T swap T T 8 depth x ≤ * 8 pop 0 7 F inc -5 * -6 * F 9 *"
# 2762: "/ -7 -10 > / 3 x x eql if ungreedy x x T x T T -1 / x pop -6 -6 -5 * 8 * ¬ 9 *"
# 2762: "-4 eql T -10 + pop / -1 T x F ≤ x x > x x -6 x x depth x -6 -5 * 8 * F 9 *"
# 2762: "swap x x x x 7 -3 x < T + x greedy? -6 -4 greedy? x x + + + T -6 -5 * 8 * ¬ 9 *"
# 2762: "/ x x be greedy -5 depth ungreedy 8 x x 3 x x / x x greedy 9 x > -5 dec -5 * 8 * T 9 *"
# 2762: "inc T -9 be + - / -1 T x F ≤ x x / x x -6 x x depth 4 -6 -5 * 8 * ∨ 9 *"
# 2762: "x -7 x 8 T F * F x > x -10 inc x 9 x x x + -6 -6 x -6 -5 * 8 * ¬ 9 *"
# 2762: "x -7 * 8 T F 3 F T -8 -10 T -10 x F greedy? 5 x 9 x ≥ ≤ -6 -5 * 8 * F 9 *"
# 2762: "x -3 ∧ + -1 F x -9 9 neg F F -9 x / x 6 -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "-4 eql T -10 + pop / -1 T x F x x x > x x -6 x neg depth x -6 -5 * 8 * F 9 *"
# 2762: "-2 eql 7 copy -5 -3 inc ∨ -6 inc ≤ F ungreedy x -10 if 3 > T ¬ - -6 T -5 * 8 * ∨ 9 *"
# 2762: "-4 eql 8 -10 + 7 ∨ -1 T x inc 9 1 / 8 -4 x / copy x - pop -6 -5 * 8 * greedy? 9 *"
# 2762: "swap inc -5 x x / -4 6 F x * copy inc x x 3 x -1 x x pop -6 -6 -5 * 8 * ¬ 9 *"
# 2885: "∧ x 5 neg + x T x x if ungreedy x inc -1 x ∨ T swap x x copy x -6 -5 * 8 * inc 9 *"
# 2885: "9 2 T x greedy? x x T T 0 x copy x x x 7 5 T + < ≤ -5 dec -5 * 8 * inc 9 *"
# 2885: "/ -3 x -4 F 7 x F 4 T neg copy -4 F ¬ -3 6 -1 x x ≥ x -6 -5 * 8 * inc 9 *"
# 2885: "F x x 2 x F -3 x F swap T T 8 depth x ≤ * 8 pop 0 F T -6 -5 * 8 * inc 9 *"
# 2885: "5 9 x x 0 x x 7 x F / x 1 -1 greedy x T 7 -6 + 8 -6 F -5 * 8 * inc 9 *"
# 2885: "9 x T > greedy? x x T T x T copy swap eql ¬ F 2 if x -10 7 -10 -6 -5 * 8 * inc 9 *"
# 2885: "4 > x x / / T ungreedy 8 x F x x ≥ x x x -6 depth x copy be -6 -5 * 8 * inc 9 *"
# 2885: "swap x x x x ¬ -3 x < T T x inc depth 7 ≤ F x x T 7 F inc -5 * -6 * inc 9 *"
# 3332: "x x x 9 if * < x T swap T T -8 depth x ≤ x 8 swap 0 7 F copy -5 * -6 * F 9 *"
# 5033: "x 2 5 x / x greedy? x pop T + x greedy? -6 -4 -5 -8 greedy greedy? > x -6 inc -5 * 8 * inc 9 *"
# 5033: "5 > -6 x x -4 x F greedy? ≤ x F 1 x -10 pop x ungreedy T 0 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "∧ 2 7 F F inc x -2 2 ¬ T pop 5 2 greedy? 4 5 x F x 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "ungreedy -9 - -10 + pop / greedy T x -4 ≤ -8 x > x x -6 x T / -6 inc -5 * 8 * inc 9 *"
# 5033: "x inc 7 3 F x x F T -8 -7 8 -10 x x < 7 7 x dec 8 -6 inc -5 * 8 * inc 9 *"
# 5033: "-4 eql T -10 + pop / greedy T x F ≤ x x > x x -6 x T / -6 inc -5 * 8 * inc 9 *"
# 5033: "inc be -9 be -5 x 6 F ¬ x x * 1 ¬ x pop 5 greedy be dec 7 -6 inc -5 * 8 * inc 9 *"
# 5033: "-4 eql * -10 x -5 -3 / x x x 3 x x / greedy x -6 depth x copy -6 inc -5 * 8 * inc 9 *"
# 11410: "-2 x 7 copy -5 -3 x F T ungreedy neg 9 x x x + 5 greedy ¬ T 5 -6 -6 T * 8 * greedy? 9 *"
5366,43022,70
5367,42980,72
5368,43022,68
5369,42938,69
5370,43085,80
5371,1663,75
5372,43022,72
5373,44340,81
5374,51086,70
5375,2762,81
5376,9898,71
5377,43022,88
5378,2019,94
5379,42938,84
5380,53442,67
5381,44302,68
5382,42980,73
5383,115409,69
5384,41531,91
5385,43022,79
5386,52932,96
5387,1663,80
5388,1663,82
5389,1663,85
5390,55698,80
5391,43022,74
5392,42252,70
5393,51610,98
5394,41933,102
5395,42875,83
5396,42917,75
5397,25207,81
5398,14672,86
5399,43169,83
5400,1663,77
5401,52242,74
5402,42854,94
5403,20293,86
5404,41867,87
5405,42707,78
5406,102557,76
5407,32438,82
5408,2762,72
5409,128072,79
5410,44366,71
5411,2762,70
5412,43022,75
5413,4252,70
5414,2702,76
5415,42938,87
5416,43298,76
5417,43022,74
5418,73073,92
5419,42854,68
5420,45902,82
5421,2762,79
5422,55698,72
5423,2762,83
5424,1663,77
5425,2502,83
5426,2762,78
5427,44030,71
5428,48778,90
5429,43022,69
5430,42833,84
5431,50393,75
5432,34370,83
5433,43022,80
5434,37352,82
5435,43127,84
5436,76097,80
5437,2702,78
5438,43127,82
5439,1663,83
5440,39242,84
5441,43022,75
5442,1663,85
5443,43022,72
5444,42644,73
5445,2702,76
5446,21000000,74
5447,5033,70
5448,44842,84
5449,25018,67
5450,17822,74
5451,42980,68
5452,41342,69
5453,1663,79
5454,43022,78
5455,237962,70
5456,41846,87
5457,43022,71
5458,2762,75
5459,1663,85
5460,1663,76
5461,1663,83
5462,4252,81
5463,42917,75
5464,1663,90
5465,31528,96
5466,21000000,81
5467,44302,75
5468,1663,76
5469,796978,85
5470,42833,74
5471,14672,95
5472,25018,69
5473,2885,81
5474,1663,77
5475,42938,84
5476,1886,69
5477,47698,74
5478,43542,78
5479,43118,93
5480,2762,75
5481,5033,74
5482,42644,73
5483,1663,76
5484,2762,69
5485,52472,67
5486,43022,88
5487,45850,76
5488,43022,81
5489,43022,68
5490,28418,78
5491,47078,76
5492,1663,75
5493,2502,76
5494,68537,90
5495,43001,77
5496,43022,82
5497,1663,67
5498,4252,65
5499,50582,73
5500,1663,90
5501,2502,92
5502,80822,87
5503,42770,73
5504,42967,75
5505,2502,89
5506,44302,76
5507,43022,100
5508,2762,77
5509,2450,108
5510,45850,76
5511,1663,83
5512,43022,77
5513,43022,73
5514,2762,76
5515,44912,75
5516,43022,72
5517,43022,73
5518,2762,71
5519,47747,77
5520,1663,75
5521,41342,75
5522,5033,77
5523,42392,77
5524,2172,89
5525,42252,84
5526,24822,84
5527,44302,79
5528,1663,81
5529,43022,86
5530,1663,79
5531,46592,75
5532,26012,80
5533,98366,77
5534,2762,85
5535,37142,79
5536,1663,77
5537,43022,79
5538,40754,90
5539,65198,80
5540,43526,80
5541,43211,79
5542,47894,74
5543,42182,95
5544,76342,85
5545,43106,80
5546,1663,82
5547,43022,81
5548,20972,88
5549,43022,80
5550,42266,80
5551,2762,78
5552,44408,94
5553,42875,74
5554,133553,83
5555,1663,80
5556,46454,74
5557,43022,90
5558,43477,76
5559,2762,76
5560,2762,75
5561,1663,82
5562,43400,80
5563,61922,70
5564,43022,83
5565,43022,87
5566,2762,67
5567,2762,78
5568,2502,74
5569,41699,75
5570,42875,88
5571,1663,87
5572,2502,82
5573,55968,85
5574,17822,75
5575,42077,91
5576,54162,67
5577,42077,76
5578,47747,77
5579,55968,77
5580,1663,81
5581,1663,81
5582,63511,106
5583,58142,77
5584,43022,76
5585,2502,76
5586,43022,73
5587,77042,82
5588,43022,87
5589,2762,72
5590,35000,94
5591,1663,78
5592,42833,84
5593,2762,88
5594,66451,91
5595,2762,84
5596,42875,75
5597,2885,78
5598,2762,81
5599,2762,73
5600,43732,73
5601,42665,89
5602,56266,84
5603,1663,77
5604,42917,82
5605,43022,79
5606,22862,82
5607,1663,79
5608,1663,83
5609,1663,77
5610,77672,82
5611,4252,70
5612,42917,78
5613,30254,91
5614,2762,81
5615,70049,72
5616,43022,76
5617,45978,69
5618,42455,98
5619,17822,87
5620,33523,79
5621,43022,83
5622,80822,78
5623,43022,71
5624,2702,88
5625,43022,75
5626,94052,85
5627,49842,75
5628,38297,74
5629,43022,79
5630,4328,85
5631,43466,76
5632,1663,86
5633,48020,85
5634,55968,79
5635,102557,71
5636,73262,86
5637,9947,74
5638,5033,73
5639,43022,78
5640,43022,81
5641,43022,85
5642,41510,67
5643,94997,76
5644,14672,87
5645,9947,78
5646,1886,80
5647,1663,74
5648,47690,72
5649,44302,73
5650,5222,72
5651,43022,84
5652,43085,84
5653,65702,78
5654,2702,81
5655,43022,78
5656,44366,79
5657,76622,77
5658,44345,84
5659,43022,83
5660,50393,73
5661,43526,87
5662,21000000,90
5663,42833,87
5664,1663,74
5665,17822,84
5666,42833,81
5667,42917,83
5668,17507,69
5669,1658,79
5670,53442,71
5671,45522,80
5672,25207,84
5673,43652,79
5674,42917,75
5675,2762,76
5676,1663,79
5677,185906,84
5678,1663,79
5679,68208,75
5680,2762,71
5681,2762,91
5682,2172,77
5683,37982,84
5684,42266,77
5685,46613,87
5686,2702,98
5687,76258,79
5688,27272,76
5689,51527,88
5690,44912,85
5691,45710,81
5692,42791,82
5693,43022,79
5694,42077,82
5695,39662,85
5696,43757,81
5697,1663,76
5698,1663,88
5699,2702,74
5700,1663,89
5701,2885,82
5702,43029,81
5703,85855,84
5704,14672,89
5705,43022,89
5706,47747,73
5707,1663,68
5708,42959,81
5709,42812,83
5710,9212,85
5711,2702,68
5712,2885,92
5713,1663,76
5714,42917,72
5715,35462,76
5716,1663,80
5717,1663,78
5718,53438,87
5719,99722,71
5720,43022,76
5721,1663,70
5722,43022,78
5723,1663,84
5724,37982,77
5725,43022,74
5726,5033,74
5727,43001,80
5728,6272,83
5729,1663,83
5730,1663,73
5731,1663,96
5732,16436,80
5733,43211,81
5734,2885,81
5735,42854,86
5736,1663,78
5737,30212,77
5738,1663,71
5739,42854,82
5740,46802,85
5741,17822,79
5742,73262,72
5743,1663,82
5744,21000000,70
5745,43022,76
5746,140498,83
5747,43001,77
5748,42077,75
5749,44072,86
5750,2762,86
5751,43022,81
5752,33523,72
5753,1663,83
5754,43022,71
5755,59928,87
5756,41510,81
5757,55968,81
5758,42938,84
5759,94052,74
5760,80822,75
5761,43022,70
5762,1663,85
5763,17647,84
5764,42854,70
5765,373723,68
5766,49028,79
5767,43106,94
5768,111062,70
5769,21000000,75
5770,33523,74
# After 2800 updates
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1658: "≤ neg greedy + * 3 x x T be -1 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1663: "be inc 7 3 -5 x x neg x 0 3 ungreedy x 2 x x 5 0 be 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x dec -9 be ∧ x 6 be ¬ + x swap inc T > inc x -2 -6 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "6 -10 -3 x * dec neg F T ungreedy neg 9 ¬ 0 ¬ -5 5 ≥ + 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x x x x < 6 copy ∨ 6 0 F x x x > x 5 0 4 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "-4 be -9 copy -5 -3 x x T ungreedy x < F x x 2 depth -6 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 < T x greedy? x ≥ T depth 0 x copy x x x if T 0 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ depth 5 x be 3 x -6 T 0 3 ungreedy x 2 depth -5 5 0 4 7 F -10 inc -5 * 9 * F 5 *"
# 1663: "x + T x -9 if 9 4 T + x swap inc T x T T -2 -9 + 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "be 2 greedy? x greedy? if 9 inc T + -9 swap -10 -9 -7 > 2 x -6 -10 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "∧ T 5 x -3 x -9 < F + x 9 -2 x depth inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 be 7 T -5 -3 x F T 0 x copy eql > x x 5 x be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "T ∨ eql -10 2 -5 -9 ungreedy 1 + x 9 -2 x depth inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "3 -10 8 * greedy? x inc F neg 8 neg < x eql > x x 0 x 3 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "F depth -5 x -9 if 9 F T + x swap inc T x T x -2 -6 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "1 x F 5 -9 if * F 4 8 neg T x eql > -5 5 0 4 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "5 dec -6 T 2 copy x neg T 0 2 < x dec x x x 0 dec 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x 0 T x copy -9 T 4 8 neg < x eql > -5 5 0 4 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "5 > T x x copy -9 T 4 * neg < x - dec + -3 0 4 -2 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x -7 -3 F depth x x x T 0 3 ungreedy x > x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "< copy ∨ greedy -1 F x -9 9 neg -7 F -9 x / x - -6 x x 7 -10 inc -5 * 9 * F 5 *"
# 1663: "≤ 4 5 x x 3 x -6 T 0 3 2 x 2 depth -5 5 0 4 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 2 T F greedy? x * T F x * copy -7 x x pop x -1 9 -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "/ -7 x x T 3 x F T 0 x copy F inc x x 5 0 9 4 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 eql T x -9 if 9 F T + x swap inc T x T T -2 -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ 4 greedy + * 3 x x T be -1 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x F * 8 < pop copy ∨ T 5 T ≥ x x -4 F 5 0 be T 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 eql 7 copy -5 -3 x F 4 8 neg copy x eql > x 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "6 -10 -3 swap * dec pop F 5 ungreedy x > inc T ¬ T T -2 -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ 2 T x greedy? be be 6 neg x x 9 F ≥ -2 T F -2 T x 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 be 7 T -5 -2 x < F + x > 2 x depth inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 ¬ -6 x greedy? x x T T 0 depth < x > x x ¬ 0 dec 4 5 -10 inc -5 * 9 * greedy 5 *"
# 1663: "be x x x 2 copy x neg T 0 2 < x > x x ¬ 0 dec 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 -7 x F < x x neg T 0 3 9 ungreedy x x x 5 T 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "T x T F < 3 x + x 0 3 ungreedy x 2 x x 5 0 be 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x -7 -3 F < 3 x neg T 0 3 ungreedy x 2 x x 5 0 be 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 eql 7 copy swap x neg F T T neg 9 ¬ 0 ¬ -8 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "be 2 -8 x greedy? x inc neg > inc F 8 4 -1 greedy -1 -7 0 9 -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "-4 2 T x greedy? x x x T + 2 < x > x x ungreedy 0 -6 depth 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "dec 2 F x greedy? 7 x T T ∧ T copy x 6 ¬ < pop F -9 T 7 -10 inc -5 * 9 * F 5 *"
# 1663: "greedy? x 0 T x copy inc F neg 8 neg 9 ungreedy depth x x 5 T 4 4 7 -10 inc -5 * 9 * ∨ 5 *"
# 1663: "5 > -6 T x copy -9 T 4 8 neg < x - dec -5 -3 0 4 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "> 2 T x greedy? x inc neg > inc F 8 4 -1 greedy -1 -7 0 9 -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "9 2 T copy -5 -3 -5 9 4 8 neg copy x eql > x 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "-2 > -6 F x / -9 T dec -10 x swap inc / x T T -2 -9 T 7 -10 -9 -5 * 9 * greedy 5 *"
# 1663: "x -7 * 8 * 3 x x T be F pop ≤ x > 8 5 0 4 4 ∨ -10 inc -5 * 9 * F 5 *"
# 1663: "x x x x x 7 -3 eql < greedy x x greedy? inc x x 5 0 be 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "9 T swap x greedy? x / T F + x 9 -2 x depth inc x 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x 0 T x copy inc F neg 8 neg < x eql > x x 0 T 3 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 2 -3 ¬ / x F F T F x copy F inc x x 5 0 9 4 F -10 inc -5 * 9 * F 5 *"
# 1663: "-4 x ∨ x greedy? x ¬ x T 0 dec < x > x x 2 pop x -10 7 -10 inc -5 * 9 * F 5 *"
# 1663: "4 -3 * 8 + 8 / T T 0 x copy x inc x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 2 inc x greedy? x T neg T 0 x copy x > x x 5 x be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 if 7 eql x F be dec -6 eql 2 pop ≤ x > 8 x 0 4 4 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "x -7 2 F inc x x 9 inc -7 -10 inc + 3 x / 0 0 4 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ inc greedy + * 3 x x T be -1 pop -10 eql > 7 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "5 9 x x 0 x x x be F / x 1 T inc T T -2 -9 7 7 -10 inc -5 * 9 * be 5 *"
# 1663: "x x ∧ + greedy 3 x ≥ -1 0 3 ungreedy be 2 x x 5 0 be 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "be 2 greedy? x greedy? 7 x 2 T ∧ T copy x 2 x x 5 0 be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "x ≥ -1 depth x x ≥ F dec x x ≥ ungreedy T x x 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x be 7 / T 3 x F T 0 x 1 F inc x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1806: "5 2 -3 3 / x ungreedy F x if + x x * copy greedy? swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 1886: "x ¬ T x greedy? x x T T 9 x F x 8 2 x 7 ∨ x x 8 -6 * dec T -5 * F 8 *"
# 2019: "9 2 T F greedy? 7 x T T ∧ T copy x 6 ¬ < pop ungreedy F T ungreedy -6 inc -4 * 8 * inc depth *"
# 2172: "x x x + greedy F 6 if x swap F x -9 x / > 2 if -6 -10 7 -10 * ¬ T T 3 * dec *"
# 2450: "9 2 T x greedy? 7 x T T ∧ T copy 2 6 ¬ < pop ungreedy swap T ungreedy -6 inc -4 * 8 * inc depth *"
# 2502: "-4 eql 8 x greedy? x x -6 T x 4 copy 0 eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "neg > 7 2 x x x T x x -1 copy x eql ¬ x 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "* 2 T F 9 x x T T x -1 copy x eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "9 2 T x greedy? x x -6 T x -1 copy x eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "-4 be -9 copy -5 -3 x F T ungreedy neg copy F 0 ¬ x 2 if -1 -10 7 -10 * dec T ∨ 3 * dec *"
# 2702: "9 2 inc x greedy? x x eql T ∧ T copy / -7 x + 5 x 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "x -9 swap 3 < x x neg dec 0 T pop T x x + eql greedy 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "/ -7 -10 > / 3 x x eql if -6 x x T x > T -1 / greedy? greedy? x -6 -5 * 8 * ∨ 8 *"
# 2702: "∧ x 5 neg + x x eql T ∧ T inc / -7 x + 5 x 9 7 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "x -7 -3 F < x x neg dec 0 T greedy x x x + eql greedy 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2762: "swap x x x x 7 -3 x < T + x greedy? -6 -4 greedy? x x + + + T -6 -5 * 8 * ¬ 9 *"
# 2762: "greedy? x F T x -5 depth ungreedy 8 x x 3 x x / x x greedy 9 x > -5 dec -5 * 8 * T 9 *"
# 2762: "9 2 8 4 greedy? x x -6 T x -1 copy x eql ¬ < x x x -10 3 greedy? -6 -5 * 8 * ∨ 9 *"
# 2762: "x -7 * 8 T F 3 F T -8 -10 T -10 x F greedy? 5 x 9 x ≥ ≤ -6 -5 * 8 * F 9 *"
# 2762: "x x ∧ + greedy F < -9 9 swap F F -9 x / x x -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "-4 eql 7 2 x * < x T swap T T x depth x ≤ * 8 pop T 7 F inc -5 * -6 * F 9 *"
# 2762: "9 2 T x greedy? x x T T x x F ≥ x / x 6 -6 x x copy T -6 -5 * 8 * ∨ 9 *"
# 2762: "1 -5 x 2 -3 * < x T swap T T -8 depth x ≤ x 2 pop 0 7 F inc -5 * -6 * F 9 *"
# 2762: "inc T -9 be + - / -1 T x F ≤ x x / x x -6 x x depth 4 -6 -5 * 8 * ∨ 9 *"
# 2762: "5 3 F 3 / x 9 F T F neg copy swap eql ¬ < pop 2 swap T 7 F inc -5 * -6 * swap 9 *"
# 2762: "-2 -9 ungreedy x T 3 x F T 0 x -10 inc x 9 x x x + -6 -6 x -6 -5 * 8 * ¬ 9 *"
# 2762: "9 2 T F greedy? x x T T dec inc 9 1 / 8 -4 x / * x - pop -6 -5 * 8 * greedy? 9 *"
# 2762: "5 9 F x 0 x depth 7 be F / x 1 T inc T T -2 -9 T < -6 -6 -5 * 8 * T 9 *"
# 2885: "/ -3 x -4 F 7 x F 4 T neg copy -4 F ¬ -3 6 -1 x x ≥ x -6 -5 * 8 * inc 9 *"
# 2885: "-2 be 7 be ∧ x 6 be copy + x swap inc T T x x -2 -6 T copy -2 -6 -5 * 8 * inc 9 *"
# 5033: "greedy 2 T F 9 / -4 8 F x * 8 x x x 4 -6 7 x dec 8 -6 inc -5 * 8 * inc 9 *"
# 5033: "x inc 7 3 F x x F T -8 -7 8 -10 x x < 7 7 x dec 8 -6 inc -5 * 8 * inc 9 *"
# 5033: "F T -5 x 9 if < F T + x swap inc T x + x -6 x T / -6 inc -5 * 8 * inc 9 *"
# 5033: "x x ∧ + -1 F 6 F ¬ x x * 1 ¬ x pop x greedy be dec -6 -6 inc -5 * 8 * inc 9 *"
# 6272: "dec 2 T F F 7 -3 eql < greedy x neg greedy? inc x x 5 0 be 4 7 -10 F -5 * T * F 5 *"
# 11410: "-2 x 7 copy -5 -3 x F T ungreedy neg 9 x x x + 5 greedy ¬ T 5 -6 -6 T * 8 * greedy? 9 *"
5771,43029,71
5772,43022,72
5773,43022,72
5774,43043,71
5775,43001,72
5776,43022,76
5777,43022,85
5778,2762,82
5779,36407,76
5780,29954,74
5781,42077,91
5782,1658,81
5783,1663,76
5784,42854,86
5785,36407,65
5786,44912,78
5787,102557,85
5788,4252,82
5789,56266,87
5790,49743,96
5791,92651,85
5792,1663,83
5793,4252,74
5794,43022,71
5795,1663,76
5796,21000000,74
5797,43043,75
5798,43022,85
5799,42497,80
5800,42077,93
5801,55968,79
5802,43022,76
5803,55968,79
5804,43022,93
5805,39112,72
5806,17822,80
5807,25018,84
5808,43001,74
5809,41552,74
5810,2762,84
5811,1663,74
5812,43022,85
5813,3375,91
5814,55968,86
5815,1663,83
5816,17507,76
5817,2762,82
5818,1663,74
5819,55113,77
5820,108493,87
5821,169603,77
5822,42917,100
5823,41762,70
5824,48020,84
5825,84812,76
5826,25207,73
5827,64022,82
5828,85547,72
5829,43022,76
5830,42833,91
5831,51527,72
5832,6272,81
5833,2762,89
5834,47747,74
5835,1663,82
5836,109172,81
5837,43211,76
5838,56252,78
5839,43022,87
5840,2502,74
5841,43022,86
5842,162092,81
5843,80822,80
5844,43732,89
5845,39112,73
5846,42077,77
5847,43022,83
5848,1663,69
5849,60018,87
5850,2762,84
5851,1663,77
5852,1663,71
5853,1663,73
5854,1663,80
5855,80822,75
5856,44302,88
5857,53442,83
5858,102557,90
5859,1663,93
5860,179618,75
5861,43022,73
5862,42917,95
5863,34517,80
5864,47747,68
5865,21000000,76
5866,2762,86
5867,2502,76
5868,43358,70
5869,5033,79
5870,42770,74
5871,5033,99
5872,42497,74
5873,42896,70
5874,43022,85
5875,43022,101
5876,43904,87
5877,1663,79
5878,1663,79
5879,4252,69
5880,1663,81
5881,43022,74
5882,1663,83
5883,51385,87
5884,1663,82
5885,1663,77
5886,13426,66
5887,2762,74
5888,1663,94
5889,40187,72
5890,44156,83
5891,1663,74
5892,1663,89
5893,43022,84
5894,22736,97
5895,2762,71
5896,25018,76
5897,17822,91
5898,2762,93
5899,71337,94
5900,53442,80
5901,42833,71
5902,43022,79
5903,42434,75
5904,1663,94
5905,91406,82
5906,1663,90
5907,5033,85
5908,34517,101
5909,53669,83
5910,41132,85
5911,1663,81
5912,19397,82
5913,115346,84
5914,1663,86
5915,47747,84
5916,1663,73
5917,103313,73
5918,43022,83
5919,1663,80
5920,43022,75
5921,1663,73
5922,33523,69
5923,43022,86
5924,34622,74
5925,1663,80
5926,43547,76
5927,43190,74
5928,44534,99
5929,2762,102
5930,1663,81
5931,1663,76
5932,1663,82
5933,2019,95
5934,45850,86
5935,2702,80
5936,40712,76
5937,150218,92
5938,43022,78
5939,42602,85
5940,39112,69
5941,47747,75
5942,61922,81
5943,1658,78
5944,57197,76
5945,42812,77
5946,1658,72
5947,71372,86
5948,1663,80
5949,45850,68
5950,103502,79
5951,48797,84
5952,43022,76
5953,1663,70
5954,53442,83
5955,43127,79
5956,43022,80
5957,43029,70
5958,51527,81
5959,349202,81
5960,1663,74
5961,1663,77
5962,104294,88
5963,28532,77
5964,42875,83
5965,90062,70
5966,41762,75
5967,40712,78
5968,1663,79
5969,43022,69
5970,17507,81
5971,1663,88
5972,47747,80
5973,1663,90
5974,42252,86
5975,43022,80
5976,9947,77
5977,78302,82
5978,1663,85
5979,1663,74
5980,16660,70
5981,42938,87
5982,1663,82
5983,43085,83
5984,43967,96
5985,32627,82
5986,42917,74
5987,1663,74
5988,42833,73
5989,47747,84
5990,123347,78
5991,42077,93
5992,1663,83
5993,1663,74
5994,1663,82
5995,21000000,76
5996,53442,82
5997,34388,79
5998,42497,77
5999,43022,73
6000,1663,73
6001,42287,76
6002,42518,75
6003,29954,87
6004,1663,82
6005,36092,72
6006,1663,87
6007,1663,79
6008,1663,78
6009,53442,77
6010,31682,83
6011,1663,88
6012,42182,79
6013,39998,70
6014,1663,80
6015,1663,89
6016,1663,87
6017,2502,82
6018,287728,79
6019,68537,82
6020,1663,83
6021,14672,85
6022,43022,84
6023,16814,82
6024,1663,74
6025,1663,81
6026,1663,90
6027,1663,75
6028,47747,88
6029,1663,78
6030,43022,78
6031,42077,83
6032,9947,81
6033,2702,68
6034,53497,80
6035,42077,77
6036,46424,76
6037,43022,69
6038,1663,86
6039,1663,82
6040,57318,76
6041,44302,69
6042,1663,71
6043,43022,75
6044,35462,98
6045,25207,86
6046,1663,89
6047,80822,81
6048,43022,80
6049,1663,86
6050,42917,80
6051,42962,75
6052,1663,79
6053,82685,86
6054,1663,80
6055,44702,101
6056,43022,87
6057,55968,84
6058,1663,80
6059,2762,74
6060,76097,82
6061,47747,86
6062,52242,76
6063,43022,73
6064,53442,73
6065,43022,76
6066,1663,82
6067,1663,82
6068,42917,84
6069,1663,76
6070,85232,85
6071,1663,85
6072,43022,70
6073,38297,88
6074,42602,101
6075,1663,86
6076,1663,74
6077,32942,80
6078,43547,72
6079,39067,67
6080,43127,88
6081,5222,89
6082,43022,79
6083,34517,90
6084,80822,76
6085,85547,79
6086,1663,83
6087,43022,75
6088,42875,85
6089,43127,79
6090,1663,76
6091,43022,87
6092,1663,81
6093,43967,79
6094,47747,82
6095,43022,82
6096,43022,77
6097,40292,76
6098,42896,82
6099,42077,84
6100,43022,73
6101,115598,79
6102,43064,82
6103,46802,81
6104,43542,75
6105,25018,76
6106,43022,84
6107,40187,88
6108,1663,80
6109,9254,86
6110,43169,79
6111,1663,88
6112,2502,70
6113,21000000,72
6114,43106,87
6115,38402,84
6116,1663,73
6117,77042,83
6118,47747,93
6119,4252,76
6120,401312,85
6121,43022,75
6122,36554,82
6123,42707,84
6124,1663,82
6125,1663,76
6126,43127,72
6127,47486,73
6128,43022,83
6129,1663,77
6130,17507,76
6131,57318,83
6132,49637,81
6133,42287,82
6134,11074,73
6135,55968,97
6136,638162,78
6137,42707,76
6138,47747,72
6139,1663,75
6140,43967,78
6141,2702,72
6142,1663,72
6143,43022,87
6144,42455,70
6145,43211,87
6146,1663,77
6147,102557,76
6148,1663,96
6149,1663,77
6150,42077,86
6151,1663,76
6152,43022,78
6153,1663,89
6154,26117,95
6155,101563,79
6156,349202,87
6157,35462,75
6158,1663,75
6159,55968,86
6160,43022,73
6161,8008,81
6162,43022,77
6163,4252,72
6164,45978,78
6165,1663,82
6166,111062,70
6167,42917,77
6168,42602,76
6169,1663,79
6170,43022,78
6171,43547,94
6172,42917,86
6173,42077,86
6174,17626,87
6175,41678,84
# After 3000 updates
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1658: "T x inc F < ∨ x + x be -1 pop ∨ x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "4 copy ∨ swap 5 F x -2 9 x -1 pop -10 x > 8 5 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< copy ∨ swap -1 F x -2 9 neg -1 pop -10 x > 8 5 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ neg greedy + * 3 x x T be -1 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1663: "4 -3 * 8 + 8 > T T 0 x copy 5 -2 ungreedy x 5 0 4 4 ∨ -10 inc -5 * 9 * greedy 5 *"
# 1663: "-4 be -9 copy -5 -3 x x x ungreedy greedy < F x x 2 depth x 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x ∧ + -1 eql 6 neg x 0 3 ungreedy x 2 7 x 5 0 be 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x 0 T x copy inc F neg 8 neg < x eql > x x 0 T 3 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "greedy? x -3 T x copy inc F ¬ depth x 9 ungreedy -9 inc x 5 be 3 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x copy F 5 -9 ∨ * F ≥ 8 neg T x ∧ > -5 5 pop 9 -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "be x x x * 3 x x x 0 3 ungreedy 9 ∨ x x 5 0 greedy 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 2 inc T -5 -3 x x x ungreedy greedy < copy x x 2 x x neg 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 eql 7 neg x x neg F T -6 neg 9 inc / x T T -2 x T 7 -10 inc -5 * 9 * F 5 *"
# 1663: "ungreedy dec -9 be ∧ F be dec -6 ungreedy 2 pop ≤ x > 8 x 0 4 4 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "5 > -6 8 x copy -9 x T 0 x copy eql > x x 5 x be 4 7 -10 inc -5 * 9 * ¬ 5 *"
# 1663: "x dec -9 be ∧ x 6 -5 ¬ + x swap inc T > -6 x -6 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "be 2 -8 x greedy? x 7 neg > inc F T 4 -1 greedy -1 -7 0 9 -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "x -7 -3 F depth x x x T 0 3 ungreedy x > x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-4 x ∨ x greedy? x ¬ x T 0 dec < x > x x 2 pop x -10 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x x 7 eql x F be dec -6 eql 2 x ≤ x > T x 0 4 -1 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "T x F T x -5 depth ungreedy 8 x x 3 ≥ / x ≥ T -2 -9 T 7 -10 -9 -5 * 9 * greedy 5 *"
# 1663: "T 2 x 2 T 3 x -6 T 0 3 ungreedy x 2 2 -5 5 x 4 7 F -10 inc -5 * 9 * F 5 *"
# 1663: "3 -10 8 - x x inc F neg 8 neg < x eql > x x ungreedy x 3 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "6 -10 -3 swap * dec pop F 5 8 x copy x 7 > x 5 0 x 4 swap -10 inc -5 * 9 * F 5 *"
# 1663: "-4 be -9 copy -5 -3 x x T ungreedy x < F x x 2 depth -6 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "x ≥ -1 depth x x ≥ F dec x x ≥ ungreedy T x x 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "5 2 -3 F greedy? -6 * T depth x * * -7 x F 1 x 0 4 7 x -10 inc -5 * 9 * F 5 *"
# 1663: "5 9 x x 0 x x x be F / x 1 T inc 2 depth x 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "-4 2 < 8 5 -3 greedy F 4 + neg x greedy? greedy x 0 5 0 depth 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "5 dec -6 T 2 copy x neg T 0 2 < x dec x x x 0 dec 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x x x swap 7 5 eql < / x x x inc x x 5 ≤ be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ 4 5 x x 3 x -6 T 0 3 2 x 2 depth -5 5 0 4 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "∧ T 5 x greedy x -9 < F + x 9 depth x depth inc 8 0 be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 ¬ -6 x greedy? x x T T 0 depth < x > x x ¬ 0 dec 4 5 -10 inc -5 * 9 * greedy 5 *"
# 1663: "∧ T 5 x -3 x -9 < F + x 9 -2 x depth inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "x -7 -3 F < 3 x 5 T 0 3 greedy? x 2 x x 5 0 be inc 9 -10 inc -5 * 9 * ∨ 5 *"
# 1663: "-9 x + -2 x dec inc -4 -2 eql x 1 x x > 8 5 x 4 4 ∨ -10 inc -5 * 9 * F 5 *"
# 1663: "5 dec -6 + greedy 3 x ≥ x 0 3 ungreedy be ∨ x x 5 0 greedy 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 > -6 T 0 copy -9 T 4 8 -1 -6 x - dec -5 -3 0 4 7 7 -10 inc -5 * 9 * F 5 *"
# 1663: "eql -3 * 8 + 8 > T T 0 x copy x -2 ungreedy x 5 0 copy 4 ∨ -10 inc -5 * 9 * greedy 5 *"
# 1663: "be inc 7 3 -5 x x neg dec 0 3 < x 2 T -8 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 ∨ ungreedy x T 3 x F T 0 greedy? -10 x x -4 T x dec + -6 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x ∧ ≤ greedy ≤ < -9 9 swap F F -9 x / x 5 x be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-9 -5 + -2 x dec * -4 -2 eql x copy x > T x x x be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 inc 7 copy x -3 x F T x neg copy F eql ¬ < pop 4 4 4 7 -10 inc -5 * 9 * ∨ 5 *"
# 1663: "be x x x -10 greedy? x neg ≤ 0 2 < x > x x ¬ 0 dec 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "T x inc F < ∨ ∧ + x greedy -1 pop ∨ x > x ≥ 0 9 4 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "dec 2 F x greedy? 7 x T T ∧ T copy x 6 ¬ < pop F -9 T 7 -10 inc -5 * 9 * F 5 *"
# 1663: "- -7 -10 > / 3 x x ≥ x neg T x eql eql -5 5 0 4 5 x -10 inc -5 * 9 * F 5 *"
# 1663: "5 2 -3 ¬ / x F x T F swap copy F inc x x 5 0 x -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "x x 0 T x copy -9 T 4 T neg < x eql > -5 5 0 x T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x dec -9 be ∧ x 6 be ¬ + x swap inc T > inc x -2 -6 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 < T x greedy? be ≥ T depth 0 x copy x x x x T 0 F 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "T ∨ eql -10 2 -5 -9 ungreedy 1 + x 9 -2 x depth inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "x be x x x depth x eql < greedy x 1 greedy? inc x x 5 0 be 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "/ inc greedy 4 * x x x F be F pop -10 eql > 7 5 0 4 T 7 -10 -9 -5 * 9 * greedy 5 *"
# 1663: "be copy 7 eql -1 F be dec -6 eql 2 x pop -5 > T x 0 4 -1 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "x x ∧ eql T F be dec -6 F 2 x ≤ x > T x 0 8 -1 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "F 2 T x greedy? x inc neg > -4 - 8 4 -1 greedy T x 0 9 4 9 -10 inc -5 * 9 * F 5 *"
# 1663: "-2 > -6 F x / -9 T dec -10 x swap inc / x T T -2 -9 T 7 -10 -9 -5 * 9 * greedy 5 *"
# 1663: "≤ 4 greedy x * 3 x T T be -1 pop -10 x > 8 5 0 4 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 2 -3 swap T 3 > F x -4 x copy F inc x x 5 -2 ≤ T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x -7 2 F inc x x 9 inc -7 -10 inc + 3 x / 0 0 4 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x x x < 6 copy ∨ 6 0 F x x x > x F 0 4 ungreedy 7 -10 inc -5 * 9 * F 5 *"
# 1663: "-4 2 - 8 5 3 x x T be F pop ≤ x > 8 5 0 4 -3 ∨ -10 inc -5 * 9 * F 5 *"
# 1663: "x inc 7 3 x x x x ≥ 8 neg T x eql eql -5 5 0 4 7 x -10 inc -5 * 9 * F 5 *"
# 1663: "x ∨ eql -10 2 T -9 ungreedy 1 depth x 9 -2 x depth inc 8 0 be 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x -7 * x T F 3 F dec x x swap inc / x T T -2 -9 T 7 -10 ≤ -5 * 9 * F 5 *"
# 1663: "-2 eql 7 copy -5 -6 x swap 4 ungreedy x / -2 T ¬ T T T -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 eql T x -9 if 9 F T + x swap inc T x T T -2 -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 > T x x copy -9 T 4 * neg < x - dec + -3 0 4 -2 7 -10 inc -5 * 9 * F 5 *"
# 1663: "≤ depth 5 x be 3 x -6 T 0 3 ungreedy x 2 depth -5 5 0 4 7 F -10 inc -5 * 9 * F 5 *"
# 1663: "-2 be 7 T -5 -2 x < -1 + * > 2 x 6 inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "dec dec -9 be ∧ F be pop -6 ungreedy x swap T T x T x 0 9 4 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 2 -3 F F 3 F x T be F depth ≤ x x x 5 x be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 2 inc x greedy? x T neg T 0 x copy x > x x 5 x be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1806: "5 2 -3 3 / x ungreedy F x if + x x * copy greedy? swap 7 -6 + 8 -6 * dec T -5 * inc 8 *"
# 1886: "x ¬ T x greedy? x x T T 9 x F x 8 2 x 7 ∨ x x 8 -6 * dec T -5 * F 8 *"
# 2172: "x x x + greedy F 6 if x swap F x -9 x / > 2 if -6 -10 7 -10 * ¬ T T 3 * dec *"
# 2450: "9 2 T x greedy? 7 x T T ∧ T copy 2 6 ¬ < pop ungreedy swap T ungreedy -6 inc -4 * 8 * inc depth *"
# 2502: "neg > 7 2 x x x T x x -1 copy x eql ¬ x 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "9 2 T x greedy? x x -6 T x -1 copy x eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "* 2 T F 9 x x T T x -1 copy x eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "-4 eql 8 x greedy? x x -6 T x 4 copy 0 eql ¬ < 2 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "5 F F 3 / x 9 F T F 2 copy -10 eql ¬ x 2 if -1 -10 7 -10 * dec T ∨ 3 * dec *"
# 2502: "x ≤ inc F < 3 x 5 T 0 3 x x 2 x x 5 if x -10 7 -10 * dec T ∨ 3 * dec *"
# 2702: "x -7 -3 F < x x neg dec 0 T greedy x x x + eql greedy 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "* T 7 -4 -5 -3 x F greedy? ungreedy neg 9 / -7 x + 5 x F 7 5 -6 * ∧ T -8 * ∧ 8 *"
# 2702: "5 9 x x 0 x x x be ∧ 1 inc / -7 x + 5 x F -6 5 -6 * ∧ T -8 * greedy? 8 *"
# 2702: "9 2 inc x greedy? x x eql T ∧ T copy / -7 x + 5 x 9 x 5 -6 * ∧ T -8 * ∧ 8 *"
# 2762: "7 2 T x -5 7 x T T ∧ T copy 2 6 ¬ pop x 2 pop 0 7 F inc -5 * -6 * F 9 *"
# 2762: "-4 eql 7 2 x * < x T swap T T x depth x ≤ * 8 pop T 7 F inc -5 * -6 * F 9 *"
# 2762: "dec 2 T copy F 7 -3 eql < greedy T x greedy? inc x x x greedy 9 x > -5 dec -5 * 8 * T 9 *"
# 2762: "/ inc greedy x x 7 -3 x < T + x greedy? x -4 greedy? x x + T + T -6 -5 * 8 * ¬ 9 *"
# 39067: "> 9 x x * * neg x -10 x 9 x x / x F x -6 * x -8 9 / x x * F inc 5 *"
# 40712: "-2 -9 ungreedy x -3 3 F F T 0 x -10 x x -4 T x x + -10 7 -10 ¬ x x ∨ 3 * dec *"
# 43022: "-4 be -9 copy -5 -8 x x T / x < F x x 2 depth -6 6 4 x -10 inc -5 ≥ 9 * greedy 5 *"
6176,42833,71
6177,42980,76
6178,42959,65
6179,43022,65
6180,43064,68
6181,55968,69
6182,42917,86
6183,1663,82
6184,1663,74
6185,80822,77
6186,38297,68
6187,1663,82
6188,43427,82
6189,1663,84
6190,43127,71
6191,1663,77
6192,42602,92
6193,439922,88
6194,47747,80
6195,1663,76
6196,1663,81
6197,1663,90
6198,46802,75
6199,1663,86
6200,1663,75
6201,40712,73
6202,41846,77
6203,1663,84
6204,21287,77
6205,42182,80
6206,43610,82
6207,47747,91
6208,33572,78
6209,24122,79
6210,1663,76
6211,42959,82
6212,77672,71
6213,43022,80
6214,1663,82
6215,1663,90
6216,43022,76
6217,1663,80
6218,42077,77
6219,1663,95
6220,43022,87
6221,59498,77
6222,43022,77
6223,1663,87
6224,43022,94
6225,43442,78
6226,9002,88
6227,1663,80
6228,1663,73
6229,1663,82
6230,43022,76
6231,1663,77
6232,43022,72
6233,55968,73
6234,8008,90
6235,43022,71
6236,43022,80
6237,1663,79
6238,47747,80
6239,4252,82
6240,9947,70
6241,43127,80
6242,4252,88
6243,34412,85
6244,43022,88
6245,41237,83
6246,43022,92
6247,38297,72
6248,39067,73
6249,1663,83
6250,43022,76
6251,1663,89
6252,4252,77
6253,43732,88
6254,1663,79
6255,1663,78
6256,42917,84
6257,1663,84
6258,43022,73
6259,43732,84
6260,80822,82
6261,1663,81
6262,1663,79
6263,1663,75
6264,1663,78
6265,39242,79
6266,43022,72
6267,17507,77
6268,50477,87
6269,42077,80
6270,42287,72
6271,43022,81
6272,1663,83
6273,1663,78
6274,1658,72
6275,1663,80
6276,43022,75
6277,42077,82
6278,43043,75
6279,1663,80
6280,1663,85
6281,1663,72
6282,43022,79
6283,47747,83
6284,19397,78
6285,21000000,76
6286,2082,79
6287,42602,72
6288,69272,85
6289,47936,84
6290,43022,87
6291,1663,95
6292,109172,79
6293,42686,83
6294,26012,72
6295,53442,72
6296,42602,80
6297,97454,87
6298,43127,71
6299,43022,70
6300,49842,87
6301,1658,78
6302,34517,72
6303,43022,74
6304,43211,67
6305,43022,79
6306,43127,80
6307,59822,74
6308,1663,74
6309,2082,82
6310,1658,77
6311,43022,72
6312,43337,85
6313,43022,76
6314,61922,73
6315,8008,71
6316,42917,80
6317,1663,74
6318,49385,82
6319,6272,66
6320,34517,75
6321,53442,86
6322,1663,81
6323,2502,78
6324,1663,73
6325,1663,76
6326,1663,78
6327,47747,88
6328,1663,71
6329,47747,75
6330,48287,74
6331,61922,74
6332,43022,80
6333,1658,83
6334,38297,84
6335,495362,86
6336,39998,84
6337,42182,86
6338,69272,73
6339,1663,77
6340,182618,87
6341,43190,70
6342,43442,75
6343,1663,78
6344,2702,77
6345,43022,90
6346,53442,77
6347,2762,69
6348,1663,89
6349,1663,80
6350,41657,86
6351,53442,89
6352,1663,85
6353,43022,80
6354,43967,84
6355,42917,77
6356,43022,75
6357,39242,74
6358,43127,86
6359,42896,77
6360,1663,88
6361,1663,81
6362,1663,98
6363,1663,85
6364,1663,88
6365,41993,90
6366,1663,83
6367,4252,79
6368,43862,86
6369,1886,70
6370,46319,74
6371,1663,80
6372,42077,93
6373,5222,85
6374,34538,82
6375,43022,78
6376,180341,76
6377,43022,80
6378,47747,87
6379,44177,76
6380,43337,72
6381,52472,70
6382,53442,82
6383,43127,81
6384,40712,77
6385,1663,76
6386,55968,73
6387,80822,75
6388,43337,87
6389,43022,74
6390,43190,67
6391,43127,79
6392,43022,88
6393,36407,82
6394,37562,86
6395,41447,80
6396,43022,75
6397,41174,90
6398,16562,79
6399,102410,80
6400,53442,78
6401,1658,78
6402,43190,94
6403,1663,80
6404,77042,83
6405,43022,81
6406,2900,81
6407,42707,78
6408,1663,75
6409,39998,82
6410,43022,87
6411,42077,84
6412,1658,77
6413,42077,90
6414,45332,79
6415,1663,83
6416,3545,88
6417,40712,80
6418,43022,73
6419,43022,78
6420,9947,89
6421,43547,67
6422,43001,76
6423,1663,79
6424,42896,81
6425,43022,79
6426,53442,75
6427,43232,82
6428,39242,82
6429,1663,83
6430,42917,76
6431,1663,73
6432,2172,87
6433,43022,72
6434,1663,81
6435,33572,72
6436,5222,94
6437,43022,80
6438,43127,87
6439,43085,78
6440,45857,87
6441,43022,77
6442,37877,87
6443,1658,77
6444,42014,84
6445,43022,89
6446,46803,87
6447,43190,84
6448,1663,72
6449,1663,79
6450,42917,77
6451,43022,85
6452,42791,82
6453,60018,74
6454,38297,87
6455,1663,85
6456,42392,85
6457,43022,81
6458,52472,75
6459,47522,75
6460,43001,72
6461,42287,81
6462,43022,70
6463,4252,81
6464,21000000,82
6465,41531,78
6466,1663,76
6467,43967,75
6468,33523,95
6469,16513,71
6470,42917,74
6471,43022,81
6472,1663,81
6473,43022,70
6474,1663,86
6475,20293,89
6476,223118,90
6477,42077,79
6478,1663,91
6479,1663,85
6480,43085,80
6481,43732,86
6482,49637,79
6483,28847,86
6484,33334,83
6485,43022,80
6486,43022,73
6487,1663,73
6488,42917,85
6489,90272,78
6490,1663,87
6491,1663,75
6492,42287,81
6493,16366,78
6494,43022,78
6495,43211,77
6496,44072,96
6497,1663,81
6498,51527,77
6499,1663,78
6500,1663,82
6501,42833,76
6502,43022,74
6503,43127,78
6504,1663,75
6505,61922,70
6506,43232,74
6507,42077,81
6508,93436,91
6509,42917,81
6510,1663,76
6511,42028,89
6512,1663,85
6513,43127,89
6514,45962,88
6515,1663,69
6516,1886,79
6517,43862,89
6518,1663,78
6519,47747,74
6520,34517,86
6521,1663,80
6522,47747,80
6523,1663,76
6524,1663,86
6525,43022,69
6526,34517,88
6527,1663,86
6528,1663,84
6529,42917,94
6530,1663,83
6531,43732,85
6532,26012,81
6533,43967,71
6534,21000000,86
6535,148598,74
6536,1658,81
6537,42077,77
6538,43022,92
6539,42812,74
6540,43442,81
6541,1663,90
6542,1663,89
6543,43022,92
6544,1663,86
6545,1663,85
6546,43022,88
6547,60018,94
6548,132797,68
6549,59910,96
6550,1663,79
6551,1658,75
6552,42077,80
6553,47747,83
6554,85547,88
6555,60032,79
6556,43022,79
6557,1658,80
6558,42917,83
6559,51527,85
6560,42077,72
6561,51527,75
6562,1663,89
6563,42182,78
6564,39242,94
6565,43001,72
6566,1663,77
6567,43022,83
6568,53442,74
6569,43211,85
6570,43232,74
6571,38297,77
6572,1663,69
6573,42077,77
6574,47747,90
6575,43085,84
6576,16513,78
6577,33523,70
6578,52472,87
6579,1663,82
6580,43463,81
# After 3200 updates
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1658: "greedy x 8 - x x inc F neg 8 -1 pop -10 x T 8 ∨ T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "9 copy -1 swap 5 F x -2 9 x -1 7 -10 x T 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 neg greedy + pop x x x ∧ be -1 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "4 copy ∨ swap 5 F x -2 9 x -1 pop -10 x > 8 5 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < x + greedy F x if x swap F x -10 x > 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "9 -2 T x greedy? 7 x T x swap F x -10 x 1 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -1 depth x x x x + -7 x -5 inc * F 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "4 copy ∨ swap 5 F x -2 9 x -1 pop -10 x T 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be dec dec + dec x x x + -7 + -5 inc * x 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ neg greedy + * 3 x x T be -1 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc F < ∨ x + x be -1 pop ∨ x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< copy ∨ swap -1 F x -2 9 neg -1 pop -10 x > 8 5 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ neg x + * x x x T be -1 2 -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< copy ∨ swap -1 F x -2 9 ≥ 2 ≥ x -1 greedy -1 -7 -7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1663: "4 -3 * 8 + 8 > T T 0 x copy 5 -2 ungreedy x 5 0 4 4 ∨ -10 inc -5 * 9 * greedy 5 *"
# 1663: "x dec inc be -3 T -9 x greedy? x x 9 inc greedy > depth 8 0 be 4 F -10 inc -5 * 9 * F 5 *"
# 1663: "x dec - be ∧ dec T be ¬ + x swap inc T > inc ungreedy -2 -6 T 7 -10 inc -5 * 9 * F 5 *"
# 1663: "T ∨ eql -10 2 -5 -9 ungreedy 1 x swap 9 -2 x depth inc 8 0 be 4 - -10 inc -5 * 9 * F 5 *"
# 1663: "be x x x * F be x greedy F 2 x 0 x > T F 0 x 4 7 -10 inc -5 * 9 * ¬ 5 *"
# 1663: "-9 greedy + -2 x dec x -6 T 0 3 T x 2 x -5 5 x 4 7 x -10 inc -5 * 9 * ∧ 5 *"
# 1663: "6 -10 -3 swap * dec pop F 5 8 x copy x 7 > x 5 0 x 4 swap -10 inc -5 * 9 * F 5 *"
# 1663: "x x ∧ + -1 eql 6 -6 x 0 3 ungreedy x x 7 x 5 0 be 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "x ≤ inc / < 3 x 5 T 0 3 x x -1 x x 5 x be 4 < -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ 1 greedy 4 T x x x greedy inc 2 < x > pop x ¬ 0 dec 4 greedy -10 -9 -5 * 9 * greedy 5 *"
# 1663: "/ inc greedy 4 T x x x greedy x F < F x 0 x 5 x be 4 7 -10 inc -5 * 9 * ¬ 5 *"
# 1663: "≤ 4 5 x x 3 x -6 T 0 3 2 x 2 depth -5 5 0 4 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "∨ 2 -3 ¬ neg -8 be * * x ∨ copy x inc swap T 5 0 -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 9 be x 0 x x x F F / x 1 T inc 2 depth x 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 x 7 T -5 -2 x < -1 F * > 2 x x inc 8 0 be 4 - -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 dec -6 T 2 copy x neg T 0 2 < x dec x ≤ greedy 0 dec 4 7 -10 inc -5 * 9 * ∧ 5 *"
# 1663: "x dec x be ∧ x x be ¬ + x swap inc T > inc ungreedy -2 -6 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 dec -6 T 2 copy x neg T 0 2 < x dec T x x 0 ≥ 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "∧ T 5 x greedy x -9 < F + inc 9 depth x depth 9 8 0 be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "9 ¬ inc x neg x T 7 T 0 depth < x F -7 ∨ x 0 4 -1 ∨ -10 inc -5 * 9 * greedy 5 *"
# 1663: "T -5 eql -10 2 -5 -9 T 1 + 9 9 -2 x x x 5 0 greedy 4 if -10 inc -5 * 9 * greedy 5 *"
# 1663: "-4 x ∨ x T x ¬ x T 0 1 ungreedy x > x x T < x -10 greedy? -10 inc -5 * 9 * greedy 5 *"
# 1663: "be inc 7 3 -5 x x neg dec 4 3 0 x > x x 5 0 be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "F 2 T x x x inc neg > -4 - 8 4 -1 greedy T x 0 9 4 inc -10 inc -5 * 9 * F 5 *"
# 1663: "-4 2 - 8 5 3 x x T be F pop ≤ x > 8 5 0 4 -3 ∨ -10 inc -5 * 9 * F 5 *"
# 1663: "-1 2 x 2 ∨ 3 x x x 0 3 ungreedy x -10 inc x be x x 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x x x -3 T -9 x F ∧ x 9 inc greedy > -6 x greedy? 4 4 F -10 inc -5 * 9 * F 5 *"
# 1663: "5 x x x 0 x x x be F x x 1 T inc 2 depth x 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "x be x -6 x depth neg eql -10 eql 2 x 2 > > T ¬ 0 dec 4 5 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-9 -5 + -2 x dec * -4 -2 eql x copy x > T x x x be 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "dec dec -9 be x F be pop -6 ungreedy x swap T T dec T x 0 depth 4 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x * x T F 3 F - F / x 1 pop inc 2 depth x 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ inc greedy x x 7 -3 ∨ < -4 depth copy x 2 depth -5 5 0 4 7 F -10 inc -5 * 9 * T 5 *"
# 1663: "be inc 7 3 -5 x x neg dec 4 3 F x F x x 5 0 be 4 3 -10 inc -5 * 9 * greedy 5 *"
# 1663: "- -7 -10 > / 3 x x ≥ x neg T x eql eql -5 5 0 4 5 x -10 inc -5 * 9 * F 5 *"
# 1663: "x inc 7 3 x x x x ≥ 8 neg T F x x ≤ T 0 F 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ inc greedy 4 T x x x greedy inc 2 < x > pop x ¬ 0 dec 4 greedy -10 -9 -5 * 9 * greedy 5 *"
# 1663: "5 2 -3 ¬ / inc F depth T F depth copy F inc x x F 0 - -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "F 2 F x greedy? ∨ x T x 0 3 ungreedy x x 7 x 5 0 be 2 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "∧ T 5 x -3 x -9 x F ∧ x 9 inc greedy > -6 x -6 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x copy F 5 -9 ∨ x -6 x 0 x ungreedy x F 2 -5 greedy? x 4 copy 7 -10 inc -5 * 9 * F 5 *"
# 1663: "-2 inc 7 copy x -3 x F T x neg copy F eql ¬ < pop 4 4 4 7 -10 inc -5 * 9 * ∨ 5 *"
# 1663: "-4 be -9 copy -5 -8 copy x x 0 3 ≥ x ∨ x x be 0 greedy 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "greedy? x -3 T x copy inc T ¬ depth x 9 ungreedy -9 inc x 5 be pop 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "0 copy x x 0 x F x be x x x 1 T inc 2 x 0 9 4 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "x * 0 T x copy inc ∨ neg 8 neg ≥ x eql > 7 x 0 4 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 ∨ 7 5 x x neg -2 9 x T 7 -10 x T 8 5 T 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "≤ 4 greedy x * 3 x T T be -1 pop -10 x > 8 5 0 4 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x x x + x -9 x F ∧ T F -10 x 5 8 5 -5 4 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "be ∨ 7 eql -1 F be dec -6 eql 2 x 2 > > T ¬ 0 dec 4 5 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 eql -6 T 0 copy F x x < swap F F inc x x F 0 x -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "-4 be -9 T -3 -3 x x x ungreedy greedy < F x 0 x 5 x be 4 7 -10 inc -5 * 9 * ¬ 5 *"
# 1663: "x -7 -3 F < x x neg dec 0 T -1 x x > T ungreedy ≥ dec 4 T -10 inc -5 * 9 * F 5 *"
# 1663: "≤ 4 greedy x * F -2 dec -6 F 2 x x x > T x 0 4 -1 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "5 F F 3 / x 9 F dec x x ≥ ungreedy T x x ≥ x 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "5 x -3 swap T 3 > F x -4 x copy x 2 depth -5 5 inc ¬ 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "eql -3 * 8 + 8 > T T 0 x copy x -2 ungreedy x 5 0 copy 4 ∨ -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ depth 5 x be 3 inc x -2 eql x 1 x x x 8 5 x 4 4 ∨ -10 inc -5 * 9 * F 5 *"
# 1663: "ungreedy dec -9 be ∧ F be dec -6 ungreedy 2 pop ≤ x > 8 x 0 4 4 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "x x x F * copy x x x 0 3 ungreedy 9 ∨ x x 5 0 greedy 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 9 x x 0 x x x be F / x 1 T inc 2 depth x 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "-4 be -9 copy -5 -8 x x if -7 swap copy F inc x x F 6 x -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "5 eql 7 neg x x neg F T -6 neg 9 inc / x T T -2 x T 7 -10 inc -5 * 9 * F 5 *"
# 1663: "≥ -5 eql -10 2 -5 ¬ ungreedy 1 + x 9 -2 -5 depth -8 x greedy? 4 x F -10 inc -5 * 9 * F 5 *"
# 1663: "if < T x greedy? ≥ ≥ -6 T / 3 2 x 2 depth -5 5 0 4 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "x -7 * x T F 3 F dec x x swap inc / x T T -2 -9 T 7 -10 ≤ -5 * 9 * F 5 *"
# 1663: "5 T -3 -2 greedy? -6 x T depth x * * -7 x F 1 x 0 4 7 x -10 inc -5 * 9 * F 5 *"
# 1663: "9 2 T -5 greedy? x eql -6 T be -1 copy x eql ¬ < 2 if x 4 7 -10 inc -5 * 9 * ∨ 5 *"
# 1663: "/ inc greedy x x 7 -3 ∨ < -4 depth 3 x ≥ depth -5 5 0 4 ∨ F -10 inc -5 * 9 * greedy 5 *"
# 1663: "-2 ∨ greedy? x T x ∧ x be greedy? -2 x 1 x > T > 0 2 4 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "-2 eql 7 copy -5 -6 x swap 4 ungreedy x / -2 T ¬ T T T -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "if < T x T ≥ ≥ T T be -1 F -10 x 5 8 5 -5 4 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ inc greedy 4 T x x x greedy x 2 < x > pop x 5 if be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "be x x x -10 greedy? x neg ≤ 0 2 < x > x x ¬ 0 dec 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x copy F 5 -9 ∨ * F ≥ 8 neg T x ∧ > -5 5 pop 9 -2 F -10 inc -5 * 9 * F 5 *"
# 1663: "x be neg x x depth x x T ungreedy x < F 2 9 -5 eql 0 ≤ 7 F -10 inc -5 * 9 * F 5 *"
# 1663: "∨ 2 -3 ¬ neg x be * * x ∨ copy x > swap T 5 0 -9 T 7 -10 inc -5 * 9 * greedy? 5 *"
# 2762: "dec 2 T copy F 7 -3 eql < greedy T x greedy? inc x x x greedy 9 x > -5 dec -5 * 8 * T 9 *"
# 9947: "5 dec -6 copy -5 -6 x swap 4 ungreedy x / -2 T ¬ T T T -9 T 7 -10 inc -5 * F * greedy 5 *"
# 38297: "> 9 x x * * F x -10 x 9 x x / pop -2 x -6 * x -8 9 / -5 * 9 * greedy 5 *"
# 40712: "be be -9 copy -5 -8 x x if -7 swap x F inc x x x x + -10 7 -10 ¬ x x ∨ 3 * dec *"
# 42833: "> 9 x x * * F x -10 x 9 x x / pop -3 x -6 * x -8 9 / -5 x ungreedy -2 0 -4 9"
# 43022: "x x - x x x 7 x 5 -8 5 inc x * inc x 9 / + -3 4 x - x x 6 x + / x"
6581,43022,74
6582,43043,68
6583,43043,79
6584,43022,67
6585,43127,66
6586,1663,80
6587,42182,71
6588,85547,78
6589,43732,75
6590,47747,80
6591,69482,78
6592,1663,78
6593,1658,80
6594,43022,85
6595,53442,75
6596,43022,80
6597,1663,69
6598,71372,81
6599,42770,96
6600,42077,83
6601,1663,82
6602,43022,74
6603,1663,71
6604,42917,74
6605,43022,93
6606,1663,82
6607,43022,80
6608,1663,69
6609,1663,85
6610,1663,81
6611,42917,89
6612,60032,95
6613,43022,89
6614,71372,83
6615,43022,88
6616,42644,92
6617,66647,70
6618,1663,84
6619,111062,79
6620,1663,86
6621,1663,75
6622,43022,78
6623,1663,84
6624,43757,88
6625,1663,88
6626,1663,80
6627,102557,89
6628,37113,73
6629,43127,79
6630,71372,71
6631,1663,82
6632,42917,75
6633,42896,86
6634,1663,72
6635,42917,85
6636,43043,73
6637,43732,73
6638,34517,79
6639,42875,78
6640,47852,71
6641,42938,80
6642,42917,79
6643,43022,74
6644,42767,81
6645,1663,79
6646,42854,76
6647,1658,78
6648,1663,86
6649,43022,72
6650,42917,87
6651,1663,88
6652,49922,79
6653,43127,76
6654,42077,84
6655,42077,78
6656,1663,74
6657,1663,85
6658,43085,87
6659,43127,82
6660,24122,77
6661,47747,76
6662,46802,82
6663,43022,77
6664,43001,78
6665,43043,69
6666,43757,73
6667,43022,80
6668,43022,75
6669,43022,85
6670,43001,87
6671,1663,79
6672,21000000,76
6673,16072,95
6674,43817,77
6675,1663,84
6676,1663,71
6677,1663,85
6678,43022,77
6679,8414,81
6680,1663,75
6681,1663,82
6682,1658,82
6683,60137,87
6684,1663,79
6685,43022,80
6686,43732,75
6687,1663,74
6688,102557,82
6689,1663,80
6690,16513,83
6691,45017,76
6692,1663,76
6693,42854,91
6694,43022,76
6695,39242,76
6696,1663,81
6697,10787,78
6698,1663,76
6699,39172,71
6700,1663,89
6701,43967,79
6702,3545,96
6703,43022,87
6704,4252,74
6705,109172,88
6706,43022,70
6707,85547,76
6708,43022,86
6709,28007,70
6710,1658,76
6711,53442,69
6712,24122,89
6713,88991,90
6714,43022,74
6715,1658,74
6716,85547,90
6717,8008,73
6718,1663,78
6719,41342,74
6720,1663,73
6721,38297,90
6722,1663,83
6723,21000000,104
6724,119567,84
6725,1663,85
6726,1663,72
6727,128072,77
6728,43232,78
6729,1663,78
6730,1663,84
6731,40712,80
6732,85547,82
6733,43732,89
6734,41027,82
6735,1663,77
6736,43732,87
6737,42875,85
6738,1663,84
6739,1663,87
6740,43232,84
6741,1663,82
6742,8008,76
6743,43337,68
6744,1663,90
6745,18982,84
6746,1663,82
6747,1663,82
6748,1663,79
6749,1663,73
6750,1658,71
6751,42917,87
6752,1663,86
6753,16562,73
6754,1663,75
6755,42077,85
6756,66752,87
6757,1663,80
6758,47747,76
6759,43022,77
6760,14777,76
6761,1658,76
6762,1663,87
6763,47747,79
6764,43127,75
6765,42077,79
6766,1663,86
6767,179378,90
6768,42917,86
6769,4252,84
6770,4252,80
6771,42077,76
6772,43967,81
6773,85547,74
6774,46907,76
6775,43022,85
6776,42917,79
6777,43022,85
6778,43022,87
6779,1663,72
6780,9947,80
6781,43022,66
6782,43022,81
6783,66647,83
6784,43022,83
6785,53497,81
6786,1658,85
6787,1663,77
6788,43022,79
6789,1658,79
6790,47747,87
6791,43022,74
6792,42833,86
6793,1663,73
6794,1658,79
6795,43967,91
6796,46802,86
6797,7630,89
6798,1663,81
6799,111062,88
6800,10052,70
6801,47747,84
6802,80927,71
6803,1663,81
6804,1658,70
6805,5222,78
6806,8953,81
6807,1663,87
6808,175193,82
6809,81011,99
6810,43022,81
6811,1658,70
6812,55622,81
6813,47747,84
6814,1663,77
6815,47852,85
6816,1663,85
6817,1663,86
6818,1663,77
6819,4252,78
6820,1658,79
6821,42875,91
6822,43967,76
6823,1663,77
6824,56252,67
6825,53442,82
6826,41657,74
6827,1663,91
6828,53442,83
6829,51527,79
6830,9002,79
6831,1663,91
6832,1663,77
6833,43127,85
6834,1663,84
6835,42917,81
6836,43127,72
6837,42917,73
6838,42077,75
6839,1663,76
6840,1658,78
6841,43022,71
6842,43127,72
6843,43022,76
6844,1663,79
6845,76097,74
6846,43022,77
6847,55968,69
6848,1663,79
6849,1663,87
6850,43022,70
6851,44072,73
6852,24122,80
6853,169603,86
6854,43127,74
6855,1663,82
6856,1663,77
6857,4157,80
6858,77042,80
6859,9086,79
6860,1658,74
6861,35147,78
6862,175193,76
6863,38297,80
6864,1658,76
6865,1663,69
6866,38402,75
6867,1663,74
6868,47852,71
6869,42938,72
6870,102662,68
6871,1663,87
6872,4252,93
6873,1663,81
6874,1663,82
6875,1658,78
6876,1663,80
6877,1658,80
6878,16513,85
6879,38297,74
6880,193123,76
6881,1658,81
6882,37772,83
6883,43022,74
6884,47852,72
6885,99827,83
6886,43022,88
6887,102557,87
6888,1658,86
6889,1658,78
6890,43022,90
6891,1663,73
6892,3545,99
6893,47747,80
6894,1663,82
6895,1663,87
6896,43022,85
6897,41321,81
6898,43732,74
6899,43022,78
6900,38402,77
6901,43022,75
6902,1663,71
6903,19397,84
6904,66647,73
6905,1663,80
6906,102662,73
6907,37352,83
6908,1658,78
6909,10052,81
6910,1663,79
6911,21000000,79
6912,43732,77
6913,43190,76
6914,33523,82
6915,42287,73
6916,1663,76
6917,1663,82
6918,4157,75
6919,42875,80
6920,1663,91
6921,1663,77
6922,1663,73
6923,118727,85
6924,44642,76
6925,1663,89
6926,1663,85
6927,43022,82
6928,44072,73
6929,85547,69
6930,1663,77
6931,1663,77
6932,76202,79
6933,4252,78
6934,1663,71
6935,44072,75
6936,1658,84
6937,1663,75
6938,1663,69
6939,1658,80
6940,47852,69
6941,1663,72
6942,71372,90
6943,53442,75
6944,16513,75
6945,1663,78
6946,180047,84
6947,1663,73
6948,43022,82
6949,38402,73
6950,71372,88
6951,43022,72
6952,41972,73
6953,77147,75
6954,80822,87
6955,42028,78
6956,1658,74
6957,43022,77
6958,55878,73
6959,4252,75
6960,43022,75
6961,1663,87
6962,43022,74
6963,53442,78
6964,1658,71
6965,76097,81
6966,43547,82
6967,43547,78
6968,41972,93
6969,42077,79
6970,57197,83
6971,1663,77
6972,42707,84
6973,1658,72
6974,43022,77
6975,4252,76
6976,1663,85
6977,1663,83
6978,42917,86
6979,1658,80
6980,10052,74
6981,1663,79
6982,42077,87
6983,132797,74
6984,43022,73
6985,43022,75
# After 3400 updates
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1658: "greedy inc 7 3 x x x neg dec 4 x -5 ≥ * F 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "9 copy -1 swap 5 F x -2 9 x -1 7 -10 x T 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "> 9 x F < x x greedy? dec 0 < x F x eql 8 5 T 4 8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 neg greedy + pop x x x ∧ be -1 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -1 depth x x x x + -7 x -5 inc * F 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 8 7 swap greedy? F x -2 9 neg -1 pop -10 x > 8 5 7 6 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec 5 -3 -3 ∧ F * dec 1 -2 9 inc x > 8 5 0 4 4 swap -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy copy ∨ swap x x x dec -6 -7 + -5 inc * 5 F 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< copy ∨ swap -1 F x -2 9 neg -1 pop -10 x > 8 5 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ neg greedy + * 3 x x T be -1 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 -4 * 5 x x T be -1 2 -10 x > ≥ 5 T if 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc F 5 ∨ x + x be -1 pop ∨ x > 8 5 greedy -4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 swap 5 F x -2 -6 x -1 pop -10 x T 8 x T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "/ inc greedy 4 T x x x greedy > 2 < -10 x 1 > < x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "copy depth 5 x be / inc -8 -2 eql x 1 x x x 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x 8 - x x inc F neg 8 -1 pop -10 x T 8 ∨ T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be dec dec + dec x x x + -7 + -5 inc * x 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F 2 if x greedy? ≤ x T -6 be -6 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc / < 3 x 5 T 0 3 x x -1 x ∨ x x be 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 x -3 x dec x x x ¬ -7 + -5 x * x 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < x + greedy F x if x swap F x -10 x > 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< copy ∨ swap -1 F x depth 9 -7 -5 -5 inc * x 8 5 T x 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap 5 F x -2 9 copy -1 pop F x > 8 copy 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -1 depth x 7 x ≤ x swap F x -10 x 1 > 5 x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc F < ∨ x + x be -1 pop ∨ x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x 3 x be * * x ∨ copy x x x -7 + T 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x x - x x inc F neg 8 -1 pop -10 x T T ∨ T 4 > 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F x - x x x 7 x depth pop * ≥ ∧ dec ≤ 1 x 0 4 7 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ T 5 x -3 ∧ F x F 1 x 9 inc greedy > -6 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 greedy x ¬ F x neg 1 + -1 pop -10 x > ≤ 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x depth T 3 T x ≥ x neg T x eql eql -5 5 T -10 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 3 x x 0 x T x be F x x > T inc 2 5 neg 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ neg x + * x x x T be -1 2 -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1663: "x 4 greedy x * 3 -4 T T x x pop -10 x > 8 5 copy greedy 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ * greedy copy -5 3 x T x 0 3 ungreedy / x 7 x 5 0 < 2 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "< dec x swap -1 F T depth 9 -7 -5 pop -3 x > 8 0 x x ≥ -6 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x inc 0 T x ¬ x x x x 2 F x > pop x 5 if be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "∧ T 5 x greedy x -9 < F + inc 9 depth x depth 9 8 0 be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "T ∨ eql -10 2 -5 -9 -7 1 pop swap 9 -5 x depth inc 8 if be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "x -7 -3 F < x x neg dec 0 T -1 x x > T ungreedy ≥ dec 4 T -10 inc -5 * 9 * F 5 *"
# 1663: "-1 2 x 2 ∨ 3 x x x 0 3 ungreedy x -10 inc x be x x 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 9 -6 T 2 copy x eql T be F pop neg x > 8 5 0 4 -3 ∨ -10 inc -5 * 9 * F 5 *"
# 1663: "-4 be -9 copy -5 -8 copy x x 0 -9 inc -7 T x x be 0 greedy -1 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "if + T 0 greedy? ≥ 7 -6 T 4 ∨ x F 2 depth -5 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "greedy -10 -3 swap -10 dec pop F 5 8 5 copy x 7 > x 5 0 4 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "x dec x be ∧ x x be ¬ + x swap inc T > inc ungreedy -2 -6 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "< dec ∨ -3 -1 F x depth 9 -7 -5 pop -3 4 > - 5 0 x 4 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "be inc 7 3 -5 x x neg dec 4 3 F x F x x 5 0 be 4 3 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x < x + greedy F * if depth 4 * ≥ ∧ dec ¬ -5 5 -4 4 7 F -10 inc -5 * 9 * be 5 *"
# 1663: "if < T x 2 ≥ greedy -1 T be -1 x 2 -3 x ≤ T 0 F 7 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ x ∧ + -1 eql 6 -6 x 0 3 ungreedy x x swap x 5 * -9 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ inc greedy 4 T x x x greedy x F < F x 0 x 5 x be 4 7 -10 inc -5 * 9 * ¬ 5 *"
# 1663: "F 2 F x greedy? ∨ x T x 0 3 ungreedy x x 7 x 5 0 be 2 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "x inc 7 3 x x x x -6 8 F T F x x T T 0 F 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "x 4 greedy x * 3 -4 T T x -1 pop -10 x > 8 5 T 4 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "6 -10 -3 swap * dec pop F 5 8 x copy x 7 > x 5 0 x 4 swap -10 inc -5 * 9 * F 5 *"
# 1663: "5 9 be x 0 x x x F -5 / x -10 T -9 neg 0 > dec T 7 -10 inc -5 * 9 * F 5 *"
# 1663: "5 9 x x 0 x x x be F / x 1 T inc 2 depth x 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "0 copy x x 0 x x x be x x x 1 -4 inc 2 x 0 9 4 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x -1 depth x x x x x -7 x -5 inc * F 8 5 x 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "6 -10 -3 swap * dec pop T 5 8 x copy x 7 > x 5 0 x 4 1 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x inc x T x copy inc ∨ x 8 -3 ≥ x T x x x 0 4 -1 ∨ -10 inc -5 * 9 * greedy 5 *"
# 1663: "greedy? 2 T -5 x x x neg T be x copy x eql ¬ F T x 6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "depth x 7 eql -1 F be dec -6 eql 2 x 2 > > 7 ¬ 0 7 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 F F 3 / x 9 F dec x x ≥ ungreedy T x x ≥ x 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "* x inc / x 3 x be greedy inc 2 < x > pop x ¬ 0 dec 4 greedy -10 -9 -5 * 9 * greedy 5 *"
# 1663: "x < x + greedy F x x x F F x -10 x > 8 x x -9 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 9 be x 0 x x x F -5 / x -10 T > neg 0 > 4 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "≥ -5 eql -10 2 -5 ¬ ungreedy 1 + x 9 swap -5 depth x x x be 4 x -10 inc -5 * 9 * ¬ 5 *"
# 1663: "-4 be / T -3 -3 * -6 T 0 3 2 x 2 ≤ + x 0 copy < 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-4 be 7 T -3 -3 * x x x 9 x > / pop -2 x -6 * x -8 9 ∧ -5 * 9 * neg 5 *"
# 1663: "x neg greedy + * 3 x x T be -1 pop -10 x > 8 5 1 4 4 T -10 inc -5 * 9 * F 5 *"
# 1663: "be ∨ 7 eql -1 F be dec -6 eql 2 x 2 > > T ¬ 0 dec 4 5 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x dec inc be -3 T -9 x greedy? x x 9 inc greedy > depth 8 0 be 4 F -10 inc -5 * 9 * F 5 *"
# 1663: "+ be -9 -4 * -4 x x T be x 5 copy x > 8 5 0 4 4 5 -10 inc -5 * 9 * F 5 *"
# 1663: "-4 be -9 copy -5 -8 x x if pop T -1 x x dec T ungreedy ≥ dec 4 eql -10 inc -5 * 9 * F 5 *"
# 1663: "≤ neg x + * ∨ x -6 x 0 < ungreedy x F 2 -5 greedy? x ∧ copy 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x x x x + x -9 x F ∧ T F -10 x 5 8 5 -5 4 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "-9 -5 + -2 x x x -4 if -4 x copy x > T x x 7 4 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x -7 * x T F 3 F dec x x swap inc / x T T -2 -9 T 7 -10 ≤ -5 * 9 * F 5 *"
# 1663: "x -8 x x -3 T -9 x F ∧ x 9 inc greedy > -6 -5 if 4 4 ∨ -10 inc -5 * 9 * F 5 *"
# 1663: "6 -10 -3 8 + x x neg < greedy? T ungreedy x x > T ungreedy ≥ dec 4 T -10 inc -5 * 9 * F 5 *"
# 1663: "5 T -3 -2 greedy? -6 x T depth x * * -7 x F 1 x 0 4 7 x -10 inc -5 * 9 * F 5 *"
# 1663: "greedy -10 greedy 8 -4 8 > T F x x ¬ ungreedy T x F -8 greedy? 4 4 F -10 inc -5 * 9 * F 5 *"
# 1663: "T -5 eql -10 neg dec -9 T 1 x 9 9 -2 x x x -9 0 greedy 4 if -10 inc -5 * 9 * greedy 5 *"
# 1663: "> 9 x x * * F x -10 x x T inc F > depth 8 T be 4 F -10 inc -5 * 9 * F 5 *"
# 1663: "< 2 x x * copy x x -6 be ∨ copy x inc greedy 9 8 < be 4 eql -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ be x + * > x x T be -1 2 -10 x swap x be F greedy 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "F x > 5 x x F x depth pop x ≥ ∧ T depth -5 5 -1 4 7 F -10 inc -5 * 9 * greedy 5 *"
# 1663: "F 2 x x * copy x x T be -1 x -10 x x x be F greedy 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x < x + greedy F x ∨ x F F x -10 x > 8 x x -9 T -7 -10 inc -5 * 9 * ∧ 5 *"
# 1663: "x be -9 x -2 x -3 ∨ < -4 depth 3 x -6 -7 -5 5 -8 4 ∨ F -10 inc -5 * 9 * greedy 5 *"
# 1663: "-9 -5 + -2 x dec x -4 -2 eql x copy x > T x x x be 4 7 -10 inc -5 * 9 * ∨ 5 *"
# 1663: "4 -3 * 8 + 8 > T T 0 x copy 5 -2 ungreedy x 5 0 4 4 ∨ -10 inc -5 * 9 * greedy 5 *"
# 1663: "x 8 x copy -5 -8 copy x x < -9 x x ∨ dec x be 0 greedy -1 x -10 inc -5 * 9 * greedy 5 *"
# 9947: "5 dec -6 copy -5 -6 x swap 4 ungreedy x / -2 T ¬ T T T -9 T 7 -10 inc -5 * F * greedy 5 *"
# 37113: "dec -6 x 0 x 5 x x swap x x + * x x x -6 - * x / x swap dec * 9 * dec 5 *"
6986,43049,69
6987,43190,71
6988,43022,75
6989,42833,72
6990,43022,81
6991,42896,74
6992,42182,83
6993,43022,80
6994,43232,83
6995,1658,80
6996,43022,82
6997,36092,73
6998,1663,87
6999,48797,85
7000,42896,81
7001,1658,80
7002,1658,79
7003,1663,72
7004,1663,84
7005,43022,91
7006,43127,88
7007,1663,81
7008,85652,81
7009,43022,88
7010,36407,75
7011,28847,78
7012,62027,74
7013,43022,77
7014,44072,71
7015,83293,84
7016,43022,93
7017,42392,71
7018,43232,73
7019,1663,87
7020,42077,76
7021,42917,90
7022,4252,69
7023,1658,78
7024,1658,71
7025,1663,74
7026,42791,97
7027,43022,89
7028,80822,68
7029,1663,79
7030,43022,89
7031,254653,83
7032,43127,82
7033,44770,78
7034,43967,88
7035,24122,75
7036,77042,81
7037,43068,79
7038,1658,79
7039,43337,77
7040,43967,81
7041,42917,80
7042,42392,80
7043,22981,73
7044,50582,81
7045,1663,76
7046,55968,83
7047,43022,83
7048,1663,81
7049,1658,73
7050,42602,70
7051,1663,92
7052,19397,83
7053,1663,76
7054,43127,81
7055,7630,83
7056,45955,83
7057,43732,78
7058,43022,85
7059,42959,84
7060,42812,84
7061,1658,78
7062,45857,83
7063,1663,83
7064,1663,81
7065,43022,73
7066,1658,80
7067,43169,81
7068,90377,72
7069,1663,78
7070,2213,73
7071,10052,85
7072,55968,81
7073,71372,67
7074,85652,81
7075,44072,75
7076,47852,78
7077,1663,78
7078,43022,80
7079,16366,82
7080,1663,82
7081,1663,74
7082,43022,86
7083,42938,81
7084,16513,76
7085,1663,78
7086,24850,72
7087,24122,96
7088,9002,88
7089,21000000,86
7090,37113,73
7091,42392,83
7092,42938,76
7093,1658,78
7094,43049,72
7095,42182,88
7096,1663,82
7097,1658,72
7098,43022,82
7099,43022,88
7100,26639,86
7101,42980,82
7102,42875,73
7103,43732,72
7104,8134,90
7105,42182,83
7106,43127,74
7107,1658,80
7108,1658,76
7109,46907,81
7110,35462,84
7111,42707,79
7112,42077,81
7113,43022,75
7114,42749,86
7115,21000000,85
7116,80927,73
7117,1663,71
7118,1663,84
7119,48778,80
7120,42833,82
7121,1663,76
7122,1658,80
7123,42077,74
7124,1663,78
7125,1663,79
7126,1658,89
7127,43127,70
7128,43190,79
7129,8008,79
7130,43022,83
7131,43127,72
7132,52472,90
7133,51527,74
7134,1663,86
7135,47747,88
7136,85652,78
7137,1658,85
7138,42917,77
7139,24227,79
7140,25877,73
7141,1663,84
7142,54488,88
7143,24227,78
7144,1658,85
7145,43022,75
7146,43190,81
7147,42602,78
7148,42728,81
7149,42602,72
7150,43022,78
7151,43022,78
7152,1663,80
7153,1658,92
7154,43022,80
7155,50582,78
7156,42602,90
7157,1663,87
7158,1658,71
7159,1663,89
7160,43127,89
7161,43022,76
7162,42182,75
7163,1663,81
7164,1663,76
7165,1663,82
7166,1663,82
7167,4157,85
7168,53442,87
7169,43022,74
7170,42875,83
7171,1663,78
7172,42077,81
7173,1663,91
7174,53497,72
7175,43022,83
7176,43022,79
7177,66647,77
7178,1658,77
7179,1658,77
7180,3401503,80
7181,1663,94
7182,43022,76
7183,43022,72
7184,1663,78
7185,50918,92
7186,1663,69
7187,42917,79
7188,24514,89
7189,1658,78
7190,1658,76
7191,1663,76
7192,1658,79
7193,1663,84
7194,43022,87
7195,1672,72
7196,42728,91
7197,1658,75
7198,1663,81
7199,42833,81
7200,49742,84
7201,43022,72
7202,47747,90
7203,42833,81
7204,71372,85
7205,1663,87
7206,1663,69
7207,43022,70
7208,1658,78
7209,42077,79
7210,59928,81
7211,42896,80
7212,44072,69
7213,43022,83
7214,43022,90
7215,1663,71
7216,1663,76
7217,43127,74
7218,43022,74
7219,43022,84
7220,43127,84
7221,1658,74
7222,41972,81
7223,43022,87
7224,1663,74
7225,42917,80
7226,1663,76
7227,43337,78
7228,1658,82
7229,90377,82
7230,36407,73
7231,1658,82
7232,1663,79
7233,42602,86
7234,43022,77
7235,1663,76
7236,43967,74
7237,1658,93
7238,43732,76
7239,43127,73
7240,1663,71
7241,3545,84
7242,42182,81
7243,1663,88
7244,1663,79
7245,48797,89
7246,1658,75
7247,1663,75
7248,1663,84
7249,21000000,90
7250,50897,84
7251,39242,90
7252,61922,82
7253,33523,86
7254,1658,78
7255,4252,88
7256,41447,76
7257,42287,74
7258,5222,70
7259,42497,82
7260,42602,70
7261,71477,76
7262,1658,69
7263,2762,84
7264,76202,77
7265,9947,67
7266,24122,76
7267,1658,79
7268,43022,83
7269,53497,81
7270,1663,79
7271,10052,78
7272,1663,77
7273,76202,79
7274,1658,79
7275,1658,89
7276,1658,77
7277,51632,78
7278,41132,78
7279,46907,77
7280,55878,81
7281,53497,75
7282,1663,72
7283,14777,79
7284,43127,81
7285,52472,74
7286,39872,81
7287,42077,85
7288,62972,73
7289,1658,75
7290,1658,87
7291,39347,73
7292,1663,75
7293,43022,70
7294,1658,79
7295,1663,82
7296,43022,77
7297,48778,92
7298,47852,67
7299,4252,91
7300,43022,83
7301,57197,85
7302,38297,70
7303,43022,79
7304,42927,80
7305,1658,92
7306,1658,74
7307,1663,89
7308,41657,75
7309,1658,78
7310,53497,82
7311,76202,74
7312,42833,87
7313,77042,86
7314,57363,76
7315,1658,80
7316,53669,82
7317,42959,77
7318,1663,85
7319,47852,77
7320,43127,72
7321,1663,72
7322,43022,80
7323,19922,82
7324,42896,76
7325,38297,81
7326,43817,76
7327,53442,72
7328,42686,82
7329,68894,81
7330,4157,79
7331,43232,72
7332,50102,92
7333,1663,73
7334,43022,76
7335,42602,76
7336,42602,72
7337,21917,89
7338,43652,85
7339,1658,83
7340,1658,101
7341,42833,76
7342,43022,79
7343,43127,77
7344,42077,72
7345,76202,73
7346,42833,87
7347,1663,85
7348,10052,81
7349,1663,85
7350,1663,77
7351,66752,73
7352,1658,80
7353,43022,89
7354,43022,81
7355,1663,83
7356,94052,70
7357,43967,80
7358,46806,75
7359,66752,79
7360,57197,86
7361,1658,68
7362,43022,78
7363,1663,76
7364,1663,71
7365,51632,87
7366,47747,71
7367,68537,79
7368,4157,77
7369,55968,77
7370,24122,81
7371,1663,73
7372,47852,74
7373,19502,94
7374,10045,73
7375,43211,83
7376,1658,82
7377,1658,83
7378,1658,71
7379,1658,90
7380,21000000,84
7381,55968,73
7382,18403,82
7383,16366,78
7384,4157,73
7385,1663,76
7386,45857,90
7387,43022,77
7388,1658,84
7389,1658,83
7390,43127,84
# After 3600 updates
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1658: "> 9 x F < x x greedy? dec 0 < x F x eql 8 5 T 4 8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x depth T 3 T x ≥ x neg T x eql eql -5 5 T -10 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < x * greedy 3 x 5 T 0 3 x x -1 x / x x be 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F neg greedy copy pop x x 5 T 0 3 x x -1 x ∨ x x be x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -1 copy x x x x + -7 x -5 inc -9 5 F 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop x inc / < 7 x x ∧ be -1 pop -10 x T 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * greedy copy -5 3 T T T depth -1 pop ¬ x > 8 5 x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 T 5 x -3 ∧ F x F x x 9 inc greedy > -6 x -6 x 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 * -10 -5 x 0 x x -5 -9 inc copy x x x -7 + if 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ neg greedy + * x T x be F x x > T inc 2 5 neg 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc F 5 ∨ -3 + x x x pop ∨ x 2 x ¬ 0 7 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 greedy x * 3 -4 T T x -1 pop ¬ x > 8 5 x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 swap 5 F x -2 -6 x -1 pop -10 x T 8 x T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x T x be * * x ∨ x x x x -7 + T 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy neg 5 x x x -1 x depth pop * ≥ ∧ dec ≤ 1 x T 4 7 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x 8 - x x inc T neg 8 -1 pop -10 < x 8 ∨ T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 2 5 x -3 ∧ F x / 1 x 9 -5 greedy -6 -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x greedy x ¬ F x / 1 + -1 pop -10 x > neg 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy copy F swap x x ∨ dec -6 -7 + -5 inc * be 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x be T x x be eql + neg swap inc T > inc x T 4 8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 * T 3 x 5 T 0 3 x x -1 x / x x -6 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 x x * depth ungreedy x -6 be ∨ copy x inc greedy 9 8 x be 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ neg x + * x x x T be -1 2 -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F 2 if x greedy? ≤ x T -6 be -6 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc F < ∨ x F x be -1 pop ∨ x > 0 5 greedy dec 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop / -4 x x 6 x x -8 -10 dec -4 7 -4 > 5 pop 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy 3 8 8 x F x -2 9 neg -1 -6 x x > 8 5 7 6 4 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "< copy ∨ swap -1 F x -2 9 neg -1 pop -10 x > 8 5 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "/ inc greedy 4 T x x x greedy > 2 < -10 x 1 > < x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x x - x x inc F neg 8 -1 pop -10 x T T ∨ T 4 > 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ 8 greedy? swap greedy x copy F neg 8 -1 pop -10 ungreedy x 8 5 x -6 4 swap -10 inc -5 * 9 * dec 5 *"
# 1658: "be dec dec + dec x x x + -7 + -5 inc * x 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec 5 -3 -3 ∧ F * dec 1 -6 9 inc x > -4 5 0 4 4 swap -10 inc -5 * 9 * dec 5 *"
# 1658: "5 x -3 x dec * x x ¬ -7 + -5 x -1 x 8 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "T -5 T -10 neg dec -9 T 4 x 9 9 -6 -1 - 8 -2 T x 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 -3 ¬ neg x T * * x ∨ copy x inc swap T T x swap 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 inc greedy 4 T F x -2 x -3 ∨ x -10 x T 8 5 T 4 4 be -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 -10 -3 x < ∨ x F x be -1 x + x > 0 5 greedy dec 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 3 x x 0 3 x x T be T pop -10 x > * 5 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy be -9 swap 5 F x -2 9 copy -1 F F + > 8 copy 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x 3 x be * * x ∨ copy x x x -7 + T 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy inc 7 3 x x x neg dec 4 x -5 ≥ * F 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec x -3 ∨ ∧ F * dec 1 -2 9 inc < > 8 ∨ T 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "6 -10 -3 swap * T pop T 5 8 T pop -10 x > * x 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be -9 T T x x x greedy x 2 F -10 ungreedy < 5 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ T 5 x -3 ∧ F x 2 1 x 9 inc greedy x -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "depth 6 7 eql -1 F be F -6 eql -6 x 2 > greedy 8 5 < 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x x x x x x F neg 8 -1 pop -10 ungreedy T 8 5 T x 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy depth 5 x be / inc -8 -2 eql x 1 x x x 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 greedy? greedy T T x x x greedy neg 2 F -10 ungreedy < 8 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -1 depth x 7 x ≤ x swap F x -10 x 1 > 5 x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap 5 F x -2 9 copy -1 pop F x > 8 copy 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ be -9 -4 * 5 x x x be -1 2 -10 x > ≥ 5 T -9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1663: "5 3 eql neg 2 -5 -9 -7 1 pop swap x -5 x -9 inc 8 if be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "5 9 be x 0 x x x F -5 / x -10 T -9 neg 0 > dec T 7 -10 inc -5 * 9 * F 5 *"
# 1663: "/ inc greedy 4 T x x x greedy x F < F x 0 x 5 x be 4 7 -10 inc -5 * 9 * ¬ 5 *"
# 1663: "5 greedy? be x 0 x x x F eql / F -10 T -9 neg 0 > dec T 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x < x + greedy F x x x F F x -10 x > 8 x x -9 T - -10 inc -5 * 9 * greedy 5 *"
# 1663: "F neg x + * ∨ x -6 x x swap T T x > T if F ≥ T x -10 inc -5 * 9 * greedy 5 *"
# 1663: "< 2 x x * copy x x -6 be ∨ copy x inc greedy 9 8 < be 4 eql -10 inc -5 * 9 * greedy 5 *"
# 1663: "greedy x ≤ x x x x F if x < pop - x > x x copy greedy 4 9 -10 inc -5 * 9 * greedy 5 *"
# 1663: "x dec x -3 ∨ ∧ F * dec - -2 9 copy x > x 5 0 4 x 5 -10 inc -5 * 9 * F 5 *"
# 1663: "greedy < F x greedy? x x T x 0 ≤ ungreedy -4 x 7 x 5 4 be 2 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "< F ∨ -3 -1 neg x depth T -7 -5 pop -3 4 T x x x be 4 7 -10 inc -5 * 9 * ∨ 5 *"
# 1663: "5 9 2 x 0 x x F F -5 / x x F 2 -5 x ≥ 4 4 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "greedy -10 greedy 8 -4 8 > T F x x ¬ x T x F -8 greedy? 4 4 F -10 inc -5 * 9 * ∧ 5 *"
# 1663: "x dec x be ∧ x x be eql + x ∨ inc 9 > inc x -2 -6 4 x -10 inc -5 * 9 * F 5 *"
# 1663: "if + T 0 greedy? ≥ 7 -6 T 4 ∨ x F 2 depth -5 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "-4 be / T -3 -3 * -6 T 0 3 2 x 2 ≤ + x 0 copy < 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "+ be -9 swap 5 F eql -2 -4 copy -1 6 F x > 8 copy 7 4 4 eql -10 inc -5 * 9 * F 5 *"
# 1663: "x be 7 T -3 -3 eql x x x 9 x > x pop -2 x -6 * x -8 9 ∧ -5 * 9 * neg 5 *"
# 1663: "dec depth 5 x be / inc -8 -2 eql x 8 -3 x pop 2 ¬ 0 dec 4 greedy -10 -9 -5 * 9 * greedy 5 *"
# 1663: "< dec ∨ -3 -1 F x depth 9 -7 -5 pop -3 4 > - 5 0 x 4 ∨ -10 inc -5 * 9 * ∨ 5 *"
# 1663: "5 9 x x 0 x x x be F / x x T inc 2 depth x 6 5 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "T neg greedy + * 3 x x F be -1 pop -10 T > greedy 0 > 4 T 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "< dec ∨ -2 -1 x x be -5 inc 2 < x > pop x ¬ 0 dec 4 greedy -10 -9 -5 * 9 * greedy 5 *"
# 1663: "x neg greedy + * 3 x x T be -1 pop -10 x > 8 5 1 4 4 T -10 inc -5 * 9 * F 5 *"
# 1663: "neg x F x + x -9 x F ∧ T F -10 x 5 T 5 -5 4 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "be inc 7 3 -5 x x neg dec 4 3 F x F x x 5 0 be 4 3 -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ T -9 swap + 5 x x < 0 3 2 T 2 ≤ + x 0 copy < 7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ x ∧ + -1 eql 6 -6 x 0 3 ungreedy x x swap x 5 * -9 4 T -10 inc -5 * 9 * greedy 5 *"
# 1663: "6 -10 -3 8 + x x neg < greedy? T ungreedy x x > T ungreedy ≥ dec 4 T -10 inc -5 * 9 * F 5 *"
# 1663: "5 ¬ -2 ¬ -2 x be * * T neg copy T if swap x x dec be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ x greedy 4 T F x -2 dec -3 -1 x -10 x T 8 5 T 4 4 be -10 inc -5 * 9 * F 5 *"
# 1663: "x 8 x copy -5 -8 copy x x < -9 x x ∨ dec x be 0 greedy -1 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "> 9 x x * * F x -10 x x T x F > depth 8 3 be F F -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ 4 T x T if ∧ * F x ∨ x x x x -7 + T 4 4 -7 -10 inc -5 * 9 * greedy 5 *"
# 1663: "T x ∧ + -1 neg -9 x F ∧ 3 9 inc -3 > -6 -5 if x 4 ∨ -10 inc -5 * 9 * F 5 *"
# 1663: "x -7 -3 F < x x neg dec 0 T -1 x x > T ungreedy ≥ dec 4 T -10 inc -5 * 9 * F 5 *"
# 1663: "T x - x x x 7 * depth pop * ≥ ∧ dec ¬ -5 5 -4 4 7 F -10 inc -5 * 9 * be 5 *"
# 1663: "x inc 7 copy x x x if -6 8 F T F x swap x x dec be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "≤ 4 T x 3 x x x x -7 x -5 inc * F 8 5 -2 T 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "x -3 greedy + * 3 x x T be -1 ∧ -10 x > 8 5 1 4 depth T -10 inc -5 * 9 * F 5 *"
# 4157: "T x - x 6 F x ¬ swap x T -6 F 9 x 8 x x be -1 -3 -10 -10 -5 * 9 * dec 5 *"
# 8008: "-9 4 ∧ F < ∨ x F x be -1 pop ∨ x > 0 5 swap dec 4 ∨ -10 inc -6 * 9 * greedy 5 *"
# 42833: "-9 -5 + -2 depth + x -4 if -4 x copy x > T x x swap 4 4 7 -10 inc -5 9 8 -10 - x 9"
# 42833: "greedy inc 7 3 x x 1 neg 4 4 x -5 ≥ * F 8 5 x 4 4 7 -10 inc -5 T 8 -10 - x 9"
7391,42917,73
7392,43022,76
7393,42938,69
7394,43190,73
7395,43022,69
7396,43442,86
7397,93058,86
7398,55968,87
7399,47852,71
7400,43127,80
7401,1663,86
7402,1663,77
7403,6055673,83
7404,55878,76
7405,28546,86
7406,36407,85
7407,43022,84
7408,1658,79
7409,1663,77
7410,43022,78
7411,41132,73
7412,10052,82
7413,1658,78
7414,34265,82
7415,42077,80
7416,1658,80
7417,43085,76
7418,55878,87
7419,42938,89
7420,41132,79
7421,1663,78
7422,43022,80
7423,1658,84
7424,42875,77
7425,43127,76
7426,47852,88
7427,1663,83
7428,1658,68
7429,1658,76
7430,42602,80
7431,1658,79
7432,43022,73
7433,43732,70
7434,43022,76
7435,1658,78
7436,43817,78
7437,21000000,74
7438,42182,91
7439,1663,77
7440,1663,76
7441,1658,78
7442,1658,81
7443,80927,78
7444,1663,71
7445,123347,84
7446,1658,81
7447,42917,87
7448,21000000,78
7449,1663,76
7450,43022,83
7451,39347,74
7452,1658,69
7453,49637,71
7454,79772,92
7455,34517,74
7456,43022,75
7457,42917,82
7458,9086,78
7459,49259,96
7460,43022,74
7461,42938,67
7462,42833,74
7463,1663,89
7464,59038,94
7465,1663,75
7466,42392,78
7467,43106,81
7468,62027,73
7469,1658,81
7470,43732,83
7471,10052,78
7472,55968,79
7473,43022,69
7474,1658,82
7475,89432,83
7476,43211,87
7477,13475,96
7478,42938,81
7479,1658,74
7480,42392,81
7481,55878,86
7482,71372,77
7483,1663,80
7484,1658,69
7485,42938,76
7486,42812,73
7487,1663,71
7488,76083,88
7489,42182,82
7490,16408,74
7491,1663,81
7492,1663,76
7493,34517,98
7494,42833,77
7495,43022,79
7496,42182,76
7497,43817,77
7498,1658,94
7499,42182,84
7500,1658,92
7501,1658,83
7502,42182,70
7503,1663,91
7504,42812,79
7505,48797,78
7506,4252,75
7507,43022,71
7508,1658,85
7509,43022,87
7510,1663,83
7511,80927,82
7512,102662,72
7513,43022,86
7514,57302,86
7515,42896,80
7516,1663,84
7517,1663,80
7518,1658,85
7519,52472,78
7520,1658,75
7521,66752,71
7522,80927,77
7523,43022,80
7524,43022,78
7525,43022,91
7526,1663,78
7527,1663,98
7528,42917,85
7529,42602,87
7530,43022,68
7531,43127,76
7532,26012,78
7533,43022,91
7534,21000000,82
7535,1658,78
7536,1663,75
7537,41867,76
7538,100541,102
7539,33572,79
7540,19502,95
7541,42728,80
7542,62808,90
7543,1663,82
7544,1658,71
7545,1658,79
7546,43127,82
7547,43022,70
7548,66752,76
7549,28847,82
7550,37352,76
7551,1658,74
7552,41132,94
7553,1658,83
7554,1658,82
7555,193123,78
7556,33418,83
7557,1658,79
7558,43022,78
7559,102557,85
7560,43817,83
7561,43022,75
7562,1658,70
7563,80822,72
7564,76790,92
7565,17570,82
7566,43817,77
7567,66752,80
7568,1658,80
7569,1658,80
7570,1663,86
7571,102662,91
7572,28511,81
7573,43127,80
7574,102662,79
7575,1658,79
7576,1658,82
7577,1663,79
7578,85652,83
7579,1658,69
7580,53442,91
7581,43127,77
7582,1658,70
7583,43022,75
7584,1658,79
7585,43127,72
7586,34328,69
7587,1663,83
7588,38402,79
7589,53497,72
7590,1663,86
7591,1663,73
7592,1663,84
7593,41237,87
7594,1663,86
7595,1658,85
7596,1658,73
7597,42917,98
7598,43022,74
7599,1658,82
7600,43022,72
7601,1658,89
7602,20762,84
7603,43967,72
7604,60032,89
7605,43442,82
7606,34622,77
7607,21000000,87
7608,45796,73
7609,43022,65
7610,16366,91
7611,53442,80
7612,43022,77
7613,1658,81
7614,45962,72
7615,1658,77
7616,38402,71
7617,43127,84
7618,1658,72
7619,1658,76
7620,42749,78
7621,1658,79
7622,10052,85
7623,4157,76
7624,36953,82
7625,16667,74
7626,43127,81
7627,1658,72
7628,1663,79
7629,16366,80
7630,1658,80
7631,47747,70
7632,43035,73
7633,43022,77
7634,43757,77
7635,1663,82
7636,42182,78
7637,1663,71
7638,1658,79
7639,43022,79
7640,43106,79
7641,226412,72
7642,44824,91
7643,71477,83
7644,45857,86
7645,43127,82
7646,1658,87
7647,1663,70
7648,1663,79
7649,43442,73
7650,1663,87
7651,43127,81
7652,68306,76
7653,47852,81
7654,43127,99
7655,42875,76
7656,55878,83
7657,1658,81
7658,1658,78
7659,52577,79
7660,51527,89
7661,46277,75
7662,48752,72
7663,85652,83
7664,1658,76
7665,1658,70
7666,85547,89
7667,47968,82
7668,43022,83
7669,4252,76
7670,1658,73
7671,19397,79
7672,43022,79
7673,42602,72
7674,43127,79
7675,42917,78
7676,1658,83
7677,1658,76
7678,1663,84
7679,43127,84
7680,9086,85
7681,43127,77
7682,43127,73
7683,1658,90
7684,1663,93
7685,1658,79
7686,4157,78
7687,1658,71
7688,1658,81
7689,43022,77
7690,1663,78
7691,4157,70
7692,1658,81
7693,47747,80
7694,51527,80
7695,14777,73
7696,1663,77
7697,24227,86
7698,42938,81
7699,62027,73
7700,43127,75
7701,42833,76
7702,43022,92
7703,22127,68
7704,43022,79
7705,1658,87
7706,1658,69
7707,1658,76
7708,43127,81
7709,55968,78
7710,1658,76
7711,44072,77
7712,1658,76
7713,42077,76
7714,80927,89
7715,1658,82
7716,1663,78
7717,43127,74
7718,38402,83
7719,42917,85
7720,4157,76
7721,66752,87
7722,51373,75
7723,43106,70
7724,42434,88
7725,66752,79
7726,4157,78
7727,1658,72
7728,1663,72
7729,1658,76
7730,47747,89
7731,42896,80
7732,1658,75
7733,41923,79
7734,1658,81
7735,43022,93
7736,43022,73
7737,42917,78
7738,43817,81
7739,53497,76
7740,1658,83
7741,4252,86
7742,1658,73
7743,42938,76
7744,42602,75
7745,21000000,81
7746,213227,83
7747,43022,79
7748,1658,71
7749,42917,74
7750,43190,75
7751,1658,78
7752,1658,74
7753,47852,81
7754,43127,72
7755,43127,78
7756,1658,76
7757,105230,91
7758,42917,85
7759,162092,73
7760,42182,85
7761,43022,80
7762,42287,73
7763,1658,75
7764,1658,74
7765,42917,76
7766,1663,83
7767,43817,77
7768,1663,79
7769,80927,91
7770,46803,90
7771,3545,84
7772,43022,79
7773,43022,73
7774,1658,84
7775,43190,70
7776,42602,91
7777,91427,77
7778,43022,82
7779,102662,80
7780,14735,90
7781,43967,86
7782,1658,76
7783,43022,79
7784,43022,84
7785,43022,83
7786,43022,81
7787,1658,72
7788,28007,84
7789,42917,82
7790,1658,79
7791,1658,73
7792,1658,81
7793,42582,75
7794,49637,84
7795,1658,75
# After 3800 updates
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1658: "5 greedy? greedy T T x x x greedy neg 2 F -10 ungreedy < 8 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy -10 greedy 8 -4 F F F 1 T -1 x x x > 8 5 7 6 T ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? F x + * ≤ T x -6 < 2 greedy? -10 < x x ∨ T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 x -3 x dec * x x ¬ -7 + -5 x -1 x 8 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x ∧ -2 x + 0 -9 / x -9 + x x - - - ≥ > 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x * x 0 x x x F -5 / > -10 T -9 neg 0 > 4 x 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x x x x x x F neg 8 -1 pop -10 ungreedy T 8 ≥ T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy depth 5 x be / inc -8 -2 eql x 1 x x x 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < x * greedy 3 x 5 T 0 3 x x -1 x / x x be 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ F x + * ≤ T x be x x swap > T inc 2 5 neg x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x / 1 + -1 pop dec x x x -7 if 4 x -7 -10 -9 -5 * 9 * dec 5 *"
# 1658: "5 2 -3 ¬ neg x T * * x ∨ copy x inc swap T T x swap 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * greedy copy -5 3 T T T depth -1 pop ¬ x > 8 5 x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T -2 -6 0 inc x inc inc x x / * 0 - T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 T 5 x -3 ∧ -6 x F x -9 ≤ F x T 8 F ≥ > 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be dec x + dec x x x + -7 + -5 inc pop x 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 2 5 x -3 ∧ F x / 1 x 9 -5 greedy -6 -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x greedy x x F x / 1 T -1 x x x > 8 5 7 6 4 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec + dec x 0 x + be -1 pop -10 x x x 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x F inc be T 3 -4 T T x -1 pop -2 x -9 8 5 x -3 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "T neg + x x x -1 x depth pop * ≥ inc greedy x -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy T F - x x inc F neg 8 * x > T inc 2 5 neg 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec x x * depth ungreedy x -6 be ∨ < F inc greedy 9 3 x / 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "F 2 if x greedy? ≤ x T -6 be -6 pop -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "* x inc F < ∨ x F x be -1 pop ∨ x > ∧ 5 greedy dec 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F neg greedy copy pop x x 5 T 0 3 x x -1 x ∨ x x be x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy be -9 swap ∧ F < -2 x copy -1 F F + > 8 copy 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< copy ∨ F x F x -2 9 neg -1 4 -10 > > T 5 7 dec -9 greedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be -9 0 F x -3 T 5 x T pop ≥ x > * x -6 ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop inc F x ∨ x F x be -1 pop ∨ x > 0 F greedy dec 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "1 4 T 9 T neg be * * x ∨ x x x x 8 5 x T 3 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T 6 inc > 5 ∨ -3 + x -7 neg swap inc T > -7 + T 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap greedy? x eql * * x ∨ x x x x -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "x 6 -1 ¬ x x x x + -7 x - -10 T -9 neg 0 > 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "T T T -10 neg dec -9 T 4 x F F -10 ungreedy < 5 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "/ inc -9 0 F x -3 T 5 x x pop ≥ x T * x -6 ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< > ∨ -3 -2 + 0 -9 / x -9 inc 2 -8 -1 -7 + T 4 * -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc F < ∨ x F x be -1 pop ∨ x > 0 5 greedy dec 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 2 x x inc dec neg 8 * -5 x x x 8 -9 T x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 inc greedy 4 T F x -2 x -3 ∨ x -10 x T 8 5 T 4 4 be -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 x x * depth ungreedy x -6 be ∨ copy F inc greedy 9 8 x be 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 * T 3 x 5 T 0 3 x x -1 x / x x -6 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec x -3 ∨ ∧ F * dec 1 -2 9 inc < > 8 ∨ T 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 -10 -3 2 + x 0 inc x inc inc x x / * 0 - T 3 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop -1 inc / < x x greedy? dec 0 < x x x swap 8 5 T 4 8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 ungreedy be x 0 x -3 x F -5 / > inc -9 ∨ F F T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "/ inc greedy depth T x x x greedy > -1 ∧ ∧ depth > neg 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x greedy x ¬ F x / 1 + -1 pop -10 x > neg 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 T -9 0 F x -3 T 5 x T pop ≥ x F * x -6 ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x - x x F x ¬ ∨ + -1 pop ≥ x > neg 5 T 4 4 -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "≤ x greedy x ¬ F x / 1 + -1 pop dec x x x x if 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "6 -10 -3 greedy * T pop T 5 x T pop -10 x > * x -6 ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ be -9 -4 * 5 x x x be -1 2 -10 x > ≥ 5 T -9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "> dec inc - 1 * x x F -3 x inc dec x x x -7 if 4 be -7 -10 -9 -5 * 9 * dec 5 *"
# 1658: "∧ T 5 x -3 ∧ F x 2 1 x 9 inc greedy x -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy -10 greedy > -4 F F F 1 T -1 x depth x > -8 5 7 -10 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be -9 T T x x x greedy x 2 F -10 ungreedy < 5 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap 5 F x -2 9 copy -1 pop F x > 8 copy 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x dec + dec x x 3 -2 eql x 1 x x ∨ 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec -6 dec x 0 x + be -1 pop -10 x x T 8 x -6 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x -2 9 -10 -1 -9 F x -1 8 4 7 be F -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "greedy x x - x x inc F neg 8 -1 pop -10 x T T ∨ T 4 > 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 greedy x x 7 3 ¬ x + x swap inc x > x 5 depth 4 4 swap -10 inc -5 * 9 * dec 5 *"
# 1658: "< copy ∨ swap -1 F x -2 9 neg -1 pop -10 x > 8 5 7 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 x if 0 x x x ∨ F / be x -7 inc 2 depth x 4 x -7 -10 -9 -5 * 9 * dec 5 *"
# 1658: "greedy x x x x x x F neg 8 -1 pop -10 ungreedy T 8 5 T x 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x -2 x copy -1 x F x -1 8 4 7 4 4 -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "< F ∨ -3 -2 < 0 -9 / x -10 inc 2 > * - 5 8 6 T x -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x 3 x be * * x -3 > x x x x x T 4 8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 9 be x 0 x x x T -5 - - -3 x > x 5 depth 4 depth swap -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x T x be * * x ∨ x x x x -7 + T 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ neg x + * x x x T be -1 2 -10 x > 8 5 0 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 ¬ x ¬ -2 x be * * T neg copy greedy if swap x x dec be 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x -2 9 eql -1 pop F x -1 8 4 7 be x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "T neg dec + dec x x x + -7 + -5 + * x 8 5 T 4 ungreedy x -10 inc -5 * 9 * dec 5 *"
# 1658: "+ 8 greedy? swap greedy x copy F neg 8 -1 pop -10 ungreedy x 8 5 x -6 4 swap -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy x -3 x eql T x neg copy be x eql 8 5 T 4 - ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "T F inc be T pop -2 ¬ x + neg 6 inc x > -4 5 0 be 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -1 x x < x ≤ x < F x -10 x 1 > 5 x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be -9 T x F x / 1 T -1 x F x > 8 5 7 inc 0 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 swap 5 F x -2 -6 x -1 pop -10 x T 8 x T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1663: "5 9 be x 0 x x x ungreedy x T F -10 x 5 T F -5 4 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "/ x greedy 4 T F x -2 dec -3 -1 x -10 x T 8 5 T 4 4 be -10 inc -5 * 9 * F 5 *"
# 1663: "5 3 eql neg 2 -5 -9 -7 1 pop swap x -5 x -9 inc 8 if be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "-4 be 3 T T x depth x greedy x 2 F -10 ungreedy < 5 5 x x 4 3 -10 inc -5 * 9 * ∧ 5 *"
# 1663: "if + T 0 greedy? ≥ 7 -6 T 4 ∨ x F 2 depth -5 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "pop -6 inc / 5 depth x -2 9 copy T x F x > 8 4 3 neg 8 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "< T ∨ -3 -2 < 0 -9 / - -10 x depth x 1 > 5 x 4 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "x 8 x copy -5 -8 copy x x greedy -9 x -9 ∨ dec greedy be 0 greedy -1 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "< greedy ∨ swap -1 F * -2 9 neg -1 x -10 x > 8 5 7 x x x -10 inc -5 * 9 * F 5 *"
# 1663: "pop dec dec -6 dec x 0 x + be -1 pop > x x T x x -6 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "be inc > 3 -5 x x neg dec 4 3 F x F F x + 0 be 4 3 -10 inc -5 * 9 * greedy 5 *"
# 1663: "-9 inc 7 0 T x -5 + greedy x 2 F -10 ungreedy T 5 5 T x 4 pop -10 inc -5 * 9 * greedy 5 *"
# 1663: "-4 be -9 / -10 x -3 T 5 x T pop ≥ x > * x ¬ ∨ 4 7 -10 inc -5 * 9 * greedy 5 *"
# 8008: "-9 4 ∧ F < ∨ x F x be -1 pop ∨ x > 0 5 swap dec 4 ∨ -10 inc -6 * 9 * greedy 5 *"
# 42833: "5 x -3 x dec * x x ¬ -7 + -5 x -1 x 8 5 T x 4 x -10 inc x * 9 * ungreedy 5 9"
# 43022: "5 2 -3 ¬ pop x T * * x ∨ copy x inc swap T T x swap 4 7 + x inc F x dec x x x"
7796,43022,70
7797,42875,66
7798,43190,71
7799,43085,74
7800,43022,81
7801,71477,73
7802,43127,81
7803,102662,82
7804,43022,79
7805,43064,71
7806,42875,68
7807,43127,76
7808,1658,76
7809,42182,74
7810,41447,81
7811,47852,100
7812,71477,81
7813,1658,80
7814,55878,75
7815,43106,89
7816,43064,81
7817,1658,81
7818,1658,79
7819,43967,73
7820,43190,71
7821,56058,78
7822,42917,88
7823,34538,82
7824,1658,80
7825,281267,76
7826,55968,93
7827,43022,72
7828,43127,77
7829,42602,71
7830,43022,79
7831,44072,77
7832,43085,78
7833,43022,89
7834,1658,80
7835,42182,77
7836,9002,88
7837,43967,72
7838,48797,79
7839,1658,76
7840,43022,95
7841,1658,72
7842,43064,81
7843,1658,72
7844,36512,86
7845,42497,78
7846,1663,74
7847,42875,71
7848,4157,77
7849,43127,72
7850,42938,87
7851,1663,66
7852,102410,78
7853,43022,87
7854,1658,81
7855,42917,76
7856,43022,70
7857,46802,81
7858,1658,89
7859,1658,93
7860,52577,79
7861,169498,72
7862,1658,76
7863,43022,75
7864,119672,85
7865,1663,77
7866,180608,81
7867,1663,89
7868,1663,79
7869,1658,86
7870,1658,75
7871,42707,70
7872,43127,86
7873,42917,68
7874,43022,76
7875,1658,81
7876,1658,81
7877,43127,77
7878,43001,93
7879,43127,80
7880,42497,75
7881,1658,84
7882,1652,80
7883,43817,75
7884,43337,78
7885,56357,77
7886,1663,73
7887,1658,74
7888,62027,73
7889,47852,79
7890,42182,82
7891,37457,79
7892,34580,81
7893,43001,91
7894,1658,81
7895,4157,88
7896,1658,79
7897,47852,75
7898,1658,79
7899,43022,84
7900,47852,67
7901,1658,84
7902,1658,80
7903,1658,91
7904,39452,78
7905,43022,82
7906,1658,88
7907,1658,76
7908,42917,84
7909,42833,81
7910,4157,87
7911,43022,87
7912,43127,70
7913,43022,82
7914,31766,100
7915,102557,77
7916,1658,75
7917,90377,89
7918,1658,78
7919,21000000,79
7920,119378,77
7921,80822,90
7922,43022,80
7923,43127,80
7924,42896,73
7925,43022,82
7926,1658,82
7927,21000000,80
7928,1658,101
7929,43127,69
7930,1658,80
7931,43022,79
7932,55878,68
7933,4157,78
7934,43127,77
7935,1658,90
7936,45962,78
7937,32473,101
7938,24227,99
7939,76202,89
7940,39347,82
7941,1658,74
7942,48797,96
7943,47852,71
7944,119672,72
7945,51506,69
7946,1663,85
7947,42833,79
7948,18298,92
7949,1658,78
7950,41342,77
7951,1658,85
7952,38402,81
7953,1658,78
7954,1658,76
7955,1658,80
7956,43127,98
7957,42980,70
7958,4157,78
7959,99512,87
7960,48797,83
7961,85547,85
7962,42182,92
7963,43022,82
7964,42182,76
7965,42917,76
7966,1658,70
7967,1658,82
7968,39347,75
7969,1658,81
7970,1658,69
7971,43022,75
7972,17612,80
7973,1663,77
7974,10052,84
7975,42252,78
7976,1658,90
7977,1658,69
7978,20447,79
7979,42686,74
7980,43022,79
7981,4157,80
7982,1658,72
7983,51632,88
7984,1658,80
7985,1658,75
7986,53497,80
7987,1663,72
7988,71477,82
7989,9254,90
7990,55878,78
7991,1658,78
7992,4157,76
7993,65639,85
7994,1658,78
7995,1658,84
7996,16366,81
7997,1658,83
7998,1658,79
7999,44093,79
8000,1658,83
8001,1658,86
8002,42917,82
8003,34643,75
8004,43817,74
8005,34926,81
8006,43127,74
8007,29498,78
8008,59808,82
8009,4157,72
8010,47852,77
8011,1658,73
8012,66647,74
8013,1658,78
8014,51632,84
8015,21000000,76
8016,1658,72
8017,43022,79
8018,43127,77
8019,50477,84
8020,1658,91
8021,14777,84
8022,43022,88
8023,43757,77
8024,43817,80
8025,28642,88
8026,44072,74
8027,80927,85
8028,68474,78
8029,42959,78
8030,62027,85
8031,38297,83
8032,47852,68
8033,19502,78
8034,1658,84
8035,1658,72
8036,42602,76
8037,42182,80
8038,1658,73
8039,43127,82
8040,59990,79
8041,42938,83
8042,37877,75
8043,1658,75
8044,43127,69
8045,62027,74
8046,233156,79
8047,1658,79
8048,43022,69
8049,2198,81
8050,42077,76
8051,53497,71
8052,45962,91
8053,76202,81
8054,1658,96
8055,50603,76
8056,42287,69
8057,1658,78
8058,34580,79
8059,52932,93
8060,1658,75
8061,1658,82
8062,43127,77
8063,43967,73
8064,16366,80
8065,1658,70
8066,1658,91
8067,1658,77
8068,7630,92
8069,1658,83
8070,42182,81
8071,1658,76
8072,76202,82
8073,57302,78
8074,42917,94
8075,1658,76
8076,43127,75
8077,42182,86
8078,33418,80
8079,43127,74
8080,43232,88
8081,43022,71
8082,37982,79
8083,42938,85
8084,43127,74
8085,1658,87
8086,43127,93
8087,46907,80
8088,42182,69
8089,1658,77
8090,1658,69
8091,1663,88
8092,1658,77
8093,80927,83
8094,43127,95
8095,1658,81
8096,43127,77
8097,1658,74
8098,7630,83
8099,3545,98
8100,123452,82
8101,43022,69
8102,3358,83
8103,1658,93
8104,1658,84
8105,1658,86
8106,1663,82
8107,53497,75
8108,102662,90
8109,43043,78
8110,1658,74
8111,1658,80
8112,43022,79
8113,47852,79
8114,1658,73
8115,1658,78
8116,43127,74
8117,42182,88
8118,42077,76
8119,43817,87
8120,42917,76
8121,1658,90
8122,24227,71
8123,102662,83
8124,43022,82
8125,1658,77
8126,43127,82
8127,109886,80
8128,42917,85
8129,44845,79
8130,187712,89
8131,35567,83
8132,1658,78
8133,42602,79
8134,44387,73
8135,42917,76
8136,1663,73
8137,41188,102
8138,43022,74
8139,43442,76
8140,42182,84
8141,47327,72
8142,55878,77
8143,25018,74
8144,1663,81
8145,16366,88
8146,1658,74
8147,8323,96
8148,43022,76
8149,44093,69
8150,14777,76
8151,1658,74
8152,42182,80
8153,1663,80
8154,43652,89
8155,76202,91
8156,42875,76
8157,55878,88
8158,33677,77
8159,1658,71
8160,1658,87
8161,76958,76
8162,1658,74
8163,1663,79
8164,43043,70
8165,43106,83
8166,42917,84
8167,43022,80
8168,43127,87
8169,1658,82
8170,43022,81
8171,213227,82
8172,76202,70
8173,66752,76
8174,43022,84
8175,42938,88
8176,43022,99
8177,1658,78
8178,43022,79
8179,24227,84
8180,1658,92
8181,1658,81
8182,1658,70
8183,10052,90
8184,1658,70
8185,1658,76
8186,35567,82
8187,60137,76
8188,1658,84
8189,30842,78
8190,1658,79
8191,42917,70
8192,43337,81
8193,36512,77
8194,42182,80
8195,38297,76
8196,44007,71
8197,1658,76
8198,42917,95
8199,42917,81
8200,42938,70
# After 4000 updates
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1658: "x < 6 * T 3 x 5 T 0 3 x x -1 x / x x -6 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy x -3 x eql + x neg copy be swap eql 8 5 T 4 - ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "5 x -3 x dec * x x ¬ -7 + -5 x -1 x 8 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x / 1 + -1 pop ∨ x > ∧ 5 greedy dec T 7 -10 inc -5 * depth * dec 5 *"
# 1658: "3 -10 greedy 8 -4 F inc F ungreedy x swap F -10 -7 F T F -5 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "T copy ∨ F x F x -2 ≤ 3 -1 4 -10 F > T 5 7 < -9 greedy -10 inc -5 * 9 * dec 5 *"
# 1658: "5 neg -3 ∨ x x T F neg 8 swap pop -10 ungreedy ∧ 8 ≥ T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 be x 0 x x x ungreedy x swap F -10 -7 5 T F -5 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "F F x + * -3 x eql T ∧ neg T be x eql 8 5 T 4 2 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x copy 9 3 x inc inc pop -3 8 if T x 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -1 x x < x ≤ x < F x -10 4 1 > 5 x greedy? -9 x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * greedy copy -5 3 T T T depth -1 pop ¬ x > 8 5 x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 x be x 0 x x x T -5 - - -3 x > x 5 depth 4 depth 7 -9 greedy -5 * 9 * dec 5 *"
# 1658: "greedy inc F - x x inc F neg 8 * x > T inc 2 / * 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x -2 x 9 -1 x F x -1 dec greedy ∨ * 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 -10 -3 2 + x 0 inc x inc inc x x / * 0 - T 3 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< F ∨ -3 -2 < 0 -9 / x -10 inc 2 > * - 5 8 6 T x -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 2 x x inc dec neg 8 * -5 x x x 8 -9 T x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x F inc be T 3 -4 T T x -1 pop -2 x -9 8 5 x -3 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ be -9 swap * F x / 1 T -1 x x F > 8 5 7 6 4 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec x x 3 -2 eql depth depth x F ∨ 8 5 x 4 + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 -10 -3 2 -9 x 0 ∧ x 3 neg pop ∨ x > 0 5 greedy swap 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy T F - x x be * * x ∨ x x T x 8 5 depth T pop * -10 inc -5 * 9 * dec 5 *"
# 1658: "pop -1 ≥ + dec x x x + -7 + -5 + * copy 8 5 T 4 ungreedy x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x / 1 + -1 pop dec x x x -7 if 4 x -7 -10 -9 -5 * 9 * dec 5 *"
# 1658: "x x F x 0 x neg x F -5 / > -10 T 5 neg 0 > 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 inc greedy 4 swap F x -2 x x ∨ x -10 x ≤ 8 5 T 4 4 be -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x greedy x ¬ F x / 1 + -1 pop dec x x x x if 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x T ∧ x x + 0 -9 / x -9 -8 x x - - - ≥ > 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec x -3 ∨ T x x T be 1 2 -10 x dec / dec 0 x 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap greedy? x eql x T be x copy ¬ inc greedy 9 8 x be 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc F 4 5 F x F 9 eql -1 pop x x 5 x x T 4 -8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -1 neg x x x x + -7 x - -10 T -9 neg neg > -9 4 -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "x T T -10 F dec -9 x 4 x F F -10 ungreedy < 5 5 T 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< F ∨ -3 -2 < 0 -9 x x -10 inc 2 > * - 5 8 6 T x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 x x 3 ungreedy be * x x -3 > x x x x x T 4 -8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 x if 0 x x x ungreedy F / be 5 F > 2 depth x 4 x -7 1 -9 -5 * 9 * dec 5 *"
# 1658: "swap be 4 -4 * 5 x x x be -1 2 -10 x > ≥ 5 T -9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 x -4 -10 depth ungreedy * * x ∨ x inc x x -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "T x inc T < ∨ x F x be -1 neg inc x F / x depth -6 T 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F neg greedy copy pop x x 5 T 0 3 x x -1 x ∨ x x be x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 9 be x 0 x x x T -5 - - -3 x > x 5 depth 4 depth swap -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x -9 0 F x -3 T 5 x T pop ≥ x F * x x ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec x -1 ungreedy -2 eql F depth x F ∨ -9 x -6 T 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "be dec x + dec x x x + -7 + -5 inc pop x 8 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T -2 -6 0 -7 x inc inc x ≥ -5 > neg F T 4 4 -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "+ 8 greedy? swap greedy x copy F neg 8 -1 pop -10 ungreedy x 8 5 x -6 4 swap -10 inc -5 * 9 * dec 5 *"
# 1658: "+ 2 -9 swap 5 copy x -2 9 copy -1 pop F x > 8 copy 7 4 -8 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T neg + x x x -1 x depth pop * ≥ inc greedy x -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop inc 1 x ∨ x F x be -1 pop ∨ x > 0 F greedy dec 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x -2 x copy -1 x F T -1 dec 4 T 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T -2 -6 0 > x + neg T inc x > -4 5 0 be be swap -10 inc -5 * 9 * dec 5 *"
# 1658: "> dec 5 - 1 * x * F -3 x inc ≥ x > neg 5 * -8 4 -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "∧ T 5 F -3 T F x 2 1 x neg depth x > F copy greedy dec T 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy -10 x > if F F F F T -6 pop T x > 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < x * be ∧ x 5 T 0 3 x x -3 x / x x be 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 ungreedy 6 -3 T 3 x x greedy F neg copy be swap eql 8 -4 T if - ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc F < ∨ dec F x be -1 pop depth x > x 5 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x / + dec x x 3 -2 eql x depth x x ∨ 8 5 x 4 + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 greedy 4 x 7 x ¬ x x copy F inc inc T -9 x -6 T 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "< x x - x x inc F dec 1 -2 9 inc -9 > ¬ ≥ T -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x -2 9 -10 -1 -9 F x -1 8 4 7 be F -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "< copy -4 swap -1 F F -2 9 neg -1 pop -10 x > 8 5 7 inc - ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop inc 1 x ∨ x eql x be -1 pop / x > -1 F greedy dec 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 T 5 x -3 ∧ -6 x F x -9 ≤ F x T 8 F ≥ > 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be -9 T x F x -7 1 T if x F - > pop 5 greedy swap 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec x -3 ∨ ∧ F -8 dec 1 -2 9 inc -9 > ¬ ∨ T -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 swap 5 F x -2 -6 x -1 pop -10 x T 8 x T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ 8 greedy? swap greedy x copy F neg 8 -1 pop -10 ungreedy x + 5 x -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc 7 -9 x -3 x eql T x neg T greedy? x eql 8 5 T 4 + ≤ -10 -9 -5 * 9 * dec 5 *"
# 1658: "greedy x x x x x x F neg 8 -1 pop -10 ungreedy T 8 ≥ T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 8 0 F x -3 T 5 x T pop ≥ x < x 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "< > ∨ -3 -2 + x -9 / x 8 inc 2 -8 -1 -7 + T 4 * -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec -6 dec x 0 x + be -1 pop -10 x x T 8 x -6 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "5 greedy? greedy T T x x x greedy neg 2 F -10 ungreedy < 8 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ 8 greedy? swap greedy x copy F neg 8 -1 pop depth x x T 5 x -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "> dec inc - 1 * x x F -3 x inc inc pop -3 8 5 T x 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "/ inc -9 0 F x -3 T 5 x x pop ≥ x T * x -6 ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 / x swap T * * x F if x * x 2 * 4 if -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x / 1 + ≤ pop depth x > F copy greedy dec T T -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ T 5 x -3 ∧ F x 2 1 x 9 inc greedy x -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 x x ∨ x depth eql * * x ∨ x x x 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "T 6 inc > 5 ∨ -3 + x -7 neg swap inc T > -7 + T 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be 3 T ∨ T x x T be F 2 -10 x dec / depth 0 x 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec x x * depth ungreedy x -6 be ∨ < F inc greedy 9 3 x / 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "x T greedy T x x -2 ¬ x + neg 6 inc x > -4 5 0 be greedy? swap -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 x x x T pop T 5 x T pop -10 dec > * x -6 ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < -10 x ¬ F x / 1 + -1 pop dec x + x x if 0 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec x x 3 -2 eql depth > -2 F x x 5 T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x T -6 be * * x ∨ x x x x -7 + T x 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< x ∨ -3 -2 + 0 ≤ / swap > inc 2 -8 -1 -7 + T T 1 -7 -10 inc -5 * 9 * dec 5 *"
# 1663: "if + T 0 greedy? ≥ 7 -6 -8 4 neg x F F depth -5 5 0 4 4 be -10 inc -5 * 9 * F 5 *"
# 1663: "if + T 0 greedy? ≥ 7 -6 T 4 ∨ x F 2 depth -5 5 0 4 4 7 -10 inc -5 * 9 * F 5 *"
# 1663: "≤ 4 T x 3 x be * * F -3 > x x x x 2 T be 4 x -10 inc -5 * 9 * greedy 5 *"
# 1663: "x x 7 copy x -3 x / T x neg T be x eql F 5 x 4 4 pop -10 inc -5 * 9 * greedy 5 *"
# 1663: "x -8 x * be ∧ -8 x -6 -5 dec > -10 T -9 x 0 > 4 x 5 -10 inc -5 * 9 * greedy 5 *"
8201,43190,72
8202,43022,68
8203,43017,68
8204,42875,70
8205,43190,64
8206,43022,80
8207,5327,90
8208,21000000,81
8209,38402,81
8210,1658,81
8211,52577,73
8212,42917,83
8213,1658,94
8214,21000000,70
8215,43862,68
8216,1658,74
8217,34622,79
8218,42602,69
8219,43022,73
8220,1658,80
8221,40922,91
8222,1658,89
8223,43127,76
8224,43022,76
8225,1658,85
8226,19502,80
8227,25018,71
8228,43127,72
8229,44072,79
8230,1663,94
8231,1658,84
8232,43232,79
8233,43127,70
8234,43022,75
8235,77042,77
8236,44072,84
8237,51373,87
8238,1658,82
8239,1658,81
8240,62027,75
8241,1658,73
8242,1658,100
8243,43127,67
8244,1658,82
8245,43127,95
8246,53497,76
8247,21000000,81
8248,102662,82
8249,42077,88
8250,1663,87
8251,1663,95
8252,1652,100
8253,1658,86
8254,47747,75
8255,39970,76
8256,47852,68
8257,43127,76
8258,42392,79
8259,44366,69
8260,102410,77
8261,43967,83
8262,43022,90
8263,1663,86
8264,55968,80
8265,53497,75
8266,43817,74
8267,43190,74
8268,1658,79
8269,45962,79
8270,1658,76
8271,42875,76
8272,1658,74
8273,55878,78
8274,85547,70
8275,42959,100
8276,43022,66
8277,38402,75
8278,1658,69
8279,42182,80
8280,43211,82
8281,42497,69
8282,1658,86
8283,1658,75
8284,1658,78
8285,42896,69
8286,43127,73
8287,5327,74
8288,10052,69
8289,43127,76
8290,1658,78
8291,1658,77
8292,1658,82
8293,24647,83
8294,1658,81
8295,53497,70
8296,4157,82
8297,1658,84
8298,22127,75
8299,84868,78
8300,42917,84
8301,1658,70
8302,4157,78
8303,1658,77
8304,1658,83
8305,65807,69
8306,169498,75
8307,19502,80
8308,1658,89
8309,25144,94
8310,3545,91
8311,42959,73
8312,77147,78
8313,21000000,87
8314,1663,71
8315,1658,94
8316,1658,74
8317,42875,85
8318,1663,85
8319,1658,83
8320,44072,72
8321,44824,95
8322,1658,80
8323,1658,74
8324,111062,86
8325,1658,72
8326,1658,93
8327,49930,85
8328,43127,83
8329,43232,85
8330,34538,82
8331,43106,72
8332,137312,74
8333,42182,76
8334,43001,73
8335,38402,81
8336,85442,84
8337,38402,76
8338,24850,79
8339,1658,75
8340,52577,80
8341,1658,81
8342,42182,80
8343,1658,78
8344,43127,76
8345,42917,76
8346,43169,87
8347,1658,68
8348,43022,81
8349,1658,85
8350,16408,81
8351,42917,75
8352,1658,76
8353,4157,90
8354,1658,76
8355,1658,81
8356,43817,90
8357,43022,68
8358,43127,89
8359,48167,72
8360,43190,85
8361,43062,74
8362,47852,78
8363,42749,92
8364,47852,96
8365,1658,91
8366,1658,77
8367,52472,80
8368,51442,99
8369,1658,79
8370,38402,85
8371,43022,75
8372,1658,77
8373,1658,89
8374,1663,87
8375,32788,105
8376,4157,79
8377,1658,76
8378,11851,108
8379,10052,90
8380,1658,79
8381,42875,76
8382,1663,85
8383,1658,80
8384,55878,81
8385,10052,71
8386,71099,75
8387,1658,72
8388,43127,79
8389,1658,88
8390,1658,88
8391,7630,92
8392,1658,75
8393,43127,86
8394,1663,95
8395,1658,90
8396,88508,74
8397,38402,73
8398,42875,77
8399,28952,78
8400,80927,83
8401,1658,80
8402,1658,77
8403,1658,74
8404,1658,78
8405,43022,79
8406,24850,70
8407,43043,74
8408,1658,71
8409,1658,71
8410,1658,91
8411,39242,84
8412,4157,72
8413,17570,75
8414,42602,79
8415,38402,75
8416,1658,90
8417,1658,90
8418,43817,81
8419,43967,79
8420,43022,78
8421,1658,88
8422,1658,74
8423,1658,89
8424,38402,76
8425,1658,94
8426,1658,82
8427,1658,78
8428,47852,73
8429,9086,73
8430,34622,82
8431,1658,85
8432,1658,78
8433,43043,93
8434,1658,77
8435,38402,77
8436,47852,76
8437,1658,83
8438,9107,73
8439,47852,74
8440,1658,75
8441,1663,86
8442,55878,82
8443,53497,75
8444,1658,92
8445,1658,85
8446,1658,79
8447,331352,76
8448,21000000,74
8449,38486,77
8450,1658,74
8451,10052,77
8452,7630,86
8453,1658,84
8454,42917,102
8455,47852,76
8456,47852,77
8457,1658,73
8458,1658,78
8459,47852,89
8460,43022,67
8461,42182,81
8462,39347,75
8463,43022,78
8464,21000000,82
8465,169498,73
8466,24227,87
8467,1663,79
8468,1663,85
8469,43022,73
8470,1658,85
8471,43127,78
8472,32956,100
8473,66395,96
8474,102662,76
8475,43127,89
8476,66752,69
8477,64127,86
8478,169498,103
8479,1658,88
8480,1658,95
8481,21000000,72
8482,53497,69
8483,42182,80
8484,1663,86
8485,47852,92
8486,43085,81
8487,23023,80
8488,3545,98
8489,19502,72
8490,19502,70
8491,66752,79
8492,42182,74
8493,44072,70
8494,42002,76
8495,43022,93
8496,1658,81
8497,48797,79
8498,229033,84
8499,55878,82
8500,1663,84
8501,47852,75
8502,43127,68
8503,1658,82
8504,1658,78
8505,119672,81
8506,43127,78
8507,128177,72
8508,102662,89
8509,95102,84
8510,1658,77
8511,1658,80
8512,118727,86
8513,1658,87
8514,85442,83
8515,43127,76
8516,76202,82
8517,47852,72
8518,1658,76
8519,10052,78
8520,43127,74
8521,102662,78
8522,39277,76
8523,1658,88
8524,43127,75
8525,42917,77
8526,50582,91
8527,51632,90
8528,10052,78
8529,59928,77
8530,21000000,78
8531,1658,86
8532,102662,73
8533,55878,91
8534,1658,75
8535,43127,86
8536,24850,71
8537,16366,73
8538,44072,94
8539,59990,92
8540,43064,83
8541,66752,79
8542,14777,78
8543,42917,87
8544,1658,72
8545,36512,71
8546,1658,73
8547,24850,77
8548,24913,77
8549,1658,76
8550,1663,83
8551,42917,78
8552,63511,77
8553,42917,74
8554,1663,84
8555,38402,86
8556,47852,94
8557,43127,91
8558,55878,73
8559,43127,77
8560,44702,81
8561,62027,84
8562,1658,76
8563,43127,85
8564,55878,93
8565,1658,73
8566,42917,84
8567,1658,80
8568,1658,77
8569,1658,75
8570,77672,79
8571,1663,82
8572,39277,74
8573,1658,72
8574,43022,71
8575,47852,79
8576,1658,88
8577,44072,82
8578,56357,74
8579,1658,82
8580,47852,76
8581,43817,73
8582,57363,85
8583,102410,90
8584,56319,93
8585,1658,92
8586,38297,67
8587,43127,75
8588,42182,77
8589,1658,75
8590,47852,80
8591,33117,73
8592,1658,89
8593,43127,76
8594,4157,70
8595,42917,79
8596,1663,82
8597,119672,73
8598,55878,77
8599,43127,92
8600,22127,77
8601,2930,84
8602,36092,70
8603,42707,91
8604,44177,77
8605,1658,74
# After 4200 updates
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1658: "x inc * 4 5 F x -2 9 -10 -1 -9 F ≥ -1 8 x x be inc 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x / 1 + -1 pop dec x x x -7 if 4 x -7 -10 -9 -5 * 9 * dec 5 *"
# 1658: "inc neg F / pop x eql 6 T be x copy ¬ inc greedy 9 8 x be 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec x -1 ungreedy -2 eql F depth x F ∨ -9 x -6 T 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 8 0 F x -3 T 5 x T pop ≥ x < x 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x T 1 + 9 3 x x x / inc T < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "< F ∨ -3 -2 < 0 -9 / x -10 inc 2 > * - 5 8 6 T x -10 inc -5 * 9 * dec 5 *"
# 1658: "x T greedy T x x -2 ¬ x + neg 6 inc x > -4 5 0 be greedy? swap -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 2 -10 depth ungreedy * * x -7 x F T -1 ∧ 4 9 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ T 5 x -3 ∧ F x 2 1 x eql x -1 x / x ∨ -5 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be -9 T x > x -7 1 T if x F - x pop F greedy swap 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 2 x x inc dec neg 8 * -5 x x x 8 -9 T x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "F F x + * -3 x eql T ∧ neg T be x eql 8 5 T 4 2 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "if + T ungreedy greedy? ≥ 7 -6 -8 4 neg 2 T -6 depth -5 copy 0 4 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap depth x eql x T be x copy ¬ inc greedy x ≥ T T * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy T F - x x be * * x ∨ x x T x 8 5 depth T pop * -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ -3 -2 < 0 -9 ∧ x -10 inc 2 > * - 5 8 6 T x -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x > x -7 1 T if x F - x pop F x swap 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "- < 6 ≥ ∨ F x x 9 eql -1 pop x x 5 x x T 4 -8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -1 x x < x ≤ x < F x -10 4 1 > 5 x greedy? -9 x -10 inc -5 * 9 * dec 5 *"
# 1658: "swap be 4 -4 * 5 x x x be -1 2 -10 x > ≥ 5 T -9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy -10 -5 > if F pop F F T x pop T -7 -3 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 x x 3 ungreedy be * x x -3 > x x x x x T 4 -8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "> inc 7 copy -5 -3 x F T x neg copy swap eql ¬ x pop 2 swap -10 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "* 2 9 ≥ x 4 4 x + x x + -5 5 4 x / -6 x - T -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x F -2 -6 0 > x + neg T inc x > -4 x 0 be be x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 be x 0 x x T ungreedy x T F -10 -7 5 T F -5 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x T ∧ x x + 0 -9 / x -9 -8 x x - - - ≥ > 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "> dec copy - 1 * ≥ x F 2 x copy ¬ inc greedy x - T T 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap > x eql -4 inc be -10 T ¬ inc greedy x - T 3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "> dec 5 - * * x * + x -1 pop -10 T x T 8 x -6 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x x -4 -10 inc ungreedy x T F - - -3 x > x 5 depth 4 depth T -10 inc -5 * 9 * dec 5 *"
# 1658: "inc * F copy pop x x 4 x 0 3 x x -1 x ∨ 2 x be x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec -6 -1 x -3 T x x T pop ≥ x 7 * x F ∨ 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 greedy 4 x 7 x ¬ x x copy F inc inc T -9 x -6 T 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "F T T -10 F dec -9 x neg 9 -1 pop -10 ungreedy T 8 x T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + pop x -1 ungreedy -2 eql F + x F x / x x be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 -10 -3 2 -8 x 0 ∧ x 3 neg pop ∨ x > 0 F greedy inc 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x T 1 + 9 3 x x if / inc T < 4 swap -10 inc -5 * 9 * dec 5 *"
# 1658: "F neg greedy copy pop x x 5 T 0 3 x x -1 x ∨ x x be x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + dec swap x x copy -5 1 5 if x F - x pop F greedy swap 4 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x * 4 1 F x -2 9 -10 -1 -9 F be -1 8 7 x be inc 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 T 5 x -3 ∧ -6 x F x -9 ≤ F x T 8 F ≥ > 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc F < ∧ -8 x x depth -1 / 9 x ¬ 8 5 9 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x ≥ dec x x x + -7 + -5 + * copy 8 5 T 4 ungreedy T -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop F x T T x / 1 + / pop dec 6 x x x if 6 - -5 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * greedy copy -5 3 T T T depth -1 pop ¬ x > 8 5 x 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "T neg + x x x -1 x depth pop * ≥ inc greedy x -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop inc 1 x ∨ x F x be -1 pop ∨ x > 0 F greedy dec 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be 3 x ∨ T x x T be F 2 -6 swap eql 8 5 T 4 x ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy inc F - T x inc -2 ≤ 3 -1 4 -10 x T T 5 x < -9 T -10 inc -5 * 9 * dec 5 *"
# 1658: "< F ∨ -3 -2 < 0 -9 x x -10 inc 2 > * - 5 8 6 T x -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 inc greedy swap 5 -8 5 -2 9 copy -1 pop F + 5 8 copy 7 F -8 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x T < ∨ x F x 3 neg -7 ∨ x > 0 F greedy inc 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc F < ∨ dec F x be -1 pop > x > x ≥ 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x dec -4 -10 depth ungreedy x T F - - -3 x > x 5 depth 4 depth 7 -9 greedy -5 * 9 * dec 5 *"
# 1658: "x > ∨ -3 -2 ≥ 7 x < dec copy F inc inc T -5 x -6 T 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 / x swap T * * x F if x * x 2 * 4 if -10 inc -5 * 9 * dec 5 *"
# 1658: "swap inc * 4 5 F 4 < 9 eql -1 pop F ungreedy ∧ 8 ≥ -3 F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be * / + dec x x 3 -2 eql copy depth x x x x -7 if 4 x x x -9 -5 * 9 * dec 5 *"
# 1658: "- 0 x T -2 -6 0 -7 x inc inc x ≥ -5 > neg F T 4 4 -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "/ inc -9 0 F x / inc x x x pop ≥ x T ¬ x T -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop greedy? 1 x ∨ - eql x x -2 9 inc -9 > * x 6 ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "* x inc T < ∨ 3 -1 dec be -9 ≤ x x T 8 ∨ ≥ ∨ 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 * T 3 x 5 T 0 3 F inc -5 3 -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop inc copy -5 -3 x / x + ≤ pop depth x > 7 copy greedy dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 6 ungreedy - 3 x 5 T x -1 pop -6 T x T 1 x -6 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 x neg x F eql -2 x x ∨ > neg x ≤ 8 F T 4 pop be -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∨ F x F -2 F neg 8 * x > T inc dec / * x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x -2 x 9 -1 x F x -1 dec greedy ∨ * 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x -8 x * be ∨ 6 x F F ∨ < F inc greedy F 3 x / 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x / 1 + ≤ pop depth x > F copy greedy dec T T -10 inc -5 * 9 * dec 5 *"
# 1658: "5 greedy? greedy T T x x x greedy neg 2 F -10 ungreedy < 8 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "- < 6 ≤ T 3 x 5 T 4 3 eql x > x T 5 x -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap > x eql -4 -2 be -10 copy ¬ inc greedy x - T 3 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "if + T ungreedy greedy? ≥ 7 -6 -8 4 neg x T F depth -5 5 0 4 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 be x 0 -7 x ungreedy ungreedy x swap 3 x x x / x T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x - ungreedy x inc F dec 1 -2 9 inc -9 > ¬ ≥ T -1 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec -6 dec -3 0 x + be -1 be 5 x x ungreedy x 2 * 4 if -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + F x x 3 -2 eql depth / 9 x ∧ 8 5 9 4 4 -4 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -1 neg x T x x + -7 x - -10 T x depth 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "T 6 inc > 5 ∨ -3 + x -7 neg F inc T -7 -7 + be 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -1 neg x x x x + -7 x - -10 T -9 neg neg > -9 4 -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "5 9 copy x 0 ¬ eql * * x ∨ x x x 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "greedy copy F - T x inc -2 ≤ 3 -1 4 -10 x eql 8 dec -7 4 - ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec x if ungreedy -2 inc F depth x F -4 -9 x -6 T 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 -10 -3 2 -9 x 0 ∧ x 3 neg swap x 6 > 8 5 7 6 - -5 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 ∨ -8 0 F x 0 x + be -1 pop -10 x x T 8 x -6 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "pop T T -10 x dec -9 x 4 ≤ F F ¬ ungreedy greedy x ungreedy T 3 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x -1 x + dec x x x x -7 + -5 + * copy 8 5 T 4 ungreedy x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec inc x -5 x < -1 ungreedy -2 eql F depth -6 F ∨ -9 x -6 T 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 inc -5 swap 5 -8 5 -2 9 copy -1 * F + 5 8 copy 7 T 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "x dec -3 < ∨ T x x T be 1 2 -10 x dec / dec 0 < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1663: "x be / swap greedy? x 9 eql T x x T be x eql F 5 x 4 4 pop -10 inc -5 * 9 * greedy 5 *"
# 1663: "inc neg > / pop x copy 6 T be x copy x / x x 2 T be 4 x -10 inc -5 * 9 * greedy 5 *"
8606,43132,74
8607,42749,74
8608,43127,70
8609,43232,73
8610,43022,70
8611,42917,96
8612,1658,84
8613,43127,74
8614,55968,76
8615,43127,79
8616,42287,72
8617,43022,73
8618,1658,75
8619,41552,72
8620,1658,74
8621,1658,87
8622,1658,85
8623,24227,78
8624,43022,85
8625,53497,73
8626,1658,76
8627,20468,77
8628,53497,73
8629,1658,75
8630,1658,74
8631,102662,80
8632,1658,81
8633,42749,94
8634,42273,77
8635,43022,70
8636,1658,79
8637,43098,68
8638,1658,79
8639,1652,87
8640,1658,79
8641,47852,72
8642,1658,77
8643,33418,71
8644,43232,76
8645,42781,71
8646,28511,74
8647,1658,86
8648,383033,74
8649,92800,91
8650,3545,85
8651,43022,82
8652,53497,84
8653,1658,86
8654,1663,86
8655,1658,76
8656,47852,75
8657,1658,77
8658,95820,80
8659,1658,79
8660,43022,76
8661,21000000,76
8662,1658,81
8663,1658,72
8664,47642,79
8665,1750,73
8666,4157,81
8667,1658,78
8668,44912,95
8669,1658,75
8670,1658,80
8671,39347,78
8672,43022,76
8673,43022,79
8674,1658,83
8675,55878,82
8676,43022,84
8677,80927,81
8678,43127,80
8679,1663,76
8680,41342,78
8681,1658,74
8682,39452,81
8683,22127,81
8684,59290,82
8685,43817,76
8686,43127,77
8687,36512,74
8688,42917,78
8689,24346,89
8690,1658,82
8691,37457,74
8692,1658,85
8693,42749,86
8694,1658,77
8695,42917,80
8696,80927,76
8697,47602,84
8698,232022,68
8699,1658,96
8700,41732,71
8701,1658,90
8702,1658,70
8703,43127,78
8704,1658,85
8705,1658,87
8706,50687,81
8707,1658,69
8708,16366,89
8709,175208,72
8710,47852,68
8711,43127,74
8712,1658,81
8713,1658,78
8714,1658,84
8715,21000000,91
8716,43532,75
8717,77672,76
8718,1658,77
8719,43127,77
8720,42917,94
8721,1658,73
8722,43127,80
8723,43127,79
8724,1658,76
8725,1658,87
8726,1658,72
8727,1658,85
8728,1658,84
8729,40565,89
8730,43127,77
8731,1658,77
8732,43817,75
8733,43022,77
8734,43022,80
8735,3358,76
8736,34538,88
8737,1658,75
8738,43022,82
8739,43547,73
8740,1658,72
8741,331352,82
8742,22981,78
8743,1658,80
8744,43022,87
8745,42182,80
8746,66752,83
8747,47852,74
8748,36407,83
8749,1658,75
8750,42602,78
8751,3545,88
8752,28952,77
8753,43127,74
8754,68257,83
8755,43022,78
8756,21000000,70
8757,51632,83
8758,42854,74
8759,47572,76
8760,1658,72
8761,43022,85
8762,1658,84
8763,43022,83
8764,1658,78
8765,43127,81
8766,1658,78
8767,57588,82
8768,100940,78
8769,119672,75
8770,1658,70
8771,43127,86
8772,42182,81
8773,1658,87
8774,17353,82
8775,1663,73
8776,1658,78
8777,47852,81
8778,42182,91
8779,47747,83
8780,43127,80
8781,43127,83
8782,28952,72
8783,1658,88
8784,1658,79
8785,1658,90
8786,1658,78
8787,32788,79
8788,42182,97
8789,21000000,78
8790,21000000,83
8791,28952,69
8792,1658,77
8793,41923,83
8794,1658,82
8795,1658,91
8796,43127,90
8797,76958,77
8798,1658,76
8799,62047,76
8800,43190,83
8801,1658,79
8802,34538,79
8803,119672,84
8804,28952,78
8805,4157,70
8806,42287,85
8807,42252,76
8808,55878,96
8809,66752,75
8810,17612,84
8811,1658,91
8812,102662,82
8813,1658,77
8814,1658,79
8815,1658,87
8816,43022,103
8817,1658,80
8818,53497,85
8819,77147,78
8820,34538,73
8821,19502,84
8822,1658,80
8823,1658,74
8824,29897,84
8825,31967,86
8826,45752,81
8827,1658,72
8828,21000000,80
8829,1658,80
8830,8848,92
8831,42980,69
8832,14777,74
8833,43127,68
8834,28511,72
8835,1658,70
8836,43127,86
8837,1658,78
8838,1658,77
8839,24227,81
8840,42273,71
8841,44912,85
8842,1658,93
8843,43127,79
8844,16408,83
8845,43817,78
8846,46907,85
8847,1658,89
8848,43022,77
8849,43043,76
8850,1658,83
8851,43127,77
8852,43442,71
8853,1658,76
8854,1658,89
8855,43022,73
8856,71477,74
8857,1658,75
8858,43817,78
8859,44577,82
8860,57302,72
8861,68642,94
8862,95942,80
8863,53442,87
8864,21000000,96
8865,28952,87
8866,1658,79
8867,1658,73
8868,1658,86
8869,80927,80
8870,43106,80
8871,43127,79
8872,33677,80
8873,43817,87
8874,56238,86
8875,1658,75
8876,1658,86
8877,43232,87
8878,41447,85
8879,1658,79
8880,1658,73
8881,1658,84
8882,43022,87
8883,47852,67
8884,55788,90
8885,52850,100
8886,1658,77
8887,52850,89
8888,19502,85
8889,1658,77
8890,21000000,79
8891,13475,89
8892,41762,84
8893,1658,80
8894,1658,77
8895,1658,72
8896,93926,87
8897,53497,78
8898,76202,86
8899,5327,79
8900,1658,81
8901,43817,73
8902,44072,80
8903,43127,83
8904,53497,78
8905,43022,79
8906,1663,76
8907,43085,79
8908,62377,84
8909,43022,75
8910,7630,84
8911,42917,89
8912,221498,82
8913,19502,100
8914,51762,87
8915,1658,75
8916,62027,91
8917,42728,81
8918,43043,74
8919,93926,79
8920,1658,85
8921,43127,79
8922,47852,70
8923,43127,84
8924,1658,81
8925,42917,81
8926,1658,89
8927,1658,82
8928,38822,87
8929,43022,81
8930,52355,68
8931,1658,73
8932,1658,79
8933,1658,76
8934,127862,89
8935,1658,82
8936,43022,69
8937,1658,83
8938,64617,71
8939,43127,73
8940,42917,90
8941,47852,74
8942,1658,92
8943,1658,73
8944,77147,86
8945,1658,80
8946,43022,80
8947,1658,83
8948,21000000,79
8949,1658,71
8950,42917,76
8951,38402,76
8952,53497,73
8953,43022,81
8954,43127,75
8955,4157,79
8956,28511,79
8957,14777,76
8958,1658,84
8959,1658,90
8960,1658,83
8961,1658,89
8962,1658,72
8963,55878,80
8964,1658,88
8965,80927,93
8966,1658,92
8967,46424,97
8968,21000000,80
8969,29645,85
8970,59990,92
8971,55878,81
8972,1658,86
8973,1658,80
8974,55968,89
8975,43817,72
8976,42182,75
8977,1658,83
8978,43127,82
8979,1658,91
8980,13475,84
8981,24850,79
8982,43022,74
8983,43817,87
8984,4157,85
8985,36512,74
8986,23912,74
8987,43022,81
8988,55878,79
8989,1658,83
8990,1658,78
8991,43127,77
8992,47852,76
8993,42182,77
8994,1658,86
8995,1663,79
8996,47852,86
8997,1658,80
8998,4157,84
8999,1658,98
9000,66752,89
9001,43127,79
9002,1658,76
9003,60108,89
9004,47852,87
9005,1658,77
9006,42917,87
9007,45538,76
9008,21000000,80
9009,52577,89
9010,42812,79
# After 4400 updates
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ pop x -3 T x x T pop ≥ x 7 * x F swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1658: "x 9 ∨ F x F -2 F neg 8 * x > T inc dec / * x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 6 ungreedy - 3 x 5 T x -1 pop -6 T x T 1 x -6 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec x -1 ungreedy -2 eql F depth x F ∨ -9 x -6 T 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x x 0 F x inc -2 eql 3 -1 pop -10 -7 x neg x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 -6 ungreedy -5 -3 -8 F T x neg copy swap eql greedy x x ∨ x x x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 7 copy -5 -3 -8 F T x neg copy swap eql ¬ x pop ≥ swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ -3 -2 swap 0 -9 ∧ F - - T x > x 3 -7 4 depth T -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 2 -10 depth ungreedy * * x -7 x F T -1 ∧ 4 9 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec inc * 4 5 F + depth T be -1 pop > 5 > x ≥ 0 4 T 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x / 1 + x -3 F x > x x -6 4 4 -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ inc F - T x -3 T 5 x T pop ≥ x < eql 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 be ungreedy ungreedy -3 -8 F T x neg copy swap eql greedy x x x x x x -10 inc -5 * 9 * dec 5 *"
# 1658: "if dec -3 neg 4 depth x - T be 1 2 -10 x dec F dec 0 < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec dec ∧ pop x -3 T x x T pop ≥ x 7 1 x F swap 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy T F - x depth be * dec x T pop -10 ungreedy ∧ 8 be T F x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ F -2 swap 0 -9 ∨ ¬ -10 inc x 0 T 4 T T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec inc x -5 x < -1 ungreedy -2 eql F depth -6 F ∨ -9 x -6 T 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 be 4 0 -7 5 ungreedy ungreedy x T 3 -10 7 T T -5 x < -9 F -10 inc -5 * 9 * dec 5 *"
# 1658: "inc greedy x dec ∧ x x dec - 0 x x inc x x + F ≥ be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc F < ∧ -8 x x x x ∧ neg x ≤ 8 F T 4 pop be -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 greedy 4 x 7 x ¬ x x copy F inc inc T -9 x -6 T 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "if x x -4 -10 inc ungreedy x T ¬ -10 inc F 1 * - 5 8 ∨ T + -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 inc greedy swap 5 -8 5 -2 9 copy -1 pop F + 5 8 copy 7 F -8 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "9 inc -5 swap 5 x 5 -2 9 copy -1 * F + 5 8 copy 7 T 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "3 -10 ∨ T F x 2 -4 -2 x F neg 5 eql ¬ < x if 6 ≥ swap -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + dec eql greedy x copy -5 1 5 if x F x x pop F greedy swap 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ 6 x + ungreedy -9 / x -9 -8 x x - - - x T 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "> dec copy - 1 * ≥ x F 2 x copy ¬ inc greedy 8 copy x F ungreedy 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ + T ungreedy greedy? eql 7 -6 -8 4 be x T F depth -5 5 0 4 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x * 4 1 F x -2 9 -10 -1 -9 F be -1 8 7 x be inc 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 -6 copy -5 -3 -8 F T x neg copy swap eql greedy x pop ≥ x 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 2 x x inc dec neg 8 * -5 x x x 8 -9 T x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 greedy swap F -8 5 -2 9 copy -1 pop -8 + 5 8 copy 7 F if 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ x F + 0 x / x -9 -8 x x greedy? - 5 x 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + F x x 3 -2 eql -1 pop -10 x eql ≥ 5 be 4 2 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -6 ∨ F x x 3 -2 depth 5 / 5 F ∧ 8 -9 be 4 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "5 F copy pop 0 ¬ eql * * x ∨ x x x 8 -7 + T / 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x ≥ 6 3 x 5 T x -1 pop -6 T x -7 1 x -6 4 -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + pop x -1 ungreedy -2 eql F + x F x / x x be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "> inc copy x 0 ¬ eql * * < ∨ x x -9 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "x 6 -1 neg T x x > + -7 x - -10 T -9 neg neg T 4 neg be -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 -3 x F greedy? x -9 greedy x x - ≥ - x + if 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F > greedy copy pop x x 5 T 0 T x x -1 x ∨ x F be x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 x ∨ F x x x x + x x 9 -5 5 -6 -5 / -6 x - if -10 inc -5 * 9 * dec 5 *"
# 1658: "x be 3 x ∨ T x ∧ T be F 2 -6 x if F copy greedy dec T T -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy copy -5 3 T T T ≥ -1 pop ¬ x > 8 5 x 4 -1 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -2 + pop x -1 x -2 eql F - -10 T x depth 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 T x x 9 x F dec ¬ 3 neg pop -4 x > 0 F greedy inc eql F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * greedy copy -5 T T T T greedy? -5 pop ¬ x > 8 5 x 4 -8 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "- < 6 ≤ T 3 x 5 T 4 3 eql x > x T 5 x -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop inc 1 x ∨ x F x be -1 pop ∨ x > 0 F greedy dec 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "> inc 7 -5 -5 -3 x x T x neg x -10 x T ¬ x T -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc neg F * -3 x -2 x 9 x 8 2 > * - 5 8 6 T * -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 + x x x x T -7 8 * x > x inc dec / F x x T -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 be x 0 -7 5 ungreedy ungreedy x eql 3 x x x / x T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec F x -5 x < -1 ungreedy -2 eql F depth -6 F ∨ -9 -6 -6 T 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 / x swap T * * x F if x * x 2 * 4 if -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc F < ∨ dec F x be -1 pop > x > x ≥ 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F inc - 4 5 x x < / x -10 inc 2 > * - 5 3 6 T x -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T -2 -6 0 -7 x inc inc x ≥ -5 > neg F T 4 4 -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "T pop inc dec / -3 x / x + ≤ pop depth x > 7 copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 6 -2 - 3 x 5 T x F x -10 4 F > 5 x greedy? -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "F x -2 + F -6 0 > x be neg T inc x > -4 x 0 be be x -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 be -9 T x > x -7 1 T if x F - x pop F greedy swap 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T 6 inc > 5 ∨ -3 + x -7 neg F inc T -7 -7 + be 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x T x -2 * 3 -6 5 T x F x -10 F x x 5 x greedy? -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x inc T < ∨ 3 -1 be x 5 be T x x ungreedy x 2 neg 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 be x 0 x x T ungreedy x T F -10 -7 5 T F -5 x 4 x -10 -9 -5 * 9 * dec 5 *"
# 1658: "* T be -10 F dec x x neg 9 -1 4 -10 < + 8 dec -7 4 - be -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 T 5 x -3 ∧ -6 x F x -9 ≤ F x T 8 F ≥ > 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 inc -5 swap 5 -8 5 -2 9 copy -1 * F + 5 8 copy 7 T 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "* 2 9 greedy 6 < 5 -9 x x -10 x ungreedy - -5 dec greedy ∨ F 5 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc F / pop x T 6 be x x copy ¬ F greedy x 8 x be 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 * eql 3 x 5 T 0 3 F inc 6 3 -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 8 -5 -3 x F T be -10 copy -1 x greedy x - T 3 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy F - T x inc * 0 3 -1 pop -10 ungreedy T 8 x T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F neg greedy copy pop x x 5 T 0 3 x x -1 x ∨ x x be x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ -3 -2 swap 0 -9 ∨ ¬ -10 inc T 0 T 4 x T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x > x -7 1 T if x F - x pop F x swap 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x * -4 -10 depth ungreedy 6 T F - - -3 x x -3 -7 if 4 x -7 -10 -9 -5 * 9 * dec 5 *"
# 1658: "x x x T < ∨ x F x 3 neg x ∨ x > 0 F greedy inc -4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 -3 x x T x neg copy swap eql ¬ < pop 2 swap -10 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 if * x ∨ x 5 -5 0 3 F inc 6 3 -9 x -6 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "swap be 4 -4 * 5 x x x be x 2 -10 x > ≥ 5 * -9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 8 0 F x inc -2 ≤ 3 -1 4 -10 x T pop 5 x < -1 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "< F ∨ -3 -2 < 0 -9 x x -10 inc 2 > * - 5 8 6 T x -10 inc -5 * 9 * dec 5 *"
# 1658: "T pop 5 T - ∨ x dec 1 x copy F inc + T -9 x -6 T 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 x x 3 ungreedy be ∧ x 3 F pop ∨ x depth ungreedy F * inc 4 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "F -10 -3 2 -8 x 0 T x 3 neg x depth x > 0 ¬ greedy inc F 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 -9 -3 2 -8 x 0 ∧ x 3 neg pop ∨ x > 0 F 0 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / swap greedy? x dec eql T x x T be x eql F 5 x 4 F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ be -9 swap > x ≥ -4 -3 -6 -10 T pop x greedy x - T 3 4 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 depth 5 - depth -3 x / 1 + x -3 F ungreedy ∧ 8 ≥ -3 F 4 7 -10 inc -5 * 9 * dec 5 *"
# 28952: "-7 x inc > < ∨ if T x inc * x x 8 2 1 - ungreedy 5 x x -4 inc -5 * 9 * dec 5 *"
9011,43169,76
9012,43022,82
9013,43022,69
9014,43022,70
9015,43064,69
9016,102410,72
9017,21000000,84
9018,1663,68
9019,43148,82
9020,1658,72
9021,28952,99
9022,1658,81
9023,43127,85
9024,46998,73
9025,43022,75
9026,43022,73
9027,1658,83
9028,31115,99
9029,55878,81
9030,43127,84
9031,1658,84
9032,1658,86
9033,1658,80
9034,43022,76
9035,27949,82
9036,1658,83
9037,42812,80
9038,1663,79
9039,47852,74
9040,42497,90
9041,67543,86
9042,42833,71
9043,55878,75
9044,43127,87
9045,80927,92
9046,1658,76
9047,16408,87
9048,1658,81
9049,43127,89
9050,43022,77
9051,1658,90
9052,41102,79
9053,101206,75
9054,43022,74
9055,1663,81
9056,1658,75
9057,47852,78
9058,42833,77
9059,1658,77
9060,1658,91
9061,43127,76
9062,43022,94
9063,1658,79
9064,9317,89
9065,43022,79
9066,1658,75
9067,1658,98
9068,1658,70
9069,43022,82
9070,1658,79
9071,1658,79
9072,42896,82
9073,5033,93
9074,1658,100
9075,39277,72
9076,42182,75
9077,1658,75
9078,16366,79
9079,1658,79
9080,1658,75
9081,43732,76
9082,7504,94
9083,1658,80
9084,43127,77
9085,43127,84
9086,42917,83
9087,1658,88
9088,1658,85
9089,43127,84
9090,53497,83
9091,1658,78
9092,43085,80
9093,1658,92
9094,1663,83
9095,1658,75
9096,43694,80
9097,42602,76
9098,1658,80
9099,28952,83
9100,1658,85
9101,71477,87
9102,43967,80
9103,43127,79
9104,254653,91
9105,21000000,74
9106,43169,77
9107,1658,83
9108,47852,75
9109,35567,73
9110,47852,81
9111,1658,74
9112,4157,80
9113,1658,83
9114,1658,82
9115,53497,85
9116,43127,80
9117,82838,90
9118,80927,75
9119,43817,76
9120,55878,90
9121,77147,78
9122,47852,82
9123,76202,71
9124,102410,82
9125,1658,88
9126,1658,79
9127,43127,78
9128,76202,76
9129,42602,82
9130,44030,87
9131,105392,85
9132,43022,81
9133,1658,80
9134,19502,97
9135,52322,76
9136,1658,78
9137,1658,72
9138,42182,85
9139,1658,86
9140,9107,88
9141,46907,84
9142,47852,78
9143,1658,89
9144,1658,77
9145,55878,85
9146,80927,95
9147,43778,83
9148,43127,74
9149,43127,85
9150,1663,72
9151,57363,85
9152,1658,73
9153,28952,84
9154,47852,83
9155,43211,82
9156,1658,76
9157,1658,79
9158,1658,78
9159,1658,92
9160,1658,87
9161,24227,75
9162,43022,68
9163,42182,79
9164,1658,72
9165,1658,72
9166,55878,81
9167,43127,99
9168,43022,76
9169,1658,83
9170,1658,82
9171,16366,77
9172,47852,85
9173,1658,83
9174,10045,80
9175,28952,90
9176,1658,100
9177,86535,85
9178,28952,85
9179,1658,86
9180,8848,75
9181,1658,82
9182,1658,72
9183,1658,77
9184,10052,83
9185,42287,77
9186,1658,72
9187,42917,95
9188,1658,75
9189,47852,89
9190,26600,85
9191,24388,96
9192,21000000,78
9193,47852,83
9194,43022,72
9195,43022,75
9196,43127,74
9197,62027,75
9198,43127,70
9199,43232,71
9200,43967,75
9201,1658,75
9202,42812,83
9203,1663,87
9204,7630,88
9205,43652,80
9206,1658,84
9207,53497,77
9208,1658,86
9209,43022,77
9210,41923,84
9211,71477,78
9212,40607,72
9213,44845,87
9214,42287,80
9215,80927,86
9216,42728,85
9217,1658,80
9218,63168,99
9219,43127,88
9220,55878,81
9221,43022,82
9222,10052,75
9223,43652,86
9224,1658,82
9225,89173,75
9226,43127,77
9227,21000000,79
9228,43022,82
9229,5327,82
9230,235753,80
9231,1658,77
9232,43127,89
9233,1658,89
9234,48797,91
9235,42182,72
9236,41237,80
9237,1658,89
9238,43022,94
9239,79163,78
9240,1658,79
9241,111167,81
9242,22127,97
9243,56058,80
9244,43817,75
9245,1658,84
9246,53497,73
9247,43169,89
9248,57302,86
9249,73822,80
9250,1658,84
9251,43127,87
9252,45017,75
9253,4157,81
9254,1658,85
9255,1658,96
9256,43127,74
9257,42182,79
9258,42182,80
9259,1652,78
9260,60914,86
9261,43022,90
9262,1658,85
9263,1658,89
9264,43022,90
9265,36092,84
9266,1658,78
9267,1658,80
9268,47402,82
9269,42812,72
9270,1658,87
9271,71050,79
9272,43127,75
9273,1658,89
9274,27062,77
9275,76202,82
9276,42875,85
9277,43862,80
9278,42812,78
9279,43127,84
9280,49323,80
9281,77672,80
9282,146402,79
9283,53497,67
9284,53497,80
9285,42182,75
9286,80927,90
9287,16366,84
9288,1658,84
9289,38402,84
9290,43127,75
9291,43127,81
9292,1663,74
9293,43127,79
9294,43022,70
9295,1658,81
9296,43127,68
9297,42917,89
9298,1658,75
9299,1658,85
9300,21000000,76
9301,1658,88
9302,43232,88
9303,43022,74
9304,47852,76
9305,1658,82
9306,83678,81
9307,42917,72
9308,1658,79
9309,3545,85
9310,55878,78
9311,42182,76
9312,1658,70
9313,1658,86
9314,43022,82
9315,32788,93
9316,42182,84
9317,1658,78
9318,53497,82
9319,43118,88
9320,43757,81
9321,1658,82
9322,16408,81
9323,1658,87
9324,1658,77
9325,1658,83
9326,1658,78
9327,71477,68
9328,1658,76
9329,43022,72
9330,39277,73
9331,42287,77
9332,1658,76
9333,23108,89
9334,1658,83
9335,1658,73
9336,43022,73
9337,16072,97
9338,16366,74
9339,1658,83
9340,40292,78
9341,43127,76
9342,1658,86
9343,46262,77
9344,9107,82
9345,43127,90
9346,1658,79
9347,1658,74
9348,21000000,66
9349,1658,88
9350,38402,89
9351,1658,79
9352,51632,84
9353,76958,81
9354,1658,78
9355,9086,80
9356,43022,70
9357,1658,71
9358,43127,79
9359,1658,85
9360,1658,91
9361,43022,69
9362,43022,70
9363,48843,70
9364,41342,74
9365,47852,84
9366,90377,74
9367,55878,83
9368,1658,80
9369,80927,74
9370,42182,78
9371,3545,79
9372,1658,84
9373,42707,81
9374,47852,79
9375,24850,76
9376,4157,84
9377,50748,74
9378,25458,81
9379,42833,86
9380,38297,78
9381,43127,74
9382,8848,83
9383,1658,82
9384,46802,79
9385,1658,76
9386,33677,85
9387,21000000,82
9388,43127,77
9389,43022,90
9390,42497,84
9391,4157,81
9392,17612,93
9393,104552,70
9394,1658,78
9395,1658,81
9396,62027,79
9397,1658,80
9398,1658,76
9399,43022,91
9400,43442,81
9401,43127,74
9402,42896,105
9403,57302,69
9404,41174,93
9405,40187,81
9406,1658,88
9407,43022,74
9408,42896,85
9409,1658,71
9410,1658,78
9411,1652,83
9412,1658,85
9413,43022,86
9414,47852,74
9415,47747,80
# After 4600 updates
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ pop x -3 T x x T pop ≥ x 7 * x F swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x x x T x ∨ be x * x ∨ copy F inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1658: "≥ + T ungreedy greedy? eql 7 -6 -8 4 be x T F depth -5 5 0 4 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 0 ungreedy - < 5 -9 x x -10 x x x * 0 F greedy inc eql F -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 ∨ F x x F if F x x - -5 5 -6 -5 / pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 T x x 9 x F dec ¬ 3 neg pop -4 x > 0 F greedy inc eql F -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ -3 -2 swap 0 -9 ∧ F - - T x > x 3 -7 4 depth T -10 inc -5 * 9 * dec 5 *"
# 1658: "1 9 ∨ F x F -6 F neg 8 * x > T inc -9 -2 F -6 ∧ -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ x F + 0 x / x -9 -8 x x greedy? - 5 x 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / swap greedy? x dec eql T x x T be x eql F 5 x 4 F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * greedy copy -5 T T T T greedy? -5 pop ¬ x > 8 5 x 4 -8 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 be ungreedy ungreedy -3 x F T x neg be swap x greedy x x T be neg x -10 inc -5 * 9 * dec 5 *"
# 1658: "* T be -10 F dec x x neg 9 -1 4 -10 < + 8 dec -7 4 - be -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec dec -6 ∧ x if T x x - pop ≥ x 7 1 T F swap 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy copy -5 3 T T T ≥ -1 pop ¬ x 9 8 5 x 4 -1 > -10 inc -5 * 9 * dec 5 *"
# 1658: "F > greedy copy pop x x 5 T 0 T x x -1 x 8 x F be if x -10 inc -5 * 9 * dec 5 *"
# 1658: "if dec -3 neg 4 depth x - T be 1 2 -10 x dec F dec 0 < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc F < T -8 x T T F 2 -6 x if F copy greedy dec T T -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x * copy pop -3 x F T x F + F -3 x -5 x x ∨ 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ -3 -2 swap 0 -9 ∨ ¬ -10 inc T 0 T 4 x T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "> inc 7 -5 -5 if x F dec x T pop -10 ungreedy ∧ 8 be T T x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "if x / -4 -10 pop ungreedy x T ¬ -10 inc F 8 * - 5 8 ∨ greedy -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "x T -4 -2 be depth -7 * -10 x ∨ x F T -1 ∧ 4 neg 4 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "inc x x dec ∧ x x dec - 0 x x inc x x + F -1 be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "F x -2 + F -6 0 > x be neg T inc x > -4 x 0 be be x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 -1 7 T ≤ -3 0 -9 -8 9 inc F swap eql ¬ < x ∧ swap -10 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc F < ∧ -8 x x eql F + x -3 x -5 x x ∨ 2 < -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy F - T x inc * 0 3 -1 pop F ungreedy T 8 x T F 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "dec -9 -3 2 -8 x 0 ∧ greedy 3 x T 9 x eql F 5 x greedy F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "F T -10 x be inc inc swap * x x pop ∨ x > 0 F greedy dec 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "- swap x -4 4 x x 7 -5 inc 9 -1 depth x x 7 copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -3 swap F -8 5 -2 9 copy -1 pop -8 x 5 8 copy 7 T 0 x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 be x 0 -7 5 ungreedy ungreedy x eql 3 x x x / x T 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ inc F - T x -3 T 5 x T pop ≥ x < eql 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x F x greedy? x x eql T x < T be x eql F 5 T dec T T -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec T F x + -8 x 9 7 5 -6 ∧ / -6 x - x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 -6 copy -5 -3 -8 F T x neg copy swap eql greedy x pop ≥ x 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 2 x x inc > neg 8 * -5 depth x 9 T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "be x x + pop x -1 ungreedy -2 eql neg copy x x T 1 F ≥ > x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - T -3 x / 1 + x -3 F ungreedy ∧ 8 ≥ -3 F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 be x 0 x x T ungreedy x T -8 x -7 5 T F -5 -2 4 x -10 -9 -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ eql * * < be x x / 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "x 6 if * x ∨ x x -5 0 3 F inc 6 3 -9 x < x > if -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 T ∨ -3 -2 swap dec -9 ∨ ¬ -10 inc ungreedy 0 T 4 x T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T / * dec F x be -1 pop > x > x T 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy swap 5 -8 5 -2 9 copy -1 copy -1 F greedy x - T 3 4 -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 5 copy -5 -3 x / 1 + x -3 F x > x x -6 4 4 -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "if x x -4 -10 inc ungreedy x T ¬ -10 inc F - * - 5 8 ∨ greedy + -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -2 + pop x -1 x -2 eql F - -10 T x depth 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 7 -9 T F * ≥ x F 2 x copy ¬ inc greedy 8 copy x F ungreedy 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ 6 x + ungreedy -9 / x -9 -8 x x - - - x T 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ T F + 0 x / x x -8 x swap greedy? - 5 x -6 ∧ -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + < -6 0 -2 x be F T inc x > 0 8 0 be be 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 2 x x inc dec neg 8 * -5 x x x T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / swap greedy? x -10 -1 x x 5 be T x 6 ungreedy x x neg 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc greedy x dec ∧ x x dec - 0 x x inc x x + F ≥ be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "5 F copy pop 0 ¬ eql * * x ∨ x x x 8 -7 + T / 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x > * x x be T - -5 5 -6 -5 depth pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy ≤ -3 0 -9 x 9 -10 F 1 0 T 4 T T F -10 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x inc F < -6 0 -7 neg inc inc -6 ≥ -3 swap dec F T 4 4 -9 6 -9 -5 * 9 * dec 5 *"
# 1658: "T pop inc dec / -3 x / x + ≤ pop depth x > 7 copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 T swap greedy? x dec eql -5 x x T be x eql F 5 x greedy F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy F - T x inc * 0 3 -1 pop -10 ungreedy T 8 x T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x inc F < copy 0 -7 x inc inc -1 ≥ -3 > dec F x 4 4 T 6 -9 -5 * 9 * dec 5 *"
# 1658: "x 6 -1 neg T x x > + -7 x - -10 T -9 neg neg T 4 neg be -10 inc -5 * 9 * dec 5 *"
# 1658: "if x x -4 -10 inc ungreedy x T ¬ -10 inc F 1 * - 5 8 ∨ T + -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 / inc T < ∨ x -1 x x 5 be T x x ungreedy x 2 neg 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "if dec -3 x x x x -7 1 T -10 x F - x pop F greedy swap 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "* F 9 greedy 6 < x ungreedy T x x 8 2 > T ≤ depth 8 6 T * -10 inc -5 * 9 * dec 5 *"
# 1658: "F F x -5 copy < -1 ungreedy -2 eql F + -6 F pop -9 x -6 ∨ 2 < -10 inc -5 * 9 * dec 5 *"
# 1658: "be ≤ -6 ∨ F x x 3 -2 depth 5 -8 5 F ∧ 8 -9 1 4 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "* F 9 greedy 6 < x ungreedy T x x -5 2 > F pop F greedy swap 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc F / pop x T 6 be x x copy ¬ F greedy x 8 x be 8 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "F T -10 -2 be inc inc -2 * 3 x pop -10 -7 x neg x -6 4 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 inc greedy swap 5 -8 T > 9 copy -1 pop T > x T 5 x ≤ * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 -2 + x x x 3 -2 -7 x - -10 T -9 neg ungreedy T 4 neg be -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 x ∨ 0 x x x ungreedy -2 eql F depth x F 7 -9 x -6 x 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 T 0 -3 -2 swap dec -9 ∨ ¬ -10 inc inc if eql 4 x T F x x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 ∨ copy 3 x F if F x x - depth 5 -6 -5 / pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 9 x x inc dec neg 8 * -5 x x x 8 -9 x ∨ T + -10 inc -5 * 9 * dec 5 *"
# 1658: "dec inc x -5 x T 0 -9 -8 9 inc F swap eql ¬ < x ∧ swap -10 T -10 inc -5 * 9 * dec 5 *"
# 1658: "F x x + < -6 0 > 8 be -1 pop -6 T x T 1 x -6 -2 ≤ -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ F -2 swap 0 -9 ∨ ¬ -10 inc x 0 T 4 T T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ pop T x 3 x x T pop > x inc dec / F x x T -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T / ∨ dec F x F -1 pop > x - x T 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ -3 -2 T 0 x x x copy T swap x x F dec -2 -10 - 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 T * -4 -10 depth ungreedy 6 T F - - -3 x x -3 -7 if x x + x -9 -5 * 9 * dec 5 *"
# 1658: "greedy T F - x depth be x T x neg ungreedy F x T ¬ x T -6 * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 greedy neg T x x 8 + -7 x - -10 x -9 neg neg T 4 neg be -10 inc -5 * 9 * dec 5 *"
# 1658: "F neg greedy ungreedy pop x x 5 F 0 3 ≥ -5 5 -6 -5 depth pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x > x -7 1 T if x F < x pop F x greedy? 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 / x swap T 7 * x F if x * 4 2 * eql if -10 inc -5 * 9 * dec 5 *"
# 28952: "-7 x inc > < ∨ if T x inc * x x 8 2 1 - ungreedy 5 x x -4 inc -5 * 9 * dec 5 *"
# 42182: "-4 7 -9 * + x x T ≥ x T -8 x -7 x T F -5 -2 4 -5 -10 -9 -5 1 9 * dec 5 *"
9416,42294,76
9417,43022,74
9418,42896,74
9419,43022,73
9420,47642,67
9421,1658,75
9422,21000000,92
9423,43127,83
9424,9086,76
9425,42182,76
9426,38507,85
9427,15817,73
9428,1658,75
9429,56319,75
9430,49952,77
9431,1658,81
9432,46052,79
9433,1658,71
9434,49742,82
9435,136682,76
9436,1658,73
9437,40292,85
9438,1658,93
9439,43022,86
9440,1652,82
9441,43127,76
9442,49784,86
9443,34538,75
9444,42833,77
9445,1658,77
9446,182186,80
9447,42875,95
9448,1658,89
9449,1658,77
9450,42917,90
9451,55878,79
9452,1658,82
9453,1658,78
9454,21000000,77
9455,47852,75
9456,1658,73
9457,44177,87
9458,1658,74
9459,1658,68
9460,1658,88
9461,1658,79
9462,43442,73
9463,66752,73
9464,44604,78
9465,1658,77
9466,33418,76
9467,1658,74
9468,4157,77
9469,43022,77
9470,4157,84
9471,43127,69
9472,43817,81
9473,68642,78
9474,4157,78
9475,40478,73
9476,35483,99
9477,43817,81
9478,42917,77
9479,48797,73
9480,39277,73
9481,77525,82
9482,4157,84
9483,3545,86
9484,76202,73
9485,43127,76
9486,59572,75
9487,74270,79
9488,90377,76
9489,34538,88
9490,1658,80
9491,52577,81
9492,1658,76
9493,46907,81
9494,43127,72
9495,1658,76
9496,21000000,80
9497,47852,87
9498,1658,74
9499,47852,69
9500,62377,81
9501,42896,92
9502,62447,72
9503,43127,80
9504,49742,77
9505,5327,80
9506,1658,74
9507,62027,86
9508,51506,73
9509,1658,72
9510,1658,84
9511,1658,76
9512,21000000,75
9513,41174,83
9514,1658,78
9515,1652,100
9516,13930,98
9517,9086,76
9518,3384514,84
9519,42917,80
9520,41132,78
9521,102662,76
9522,1658,81
9523,42917,83
9524,51506,73
9525,1658,73
9526,1658,88
9527,1658,72
9528,43022,83
9529,1658,82
9530,1658,78
9531,102662,82
9532,43022,86
9533,1658,88
9534,1658,77
9535,44513,79
9536,43127,72
9537,42287,85
9538,43022,97
9539,42917,84
9540,109277,81
9541,1658,75
9542,1658,77
9543,1658,91
9544,42182,85
9545,4157,81
9546,34517,85
9547,43127,79
9548,55878,80
9549,19502,83
9550,42833,83
9551,1658,74
9552,43817,80
9553,30107,91
9554,1658,99
9555,47852,87
9556,1652,87
9557,1658,83
9558,43127,88
9559,42896,87
9560,7630,85
9561,1658,71
9562,1658,73
9563,1658,71
9564,42287,74
9565,43022,72
9566,1658,77
9567,19502,88
9568,42917,84
9569,2213,73
9570,66752,84
9571,66395,96
9572,1658,77
9573,1658,86
9574,1658,73
9575,21000000,79
9576,20293,89
9577,9086,80
9578,41482,72
9579,44072,88
9580,21000000,88
9581,59928,72
9582,43022,71
9583,90377,82
9584,43022,80
9585,43127,75
9586,43022,84
9587,1658,77
9588,43817,77
9589,42917,71
9590,24227,81
9591,47852,84
9592,41237,84
9593,25476,82
9594,102662,77
9595,1658,80
9596,42182,81
9597,14147,80
9598,51632,80
9599,49668,83
9600,43817,79
9601,60206,84
9602,1658,87
9603,74396,101
9604,42497,81
9605,42182,82
9606,42917,77
9607,1658,80
9608,43127,83
9609,1658,86
9610,1658,78
9611,19502,74
9612,32788,84
9613,43694,76
9614,1658,79
9615,14777,82
9616,25207,81
9617,1658,78
9618,80927,75
9619,52932,83
9620,47852,87
9621,41818,91
9622,1658,71
9623,4157,95
9624,43030,78
9625,1658,83
9626,42602,73
9627,14777,88
9628,43022,82
9629,43022,86
9630,47747,72
9631,183673,88
9632,1658,84
9633,47852,74
9634,1658,77
9635,1658,93
9636,9086,88
9637,1658,79
9638,14777,84
9639,44845,90
9640,44702,82
9641,47852,73
9642,1658,80
9643,14777,74
9644,38402,77
9645,1658,74
9646,42896,72
9647,21000000,87
9648,42749,90
9649,1658,83
9650,55878,79
9651,43022,81
9652,42182,79
9653,43190,78
9654,1658,76
9655,43817,76
9656,1658,74
9657,43022,72
9658,43022,92
9659,1658,89
9660,42959,77
9661,43022,88
9662,42497,87
9663,40292,75
9664,43817,76
9665,42938,81
9666,1658,71
9667,42518,89
9668,42917,74
9669,5327,73
9670,3545,82
9671,21000000,87
9672,55878,74
9673,3545,93
9674,43022,75
9675,14777,80
9676,42959,72
9677,1663,84
9678,38402,87
9679,1658,74
9680,1658,79
9681,1658,77
9682,1658,87
9683,1658,81
9684,28952,70
9685,35567,77
9686,42854,86
9687,43127,84
9688,80927,75
9689,1658,80
9690,1658,87
9691,24913,84
9692,3437,78
9693,42182,83
9694,53497,81
9695,1658,96
9696,43043,99
9697,52577,90
9698,42182,91
9699,31787,83
9700,42182,76
9701,1658,87
9702,1658,75
9703,47852,87
9704,1658,88
9705,44534,83
9706,42077,78
9707,50687,76
9708,21000000,72
9709,53497,83
9710,14777,92
9711,39887,77
9712,57302,85
9713,23333,75
9714,47852,106
9715,1658,73
9716,47914,79
9717,42917,83
9718,34538,96
9719,36704,76
9720,1658,83
9721,10052,78
9722,1658,78
9723,47852,86
9724,1658,77
9725,59572,75
9726,43127,74
9727,42917,86
9728,1658,73
9729,102557,83
9730,1658,80
9731,34496,81
9732,1658,90
9733,48272,100
9734,212072,79
9735,43547,75
9736,55968,81
9737,42182,88
9738,1658,71
9739,43127,79
9740,1658,79
9741,1658,78
9742,1658,74
9743,1658,73
9744,47852,88
9745,1658,81
9746,51506,85
9747,1658,78
9748,42854,73
9749,42182,77
9750,1658,71
9751,43127,75
9752,32788,76
9753,77777,77
9754,1658,68
9755,42602,75
9756,1658,84
9757,1658,94
9758,43043,70
9759,1658,76
9760,1658,81
9761,34622,80
9762,40292,73
9763,44620,89
9764,1658,71
9765,66178,77
9766,1658,94
9767,43022,79
9768,32788,77
9769,43247,89
9770,1658,85
9771,70693,92
9772,19502,83
9773,23275,78
9774,38402,85
9775,47852,78
9776,43022,85
9777,42077,84
9778,43022,71
9779,80927,85
9780,43817,82
9781,43127,73
9782,42917,73
9783,43022,83
9784,53497,71
9785,24227,79
9786,1658,79
9787,42182,68
9788,43022,84
9789,85855,78
9790,19502,86
9791,1658,81
9792,42182,86
9793,1658,79
9794,16366,83
9795,1658,75
9796,51632,84
9797,1658,79
9798,15925,88
9799,95312,89
9800,19502,76
9801,43127,78
9802,66752,74
9803,80927,70
9804,21000000,73
9805,52577,73
9806,1658,76
9807,1658,81
9808,1658,82
9809,24913,82
9810,43817,83
9811,34328,85
9812,1658,79
9813,34538,84
9814,42077,83
9815,43862,77
9816,43127,78
9817,84360,86
9818,42917,96
9819,55878,75
9820,57408,71
# After 4800 updates
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ pop x -3 T x x T pop ≥ x 7 * x F swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "5 2 -3 ¬ neg x be * * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1658: "≥ + T ungreedy greedy? eql 7 -6 -8 4 be x T F depth -5 5 0 4 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 ∨ F x x F if F x x - -5 5 -6 -5 / pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F T -10 -2 be -6 T -2 * 3 x pop -10 -7 x neg x x greedy F T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ eql * * < be x x / 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "≥ + T F greedy? eql 7 -6 -8 4 depth x greedy? x 7 neg 5 8 * T * -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ T -9 + 0 x / -10 x F x swap greedy? 4 x T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / swap greedy? x dec eql T x x T be x eql F 5 x 4 F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "2 pop x 9 x x inc 2 - F x x -6 F pop -9 x -6 ∨ 2 < -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ F T ungreedy * x x be T x > 8 inc -9 * 8 swap ∧ -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ pop T x 3 x x T pop > x inc dec / F x x T -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T / * -8 x + -8 x 9 7 5 1 x / x x 0 1 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x F x greedy? x x eql T x < T be x eql F 5 T dec T T -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x 8 * x x be T x -5 5 -6 -5 + pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "if dec -10 neg 4 -6 copy 8 x be F T inc x > 0 8 0 be be 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T F ∨ neg x 8 * x x be T ≤ -5 5 -6 -5 + pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -1 neg T x x > + -7 x - -10 T -9 neg neg T 4 neg be -10 inc -5 * 9 * dec 5 *"
# 1658: "T pop inc x greedy -3 0 -9 -8 9 inc F ¬ eql ¬ < x ∧ swap -10 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be inc 8 copy -5 -3 x be T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ inc F - T x -3 T 5 x T pop ≥ x < eql 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 9 greedy 6 < x swap -2 eql -10 x x F 7 -9 x -6 x 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "* x 9 greedy T x 5 greedy? x x -10 x x -10 * 0 F greedy inc eql F -10 inc -5 * 9 * dec 5 *"
# 1658: "T pop inc dec / -3 x / x + ≤ pop depth x > 7 copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "if x x -4 -10 inc ungreedy x T ¬ -10 inc F - * - 5 8 ∨ greedy + -10 inc -5 * 9 * dec 5 *"
# 1658: "x T -4 -2 be depth 8 + - x 0 x F T -1 F 4 T 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc + < T F x + -8 x 9 7 5 -6 be / x x 0 x -10 inc -5 * 9 * dec 5 *"
# 1658: "* F 9 greedy 6 < x ungreedy T x x 8 2 > T ≤ depth 8 6 T * -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec + ∧ be x -3 -3 T x x copy 5 3 T 1 F x > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc greedy x dec ∧ x x dec - 0 x x inc x x + F ≥ be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "dec T -4 4 be depth be ∨ - x F x -6 F pop -9 x -6 ∨ 2 < -10 inc -5 * 9 * dec 5 *"
# 1658: "- swap x -4 4 x x 7 -5 inc 9 -1 depth x x 7 copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 x x -8 x -7 1 T if x F < neg 8 / x greedy? 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy ≤ depth 1 * - x ∨ x inc T -1 F 4 -1 be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec T F x + -8 x 9 7 5 -6 ∧ / -6 x - x -10 inc -5 * 9 * dec 5 *"
# 1658: "F T -10 -2 be inc inc -2 * 3 x pop -10 -7 x neg x -6 4 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "5 < -6 copy -5 -3 -8 F ∧ x x -3 F x > x x -6 4 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy copy -5 3 T T T ≥ -1 T x < 9 8 5 * 4 -1 > -10 inc -5 * 9 * dec 5 *"
# 1658: "> 4 T copy be T T dec T T * -5 x x x 8 -9 depth ∨ T + -10 inc -5 * 9 * dec 5 *"
# 1658: "5 < -6 copy < -6 0 -7 neg inc -6 -6 ≥ eql swap dec F F 4 4 -9 6 -9 -5 * 9 * dec 5 *"
# 1658: "inc x x dec ∧ -3 x dec - 0 x x F x x * x 2 * 5 if -10 inc -5 * 9 * dec 5 *"
# 1658: "F F copy x -9 ¬ eql * * x x T be x eql F if x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 x T / * -8 x + -8 x 9 7 5 * T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "F x x + < T x -7 1 -3 -10 inc x 0 T dec T 8 -3 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 9 T swap greedy? x dec x -5 x x T be x eql F 1 x greedy F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "F > greedy copy pop x x 5 T 0 T x x -1 x 8 x F be if x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x inc 0 1 ∧ x ungreedy T x x pop ∨ > x T 5 x ≤ * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 x x x x -7 1 T if x F < x 8 F x greedy? 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec 4 1 copy be T T T T 8 * x > 8 inc -9 * 8 swap ∧ -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ x F + 0 x / x -9 -8 x x greedy? - 5 x 4 4 -7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / swap greedy? x -10 -1 x x 5 be T x 6 ungreedy x x neg 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + < depth x x T be 1 2 -10 x dec x dec 0 < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F F x -5 copy < -1 ungreedy -2 eql F + -6 F pop -9 x -6 ∨ 2 < -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ x F + 0 x T ¬ -10 x F 8 * - 5 8 ∨ greedy -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 6 ∨ swap F swap dec -9 ∨ inc inc -1 ≥ -3 3 dec F x 4 4 T 6 -9 -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x x x eql neg 8 -1 pop x inc x T T x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x 2 -3 x inc 9 swap T * -5 depth x 9 T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 x copy 6 < x ungreedy T pop x -5 2 > F pop F greedy swap 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc F < -6 x -7 1 T pop x F - x pop F greedy swap T 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec -9 -3 2 -8 x ¬ ∧ greedy 3 x T x - T 8 -9 x ∨ T + -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy swap F -8 5 -2 9 copy -1 copy -1 F F x - T 3 > -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "6 inc 7 x -5 -3 x F F x -8 x ≥ x < eql 5 T x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ -2 + -4 x -1 x x eql F - -10 T x 7 x x T 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "5 < -6 copy -5 -3 -8 F x x x -3 F x > x x 7 4 x / -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ + T F greedy? eql 7 -6 -8 4 depth x greedy? x 7 T T F swap 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 / inc T < ∨ x -1 x x 5 be T x x ungreedy x 2 neg 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy copy -5 3 T T T ≥ -1 pop x x 9 8 5 T 4 -1 > -10 inc -5 * 9 * dec T *"
# 1658: "-2 inc 7 copy -5 -3 x F T x neg x swap x 2 1 - - x 0 8 -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T / * dec F x be -8 pop -1 x > x T 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x T x x 9 x F dec ¬ * neg pop -4 ≤ > F F x inc eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "be ≤ -6 ∨ F x x 3 -2 depth 5 -8 5 F ∧ 8 -9 1 4 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x F / pop x T 6 x x x copy 5 ≥ T 1 F ≥ > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x 0 x ¬ 0 F -3 x - - F x x -5 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "F x pop ∨ F ∧ - 3 -2 depth 5 -8 5 F 2 -10 pop 1 4 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy ≤ -3 0 -9 x 9 -10 F 1 0 T 4 T T F -10 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec inc be -5 x T 0 -9 -8 9 inc T be x eql F if x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ x eql greedy 6 copy x ungreedy < x x -5 2 > F pop F greedy swap 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * x copy -5 T T T T greedy? 9 pop ¬ x > 8 5 x 4 -8 2 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 be x 0 x x T ungreedy x T -8 x -7 5 T F -5 -2 4 x -10 -9 -5 * 9 * dec 5 *"
# 1658: "eql x ∨ 0 -4 x -8 x x eql F x x x - - eql x T 4 * -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -3 swap F -8 5 -2 9 copy -1 pop -8 x 5 8 copy 7 T 0 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x T -4 F T depth be * be 9 -1 4 -10 < + 8 dec -7 4 - be -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x inc F < copy 0 -7 x inc inc -1 ≥ -3 > dec F x 4 4 T 6 -9 -5 * 9 * dec 5 *"
# 1658: "x inc 8 copy -5 -3 x be T x F copy swap eql ¬ < pop 2 x -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "5 < -6 x -5 -8 -8 F x x x x F if eql 4 x T F x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x if + < T -8 x + -8 x 9 7 be 1 ∧ / T 4 x be -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec dec -6 ∧ x x T x copy - pop ≥ x 7 1 T F + 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ ∨ < x ungreedy T x T x F - * - 5 8 ∨ neg + -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 F ∨ F -2 swap 0 -9 ∨ ¬ -10 inc x 0 T 4 T T F 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x F F 6 x + ungreedy -9 > x -9 -8 x -3 x -5 -6 x ∨ 2 < -10 inc -5 * 9 * dec 5 *"
# 34538: "-4 7 -9 depth + x x F ∧ x x -3 F x -6 x x -6 4 4 / -10 inc -5 * 9 * dec T *"
# 43022: "+ + greedy? x -6 x * 1 * x F - x -5 4 -10 * x x x + x x / 7 -8 inc x x x"
# 43022: "F F x x pop x -1 ungreedy -2 eql neg x x - * -7 x x x x 5 x 1 x -8 x x x dec inc"
9821,43106,67
9822,43022,68
9823,43022,72
9824,42854,74
9825,43211,75
9826,78582,67
9827,8750,77
9828,1658,75
9829,41867,70
9830,1658,78
9831,1658,87
9832,47852,70
9833,47852,80
9834,38402,77
9835,42182,87
9836,38402,71
9837,1658,80
9838,27949,79
9839,1658,81
9840,1658,84
9841,79142,79
9842,1658,83
9843,1658,77
9844,1658,78
9845,1658,77
9846,14777,80
9847,43127,80
9848,77777,74
9849,1658,75
9850,33677,74
9851,43127,90
9852,43022,70
9853,43022,73
9854,43211,82
9855,43022,75
9856,4157,68
9857,114338,75
9858,42707,78
9859,1658,88
9860,43127,77
9861,1658,76
9862,51632,85
9863,43022,75
9864,4157,78
9865,43127,83
9866,1658,85
9867,1658,78
9868,21000000,75
9869,1658,78
9870,32507,74
9871,43022,73
9872,42287,81
9873,1658,75
9874,4157,81
9875,1658,76
9876,55878,76
9877,1658,72
9878,38927,73
9879,43085,75
9880,42182,76
9881,1658,75
9882,71477,80
9883,1658,88
9884,4157,71
9885,42287,80
9886,42707,82
9887,1652,89
9888,47852,80
9889,21000000,84
9890,55878,78
9891,43022,80
9892,41888,76
9893,4157,90
9894,1658,71
9895,43127,81
9896,1658,79
9897,42182,84
9898,43127,73
9899,102662,70
9900,102662,77
9901,44177,79
9902,1658,91
9903,43169,85
9904,42854,73
9905,1658,77
9906,90377,85
9907,1658,75
9908,1658,97
9909,42987,76
9910,43022,81
9911,42917,75
9912,42833,74
9913,16366,72
9914,1658,90
9915,1658,78
9916,66752,77
9917,1658,71
9918,105392,89
9919,45038,80
9920,31241,101
9921,7630,88
9922,60961,84
9923,1658,76
9924,49742,74
9925,43106,83
9926,4157,84
9927,1658,72
9928,43127,85
9929,1658,80
9930,41552,90
9931,43022,76
9932,42917,77
9933,1658,72
9934,1658,74
9935,42182,85
9936,1658,75
9937,57302,82
9938,1658,72
9939,42917,85
9940,43169,80
9941,34538,74
9942,44198,81
9943,43022,82
9944,1658,92
9945,46613,72
9946,1658,89
9947,43127,94
9948,42287,75
9949,33677,77
9950,1658,89
9951,1658,97
9952,1658,86
9953,43817,74
9954,101612,90
9955,276368,84
9956,1658,73
9957,1658,75
9958,43022,74
9959,43127,76
9960,43022,75
9961,68474,84
9962,43022,75
9963,43022,72
9964,5327,73
9965,1658,85
9966,42252,77
9967,1658,76
9968,47852,82
9969,1658,79
9970,51632,68
9971,76202,77
9972,1658,83
9973,1658,86
9974,43817,73
9975,43022,76
9976,29645,98
9977,24388,86
9978,43072,86
9979,46907,81
9980,21917,82
9981,101206,77
9982,1658,67
9983,1658,73
9984,41923,77
9985,24829,71
9986,37457,71
9987,27924,69
9988,85232,84
9989,118958,76
9990,51373,80
9991,62377,81
9992,43022,76
9993,7630,95
9994,42287,93
9995,86470,82
9996,11851,78
9997,1658,100
9998,21000000,84
9999,1658,77
10000,43127,82
10001,232433,76
10002,43127,89
10003,42182,74
10004,1658,76
10005,52297,81
10006,43127,83
10007,1658,82
10008,1658,76
10009,1658,84
10010,43127,74
10011,43022,71
10012,1658,75
10013,42875,75
10014,46907,80
10015,43022,79
10016,86535,84
10017,1658,78
10018,42602,79
10019,53497,81
10020,42917,86
10021,43862,85
10022,1658,79
10023,43022,87
10024,13930,86
10025,43043,85
10026,1658,89
10027,43022,83
10028,1658,83
10029,42917,76
10030,54950,86
10031,9254,82
10032,33677,72
10033,1658,85
10034,20153,92
10035,42182,68
10036,1658,84
10037,51527,90
10038,84812,93
10039,45668,79
10040,4157,85
10041,43022,72
10042,42602,81
10043,42917,82
10044,43127,87
10045,43127,73
10046,1790,78
10047,43022,95
10048,53377,89
10049,1658,72
10050,1658,78
10051,1662,73
10052,43022,77
10053,47852,76
10054,42182,83
10055,43022,74
10056,1663,77
10057,43022,74
10058,43022,77
10059,42623,79
10060,4157,78
10061,5327,78
10062,42770,79
10063,1658,79
10064,41447,79
10065,1658,94
10066,69377,98
10067,42238,85
10068,1658,84
10069,1658,96
10070,46907,75
10071,7630,81
10072,42287,75
10073,61992,71
10074,51506,88
10075,43022,77
10076,1658,85
10077,3545,80
10078,43022,81
10079,90734,86
10080,53442,82
10081,1658,74
10082,42854,85
10083,1663,88
10084,805378,91
10085,42812,70
10086,80927,78
10087,13475,89
10088,42182,71
10089,43022,85
10090,47852,87
10091,43064,76
10092,43022,73
10093,21000000,89
10094,51799,76
10095,43022,72
10096,1658,87
10097,47852,73
10098,326627,78
10099,55878,76
10100,45962,82
10101,1658,80
10102,111167,81
10103,43127,75
10104,42917,79
10105,43127,75
10106,1658,91
10107,1658,76
10108,43232,92
10109,47852,83
10110,1663,80
10111,1658,83
10112,1658,76
10113,1658,88
10114,43022,70
10115,57302,95
10116,43022,70
10117,4252,68
10118,4157,83
10119,51632,75
10120,43127,68
10121,1658,69
10122,52274,71
10123,43064,79
10124,43067,71
10125,1658,93
10126,1658,93
10127,1658,76
10128,43127,87
10129,43442,94
10130,43022,75
10131,38402,76
10132,21000000,74
10133,43127,80
10134,1658,90
10135,1658,83
10136,1658,72
10137,43817,71
10138,42917,83
10139,47852,89
10140,43022,72
10141,7630,93
10142,1658,77
10143,43022,83
10144,44845,88
10145,43211,88
10146,43106,68
10147,1658,71
10148,1658,76
10149,43022,77
10150,26222,79
10151,53522,87
10152,1658,78
10153,43817,80
10154,51632,92
10155,53497,91
10156,1658,75
10157,1658,83
10158,1658,78
10159,38150,78
10160,1663,95
10161,1658,73
10162,21000000,68
10163,11851,97
10164,43817,75
10165,80927,88
10166,43127,70
10167,1658,89
10168,1658,81
10169,1658,76
10170,38402,87
10171,1658,75
10172,43211,80
10173,55878,78
10174,43022,85
10175,1658,82
10176,53497,84
10177,43022,87
10178,16366,76
10179,1658,71
10180,1658,84
10181,42707,82
10182,21000000,74
10183,1663,87
10184,43127,71
10185,43127,79
10186,42182,75
10187,39998,87
10188,19502,98
10189,42098,76
10190,43127,90
10191,42028,83
10192,43817,79
10193,1658,70
10194,1658,91
10195,43127,85
10196,21000000,94
10197,42182,93
10198,43127,83
10199,1658,84
10200,1658,74
10201,102662,85
10202,10052,78
10203,43127,71
10204,1658,81
10205,1658,80
10206,40754,82
10207,19502,83
10208,14777,80
10209,43127,71
10210,42707,76
10211,1658,77
10212,42182,87
10213,40369,84
10214,1658,73
10215,1658,82
10216,1658,91
10217,1658,84
10218,1658,87
10219,24164,79
10220,40376,86
10221,33677,84
10222,62027,90
10223,43817,84
10224,43127,73
10225,1658,72
# After 5000 updates
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ pop x -3 T x x T pop ≥ x 7 * x F swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1658: "be x F x 3 -3 x eql T T < T x - T 8 -9 x ∨ T + -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy swap F -8 5 -2 9 copy -1 copy -1 F F x - T 3 > -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 x < -10 x * T 9 -1 copy x ≥ T 1 F x > T F -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ + T F if swap 0 F x ¬ 3 inc x 0 T -9 5 > 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy < 5 copy -5 F -8 x ∧ x x -10 x x neg -5 * T x 4 -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec 4 x ungreedy swap x x neg -5 inc 9 -1 8 x x inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy ≤ -3 0 -9 x 9 -10 F 1 0 T 4 T T F -10 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T F ∨ neg x 8 * x x be T ≤ -5 5 -6 -5 + pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "if dec -10 neg 4 -6 copy 8 x be F T x x > F 8 0 greedy be 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ pop T x 3 x x T pop > x inc dec / F x x T -10 inc -5 * 9 * dec 5 *"
# 1658: "5 9 ∨ F x x F if F x x - -5 5 -6 -5 / pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy ≤ x 0 -9 x 9 -10 F > 0 T -2 F < T 4 8 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy ≤ depth 1 * - x ∨ x inc T -1 F 4 -1 be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 be be 0 x x T ungreedy 3 x pop pop -7 x neg x -6 4 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec T F x + -8 x 9 7 5 -6 ∧ / -6 x - x -10 inc -5 * 9 * dec 5 *"
# 1658: "if x x -4 -10 inc ungreedy x T ¬ T copy > T x < pop 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 copy dec < -6 inc -7 neg inc -6 greedy? ≥ eql swap dec F F x 9 -9 6 -9 -5 * 9 * dec 5 *"
# 1658: "copy x x 0 x depth 0 F -3 x -7 - F x ≥ 8 5 T 4 -1 > -10 inc -5 * 9 * dec T *"
# 1658: "-8 ∨ x 2 -3 x inc 9 swap T * -5 depth x 9 T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec -9 -3 2 -1 x -1 ungreedy 0 depth neg x -5 5 > -5 + pop - 4 depth -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 x copy 6 < x ungreedy T pop x -5 2 > F pop F greedy swap 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 6 ∨ swap F swap dec -9 ∨ inc inc -1 ≥ -3 3 dec F x 4 4 T 6 -9 -5 * 9 * dec 5 *"
# 1658: "x x F x ∨ -3 x eql T T < T 4 - T 8 -9 x ∨ T + -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec + ∧ be x -3 -3 T x x copy 5 3 T 1 F x > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc + T T F x + -8 F x x x - - eql x T -1 * -10 inc -5 * 9 * dec 5 *"
# 1658: "* x T F T x 5 greedy? x depth -10 x x -10 * 0 x T inc > * -10 inc -5 * 9 * dec 5 *"
# 1658: "F x pop ∨ F ∧ - 3 -2 depth 5 -8 5 F 2 -10 pop 1 4 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "F -10 ∨ T x 8 F x + -8 x 9 7 5 -6 be / x x 0 x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x inc 0 1 ∧ x ungreedy T x x pop ∨ > x T 5 x ≤ * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "- swap x -4 4 x x 7 if inc 9 -1 depth x x neg copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 x x -8 x -7 1 T if x F < neg 8 / x greedy? 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 greedy copy -5 x T T T ≥ F -10 x x 9 8 5 T copy -1 > -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * x copy -5 T T T T greedy? 9 pop ¬ x > 8 5 x 4 -8 2 -10 inc -5 * 9 * dec 5 *"
# 1658: "F T -10 -2 x T inc -2 * x T -8 x -7 5 T F -5 -2 4 x -10 -9 -5 * 9 * dec 5 *"
# 1658: "5 < -6 copy 5 9 x F x x x -3 F ≤ x F F x ∧ eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "F > greedy x pop x x 5 T 0 -6 greedy? x -1 x 8 x F 9 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 F copy x -9 ¬ eql * -6 x x T be x eql F if x dec F x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 -4 x x x be 1 T if x F < x 8 F x greedy? ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ eql * * < be x x / 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "dec * ≤ copy -5 T T T < greedy? 9 pop ¬ x > 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x F / pop x T 6 x x x copy 5 ≥ T 1 F ≥ > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 -8 T x 8 * x x be T x -5 5 -6 -5 + greedy? be F x -10 inc -5 * 9 * dec 5 *"
# 1658: "F x inc x -8 x ¬ ∧ greedy F x T -9 - T be -9 x ∨ > F -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 copy -6 - T x x 5 T F 3 F inc x eql F if x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "* -10 ∨ T x 8 * x x be T x 8 eql pop be x -6 1 be 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T pop inc 7 greedy -3 0 -9 -8 9 inc F ¬ eql ¬ -9 x x swap -10 F -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T / * dec F x be -8 pop -1 x > x T 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "- swap x ungreedy 4 x x 7 -5 inc 9 -1 depth x x inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "be inc 8 copy -5 -3 x F T 4 depth x greedy? x 7 T T F swap 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "F F copy x -9 ¬ eql * * x x T be x eql F if x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ x eql greedy 6 - T T T 8 * x depth 8 inc -9 * 8 swap ∧ -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "F if T copy -5 depth x F 7 x x -3 F x inc * 5 8 ∨ greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 / T T < ∨ 3 -1 x x 5 be T x x ungreedy x 2 neg 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x inc + F T F x + -8 x 9 7 5 1 x / F x 4 1 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 greedy if 6 x be T x neg copy swap eql ¬ 8 F x greedy? ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec if -3 2 3 x -1 ungreedy 0 depth neg x -5 5 > -5 + pop - 4 be -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 1 3 6 x be T x neg copy swap eql ¬ 8 F x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + < depth x x T be 1 2 -10 x dec x dec 0 < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x 8 * x x be T x -5 5 * 0 x -1 inc eql 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ inc x - T x -3 T 5 x T pop ≥ x / greedy? 5 T x -8 2 -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy < 5 copy -5 F -8 F ∧ x x -10 x x x -5 * T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ swap T F greedy? eql 7 -6 -8 x neg copy swap x ¬ < pop 2 swap -10 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 7 5 neg + x x F ∧ x x -3 F x -6 x x -6 4 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x x T / * -8 x -2 depth x -8 dec F ∧ 8 -9 / x 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / swap greedy? x -10 -1 x x 5 be T x 6 ungreedy x x neg 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / 3 greedy? x dec eql T x x x be x F -5 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -1 neg T x x > + -7 x - -10 T -9 neg neg T 4 neg be -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -3 swap T -8 5 -2 9 x -9 -8 x inc eql -5 -6 x ∨ 2 < -10 inc -5 * 9 * dec 5 *"
# 1658: "+ x -10 swap x x x eql neg 8 -1 pop x inc x T T x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 x < 3 x * be 9 -1 F -10 -10 + 8 dec -7 4 - -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x dec x ∧ be ∨ -3 -3 T x x copy 5 x T 1 F x > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F > greedy copy pop x T 5 - x F x -6 F pop -9 ¬ -6 ∨ 5 < -10 inc -5 * 9 * dec 5 *"
# 1658: "if dec -10 > 4 -6 copy 8 x be + T x x > F 8 3 greedy be 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec -9 -3 2 -8 x ¬ ∧ greedy 3 x T x - ≤ 8 -9 8 ∨ T T -10 inc -5 * 9 * dec 5 *"
# 1658: "inc greedy x dec ∧ x x dec - 0 x x inc x x + F ≥ be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "> 4 T copy be T T dec T T * -5 x x x 8 -9 depth ∨ T + -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / -1 x x dec -7 1 7 if x F < x 8 F x greedy? 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "6 inc T x -5 * x T x x T pop ≥ x < -9 5 T x 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 copy T F greedy? F be -6 -8 4 inc x greedy? 3 7 x swap 8 < x F -10 inc -5 * 9 * dec 5 *"
# 1658: "7 x -4 x -8 F inc -2 * x T -8 x -7 5 T F -5 -2 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "dec 4 1 copy be T T T T 8 * x > 8 inc -9 * 8 swap ∧ -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ 3 x x -3 T x -7 1 greedy? if x F < x 8 F x -8 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 0 7 -4 x x -6 dec - 0 x x ∧ x x * x 2 * 5 if -10 inc -5 * 9 * dec 5 *"
# 1658: "inc greedy be x ≥ eql 7 -6 -8 4 be x T F depth T 5 0 -3 x T -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 8 * x x greedy? depth x -6 depth 1 -4 x -6 T 2 < -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ∧ x F + / x T x neg copy swap eql x < pop if -8 -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ + T F greedy? eql 7 ¬ -8 4 depth -8 greedy? copy F neg 5 8 * 0 * -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 T F / pop x T 6 x greedy x copy 5 ≥ T -7 F ≥ > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 x T / * -8 x + -8 x 9 7 5 * T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 38402: "3 -10 ∨ T x 8 * x swap T * / depth x 9 T pop x x 4 x -2 inc -5 * 9 * dec 5 *"
# 43022: "inc greedy x dec < -6 0 -7 / x x * x x inc -8 x x x 4 + x 8 dec -1 -9 x neg + x"
10226,43022,69
10227,43064,74
10228,43022,74
10229,42917,66
10230,43022,67
10231,43127,88
10232,85547,89
10233,1658,79
10234,43127,91
10235,1658,82
10236,38402,76
10237,66752,87
10238,43022,77
10239,1658,72
10240,43022,73
10241,14777,79
10242,43043,80
10243,34622,83
10244,43022,69
10245,80927,78
10246,24850,83
10247,85652,84
10248,43148,85
10249,62027,81
10250,48797,78
10251,287623,78
10252,42854,81
10253,27924,77
10254,43022,83
10255,42917,81
10256,1658,73
10257,42812,85
10258,41657,81
10259,45052,73
10260,43064,81
10261,1658,85
10262,42812,73
10263,39277,84
10264,102410,73
10265,76202,80
10266,1658,80
10267,1658,79
10268,36512,74
10269,42917,70
10270,35567,72
10271,47852,78
10272,1658,92
10273,42854,99
10274,1658,85
10275,40292,85
10276,1658,84
10277,1658,76
10278,53497,71
10279,47852,83
10280,42770,83
10281,43022,84
10282,52577,85
10283,1658,82
10284,49668,84
10285,43148,78
10286,1652,79
10287,49743,75
10288,1658,72
10289,43022,88
10290,43127,80
10291,1658,77
10292,42938,75
10293,42917,85
10294,1658,73
10295,1658,79
10296,1658,71
10297,80927,78
10298,42182,90
10299,1658,85
10300,16366,81
10301,1658,84
10302,31787,87
10303,47852,73
10304,86168,97
10305,1658,82
10306,43064,73
10307,53497,82
10308,1658,77
10309,1658,90
10310,42602,80
10311,1658,81
10312,1658,75
10313,43337,75
10314,43127,71
10315,30359,83
10316,1652,81
10317,1658,74
10318,43022,80
10319,66752,80
10320,10052,84
10321,1658,91
10322,1658,82
10323,21000000,75
10324,42182,87
10325,52577,80
10326,57302,80
10327,42875,76
10328,1658,90
10329,1658,90
10330,1658,71
10331,1658,85
10332,43022,69
10333,21000000,72
10334,1658,84
10335,1658,73
10336,43127,76
10337,43127,87
10338,60206,90
10339,85652,74
10340,1658,99
10341,43022,78
10342,43862,83
10343,57302,83
10344,42917,79
10345,10052,72
10346,26117,79
10347,1658,81
10348,1658,79
10349,115892,80
10350,57363,82
10351,4157,75
10352,40292,79
10353,42917,76
10354,59928,94
10355,1658,68
10356,1658,88
10357,55878,89
10358,4157,81
10359,45962,80
10360,34622,92
10361,43022,75
10362,43022,74
10363,43127,87
10364,42182,78
10365,39970,76
10366,43967,71
10367,9254,82
10368,43862,79
10369,1658,70
10370,1658,84
10371,1658,75
10372,36092,78
10373,34622,83
10374,1658,74
10375,42875,82
10376,22022,88
10377,110894,89
10378,1658,81
10379,57302,70
10380,37457,75
10381,43127,84
10382,46907,78
10383,16072,100
10384,43327,78
10385,42392,79
10386,42917,88
10387,1658,78
10388,1658,85
10389,66752,78
10390,5327,79
10391,42791,83
10392,40502,78
10393,4157,87
10394,52031,97
10395,53497,76
10396,21000000,70
10397,47950,95
10398,19502,78
10399,111062,74
10400,80927,86
10401,9107,71
10402,1658,88
10403,1658,69
10404,17822,79
10405,43022,78
10406,53497,74
10407,43022,71
10408,1658,76
10409,1658,76
10410,13475,78
10411,43817,83
10412,43022,73
10413,1658,74
10414,43817,80
10415,43127,80
10416,1658,83
10417,53497,84
10418,1658,74
10419,1658,77
10420,1658,83
10421,1658,89
10422,1658,71
10423,21000000,80
10424,42812,73
10425,1658,98
10426,62027,88
10427,43547,70
10428,42917,67
10429,4157,74
10430,43022,78
10431,45955,77
10432,43022,85
10433,52577,74
10434,1658,85
10435,34538,85
10436,1658,79
10437,42875,79
10438,34832,84
10439,11851,84
10440,43127,88
10441,1658,70
10442,41090,94
10443,43127,95
10444,44177,92
10445,42182,66
10446,43817,83
10447,1658,80
10448,38402,87
10449,53497,77
10450,16366,87
10451,44870,79
10452,21000000,85
10453,28007,77
10454,11851,88
10455,42602,97
10456,23114,87
10457,1658,92
10458,1658,79
10459,1658,76
10460,41237,77
10461,44072,74
10462,1658,80
10463,22127,88
10464,42917,104
10465,47852,83
10466,43127,81
10467,36827,74
10468,17626,78
10469,43127,82
10470,43127,86
10471,47852,89
10472,1658,97
10473,60046,80
10474,1658,76
10475,42182,94
10476,1658,82
10477,42497,86
10478,1658,82
10479,42917,90
10480,1658,89
10481,28735,79
10482,42182,80
10483,43022,78
10484,43127,79
10485,25207,85
10486,42182,84
10487,1658,92
10488,1658,76
10489,43127,85
10490,4157,77
10491,42182,70
10492,43022,83
10493,42917,78
10494,43022,82
10495,43106,104
10496,43127,83
10497,28952,73
10498,1658,81
10499,1658,83
10500,1658,77
10501,22127,99
10502,67816,85
10503,42182,100
10504,55878,69
10505,1658,92
10506,43022,86
10507,54635,96
10508,1658,76
10509,62804,74
10510,32473,96
10511,1658,85
10512,43127,86
10513,71337,83
10514,1658,74
10515,1658,86
10516,1658,74
10517,42077,86
10518,43127,75
10519,85442,84
10520,1658,85
10521,42917,95
10522,43022,91
10523,1658,90
10524,1658,80
10525,47852,73
10526,43862,90
10527,1658,84
10528,42392,75
10529,1658,73
10530,43022,81
10531,43862,70
10532,16072,85
10533,21000000,70
10534,43022,82
10535,42917,85
10536,1658,86
10537,26054,73
10538,1658,78
10539,43967,92
10540,1658,76
10541,85127,85
10542,1658,72
10543,1663,81
10544,36512,83
10545,1658,76
10546,66752,77
10547,52850,82
10548,42182,85
10549,1658,76
10550,55878,76
10551,42917,80
10552,1658,86
10553,1658,89
10554,1658,74
10555,43817,85
10556,42728,91
10557,1658,85
10558,47852,92
10559,47852,87
10560,21000000,89
10561,21000000,79
10562,80927,84
10563,55428,94
10564,217588,80
10565,42917,90
10566,42602,72
10567,1658,86
10568,85652,94
10569,42980,75
10570,1658,87
10571,38297,70
10572,15640352,70
10573,42602,71
10574,35567,78
10575,1658,88
10576,49897,82
10577,3545,77
10578,43043,87
10579,43001,87
10580,1658,80
10581,1658,81
10582,43043,75
10583,69272,74
10584,5117,78
10585,43817,79
10586,80927,83
10587,47327,75
10588,71162,81
10589,1658,76
10590,43127,79
10591,47852,76
10592,1658,72
10593,1658,74
10594,43127,73
10595,1658,76
10596,35567,83
10597,31713,85
10598,1658,80
10599,59928,78
10600,1663,76
10601,1658,76
10602,21000000,80
10603,42896,87
10604,1658,86
10605,32507,88
10606,1658,78
10607,42182,72
10608,43757,84
10609,101920,86
10610,45752,77
10611,102662,82
10612,43127,70
10613,77147,81
10614,1658,96
10615,1658,76
10616,1658,71
10617,1663,90
10618,1658,83
10619,1658,72
10620,1658,90
10621,1658,85
10622,1658,76
10623,1658,84
10624,43022,89
10625,43022,81
10626,1658,80
10627,1658,86
10628,1658,75
10629,43022,76
10630,43127,93
# After 5200 updates
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "if x F x -6 -3 x eql T T < T x - T 8 x F swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1658: "dec * T copy -5 T T T < 3 9 pop ¬ x 0 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 inc * if 5 F x < 9 eql inc x greedy? 3 8 4 T ∨ F / 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / 3 greedy? x dec eql T x x x be x F -5 5 T x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "F T -7 2 pop x / T x be greedy + x 0 > + 8 x x be 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ x eql greedy 6 - x x T inc neg greedy swap eql ¬ greedy? F x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + if depth x x T be 1 2 -10 x inc T inc F T 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec -9 -3 2 -1 x -1 ungreedy 0 depth neg x -5 5 > -5 + pop - 4 depth -10 inc -5 * 9 * dec 5 *"
# 1658: "7 copy -6 - T x x 5 T F 3 T inc x > F if x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc x copy ≤ depth 1 * - x ∨ x -5 T -1 F 4 -1 be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ pop T x 3 x x T pop > x inc dec / F x x T -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * x 6 -5 T -3 T x - T pop x inc T T F ≥ > 0 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 6 ∨ swap F swap dec -9 ∨ inc inc -1 ≥ -3 3 dec F x 4 4 T 6 -9 -5 * 9 * dec 5 *"
# 1658: "F F -5 x -9 T eql F * x x -10 greedy? x T * 5 8 ∧ greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec T F x + -8 x 9 7 5 -6 ∧ / -6 x - x -10 inc -5 * 9 * dec 5 *"
# 1658: "if x x -4 -10 inc ungreedy x T ¬ T copy > T x < pop 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ eql * * < be x x / 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "-2 inc T be be x -3 -3 T x x copy 5 3 T 1 x x > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x 2 -3 x inc 9 swap T x -5 depth x 9 T eql x -10 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ dec dec ∧ T x -3 T x x 1 pop ≥ x x 5 5 -9 F greedy? 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * if 5 F x < 9 eql -1 pop F x -1 F 4 x be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 x -3 6 < greedy? ungreedy T pop x -5 2 > F pop F x 4 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "if x -10 neg 4 x x > greedy? x x -3 ∧ x -6 x x -6 swap 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 pop < 3 -10 * be dec dec F ¬ eql ¬ ≥ x x swap -10 F -10 inc -5 * 9 * dec 5 *"
# 1658: "F x inc x -8 x ¬ ∧ greedy F x T -9 - T be -9 x ∨ > F -10 inc -5 * 9 * dec 5 *"
# 1658: "F x inc x inc x ¬ ∧ greedy F x T ≤ - T be -9 x ∨ > F -10 inc -5 * 9 * dec 5 *"
# 1658: "F x pop ∨ F ∧ - 3 -2 depth 5 -8 5 F 2 -10 pop 1 4 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 / -1 x x dec -7 1 7 if x F < x 8 F x greedy? 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x inc 0 1 ∧ x ungreedy T x x pop ∨ > x T 5 x ≤ * swap -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * ≤ copy -5 T T T < greedy? 9 pop ¬ x > 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc x x x -8 x -7 -4 T x x F greedy neg 8 / > neg x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x 8 T 6 F x x copy 5 dec -1 1 F ≥ > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T inc ∨ neg x 8 * x x if -1 ≤ -5 5 x -5 5 T x inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 greedy if 6 x be T x neg copy swap eql ¬ 8 F x greedy? ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x 2 -3 x inc 9 swap T * -5 depth x 9 T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 x eql 3 x 5 T x 3 F inc 6 3 * x F swap > -10 be inc -5 * 9 * dec 5 *"
# 1658: "≥ + T F if swap 0 F x ¬ 3 inc x 0 T -9 5 > 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x x T / * -8 x -2 depth x -8 dec F ∧ 8 -9 / x 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 < 0 eql 7 -6 -8 x neg 6 swap x ungreedy < pop 2 swap -10 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy < F copy -5 x -8 F ∧ 6 + -10 6 x x -5 * -9 x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x F / pop x T 6 x x x copy 5 ≥ T 1 F ≥ > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 -8 T x 8 * x x be T x -5 5 -6 -5 + greedy? be F x -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc 4 5 F x < x eql -1 pop F x T ungreedy x greedy? x 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "6 x 3 x -9 T eql F * x x < be x eql F if x dec T -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "- swap x ungreedy 4 x x 7 -5 inc 9 -1 depth x x inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 pop < 3 x * be dec -1 F -10 -10 + 8 dec -7 4 - -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T / * 4 F x - -8 pop F 1 > -5 + pop if 4 swap -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy swap T -8 5 -2 9 copy -1 x -1 F F x - -8 3 > -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + < depth x x T be 1 2 -10 x dec x dec 0 < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F if ∨ / -5 x x x T be T x 8 eql x be greedy greedy? be 3 x -10 inc -5 * 9 * dec 5 *"
# 1658: "copy 7 x 0 x 1 0 F -3 9 -7 - F x ≥ 8 5 T 4 x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 7 ∧ x x 3 -1 -10 x 5 be T x x 2 x x x 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 7 copy ≤ depth ungreedy greedy - x ∨ x inc T ¬ < pop 2 swap -10 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x + F ungreedy F dec T ungreedy neg ∨ swap eql ¬ 8 T x x 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "5 < -6 F T 9 x F x x ≤ -3 F ≤ x F F x ∧ eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "x < -4 x -8 F inc -10 * x T -8 x -7 5 T F -5 -2 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "x x inc + inc T F x + -8 F x x x - + eql F T 4 be -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 x x greedy greedy? x x x F x T * 5 8 ∨ greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ 4 eql greedy -9 - x 7 T inc 9 ∨ depth x x T copy x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ inc x - T x -3 T 5 x T pop ≥ x / greedy? 5 T x -8 2 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 F copy x -9 ¬ eql * -6 x x T be x eql F if x dec F x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec -9 -3 2 -8 x ¬ ∧ greedy 3 x T x - ≤ 8 -9 8 ∨ T T -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ 4 T copy 6 x -1 ungreedy 0 > neg x -5 x > depth + pop - -1 * -10 -9 -5 * 9 * dec 5 *"
# 1658: "x 9 copy dec < -6 inc -7 neg inc -6 greedy? ≥ eql swap dec F F x 9 -9 6 -9 -5 * 9 * dec 5 *"
# 1658: "greedy? 8 x T / * -8 x + -8 x 9 7 5 * T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "F > greedy x pop x x 5 -1 3 -6 greedy? x -1 x 8 x F < x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc 4 5 F x < x eql -1 pop F x ∧ F -9 / x 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x / 9 1 3 x x be + if x 9 x ≤ -6 -5 + pop 9 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + if depth greedy? x T be > 2 -10 x inc T dec x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 greedy copy -5 x T T T ≥ F -10 x x 9 8 5 T copy -1 > -10 inc -5 * 9 * dec 5 *"
# 1658: "F inc 7 copy ≤ x x -9 dec 9 > F x neg 5 T F 7 ¬ 4 neg -6 -9 -5 * 9 * dec 5 *"
# 1658: "pop dec dec -3 ≤ depth ungreedy F - x ∨ x inc x ¬ < x if swap F 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 x 3 3 x 5 T 1 3 F inc 6 3 * -3 x T 5 < -10 inc -5 * 9 * dec 5 *"
# 1658: "-3 9 ≤ -1 x x dec -7 1 7 if x F < 9 8 F x greedy? 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "F T -10 -2 x T inc -2 * x T -8 x -7 5 T F -5 -2 4 x -10 -9 -5 * 9 * dec 5 *"
# 1658: "x 8 9 1 3 x x be + if x 9 x 5 1 x / F x 4 1 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 + -6 / T x be F + x 0 > + 8 x greedy be 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc x copy x x greedy be 1 T if -4 F < x 8 F if neg dec 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 1 3 x x be + if T 9 depth 5 1 x / F x 4 1 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x + < -10 x x T x if x F < x 8 2 x greedy? ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 x x greedy greedy? greedy 9 -1 depth x x inc 5 x ≤ > F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 x x x x be 1 T if x F 1 * > 7 x dec 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec 4 1 copy be T T T x 8 * copy > 8 inc -9 F x ∧ eql if -10 inc -5 * 9 * dec 5 *"
# 1658: "F F -5 T -9 T eql F * x x -10 greedy? -8 > 8 5 x x -8 T -10 inc -5 * 9 * dec 5 *"
# 1658: "- 0 x T / * dec F x be -8 pop -1 x > x T 0 4 x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + if depth x x T be > 2 -10 x inc T inc > x 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ + T F greedy? -4 ¬ ¬ -8 3 dec greedy? x -1 x 8 x dec < x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -1 neg T x x > + inc F -1 8 x x inc copy x dec 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 x T / * -8 * + -8 x 9 7 5 * F eql x x ∧ x -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ swap T F greedy? eql 7 -6 -8 x neg copy swap x ¬ < pop 2 swap -10 copy -10 inc -5 * 9 * dec 5 *"
# 43022: "x - x - x -6 * inc / 5 7 * inc 5 x 8 / x dec x -4 x 0 * x / dec x 0 x"
10631,43022,69
10632,43232,75
10633,43106,71
10634,43022,73
10635,42875,72
10636,50393,84
10637,43022,76
10638,1658,75
10639,21000000,91
10640,1658,71
10641,53497,78
10642,38402,84
10643,43022,86
10644,42875,88
10645,1658,73
10646,43127,77
10647,1658,73
10648,1658,74
10649,21000000,74
10650,21000000,73
10651,5033,84
10652,1658,84
10653,43127,75
10654,1658,81
10655,1658,77
10656,42917,72
10657,43022,74
10658,1658,78
10659,85652,84
10660,42917,82
10661,43106,78
10662,59928,82
10663,1658,81
10664,43337,81
10665,90377,80
10666,51632,86
10667,43211,87
10668,89432,82
10669,40922,98
10670,1658,96
10671,43817,76
10672,1658,74
10673,43232,80
10674,36260,83
10675,38843,84
10676,1658,87
10677,42182,86
10678,1658,72
10679,37457,81
10680,42917,99
10681,43127,68
10682,10052,78
10683,43127,72
10684,47852,75
10685,55878,74
10686,85652,82
10687,42917,80
10688,52577,93
10689,66248,82
10690,53497,82
10691,5327,80
10692,57302,81
10693,1658,80
10694,1658,84
10695,1658,75
10696,57363,72
10697,47852,89
10698,42917,79
10699,1658,71
10700,40292,80
10701,60206,87
10702,52577,84
10703,7630,79
10704,43127,79
10705,1658,99
10706,1658,87
10707,43022,79
10708,127862,92
10709,21000000,69
10710,46907,83
10711,43127,75
10712,21000000,85
10713,42917,79
10714,1658,78
10715,21000000,72
10716,1658,81
10717,47852,72
10718,10535,87
10719,19502,92
10720,1658,88
10721,60137,71
10722,28952,83
10723,1658,72
10724,55878,91
10725,1658,71
10726,1658,83
10727,43022,76
10728,42917,78
10729,71477,77
10730,42917,80
10731,42938,75
10732,47852,75
10733,43127,83
10734,42056,88
10735,42917,71
10736,42182,72
10737,43817,79
10738,1658,96
10739,9086,76
10740,1658,79
10741,33677,89
10742,21000000,83
10743,1658,81
10744,43022,73
10745,43817,69
10746,1658,80
10747,1658,72
10748,42875,86
10749,1658,88
10750,47852,78
10751,21000000,86
10752,1658,90
10753,42917,83
10754,38402,84
10755,43022,83
10756,1658,88
10757,1658,81
10758,43022,69
10759,43022,76
10760,1658,86
10761,62027,69
10762,17612,85
10763,43127,69
10764,43127,96
10765,43001,88
10766,1658,86
10767,42182,94
10768,1658,68
10769,48797,78
10770,297178,74
10771,43817,74
10772,66752,83
10773,52577,75
10774,1658,76
10775,51373,96
10776,21000000,80
10777,47852,74
10778,1658,80
10779,1658,73
10780,1658,88
10781,42917,77
10782,47852,74
10783,10052,99
10784,43022,79
10785,59928,87
10786,43001,89
10787,21000000,78
10788,1658,92
10789,50552,81
10790,43064,78
10791,170597,86
10792,27062,71
10793,43022,74
10794,1658,78
10795,25172,71
10796,1658,86
10797,43127,71
10798,43127,85
10799,34538,74
10800,1658,80
10801,43127,88
10802,58338,77
10803,1658,77
10804,47852,87
10805,43022,84
10806,42182,83
10807,43043,75
10808,1658,85
10809,55878,83
10810,38402,69
10811,1658,83
10812,57302,79
10813,34538,78
10814,42917,89
10815,43127,82
10816,43967,99
10817,251167,79
10818,1658,77
10819,76097,76
10820,1658,79
10821,43757,84
10822,43127,97
10823,1658,88
10824,43232,74
10825,1658,77
10826,1658,77
10827,1658,76
10828,1663,73
10829,42917,86
10830,1658,73
10831,43337,81
10832,22127,76
10833,68159,92
10834,42917,80
10835,1658,81
10836,47852,76
10837,1658,73
10838,10052,70
10839,42917,82
10840,34942,82
10841,1658,90
10842,42182,86
10843,1658,82
10844,1658,81
10845,1658,73
10846,43022,77
10847,38402,77
10848,14777,75
10849,80927,73
10850,1658,77
10851,43022,76
10852,1658,79
10853,34622,79
10854,76202,81
10855,41699,91
10856,43022,91
10857,43127,67
10858,1658,89
10859,1658,78
10860,1658,78
10861,39347,91
10862,1658,76
10863,34622,86
10864,47852,72
10865,42182,77
10866,1658,96
10867,43127,77
10868,127862,85
10869,9947,80
10870,1658,90
10871,42917,80
10872,80927,87
10873,93926,83
10874,43022,93
10875,33418,76
10876,55878,87
10877,93926,88
10878,1658,73
10879,1658,92
10880,1658,80
10881,39382,77
10882,43022,87
10883,42812,94
10884,33418,75
10885,1658,75
10886,1658,78
10887,83090,89
10888,1658,78
10889,4157,71
10890,1658,85
10891,43022,75
10892,43526,77
10893,1658,93
10894,43022,83
10895,76202,77
10896,1658,71
10897,53497,76
10898,50764,82
10899,22127,82
10900,43817,76
10901,53332,91
10902,5033,98
10903,85652,77
10904,43862,71
10905,40376,91
10906,1658,79
10907,1658,86
10908,1658,82
10909,42917,88
10910,47852,81
10911,1658,88
10912,1658,82
10913,42791,95
10914,43127,92
10915,1658,95
10916,3545,89
10917,34538,104
10918,1658,92
10919,43127,81
10920,43022,85
10921,1658,74
10922,43817,74
10923,43169,80
10924,64590,79
10925,19502,81
10926,36260,80
10927,1658,80
10928,1658,82
10929,1658,88
10930,46907,76
10931,42875,96
10932,1658,75
10933,1658,102
10934,1658,80
10935,1658,84
10936,21000000,81
10937,1658,75
10938,45962,83
10939,43817,87
10940,43022,78
10941,1658,71
10942,1658,71
10943,52577,72
10944,7588,88
10945,1658,71
10946,42812,86
10947,41657,85
10948,43337,86
10949,47852,70
10950,1658,77
10951,53497,78
10952,43127,74
10953,1658,80
10954,43211,69
10955,1658,89
10956,43022,85
10957,43022,77
10958,1658,87
10959,42182,82
10960,32837,88
10961,43022,75
10962,28196,85
10963,1658,99
10964,1658,85
10965,42917,89
10966,1658,81
10967,42287,83
10968,19502,85
10969,43127,87
10970,1658,73
10971,1658,81
10972,11851,77
10973,1658,77
10974,43169,82
10975,62027,81
10976,42875,88
10977,1658,84
10978,42182,89
10979,60352,91
10980,1658,81
10981,16408,80
10982,43148,99
10983,43064,83
10984,44093,76
10985,43127,73
10986,1658,75
10987,21000000,81
10988,1658,78
10989,42077,79
10990,21000000,87
10991,53497,80
10992,42077,97
10993,1658,90
10994,57302,101
10995,3545,83
10996,1658,77
10997,42287,83
10998,1658,76
10999,43967,84
11000,1658,78
11001,43127,69
11002,55878,70
11003,34538,80
11004,43022,80
11005,1658,87
11006,1658,76
11007,47852,78
11008,32732,73
11009,1658,76
11010,1658,85
11011,43232,77
11012,44177,95
11013,33551,92
11014,1658,86
11015,1658,73
11016,31787,81
11017,1658,89
11018,42392,74
11019,43988,74
11020,1658,95
11021,42917,78
11022,43022,77
11023,43148,84
11024,1658,78
11025,24227,73
11026,42854,95
11027,94830,76
11028,71477,82
11029,43127,88
11030,1658,83
11031,43148,84
11032,1658,75
11033,43022,95
11034,1658,85
11035,1658,84
# After 5400 updates
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if x F x -6 -3 x eql T T < T x - T 8 x F swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1658: "greedy? 8 x -3 x depth ungreedy F x x ∨ x inc x ¬ < x if x F 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 T copy swap x -1 ¬ x > ∧ -2 -5 x x depth -6 -7 - -3 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ swap T F greedy? eql 7 -6 -8 x neg copy swap x ¬ < pop 2 swap -10 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 x dec inc x 0 1 7 inc x x * inc 4 x x F + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 1 3 x x be + if 3 9 x 5 1 x / ¬ x T F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + if depth x x T be 1 2 -10 x inc T inc F T 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec -8 -3 2 -1 5 F F -3 9 -7 - F x ≥ 8 5 T 4 x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "7 copy -6 - T x x 5 T F 3 T inc x > F if x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x 8 T 6 T x x copy x < x 8 2 x greedy? x / -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 T pop x copy 3 x -1 < F T * swap eql x x ∧ x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * x 6 -5 T -3 T x - T pop x inc T T F ≥ > 0 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "6 x greedy? x -9 T ≤ depth * x x < be x eql F if x dec T -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "be / 9 1 3 x -9 + greedy x if x x < T 8 F x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc 4 5 F x < x x neg 6 swap - ungreedy < pop x swap -10 copy F inc -5 * 9 * dec 5 *"
# 1658: "if x x -4 -10 inc x x T ¬ T copy 1 T x -7 pop 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * x T pop x copy 3 x -1 T F 3 * swap eql 7 be x -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc T be be x T -3 T x x copy x 3 T 1 be x > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 -9 dec < -6 inc -7 neg 9 -6 greedy? ≥ x swap dec F F x -3 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x 2 -3 x inc x T ¬ T x 1 T x -3 pop 2 swap 4 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * if 5 F x < 9 x -1 pop F 1 -1 F x x be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "T inc ∨ x ≤ x x x x be -3 F x -5 5 T x < 5 4 neg -6 -9 -5 * 9 * dec 5 *"
# 1658: "∧ dec dec ∧ swap eql 7 -6 -8 x neg copy swap x ¬ 3 pop / swap -10 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x F inc -10 x -8 neg -7 -4 T x x F 1 -2 F x x be x + -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + < depth x x T be 1 2 -10 x dec x dec 0 < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec T F x + -8 x 9 7 5 -6 ∧ / -6 x - x -10 inc -5 * 9 * dec 5 *"
# 1658: "F x pop ∨ F ∧ - 3 -2 depth 5 -8 5 F 2 -10 pop 1 4 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 F -7 copy 5 F x < 9 x -1 pop F 1 -1 F x x be x + -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x 2 -3 x inc 9 swap T * -5 depth x 9 T eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x + < -10 x x F x if x > < x 8 2 x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "9 swap x swap 4 x x x T x neg 6 swap x ungreedy < > 2 swap -9 pop -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy swap x -8 5 -2 9 copy -1 x -1 F F x - -9 F ¬ x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 2 x -3 6 < greedy? ungreedy T pop x -5 2 > F pop F x 4 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "inc / x -2 6 - 7 * 7 > pop -2 -5 x eql depth -6 -7 - -3 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "F F -5 x -9 T eql F * x x -10 greedy? x T * 5 8 ∧ greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 -8 x ≤ x x x x 9 -3 F x -5 5 T x < ¬ 4 neg -6 -9 -5 * 9 * dec 5 *"
# 1658: "x - inc neg -4 8 1 / -5 F -6 -3 + x x F T x x 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 pop < 3 x * be dec -1 F -10 -10 + 8 dec -7 4 - -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 x T F * -8 x -2 x x -8 dec F ∧ dec -9 / x 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 if 3 3 + 5 T 1 3 F inc 6 3 neg x -5 ungreedy 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "9 swap x ungreedy 4 x x x T inc neg depth -9 eql ¬ greedy? F x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x 2 x x inc 9 greedy? x x -3 -3 x -6 x x -6 swap 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x + < -10 ∧ be copy if x 9 x ≤ -6 7 + pop -1 4 depth -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x x copy 7 -5 inc 9 2 depth x T inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "F > greedy x pop x -9 5 x 3 F greedy? x -1 x 8 x F < x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 F -7 + / F x -7 1 7 if x F x x T F -5 -2 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "ungreedy < 6 greedy swap - x 7 copy inc 9 ∨ depth x x T copy x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "6 x x -4 -10 inc ungreedy x T ¬ T copy -1 T x < -5 2 swap -10 ungreedy T inc -5 * 9 * dec 5 *"
# 1658: "be x x + < -10 ¬ x F x copy x > < x 8 2 x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy < F copy x x inc 9 greedy? greedy? x 1 -3 x -6 x x -6 swap 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc dec -4 8 1 / -5 0 -6 / + x x F T x x 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ + T F greedy? -4 ¬ ¬ -8 3 dec greedy? x -1 x 8 x dec < x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc + inc T F x F -8 F x x x - + eql F T -5 be -10 inc -5 * 9 * dec 5 *"
# 1658: "- swap x ungreedy 4 x x 7 -5 inc 9 -1 depth x x inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "F T ∨ / -5 x x x copy be T x 8 eql x be greedy -1 be 3 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x < -4 x -8 F inc -10 * x T -8 x -7 5 T F -5 -2 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "-9 pop T x 3 x be * * x ∨ copy x eql ¬ ≥ x x swap 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 x x greedy greedy? x x x F x T * 5 8 ∨ greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 x x greedy greedy? greedy 9 -1 depth x x inc 5 x ≤ > F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 x T F * -8 - + -8 x 9 -9 x F pop F depth 4 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc x copy x x greedy be swap T if -4 F < x copy F F neg dec 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x T -3 T inc F swap x * -5 depth -10 > x x pop - 4 depth -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 greedy if 6 8 2 T 7 neg copy swap eql ¬ x F T greedy? ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "x 6 -1 neg T x x > + be F be x 0 > -10 be > greedy be 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x / pop x T 6 x x x copy 5 ≥ T * x F swap 9 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ inc x - T x -3 T copy inc x -4 depth x x T copy x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * -4 + be / / x be 3 neg copy 6 0 * x F x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 < -6 F T 9 x F x x ≤ -3 F ≤ x F F x ∧ eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 * 4 + -6 / T x be F be x x x depth x -7 - -3 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? ungreedy dec copy 9 T T T T F F F x -7 5 T F -5 -2 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "F -1 7 copy T x x x x 9 -3 F x neg 5 T x F ¬ 4 neg -6 -9 -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ eql * * < be x x / 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "-2 F -7 copy 6 F x ∧ 9 x if x x F x 8 2 x greedy? x / -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ swap T F greedy? copy 7 -6 -8 x T copy swap x x < pop 2 x 4 T -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ x eql greedy 6 - ∧ x T + neg greedy swap x ¬ greedy? F x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc x x x -8 neg -7 -4 T x x F 1 -1 F x x be x + -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 < 0 eql 7 -6 -8 x x x F 1 depth 8 x x be x + -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 pop * 4 -6 -6 T T x be F -1 x 0 > x T ∨ F / 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy 7 x 0 x 1 -1 ungreedy 0 depth T x -5 3 > F dec 4 be x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x + < -10 x + F 2 if x F x ¬ 8 x -2 4 x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "9 swap x x 4 x x x T -10 neg depth -9 T ¬ greedy? F x greedy? x * -10 -9 -5 * 9 * dec 5 *"
# 1658: "T x inc x T F x < x x neg 6 swap - ungreedy < inc x swap -10 copy F inc -5 * 9 * dec 5 *"
# 1658: "swap x 6 6 < ∨ -10 * be dec dec F > x inc dec / F x x T -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * ≤ copy -5 T T T < greedy? 9 pop ¬ x > 8 5 x 4 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x inc 4 5 F x < x eql -1 pop F x T ungreedy x greedy? x 4 5 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x F / pop x T 6 x x x copy 5 ≥ T 1 F ≥ > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 7 ∧ x x 3 -1 -10 x 5 be T -6 x 2 x x copy 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ 4 T copy swap x F ungreedy x > ∧ x -5 x x depth + -7 F 9 T F -9 -5 * 9 * dec 5 *"
# 1658: "-2 inc 2 copy -5 x x greedy greedy? -5 9 ∨ depth x x T ungreedy x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 T copy swap x -1 ¬ x 3 ∧ neg -5 x x depth -6 -7 - 8 copy -10 inc -5 * 9 * dec 5 *"
# 43022: "-2 inc 7 depth -5 x x greedy greedy? x x x F x T * 5 8 ∨ greedy? + -10 inc -5 x dec 1 x 0 x"
11036,42812,65
11037,43022,68
11038,43022,69
11039,41582,74
11040,43022,72
11041,43022,76
11042,80927,92
11043,1658,94
11044,47852,79
11045,11851,87
11046,43022,82
11047,42917,82
11048,42917,95
11049,42602,86
11050,41132,86
11051,48797,77
11052,60032,89
11053,43127,81
11054,42917,91
11055,43127,77
11056,1658,81
11057,43127,87
11058,1658,87
11059,22133,77
11060,57302,86
11061,47852,92
11062,3545,83
11063,111167,94
11064,55878,73
11065,47852,88
11066,1658,78
11067,1658,85
11068,43817,93
11069,43022,76
11070,60018,77
11071,47852,87
11072,1658,72
11073,1658,86
11074,1658,88
11075,1658,80
11076,1658,93
11077,43022,95
11078,47852,82
11079,1658,93
11080,1658,79
11081,1658,77
11082,1658,90
11083,42917,83
11084,46802,82
11085,44072,98
11086,1658,89
11087,1658,81
11088,43127,88
11089,21000000,74
11090,49742,79
11091,1658,93
11092,47852,82
11093,16072,94
11094,56013,79
11095,102662,87
11096,1658,70
11097,43127,83
11098,1658,80
11099,24514,80
11100,69034,79
11101,42917,89
11102,21000000,81
11103,4157,79
11104,43022,76
11105,42917,94
11106,43022,80
11107,52322,75
11108,19502,81
11109,43022,72
11110,247063,67
11111,42917,74
11112,20293,104
11113,43022,77
11114,49897,76
11115,43022,77
11116,28735,81
11117,1658,80
11118,34538,91
11119,1658,84
11120,1658,85
11121,43022,90
11122,42917,77
11123,43022,89
11124,43127,70
11125,1658,80
11126,43127,80
11127,42833,82
11128,17612,86
11129,43547,98
11130,1658,88
11131,1658,87
11132,90377,87
11133,1658,73
11134,43001,79
11135,307967,90
11136,1658,71
11137,1658,93
11138,51023,72
11139,33551,80
11140,42854,75
11141,28952,86
11142,21000000,80
11143,1658,90
11144,1658,79
11145,1658,74
11146,38402,93
11147,43001,72
11148,48146,72
11149,47852,84
11150,1658,88
11151,43022,75
11152,43967,94
11153,127862,74
11154,264354,78
11155,1658,73
11156,34622,78
11157,43022,69
11158,1658,76
11159,42602,73
11160,43211,80
11161,43127,74
11162,1658,97
11163,43022,84
11164,43127,93
11165,7630,85
11166,1658,84
11167,1658,89
11168,43127,81
11169,44030,82
11170,24514,79
11171,48755,78
11172,1658,81
11173,21000000,74
11174,1658,74
11175,1658,84
11176,42602,80
11177,57363,79
11178,43127,84
11179,76202,84
11180,1658,76
11181,1658,92
11182,5033,99
11183,1658,85
11184,1658,80
11185,1658,102
11186,1658,91
11187,1658,77
11188,251167,80
11189,28952,74
11190,21000000,82
11191,43027,72
11192,42875,76
11193,1658,77
11194,1658,90
11195,42728,79
11196,41582,74
11197,1658,75
11198,55878,80
11199,30738,75
11200,28735,80
11201,42182,75
11202,80927,73
11203,24850,82
11204,42917,78
11205,43022,83
11206,47852,74
11207,34433,87
11208,1658,84
11209,1658,84
11210,43817,87
11211,43817,71
11212,43127,86
11213,43817,76
11214,43127,81
11215,43817,72
11216,41132,68
11217,21000000,74
11218,109753,90
11219,71477,95
11220,47852,82
11221,55878,80
11222,2994470,88
11223,1658,77
11224,1658,91
11225,1658,78
11226,42917,72
11227,53497,85
11228,1658,85
11229,169498,87
11230,1658,91
11231,42812,84
11232,21000000,86
11233,1658,83
11234,21000000,81
11235,43817,91
11236,43232,101
11237,43127,84
11238,1658,85
11239,1658,91
11240,43022,86
11241,42938,72
11242,42182,74
11243,1658,73
11244,47852,79
11245,1663,85
11246,4157,74
11247,1672,76
11248,1658,78
11249,9254,86
11250,1658,89
11251,1658,84
11252,4157,98
11253,1658,82
11254,1658,84
11255,1658,76
11256,1658,81
11257,42917,79
11258,42707,89
11259,43127,83
11260,1658,80
11261,42896,81
11262,1658,76
11263,43022,78
11264,43013,73
11265,1658,83
11266,1658,87
11267,1658,74
11268,43442,96
11269,43043,74
11270,43127,72
11271,42791,88
11272,43043,90
11273,4157,72
11274,47852,73
11275,42602,81
11276,42497,77
11277,85547,91
11278,43127,84
11279,43127,78
11280,43652,75
11281,43106,79
11282,1663,98
11283,43817,90
11284,53442,78
11285,42917,80
11286,1658,77
11287,42077,84
11288,1658,81
11289,43022,79
11290,1658,80
11291,1658,73
11292,44072,82
11293,34538,92
11294,34412,82
11295,1658,80
11296,1658,70
11297,49142,85
11298,21000000,80
11299,68474,87
11300,9254,96
11301,1658,82
11302,4157,77
11303,102662,69
11304,43022,73
11305,43397,76
11306,42252,86
11307,43022,78
11308,42602,78
11309,53497,86
11310,1658,99
11311,41552,74
11312,99596,72
11313,42392,87
11314,1658,82
11315,43652,70
11316,1658,86
11317,41237,93
11318,1658,87
11319,42917,77
11320,42833,108
11321,43127,78
11322,47852,74
11323,80612,89
11324,1658,79
11325,43817,91
11326,42392,86
11327,5327,83
11328,49952,99
11329,47852,79
11330,92542,79
11331,55878,82
11332,1663,94
11333,41582,71
11334,21000000,81
11335,60137,76
11336,43022,75
11337,42854,82
11338,52932,85
11339,90377,83
11340,1658,87
11341,24514,78
11342,42602,75
11343,18298,77
11344,43817,87
11345,43022,76
11346,42917,70
11347,43127,77
11348,42182,95
11349,42644,80
11350,34328,81
11351,55878,78
11352,1663,71
11353,42812,83
11354,43442,90
11355,43127,85
11356,42707,81
11357,44072,96
11358,62027,75
11359,1658,75
11360,71477,88
11361,19502,76
11362,43022,79
11363,42749,98
11364,14777,79
11365,1658,75
11366,1658,78
11367,5327,77
11368,53497,75
11369,1658,77
11370,1658,77
11371,21000000,86
11372,1658,78
11373,1663,80
11374,21000000,70
11375,1658,93
11376,1658,83
11377,1658,81
11378,16072,76
11379,44702,88
11380,43127,74
11381,38402,95
11382,1658,80
11383,21000000,88
11384,47852,88
11385,42077,76
11386,28735,84
11387,43127,85
11388,43022,93
11389,1658,80
11390,109277,76
11391,2213,75
11392,1663,77
11393,1658,83
11394,43817,94
11395,42833,86
11396,41027,84
11397,1658,70
11398,1658,81
11399,43127,83
11400,60648,79
11401,47852,78
11402,24227,85
11403,42896,84
11404,1658,86
11405,11851,100
11406,11851,95
11407,1658,87
11408,16366,85
11409,43127,77
11410,43022,91
11411,1658,82
11412,1658,76
11413,7903,76
11414,1658,79
11415,42644,86
11416,1658,84
11417,1658,72
11418,47852,86
11419,1658,86
11420,47222,85
11421,53497,78
11422,41237,81
11423,71477,68
11424,76958,85
11425,43127,74
11426,49028,84
11427,1658,89
11428,47852,72
11429,55878,71
11430,45332,82
11431,26054,89
11432,56013,70
11433,43127,85
11434,119378,82
11435,43817,80
11436,1658,77
11437,1658,79
11438,1658,91
11439,66752,75
11440,43022,70
# After 5600 updates
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if x F x -6 -3 x eql T T < T x - T 8 x F swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1658: "x inc 7 copy -5 F -1 T x > ∧ -2 -5 x 8 -8 -6 x swap 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 x x greedy greedy? x x x F x T * 5 8 ∨ greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ inc x - T -5 -3 T copy x * -5 -7 ∧ > 0 x depth x x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "-10 swap greedy swap 4 x x x T x 4 6 -1 T x < -5 2 swap -10 ungreedy T inc -5 * 9 * dec 5 *"
# 1658: "x x -5 swap x - copy 7 -5 inc copy 2 depth x T inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 x x + if depth x x T be -8 2 -10 x dec T swap F T 5 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 depth x - T T 1 2 -10 x dec x F 0 < 4 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x -2 + dec T F x + -8 x 9 7 5 -6 ∧ / -6 x - x -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x 8 T 6 T x x copy x < x 8 2 x greedy? x / -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 7 ∧ x x 3 -1 -10 x 5 be T -6 x 2 x x copy 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * x T pop x copy 3 x -1 T F 3 * swap eql 7 be x -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x F -7 copy 5 F x < 9 x -1 F F 1 -1 F x x be x + -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x T x be * * x ∨ copy x inc x T T x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "- F x ungreedy / -3 6 ungreedy 0 x T x -5 T > F dec 4 be x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x < 9 x -1 eql F 1 -1 F eql x x x x -10 inc -5 * 9 * dec 5 *"
# 1658: "F ≥ pop ∨ ∨ T - 3 T depth 5 x x F 2 -10 pop 1 x 2 F -10 inc -5 * 9 * dec 5 *"
# 1658: "x T x 4 copy 8 -9 + x neg if x x < T -9 2 x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy swap x ∨ 5 x 9 x -1 x -1 * F x F T greedy? ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 2 5 -5 x -1 < 1 7 inc T x * inc x x x F + / -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ -3 2 -1 ∧ F F - 9 -7 - F x ≥ 8 5 T x x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "x swap T F greedy? eql 7 -6 x x neg 3 5 ≥ T * x F swap 9 -10 F inc -5 * 9 * dec 5 *"
# 1658: "eql copy -6 x T x x 5 T F 3 + inc x > x T x swap x T -10 inc -5 * 9 * dec 5 *"
# 1658: "copy 7 x 0 x 1 -1 ungreedy 0 depth T x -5 3 > F dec 4 be x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x depth ∧ swap eql 7 -6 -8 x neg copy copy x x -3 pop 2 x copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 * 4 + -6 x T inc be F be x eql -3 F F x ∧ eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "x F inc -10 x swap neg -7 * T x depth F 1 -2 be greedy -1 be 3 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 x x * < greedy eql -1 x x x x 5 x ≤ > > T -9 -5 * 9 * dec 5 *"
# 1658: "9 swap x ungreedy F x x x T F neg depth -9 eql ¬ x / ¬ x ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 x -3 x depth ungreedy F x x ∨ x inc x ¬ < x if x F 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + greedy? < 0 eql 7 -6 -8 x x x F 1 x 8 x x be x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * ≥ greedy? copy 7 x F x T copy swap T x < F + -2 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x inc * if 5 F x < 9 x -1 pop F 1 -1 F x x be 4 + -10 inc -5 * 9 * dec 5 *"
# 1658: "9 swap x ungreedy 4 x x x T inc neg depth -9 eql ¬ greedy? F x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy < 6 greedy swap - x 7 copy inc 9 ∨ depth x x T copy x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc / x ∧ 4 x -5 x T -10 neg depth x T ¬ greedy? -6 x greedy? x -7 -10 -9 -5 * 9 * dec 5 *"
# 1658: "dec x greedy swap x -9 5 x 9 copy -1 x -1 F F x - -9 neg ¬ x -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy 7 x 0 x 1 -1 ungreedy 0 x T x -5 T > F dec 4 be x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 pop * 4 -6 -6 T T x be F -1 x 0 > x T ∨ F / 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 pop T x 3 x be * * x ∨ copy x eql ¬ ≥ x x swap 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "T 2 x -3 6 x -3 T copy inc x -4 -1 x x T copy x dec F x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 -9 dec < -6 inc -7 neg 9 -6 greedy? ≥ x swap dec F F x -3 / -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 greedy if inc -3 2 T 7 neg copy swap eql ¬ x F greedy? greedy? ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "F -1 7 copy T x x x x 9 -3 F x neg 5 T x F ¬ 4 neg -6 -9 -5 * 9 * dec 5 *"
# 1658: "-2 inc -7 + / F x -7 1 7 if x ungreedy x x T F -5 -2 4 x -10 -9 -5 * 9 * dec 5 *"
# 1658: "dec x F swap x -9 5 x 9 copy T ungreedy -1 F F x - -9 neg ¬ x -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy < -1 greedy swap - x 7 3 inc 7 ∨ x < T -9 2 x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ + T F greedy? T ¬ ¬ -8 3 F ¬ x 0 > depth eql x T -5 x -10 inc -5 * 9 * dec 5 *"
# 1658: "6 x x if -10 inc ungreedy x T ¬ T copy -8 T ungreedy ungreedy > 2 swap -9 pop -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x x -7 - 7 * 7 > pop -2 -5 x eql 8 -6 < - -3 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x ∨ F -10 x greedy F ungreedy if x F x ¬ 8 x dec < x -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 pop < 4 x * be 9 F - F x ≥ neg -2 T 4 x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 x dec inc x 0 1 7 inc x x * inc 4 x x F + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 if x copy x x greedy be swap T 9 -1 x -6 x -5 5 x 8 > -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x F 9 -8 + depth x x -8 3 dec greedy? x -1 x 8 x -2 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ 4 T copy swap x F ungreedy x > neg 0 swap x ¬ < pop 2 2 F copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc dec -4 8 1 / -5 0 -6 / + x x F T x x 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 x x neg greedy? ≤ x x F x T * 5 8 x greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "7 copy -6 x T x x x F x copy F x < ungreedy 8 F x greedy? x if -10 inc -5 * 9 * dec 5 *"
# 1658: "copy 1 T + < T 1 / -5 0 -6 / + -5 x F T x x 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x + -9 -10 x + F 2 if -2 F x ¬ 8 x -2 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ + T F greedy? T - ¬ -8 3 dec greedy? x -1 x 8 x -2 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 7 be T x x * < greedy eql -1 x x x inc 5 9 ≤ > > greedy? -9 -5 * 9 * dec 5 *"
# 1658: "greedy? inc 7 x -5 x x * greedy? greedy 9 -1 x -6 x inc 5 x ≤ > -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 if 3 3 + 5 T 1 3 F inc 6 3 neg x -5 ungreedy 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "x - inc neg -4 8 1 / -5 F -6 -3 + x x F T x x 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "7 copy -6 x 3 x x 5 T F 3 + inc copy > x F depth 4 4 / -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x x -3 x inc x * T * -5 x x 9 * -10 8 x greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "x < -4 x -8 F inc -10 * x T -8 x -7 5 T F -5 -2 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "F > -5 x depth x inc - x 3 F greedy? x -1 x 8 x F < x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec -8 ≥ T -3 T ungreedy F swap inc x -4 depth x x T copy x x F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ T 2 -3 x inc x T ¬ T x 1 x ¬ 3 pop / swap be copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * < -7 copy 7 x 8 x T copy T T / < F -5 -2 4 greedy? -10 -9 -5 * 9 * dec 5 *"
# 1658: "≥ swap T -4 + be / / x x 3 neg copy 6 0 * x -1 x / x -10 inc -5 * 9 * dec 5 *"
# 1658: "- -2 x -3 / -3 6 ungreedy 0 x ≥ x -5 x x x 5 x x 4 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ eql * * < be x x / 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "copy x x + < -10 x x F F -6 -3 + x x F + x x F F -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc dec -4 8 1 / -5 0 T T + x x ≥ T x x 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "5 < -6 F 3 x 6 * copy x ∨ copy x eql ¬ ≥ x x swap 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc T be be x T -3 T x x copy x 3 T 1 be x > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 x T x x x + be F be x 0 > -10 be > greedy if ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 x -5 x x x copy be T x x eql x be greedy -1 be 3 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 F -7 copy 6 F x ∧ 9 x if x x F x 8 2 x greedy? x / -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x 2 -3 x inc 9 * T * -5 x x 9 be eql x x 4 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x copy -6 - < x ∧ be copy if x 9 x ≤ -6 7 + pop -1 4 pop -10 inc -5 * 9 * dec 5 *"
# 1658: "6 -4 greedy? x -9 T ≤ depth x T x < be x eql F if x dec T 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc x copy -5 -3 x F T -6 neg copy x x - F x eql T -5 be -10 inc -5 * 9 * dec 5 *"
# 24514: "x < 6 4 5 x -3 x x -1 x 3 F 1 x inc ¬ eql x -2 -10 -6 inc -5 * 8 * inc depth *"
# 41552: "+ + greedy? < 0 eql 7 -6 -8 x x x F 1 x 8 x x be / 9 5 x + depth * 6 + ∨ +"
# 41582: "T x x * inc x F x F -8 F x x x copy * x F x -10 x inc 5 -8 x x / * -9 *"
# 42917: "x 6 -1 neg T x x > + be F / x 0 > ∧ be > greedy be x -10 inc -5 * 9 2 dec 5 *"
11441,43148,78
11442,43022,69
11443,43085,73
11444,43022,69
11445,43022,74
11446,1658,78
11447,5117,81
11448,1658,73
11449,42917,93
11450,21000000,109
11451,43022,83
11452,42182,92
11453,1658,76
11454,41552,72
11455,1658,79
11456,1658,89
11457,1658,92
11458,1658,93
11459,43127,87
11460,1658,77
11461,1658,83
11462,51632,83
11463,47852,80
11464,53497,80
11465,47327,83
11466,45479,88
11467,1658,82
11468,76412,79
11469,1658,81
11470,43148,97
11471,38402,76
11472,1658,71
11473,1658,87
11474,43127,74
11475,43190,83
11476,42917,82
11477,1658,74
11478,1663,83
11479,1658,75
11480,1663,74
11481,23377,75
11482,44723,82
11483,38402,86
11484,4157,77
11485,55878,83
11486,64301,86
11487,39277,92
11488,37794,89
11489,109277,74
11490,42917,83
11491,43022,80
11492,1658,80
11493,47852,85
11494,47852,76
11495,43022,73
11496,1658,83
11497,23023,92
11498,43022,74
11499,52577,77
11500,43022,84
11501,1658,85
11502,16513,77
11503,43022,80
11504,32249,90
11505,26054,76
11506,53497,89
11507,42182,75
11508,1658,85
11509,51506,79
11510,47852,79
11511,43127,82
11512,4157,86
11513,1658,86
11514,1658,72
11515,52577,83
11516,24227,77
11517,1658,81
11518,20293,93
11519,42182,74
11520,1658,74
11521,1658,93
11522,38402,74
11523,42917,72
11524,42182,79
11525,1658,89
11526,1658,91
11527,42917,95
11528,20293,92
11529,76202,76
11530,1658,86
11531,41867,91
11532,43232,79
11533,43652,75
11534,43022,76
11535,43118,88
11536,43127,85
11537,13475,82
11538,42917,73
11539,42182,90
11540,49017,86
11541,55878,79
11542,1658,74
11543,21000000,79
11544,1658,94
11545,43532,75
11546,41867,82
11547,1658,83
11548,21000000,76
11549,1658,71
11550,46907,81
11551,1658,76
11552,43442,82
11553,42077,91
11554,43022,69
11555,1658,76
11556,42812,73
11557,1658,72
11558,1658,97
11559,1658,82
11560,1658,80
11561,42917,83
11562,7630,82
11563,1658,79
11564,33677,76
11565,38402,72
11566,110894,84
11567,1658,81
11568,3932,82
11569,42602,94
11570,43003,75
11571,1658,89
11572,104385,74
11573,43127,75
11574,43127,81
11575,1658,84
11576,43022,81
11577,43652,81
11578,43127,79
11579,43022,69
11580,1658,78
11581,85652,96
11582,5327,79
11583,43127,91
11584,43022,74
11585,4157,95
11586,53497,72
11587,47852,88
11588,43022,71
11589,42917,71
11590,42854,91
11591,1658,87
11592,42833,87
11593,52577,86
11594,43022,82
11595,4157,72
11596,21000000,80
11597,43106,85
11598,9254,85
11599,2534,78
11600,27924,88
11601,39347,103
11602,43085,77
11603,43022,68
11604,77777,80
11605,43337,81
11606,1663,89
11607,47852,76
11608,43127,78
11609,1658,80
11610,43127,72
11611,21000000,93
11612,43022,74
11613,1658,73
11614,1658,73
11615,42980,86
11616,43022,90
11617,162197,95
11618,55531,97
11619,51632,75
11620,1658,95
11621,42791,90
11622,110894,80
11623,1663,90
11624,13552,88
11625,1658,79
11626,42917,82
11627,44072,81
11628,46907,97
11629,1658,84
11630,53497,80
11631,119378,83
11632,1658,86
11633,43022,71
11634,1658,87
11635,1658,95
11636,43127,83
11637,43732,82
11638,1658,82
11639,43817,84
11640,1658,74
11641,34622,78
11642,85232,88
11643,43022,80
11644,1658,71
11645,1658,76
11646,1658,83
11647,43022,74
11648,1658,77
11649,37457,77
11650,43127,79
11651,1658,91
11652,1658,72
11653,43022,70
11654,26054,96
11655,1658,74
11656,1658,85
11657,1658,89
11658,43547,76
11659,1658,87
11660,42077,102
11661,43022,75
11662,53497,90
11663,5327,76
11664,68474,88
11665,27949,73
11666,37457,79
11667,42182,74
11668,1658,70
11669,1658,68
11670,24311,78
11671,42749,79
11672,55878,88
11673,43022,74
11674,92775,80
11675,85127,76
11676,49666,87
11677,51632,72
11678,1658,72
11679,1658,82
11680,44072,76
11681,42770,92
11682,55608,82
11683,1658,88
11684,42938,77
11685,55878,85
11686,1658,74
11687,4157,80
11688,42854,87
11689,16072,89
11690,1658,78
11691,52577,93
11692,1658,91
11693,102746,74
11694,46658,79
11695,1658,84
11696,53497,87
11697,1658,77
11698,1658,80
11699,36512,86
11700,13916,90
11701,42077,99
11702,43127,89
11703,1658,77
11704,53627,92
11705,43022,80
11706,43232,96
11707,42686,74
11708,21000000,89
11709,1658,79
11710,43022,80
11711,1658,80
11712,43127,86
11713,52577,80
11714,1658,88
11715,1658,69
11716,43022,75
11717,52577,82
11718,1658,93
11719,1658,79
11720,55878,85
11721,7630,93
11722,53669,96
11723,19502,71
11724,1658,72
11725,45232,69
11726,47852,77
11727,43022,78
11728,1658,86
11729,1658,86
11730,47852,70
11731,43022,83
11732,43127,73
11733,43022,94
11734,1658,91
11735,42917,98
11736,43127,81
11737,119672,82
11738,28952,83
11739,42392,84
11740,27949,80
11741,43022,88
11742,42098,74
11743,1658,82
11744,1658,82
11745,76202,77
11746,1658,81
11747,43085,87
11748,1658,75
11749,1658,88
11750,1658,74
11751,85652,84
11752,1658,73
11753,43022,90
11754,1658,79
11755,44072,78
11756,47852,70
11757,9086,70
11758,41321,90
11759,44378,80
11760,43022,85
11761,1658,84
11762,1658,78
11763,38402,71
11764,93436,78
11765,19502,93
11766,43022,79
11767,53497,82
11768,1658,75
11769,5327,91
11770,1658,76
11771,42917,82
11772,11851,98
11773,42602,69
11774,41923,85
11775,43127,69
11776,43127,80
11777,53497,76
11778,43817,94
11779,53497,81
11780,5033,103
11781,43022,85
11782,44072,77
11783,55878,85
11784,1658,87
11785,1658,79
11786,43022,76
11787,46438,79
11788,52577,78
11789,1658,79
11790,1658,83
11791,36512,76
11792,1658,83
11793,51632,74
11794,1658,81
11795,43127,88
11796,4157,74
11797,1658,84
11798,28784,80
11799,43022,78
11800,1658,82
11801,42077,72
11802,1658,80
11803,42497,91
11804,90377,81
11805,43022,74
11806,16072,86
11807,42917,84
11808,1658,72
11809,85652,76
11810,1658,76
11811,43022,77
11812,43127,82
11813,42182,87
11814,1672,76
11815,66752,82
11816,43022,78
11817,43022,76
11818,1658,80
11819,77500,78
11820,1658,74
11821,53497,88
11822,43022,85
11823,1658,84
11824,43127,74
11825,43022,91
11826,47852,77
11827,1658,75
11828,1658,90
11829,43817,77
11830,52577,70
11831,1658,76
11832,39277,74
11833,1658,83
11834,1658,81
11835,1658,76
11836,6758,88
11837,22127,84
11838,4157,77
11839,80927,79
11840,1658,74
11841,43118,83
11842,43127,92
11843,24227,82
11844,43127,80
11845,1658,76
# After 5800 updates
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if x F x -6 -3 x eql T T < T x - T 8 x F swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1658: "x x -5 swap x - ≤ 8 -5 if copy F depth x x T dec x dec F -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc x dec * ¬ x be / * x x copy x F x 8 2 x greedy? x / -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≥ 7 x T x x x + be F be x ∨ > -10 be > greedy if x -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec 7 copy -5 -9 x * < greedy eql dec x x x 8 x -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 7 ∧ x x 3 -1 -10 x 5 be T -6 x 2 x x copy 4 -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x - x neg -4 8 1 / -5 F x inc copy x x F T 3 < x -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 F dec if inc -3 x x 7 x copy greedy? eql 0 * x -1 x / F -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 greedy if inc -3 x x 7 neg copy greedy? eql 0 * x -1 x / F -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x depth ∨ F -10 x greedy ∨ -5 if x + -7 x swap T x be 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -5 swap x - ≤ 7 -5 if copy F depth x T inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 dec * ¬ x 4 / * x x copy x -7 x -5 5 T 3 > -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x T 9 x dec 5 x + x 3 neg pop 6 be x F greedy? greedy? ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x T x T x be * * x ∨ copy F inc x T T x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ eql * * < be x x / 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "copy x depth ∨ F -10 x greedy F ungreedy if x copy x ¬ ¬ x dec x 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy ∨ * if 5 F x < ≥ x 8 pop F 1 -5 F x < x greedy? x -10 inc -5 * 9 * dec 5 *"
# 1658: "copy 1 T + < T 1 / -5 0 -6 / + -5 x F T x x 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 2 > - x T x be F -1 x 0 > x T ∨ F ¬ 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 x x neg greedy? ≤ x x F x T depth x 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x T swap x ∨ 5 x x x 3 neg * 6 0 * x -1 x / F -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc T 4 T F x < 9 eql -1 pop F T -1 inc 4 7 be x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x - x * / -3 6 ungreedy 0 x x x T T F 6 dec T x 2 F -10 inc -5 * 9 * dec 5 *"
# 1658: "x T x 4 copy 8 -9 + x -2 if x x copy > x F depth 4 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc dec -4 8 1 x F x copy x x < ungreedy ≥ F x greedy? x if -10 inc -5 * 9 * dec 5 *"
# 1658: "5 < -6 F 3 x 6 * copy x ∨ copy x eql ¬ ≥ x x swap 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x F swap x -9 5 x 9 copy T ungreedy -1 F F x - -9 neg ¬ x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec copy F swap x -9 5 x 9 copy T ungreedy -1 F F x > -9 neg ¬ x -10 inc -5 * 9 * dec 5 *"
# 1658: "x F inc 2 x swap neg -7 * -6 neg ≥ -2 x x F x eql * -5 greedy -10 inc -5 * 9 * dec 5 *"
# 1658: "9 9 x ungreedy 4 x x x T inc neg depth -9 ¬ x greedy? F x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x < -4 x -8 F inc -10 * x T -8 x -7 5 T F -5 -2 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "x - inc neg -4 8 1 / -5 F x -3 + x x F T 3 < x -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "F ≥ pop ∨ ∨ T - 3 T depth 5 x x F 2 -10 pop 1 x 2 F -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * ≥ greedy? copy 7 x F x T greedy? swap T x -8 F + 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "eql ∨ 7 copy -5 x x greedy greedy? x x x F x T * 5 8 ∨ greedy? + -10 inc -5 * 9 * dec 5 *"
# 1658: "9 x T copy x -2 be 9 * x depth x x T ¬ greedy? -6 x greedy? x -7 -10 -9 -5 * 9 * dec 5 *"
# 1658: "F > -5 x depth x inc - x 3 F greedy? x -1 x 8 x F < x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x x * inc x F x 0 x x x > T > x dec 4 be x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "3 -10 ∨ T x 8 T 6 T x x copy x < x 8 2 x greedy? x / -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 pop < 4 x x be 9 F - F -4 ≥ neg F T 4 x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? 8 x -3 x depth ungreedy F x x ∨ x inc x ¬ < x if x F 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "* F -7 + copy swap copy -1 * T x ∧ F ¬ -2 T greedy x T 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 x dec inc x 0 1 T inc x x * inc 4 x -7 -6 + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F -1 7 copy T x x x x 9 -3 F x neg 5 T x F ¬ 4 neg -6 -9 -5 * 9 * dec 5 *"
# 1658: "-2 x 5 - 0 depth 1 - T T 1 2 x x x F T 3 < eql -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "T F -7 copy 5 F x < 9 pop -1 / F 1 -1 F x x be x + -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? inc 7 x -5 x x * greedy? greedy 9 -1 x -6 x inc 5 x ≤ > -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x be 9 * x ∨ copy x F swap T F 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "eql copy -6 x T x x x T F 3 + x x > x T x swap -5 T -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ∨ x x swap eql 7 -6 -8 x neg copy greedy ∨ x -3 pop + x copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "- F x ungreedy / -3 6 ungreedy 0 x T x -5 T > F dec 4 be x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 pop < 4 x x be x -1 eql x 1 -1 x eql x x x x -10 inc -5 * 9 * dec 5 *"
# 1658: "-10 swap greedy swap 4 x x x T x 4 6 -1 T x < -5 2 swap -10 ungreedy T inc -5 * 9 * dec 5 *"
# 1658: "- -2 ¬ -3 / -3 6 < 0 eql -1 pop F T -1 inc 4 7 be x x -10 inc -5 * 9 * dec 5 *"
# 1658: "be x depth ∧ neg - 7 ∨ 7 > 0 -2 -5 x x 7 -6 < - -3 copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x * / -3 6 ungreedy 0 x x x -5 T > 2 dec 4 F > > / -9 -5 * 9 * dec 5 *"
# 1658: "/ swap T -4 x be / / x -2 if x x copy > x F depth 4 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "9 swap ≤ ungreedy F x x x T F neg depth -9 eql ¬ x / ¬ F ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "7 inc x copy < x 6 ungreedy x x x x -5 T F x 9 x F swap 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x greedy swap x -9 5 9 x x ∨ F x x swap T F 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "3 eql x 0 x 1 -1 ungreedy depth depth T x -5 swap > F dec 4 be x F -10 inc -5 * 9 * dec 5 *"
# 1658: "T inc * < -4 if 1 / -5 F x T x x x F T 3 < x -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "4 inc * x F 1 inc -7 neg 9 -6 T F 3 * swap 5 9 4 > > be -9 -5 * 9 * dec 5 *"
# 1658: "x x 8 greedy if inc 6 x x 7 neg copy x -6 > 2 dec 4 F > > / -9 -5 * 9 * dec 5 *"
# 1658: "-2 inc T be be x T -3 T x x copy x 3 T 1 be x > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy < -1 greedy swap x x T 3 inc 7 ∨ x < T -9 2 x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x + -9 -10 x + F 2 if -2 F x ¬ 8 x -2 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "T inc * < -4 if 1 dec dec F x T x -1 x ¬ x -2 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "4 inc 7 3 greedy? copy 7 x F x T -10 swap T x -8 F + 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x < 9 x -1 eql x 1 x F eql 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "* x x if inc x copy -6 3 inc 7 -5 x < T -9 2 x greedy? F F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 9 x + if depth x x T be -8 2 -10 x T inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "7 copy -6 x T x x x F x copy F x < ungreedy 8 F x greedy? x if -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc T be -2 x -1 -3 T x x 5 x x x 8 x -2 ≤ x > -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x + < -10 x x F F -6 -3 + x x F + x x F F -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec 7 copy -5 dec x * < x eql dec x x x 8 x -2 ¬ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "9 x 4 copy ¬ x neg T x > ∧ -2 -5 x 8 -8 9 x -3 4 F -10 inc -5 * 9 * dec 5 *"
# 1658: "x T x 4 copy 8 -9 + x neg if x x < T -9 2 x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x F -7 copy depth ∨ x < 9 x -1 ∨ F neg -1 F x x be x + -10 inc -5 * 9 * dec 5 *"
# 1658: "T 2 x -3 6 x -3 T 7 inc x ∧ -1 x x T copy x dec / 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x -7 greedy? 4 + inc x 5 x x T 3 F ≥ T * x F swap 9 -10 F inc -5 * 9 * dec 5 *"
# 1658: "T 6 -1 x T 2 x > + F F / x 0 > ∧ be > greedy be x -10 inc -5 * 9 * dec 5 *"
# 1658: "-3 x x x x 2 / / inc inc + -9 x * F 8 x F < x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "6 x x if -10 inc ungreedy x T ¬ T copy -8 T ungreedy ungreedy > 2 swap -9 pop -10 inc -5 * 9 * dec 5 *"
# 1658: "* F -7 + copy swap copy -7 * T x ∧ F 1 -2 greedy? greedy x T x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x -3 x x x x x / -5 0 -6 / + x x F T x x * F -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 -9 - < x x copy ≤ inc + -9 x * F 8 x F < x 7 eql -9 -5 * 9 * dec 5 *"
# 1658: "x swap T F greedy? eql 7 -6 inc be 4 be x eql -3 F F ∧ x eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ¬ * 4 T F x < 9 -9 T x 1 -8 ¬ swap pop 6 swap be depth -10 inc -5 * 9 * dec 5 *"
# 6758: "4 ≥ 7 x T x ungreedy x + be F be 5 ∨ > -10 be > greedy if x -10 inc -5 * 9 * inc depth *"
# 43022: "x x x x x x / 1 inc inc + -9 x * x dec dec / 5 1 * - x -4 / x x x x x"
11846,43043,67
11847,43106,69
11848,43127,74
11849,43022,70
11850,43022,71
11851,109277,91
11852,1658,82
11853,1658,77
11854,42707,83
11855,1658,93
11856,1658,75
11857,11851,82
11858,43127,79
11859,43127,77
11860,1658,75
11861,43127,76
11862,1658,87
11863,28330,83
11864,38852,74
11865,1658,91
11866,77147,78
11867,1658,92
11868,1658,76
11869,43022,68
11870,43106,81
11871,43022,70
11872,100541,97
11873,47852,75
11874,42182,80
11875,22610,95
11876,38654,78
11877,1658,76
11878,34517,78
11879,43022,72
11880,1658,76
11881,42917,92
11882,1658,79
11883,1658,70
11884,43127,74
11885,43817,84
11886,1658,74
11887,33677,79
11888,43127,78
11889,43022,88
11890,34643,72
11891,66752,78
11892,1658,86
11893,43022,77
11894,20174,93
11895,42077,73
11896,62377,74
11897,1658,70
11898,51632,86
11899,1658,91
11900,10052,71
11901,47852,92
11902,42812,75
11903,102032,93
11904,42077,80
11905,1658,78
11906,119672,73
11907,43817,81
11908,49574,75
11909,42938,76
11910,42077,85
11911,42938,78
11912,1658,83
11913,43022,82
11914,1658,77
11915,1658,94
11916,42182,84
11917,1658,85
11918,1658,82
11919,43022,72
11920,43127,80
11921,1658,80
11922,43127,82
11923,1658,83
11924,27986,78
11925,43022,71
11926,43022,74
11927,42875,92
11928,43127,79
11929,43127,73
11930,43127,76
11931,33418,73
11932,47852,91
11933,223808,83
11934,28952,81
11935,47852,78
11936,60137,74
11937,43022,83
11938,43022,71
11939,55878,79
11940,53497,80
11941,1658,77
11942,43127,83
11943,19502,88
11944,43127,80
11945,1658,73
11946,43022,67
11947,1658,71
11948,43022,87
11949,1658,74
11950,1658,78
11951,51632,82
11952,32984,102
11953,42707,71
11954,43463,76
11955,68474,82
11956,21000000,88
11957,42077,93
11958,1658,71
11959,45101,84
11960,43127,87
11961,44390,75
11962,43022,82
11963,1663,71
11964,53497,80
11965,43127,81
11966,33677,85
11967,41237,76
11968,1658,72
11969,43652,73
11970,55878,81
11971,42707,72
11972,4157,73
11973,43022,71
11974,7588,79
11975,84812,82
11976,42182,77
11977,4157,87
11978,43148,90
11979,1658,100
11980,19502,73
11981,1658,77
11982,1658,90
11983,44770,93
11984,43022,77
11985,21000000,83
11986,76342,81
11987,43022,71
11988,1658,77
11989,1663,88
11990,58934,84
11991,10052,75
11992,4157,79
11993,43022,81
11994,1658,83
11995,1658,81
11996,1658,90
11997,43022,73
11998,1658,79
11999,43127,84
12000,72107,85
12001,9107,76
12002,24850,81
12003,43127,84
12004,1658,81
12005,1658,80
12006,42896,86
12007,26054,75
12008,42959,90
12009,1658,79
12010,42182,79
12011,21000000,91
12012,20293,91
12013,1658,75
12014,1658,88
12015,7630,84
12016,1658,76
12017,1658,76
12018,1658,85
12019,42917,87
12020,43022,80
12021,34433,85
12022,1658,81
12023,42812,81
12024,70252,84
12025,43127,90
12026,1658,87
12027,42182,87
12028,42182,80
12029,4157,76
12030,62377,83
12031,42938,80
12032,46424,84
12033,1658,77
12034,42812,79
12035,43127,76
12036,1658,88
12037,119756,81
12038,22127,83
12039,21000000,80
12040,7630,85
12041,85652,71
12042,128072,77
12043,1658,92
12044,43127,75
12045,21000000,69
12046,1658,78
12047,1658,74
12048,38402,75
12049,43127,91
12050,42972,74
12051,43022,76
12052,40754,82
12053,1658,84
12054,1658,92
12055,1658,86
12056,47852,81
12057,1658,76
12058,55878,84
12059,43817,87
12060,43547,86
12061,43022,84
12062,1658,80
12063,77672,76
12064,1658,83
12065,42182,84
12066,1663,73
12067,68474,80
12068,47747,70
12069,1658,89
12070,1658,79
12071,111167,70
12072,43127,78
12073,1658,79
12074,1658,71
12075,1658,88
12076,38402,84
12077,42917,81
12078,42917,88
12079,42917,95
12080,43190,87
12081,1658,91
12082,1658,75
12083,52850,89
12084,9254,86
12085,49292,85
12086,42077,86
12087,43817,77
12088,1658,78
12089,47852,80
12090,17696,90
12091,16408,76
12092,43127,88
12093,91427,92
12094,1663,70
12095,1658,82
12096,1658,84
12097,1658,98
12098,26222,72
12099,1658,79
12100,47852,76
12101,43127,85
12102,33677,81
12103,10052,78
12104,1658,76
12105,1658,92
12106,1663,87
12107,42917,76
12108,43022,74
12109,1658,81
12110,34559,79
12111,8848,83
12112,34538,82
12113,39347,79
12114,1658,80
12115,21000000,76
12116,30674,86
12117,1658,78
12118,21000000,77
12119,39347,81
12120,1663,79
12121,42854,87
12122,33334,69
12123,19502,86
12124,52850,87
12125,5327,85
12126,42980,83
12127,1663,71
12128,43127,77
12129,40565,92
12130,1658,83
12131,42959,81
12132,43694,90
12133,19502,73
12134,43022,88
12135,143884,83
12136,21000000,82
12137,42917,77
12138,41923,79
12139,1658,78
12140,1658,82
12141,55968,81
12142,39482,84
12143,1658,73
12144,37457,88
12145,43652,80
12146,102662,82
12147,4157,71
12148,47852,83
12149,1658,97
12150,42077,72
12151,42182,91
12152,1658,90
12153,53497,95
12154,1658,78
12155,1658,86
12156,1658,79
12157,1658,79
12158,1663,70
12159,43022,74
12160,1658,83
12161,43757,79
12162,1658,87
12163,41762,101
12164,1658,81
12165,1658,79
12166,1658,81
12167,43022,86
12168,199871,81
12169,43022,72
12170,66752,80
12171,43127,80
12172,1658,88
12173,1658,76
12174,21000000,77
12175,40502,82
12176,76958,83
12177,47852,70
12178,53497,84
12179,43127,78
12180,1658,90
12181,42917,80
12182,56357,88
12183,1658,69
12184,42602,85
12185,42917,78
12186,14777,87
12187,42560,77
12188,43022,78
12189,36512,74
12190,53442,87
12191,1658,88
12192,119672,83
12193,4157,77
12194,47642,104
12195,33677,86
12196,1658,82
12197,43442,75
12198,40922,83
12199,42287,74
12200,56148,87
12201,43022,85
12202,4978,93
12203,47852,97
12204,38402,77
12205,1658,81
12206,43841,78
12207,162197,73
12208,43022,84
12209,1658,79
12210,21000000,75
12211,17696,92
12212,47852,82
12213,33677,77
12214,1658,79
12215,1658,82
12216,37198,100
12217,43022,76
12218,1658,90
12219,8197,88
12220,38790,88
12221,43694,83
12222,20279,74
12223,42833,80
12224,17444,88
12225,76202,79
12226,1730,79
12227,4157,75
12228,43127,92
12229,1658,88
12230,43127,83
12231,1658,81
12232,1658,89
12233,19502,80
12234,70693,90
12235,137627,76
12236,1658,79
12237,1658,83
12238,1658,85
12239,1658,76
12240,21000000,91
12241,1658,81
12242,1658,71
12243,4157,76
12244,49299,90
12245,42077,89
12246,1658,87
12247,22127,83
12248,43022,77
12249,47852,75
12250,47852,79
# After 6000 updates
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if x F x -6 -3 x eql T T < T x - T 8 x F swap -10 - -6 inc -5 * 8 * inc depth *"
# 1658: "x T x neg -4 8 1 / -5 F x inc copy x swap T F 2 ¬ -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x ¬ 2 4 x > x < 9 -9 / x T -8 ¬ swap pop -2 greedy x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -10 ∨ - -10 x greedy T ungreedy T -6 F ¬ T * x F swap -10 -10 F inc -5 * 9 * dec 5 *"
# 1658: "x -7 greedy? 4 + inc x 5 x x T 3 F ≥ T * x F swap 9 -10 F inc -5 * 9 * dec 5 *"
# 1658: "be inc 7 copy -5 x x neg greedy? ≤ x x F x T depth x 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec x copy -5 dec x eql < if copy 8 depth x T inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x T x T x be * * x ∨ copy F inc x T T x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -5 swap x 8 ≤ 7 -5 x eql dec x x x 8 x x ¬ x F -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -5 * ¬ x -7 / * x -10 copy 1 F x + 2 x greedy? x x eql -9 -5 * 9 * dec 5 *"
# 1658: "-2 inc T F 3 + 6 x x -4 neg depth F eql ¬ x / ¬ F ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 dec T pop < x x x be 9 T x -1 T F T T 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy -5 -3 x ∨ T x neg copy be eql ¬ < x -5 < x 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "F -1 7 F greedy? eql 7 -6 inc be 4 be x eql greedy? F x T x eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? inc > T -5 x 9 * > neg if x x < T -9 2 x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x < 9 eql -1 pop F ∨ 4 -3 be > greedy if x -10 inc -5 * 9 * dec 5 *"
# 1658: "x T x 4 copy 8 -9 + x -2 if x x copy > x F depth 4 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec dec be x x -1 -3 T x x 5 x x x F x -2 ≤ x > -10 inc -5 * 9 * dec 5 *"
# 1658: "x < -4 x -8 F inc -10 * x T -8 x -7 5 T F -5 -2 4 T -10 -9 -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x ≤ copy F 3 8 -1 pop x greedy x T T 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "F swap ≤ ungreedy F x 6 ungreedy x x x x ¬ T F x 9 x be swap 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T neg 7 3 greedy? copy 7 x F x T -10 swap T x -8 F + 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x - x * / -3 6 ungreedy 0 x x x T T F 6 dec T x 2 F -10 inc -5 * 9 * dec 5 *"
# 1658: "7 < inc x T x x x F x copy F x < -1 8 F x greedy? x if -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x F swap x x 5 ∧ 9 copy F - F -4 ≥ neg F T depth x neg -10 inc -5 * 9 * dec 5 *"
# 1658: "-3 be x x * dec x eql be if copy 8 depth 0 T 1 be x > + 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T 2 / -3 7 x -3 T * inc x ∧ -1 x x T copy x dec x -10 ungreedy -9 -5 * 9 * dec 5 *"
# 1658: "x F x * / -3 6 ungreedy 0 6 x x -5 -7 ¬ -5 5 T 3 > -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 5 - 0 depth 1 - T T 1 2 x ∧ 8 x + T -3 greedy? 9 -10 inc -5 * T * dec 5 *"
# 1658: "9 9 x ungreedy 4 x x x T inc neg depth -9 ¬ x greedy? F x greedy? x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ eql * * < be x x / 8 -7 + T -3 4 9 -10 inc -5 * T * dec 5 *"
# 1658: "pop dec dec ∧ 6 ∧ be / * x x -9 x F x ≥ 2 x greedy? x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "4 inc F x T x be T * x ∨ copy F inc x T T x swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 greedy if inc -3 x x 7 neg copy greedy? eql 0 * x -1 x / F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ¬ * 4 T F x < 9 -9 T x 1 -8 ¬ swap pop 6 swap be depth -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? x > T -5 x x * greedy? T depth -1 x -6 x inc 5 -10 ¬ * F -10 inc -5 * 9 * dec 5 *"
# 1658: "T inc * < -4 if 1 dec dec F x T x -1 x ¬ x -2 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x x swap x -9 5 9 x x x F x x swap T ∨ 2 swap copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec swap T -9 / x 0 be T 0 neg F F ungreedy - -9 pop swap > -10 inc -5 * 9 * dec 5 *"
# 1658: "eql ∨ x copy -5 x x greedy greedy? x x x F x x * 5 8 ∨ copy + -10 inc -5 * 9 * dec 5 *"
# 1658: "3 - x * x -3 6 ungreedy 0 x x -2 F x ¬ 8 F -2 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? inc > ∧ -5 x x * greedy? greedy 9 -1 x ∨ x inc 5 x x > -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 x dec T x 0 1 F -3 F x neg x T x F ¬ 4 neg -6 -9 -5 * 9 * dec 5 *"
# 1658: "dec swap T -4 x be / / x -2 x x x copy > be F depth 4 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x be 9 copy x -5 copy greedy F -5 T dec 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "T T -2 ∨ x dec 5 < + x x neg 0 6 be x F greedy? greedy? ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc neg -4 < 1 / -5 2 x ∨ + x x F T 3 ≤ T T -10 inc -5 * 9 * dec 5 *"
# 1658: "x depth -5 swap neg 8 ≤ 7 -5 x eql greedy F eql ¬ x greedy? ¬ F ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec 0 T T x ∨ 5 x x x 3 neg * 6 0 * x -1 x / F -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ ∨ x x 4 eql 7 -6 -8 x neg F greedy ∨ x -3 pop + x copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "T x x * inc x F F 0 x ∧ x > F > x dec 4 be x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "x < -4 x -8 if inc -10 * x x -8 x -7 > x F depth 4 4 ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "eql copy -6 x T x x x T F 3 + x x > x T x swap -5 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x F -7 copy depth ∨ x < 9 x -1 ∨ F neg -1 F x x be x + -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc T x ≤ 1 inc -7 neg 9 -6 x F F * swap x T depth x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec 7 copy -5 -9 x * < greedy eql dec x x x 8 x -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "-10 swap greedy swap 4 x x x T x 4 6 -1 T x < -5 2 swap -10 ungreedy T inc -5 * 9 * dec 5 *"
# 1658: "4 inc 7 3 greedy? copy 7 x F x T -10 swap T x -8 F + 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x - inc dec -4 8 1 x F x copy x x < x 3 F x T x if -10 inc -5 * 9 * dec 5 *"
# 1658: "x T > 4 copy 8 -9 + x F 9 -1 F -6 x inc - x ≤ x dec -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc neg -4 8 1 / -5 T x -3 + x x F 8 3 < x 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "T inc * < -4 if 1 -3 -5 F x T x x x F T x swap inc ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "eql x -6 x T x x x T F 3 5 x x T 8 x -6 F x > -10 inc -5 * 9 * dec 5 *"
# 1658: "eql eql x x T x x x T F 3 5 x x T 8 x -6 F x > -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 x dec greedy if inc 6 x x greedy? ∨ copy F inc x T T inc < -7 -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x F inc 2 x swap neg -7 * -6 neg ≥ -2 x x F x eql * -5 greedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 F T 4 T F x < be eql -1 pop F T -1 x x greedy? greedy? ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "9 x -10 copy T x T swap 0 swap T F - F F ungreedy - -9 neg 8 x -10 inc -5 * 9 * dec 5 *"
# 1658: "+ x -10 copy T x pop x x inc inc x x * inc F -1 x ≤ x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x < 9 x -1 eql x 1 x F eql 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x be 9 * x ∨ copy x F swap T F 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 9 x + if depth x x T be -8 2 -10 x T inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x depth ∨ F ungreedy x greedy ∨ -5 if x greedy -7 x swap T x be 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x * -7 -3 6 ungreedy 0 6 -6 x -5 -7 ¬ -5 5 T 5 > -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x + < -10 x x F F -6 -3 + x x F + x x F F -10 inc -5 * 9 * dec 5 *"
# 1658: "- -1 x ungreedy / -3 6 ungreedy 0 -10 T x -5 T > F dec x be x / -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x T x x dec x < 9 x -1 ∨ F neg -1 -6 x x be x F -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 -3 x x ungreedy F / x -3 x inc x ¬ x be x x F 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x be 9 * x -5 copy x F -5 T F 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 7 2 > x x T x be F -1 ¬ 0 > x T ∨ F ¬ 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 x x swap T -9 - x 0 copy T F -1 F F ungreedy - -9 neg ¬ x -10 inc -5 * 9 * dec 5 *"
# 1658: "dec F F x x x x 1 inc inc + -9 x * greedy eql dec / 5 1 F -10 inc -5 * 9 * dec 5 *"
# 1658: "inc x -7 * - F x < 9 pop -1 -4 + 8 x x + x x F T -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * ≥ greedy? copy 7 x F x T greedy? swap T x -8 F + 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "9 x -10 copy T -2 be 9 * x depth x x T 0 greedy? -6 x greedy? / 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "5 x F x -6 -3 6 ungreedy 0 x -8 x -5 T > 2 dec 4 F > x / -9 -5 * 9 * dec 5 *"
# 1658: "x 9 ¬ greedy < x x copy ≤ inc + -9 x * F 8 x x < x 7 eql -9 -5 * 9 * dec 5 *"
# 1658: "copy * x 9 -9 -10 x + F 2 x -2 F x ¬ 8 ≤ ≤ < x copy -10 inc -5 * 9 * dec 5 *"
# 4157: "F + 9 pop ≤ ≤ x x be x -1 eql x 1 -1 x eql x x x x -10 T -5 * 9 * dec 5 *"
# 6758: "4 ≥ 7 x T x ungreedy x + be F be 5 ∨ > -10 be > greedy if x -10 inc -5 * 9 * inc depth *"
# 42560: "x x x x x -7 dec dec x -3 7 -7 -4 x x 8 x 9 x -2 x 6 inc -5 * 9 x inc depth *"
12251,43232,81
12252,43232,69
12253,43232,68
12254,43022,68
12255,43022,67
12256,42392,91
12257,42644,78
12258,93926,76
12259,43232,76
12260,1658,78
12261,43022,80
12262,169498,94
12263,38297,85
12264,47852,82
12265,39347,86
12266,47852,82
12267,53497,85
12268,1658,80
12269,47852,76
12270,1658,80
12271,1658,72
12272,33334,69
12273,42287,77
12274,43001,79
12275,44072,87
12276,42749,81
12277,53497,75
12278,43232,74
12279,1658,89
12280,1658,71
12281,1658,78
12282,43022,68
12283,85442,86
12284,1658,81
12285,1658,83
12286,43022,76
12287,51632,78
12288,77777,80
12289,28378,84
12290,1658,84
12291,151949,95
12292,43652,75
12293,43232,72
12294,1658,84
12295,43022,82
12296,42182,89
12297,43022,78
12298,1658,83
12299,1658,97
12300,15778,89
12301,43001,83
12302,43022,87
12303,1658,80
12304,1658,88
12305,1658,77
12306,1658,75
12307,5327,90
12308,43127,79
12309,1658,68
12310,43148,86
12311,47852,73
12312,1658,88
12313,71477,82
12314,1658,74
12315,42854,86
12316,43022,77
12317,10052,80
12318,1658,87
12319,43127,76
12320,46052,77
12321,1658,77
12322,43022,70
12323,56840,86
12324,57228,92
12325,1658,81
12326,60137,72
12327,55878,99
12328,16072,79
12329,55878,80
12330,43127,81
12331,21000000,83
12332,62426,80
12333,48881,79
12334,4157,77
12335,1658,90
12336,43817,92
12337,33334,99
12338,1658,77
12339,42917,83
12340,1658,89
12341,1658,87
12342,77224,85
12343,22127,102
12344,47852,75
12345,24227,72
12346,55878,76
12347,1658,77
12348,1663,74
12349,1658,79
12350,28952,78
12351,43022,92
12352,43547,73
12353,1658,81
12354,42182,92
12355,43022,79
12356,42917,74
12357,42350,73
12358,43022,69
12359,43022,89
12360,47852,82
12361,47852,83
12362,47852,71
12363,1658,85
12364,1663,88
12365,43817,88
12366,2885,91
12367,24227,90
12368,1658,78
12369,42917,81
12370,36512,73
12371,43547,79
12372,3384514,75
12373,1658,76
12374,1658,71
12375,47968,79
12376,1658,83
12377,43127,79
12378,43148,75
12379,47852,85
12380,1658,70
12381,43022,91
12382,1658,87
12383,66752,80
12384,1658,79
12385,19502,97
12386,1658,77
12387,43127,73
12388,1658,84
12389,47852,73
12390,43232,83
12391,1658,73
12392,7981127,94
12393,1658,87
12394,43862,92
12395,1658,90
12396,1658,78
12397,1663,92
12398,4867798,84
12399,1658,80
12400,43022,72
12401,21000000,77
12402,1658,77
12403,1658,91
12404,66752,100
12405,1658,77
12406,43817,74
12407,43817,86
12408,1658,79
12409,42252,88
12410,44845,74
12411,46907,71
12412,1658,91
12413,43022,79
12414,47852,99
12415,1658,82
12416,403622,74
12417,42686,84
12418,42917,86
12419,47852,76
12420,77567,75
12421,1658,76
12422,1658,86
12423,55878,76
12424,1658,77
12425,1658,76
12426,44072,79
12427,42917,75
12428,119672,73
12429,17612,88
12430,43232,82
12431,35567,82
12432,55878,68
12433,19502,79
12434,1658,83
12435,1658,83
12436,42287,67
12437,43022,89
12438,41237,82
12439,1658,70
12440,19502,77
12441,43022,94
12442,21000000,84
12443,43232,72
12444,43127,75
12445,43127,80
12446,43757,79
12447,42917,79
12448,68537,70
12449,68404,86
12450,1658,94
12451,1658,84
12452,42812,70
12453,43085,75
12454,45542,83
12455,1658,76
12456,42917,85
12457,21000000,74
12458,1658,76
12459,53497,80
12460,21000000,82
12461,1658,75
12462,1658,86
12463,43043,88
12464,42217,86
12465,43085,89
12466,1672,77
12467,3545,94
12468,43169,81
12469,1663,85
12470,37856,88
12471,43127,75
12472,40292,70
12473,43022,84
12474,4920,82
12475,33418,79
12476,43022,68
12477,43127,79
12478,43022,83
12479,1658,82
12480,1658,89
12481,55878,86
12482,43127,79
12483,80927,72
12484,1658,78
12485,1658,81
12486,1658,77
12487,47852,80
12488,43127,79
12489,43127,83
12490,42182,77
12491,1658,77
12492,42287,74
12493,1658,74
12494,4157,73
12495,43337,77
12496,43127,72
12497,75380,78
12498,1757,79
12499,41846,75
12500,41102,79
12501,1658,87
12502,1658,95
12503,101528,83
12504,94157,71
12505,52297,76
12506,1658,79
12507,21000000,79
12508,38402,89
12509,42252,83
12510,24514,79
12511,1658,85
12512,53497,70
12513,47852,78
12514,42917,92
12515,43022,83
12516,71477,79
12517,24227,98
12518,43232,98
12519,47852,73
12520,59928,85
12521,90377,75
12522,40292,75
12523,57614,91
12524,90377,89
12525,42812,91
12526,1658,77
12527,170702,79
12528,43043,84
12529,16072,85
12530,43127,77
12531,39326,79
12532,17710,86
12533,1663,77
12534,1658,81
12535,1658,82
12536,42182,79
12537,42287,74
12538,1652,87
12539,42707,83
12540,1658,86
12541,1658,83
12542,43022,85
12543,48797,73
12544,43127,79
12545,43127,64
12546,42917,89
12547,51737,88
12548,41384,90
12549,21000000,72
12550,43817,79
12551,47852,80
12552,42182,79
12553,85652,69
12554,56013,85
12555,47852,76
12556,55878,87
12557,59928,71
12558,1658,89
12559,53497,81
12560,1658,81
12561,1658,81
12562,42917,81
12563,58660,81
12564,42182,86
12565,42392,78
12566,43127,73
12567,47747,70
12568,1658,82
12569,55923,74
12570,1658,90
12571,1658,83
12572,51490,88
12573,98413,67
12574,43337,83
12575,53263,69
12576,1658,75
12577,42581,83
12578,1658,69
12579,71477,77
12580,33677,82
12581,1658,74
12582,43127,71
12583,57302,80
12584,1658,72
12585,1658,84
12586,42917,82
12587,4157,71
12588,19502,77
12589,43817,69
12590,1658,89
12591,1658,71
12592,1658,75
12593,21000000,78
12594,1658,79
12595,1658,87
12596,1658,79
12597,32788,79
12598,1658,81
12599,42875,72
12600,62377,89
12601,52577,87
12602,29897,76
12603,1658,81
12604,43022,86
12605,1658,80
12606,118727,79
12607,21000000,84
12608,42252,91
12609,43232,82
12610,43127,90
12611,43022,84
12612,1658,79
12613,354977,80
12614,95753,74
12615,43022,72
12616,42686,80
12617,44845,73
12618,44534,80
12619,1658,77
12620,11851,76
12621,47852,81
12622,1663,83
12623,43022,73
12624,43442,105
12625,20279,71
12626,5033,81
12627,38402,80
12628,34538,83
12629,5327,78
12630,17458,81
12631,49574,87
12632,43127,74
12633,1663,90
12634,42980,88
12635,224273,86
12636,1658,80
12637,15925,79
12638,3545,86
12639,43484,78
12640,42077,70
12641,43022,77
12642,43127,83
12643,43022,85
12644,143507,92
12645,52577,75
12646,1658,82
12647,1658,77
12648,1652,88
12649,93926,83
12650,43127,79
12651,52577,75
12652,47852,78
12653,51632,83
12654,53417,97
12655,22127,76
# After 6200 updates
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x < -4 ∧ 0 x be 9 * x ∨ copy depth neg swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 inc F x < 9 eql -1 be F T greedy? F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "if x F x -6 -3 x eql T T < T x - T 8 x F swap -10 - -6 inc -5 * 8 * inc depth *"
# 1658: "+ + greedy? swap x ≤ copy F 3 8 -1 pop x greedy x T T 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x ∨ -7 T -3 6 ungreedy 0 -1 x x T T F x ¬ T x ¬ F -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec swap x 8 ≤ 7 - 6 -6 T -5 T x ≥ 2 inc greedy? x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "T swap ≤ x F x x ungreedy x x x x ¬ T F x 9 x be x > -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x x swap x x 5 F x F ∨ copy F inc x x T x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 T x -4 if 1 -3 -5 F x T T x x F T x swap + ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -5 * ¬ x -7 / * x depth copy 1 x x + x x greedy? x x eql -9 -5 * 9 * dec 5 *"
# 1658: "T x x copy -5 dec x eql < if copy 8 depth x inc inc copy x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x F 9 eql -1 pop x T 0 T T 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x F x -6 -3 x eql ∨ T if x ¬ x x swap T x be F greedy? -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x * / -3 6 ungreedy 0 6 x x -5 -7 ¬ -5 5 T 3 > -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x T > 4 copy 8 -9 + x F 9 -1 F -6 x inc - x ≤ x dec -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 x x swap T -9 - x 0 greedy? T -2 x 1 3 F eql 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "T inc * < -4 if 1 dec dec F x T x -1 x ¬ x -2 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "3 - x x x -3 6 ungreedy 0 T x -2 F neg -1 ∧ x 5 be x F -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ dec T -4 9 be x / x -2 x x x -6 be ∧ F depth 4 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 neg 6 -3 x x -6 8 F 2 x -2 -1 x x -6 copy x dec x -7 x -9 -5 * 9 * dec 5 *"
# 1658: "x - inc dec -4 8 0 x -9 x copy -1 x > x inc 5 -10 ¬ * F -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy ≥ dec ∧ ¬ -10 be 9 copy x -5 copy greedy x -5 T dec 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ∧ dec ∧ ¬ x ungreedy 9 * x -5 copy x F -5 T F 2 swap -10 x pop inc -5 * 9 * dec 5 *"
# 1658: "x - x * / 8 x x F x T -10 swap T x -8 F x 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x x 7 3 greedy copy 7 - F x T -10 swap T x -8 F + 6 -3 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "copy x x + x + 6 x x -4 * depth F eql ¬ x / ¬ F ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ¬ * 4 0 F x T 9 -9 T depth F eql ¬ x / x F ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ inc > T -5 x 9 * x -4 * depth F greedy ¬ x / ¬ F ∨ F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy -6 T if x x 5 T x ∧ x > F > -1 dec 4 be x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "5 ∨ swap x 4 eql x x 2 ∨ - eql -7 x x x -7 6 x x -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "eql copy -6 > T x x x ungreedy F 3 + x x > x T -1 swap -5 T -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ 6 * be / * x x -9 be -7 neg -5 5 F 5 > -9 -10 inc pop * 9 * dec 5 *"
# 1658: "-2 x 5 - 0 depth x - T F x inc copy * swap T F x ¬ -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 x eql 3 x x greedy F 3 - F ¬ < * -7 -5 -5 T if -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ -9 * * < be x x / 8 -7 + x -3 4 -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? x > T -5 x x * greedy? T depth -1 x -6 x T 5 -10 ¬ T F -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc ungreedy / -3 6 ungreedy 0 x inc x -5 T > T dec x be x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ -4 be be * x -5 copy x F < T F 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 x dec T x 0 1 F -3 F x neg x T x F ¬ 4 neg -6 -9 -5 * 9 * dec 5 *"
# 1658: "eql ∨ x copy -5 x x greedy greedy? x x x F x x * 5 8 ∨ copy + -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≤ -5 dec x -10 x 8 F 2 x -2 -1 x x -6 copy x 8 ∧ -7 ungreedy -9 -5 * 9 * dec 5 *"
# 1658: "≤ x T x T x be * * x ∨ copy F inc x T T x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 neg F T x 0 -9 F x T x F x T x -6 -10 ≥ F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 inc 7 copy ungreedy x x ∨ T x 1 copy be < ¬ < x x -9 swap x -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ∧ x be x x -1 -3 T x x x x x x -10 x -2 ≤ x > -10 inc -5 * 9 * dec 5 *"
# 1658: "if x 1 x -6 -3 x ungreedy ∨ -5 if T ¬ x x swap T x F ¬ if -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 7 2 > x x T x be F -1 ¬ 0 > x T ∨ F ¬ 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x ungreedy inc neg -4 x 1 / -5 2 x ∨ + x x F T 3 ≤ T F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x T T x ∨ x < 9 eql -1 pop F ∨ 4 -3 be > 7 if dec -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -5 swap swap -9 / x 0 be T F neg F F ungreedy x -9 pop swap > -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 -3 x x x x if F 3 5 F ¬ T * -7 F x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x be 9 * x ∨ copy x F swap T F 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "depth x 5 - 0 ¬ -9 * * < be x x / x -7 T -2 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x F -7 ∧ 6 ∧ be eql * x x -9 -7 F x ≥ 2 x greedy? x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "if x F x -6 -3 x eql ∨ -5 if x ¬ x x swap T x be 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "eql x T x x if 1 -3 F F x T T x x be T x swap + ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 9 x + x depth * x T be -8 2 -10 x T inc x x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "-10 swap swap if T x be * F greedy 9 ¬ -10 ∨ x -7 5 x T > x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -5 swap x 8 ≤ 7 -5 x eql dec x x x 8 x x ¬ x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x / -6 x + 9 -2 x - 0 -2 / -9 x - - 8 x be swap 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "x -1 x neg -4 8 1 / * T x -3 + x x F 8 3 < T 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ x -6 > 9 x T x ungreedy F 3 + x x > x T -1 swap -5 T -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec 7 copy -5 -7 7 swap -8 x neg F greedy ∨ x -3 / + x copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x F 9 greedy if inc -3 x x 7 neg F greedy? eql 0 * x -1 x / F -10 inc -5 * 9 * dec 5 *"
# 1658: "x T x 4 copy 8 -9 + x -2 if x x copy > x F depth 4 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc T x ≤ 1 inc -7 neg 9 -6 x F F * swap x T depth x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "inc -1 dec ∧ - -10 x greedy T ungreedy T -6 F ¬ T 7 x F swap -10 greedy? F inc -5 * 9 * dec 5 *"
# 1658: "-7 F T 4 T F x < be eql -1 pop F T -1 x x greedy? greedy? ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "copy * x x F x F ungreedy x x x x ¬ T F x 9 x ∧ x > -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x < 9 x -1 eql x 1 x F eql 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "7 -1 dec x - -1 x greedy T ungreedy T -6 F ¬ T 7 x F ¬ -10 greedy? F inc -5 * 9 * dec 5 *"
# 1658: "-2 x T F 3 + 6 x x greedy? ∨ copy x inc x T T x < -7 -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc pop ∨ 4 x swap x 1 x 4 x -1 T x < -5 2 swap -10 ∨ T inc -5 * 9 * dec 5 *"
# 1658: "depth x 5 - 0 2 -9 be * < be x x / x -7 T 8 > greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "x -7 greedy? 4 + inc 6 5 x x T 3 F ≥ x * x copy swap 9 -10 F inc -5 * 9 * dec 5 *"
# 1658: "copy * x 9 -9 5 T x + be F be 5 ∨ > dec T x 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x depth -5 swap neg 8 ≤ 4 -5 x copy -1 x > x inc 5 -10 swap * 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x 0 9 x if x x x x swap T ∨ T swap copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "if ∨ x x 4 eql x x < greedy eql dec dec x x F F -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "T swap ≤ x F x x ungreedy x x x x ¬ x F x 9 -6 -5 4 neg x -9 -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F 5 x ≥ x 3 neg * 6 7 * x -1 T / F -10 inc -5 * 9 * dec 5 *"
# 1658: "x T x neg -4 8 1 / -5 T -3 2 x T 8 x + T -3 greedy? 9 -10 inc -5 * T * dec 5 *"
# 1658: "-3 be x greedy * dec x eql be if copy 8 depth 0 4 6 be x dec T F -10 inc -5 * 9 * dec 5 *"
# 1658: "4 inc depth x T x be T * swap ∨ copy F inc x T T x swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 ¬ greedy < x x copy ≤ inc + -9 x * F 8 x x < x 7 eql -9 -5 * 9 * dec 5 *"
# 1658: "x greedy? inc dec -4 8 0 T x x copy -1 x > x inc 5 -10 ¬ x neg -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 9 eql if inc 6 ungreedy x 6 x x ¬ T F x 9 x be swap 7 -10 inc -5 * 9 * dec 5 *"
# 4157: "x T x neg -4 8 x / F T -3 2 x T 8 x swap T x x x -10 T -5 * 9 * dec 5 *"
# 35567: "dec dec x x inc dec inc inc x -9 x -3 5 7 -6 4 if -5 * x ≤ inc 0 inc * 9 * dec 5 *"
# 42350: "T x x 6 inc x F F 0 x ∧ x > F > x dec 9 x -2 x 6 inc -5 * 9 1 inc depth *"
# 43022: "-9 x -5 swap x 8 ≤ 7 -5 x eql / x x x 8 x x - x x + / * 4 x 5 -8 x x"
12656,43022,78
12657,42980,68
12658,43022,71
12659,43169,70
12660,43106,73
12661,1658,78
12662,1658,74
12663,56357,79
12664,43106,70
12665,43022,69
12666,42791,89
12667,50393,92
12668,42917,90
12669,43169,73
12670,47852,71
12671,42917,75
12672,53497,88
12673,43127,85
12674,224210,86
12675,90377,89
12676,60295,81
12677,1658,83
12678,90377,87
12679,1658,75
12680,43106,79
12681,42938,84
12682,1658,81
12683,1658,81
12684,47852,76
12685,60206,79
12686,42917,79
12687,42665,84
12688,43022,72
12689,1658,82
12690,28007,69
12691,52577,77
12692,43022,75
12693,37016,100
12694,43127,93
12695,40124,85
12696,1658,70
12697,42518,78
12698,144431,75
12699,1658,80
12700,1658,70
12701,42182,77
12702,43022,87
12703,43232,80
12704,7588,87
12705,43085,90
12706,1658,86
12707,1658,76
12708,43072,68
12709,56252,91
12710,1658,77
12711,43022,88
12712,85652,82
12713,42980,70
12714,1658,81
12715,43127,80
12716,1658,77
12717,1658,90
12718,1652,91
12719,38402,85
12720,43001,67
12721,1658,75
12722,1658,78
12723,77672,75
12724,1658,80
12725,43127,72
12726,9254,82
12727,43022,77
12728,41132,78
12729,42602,81
12730,1658,75
12731,53497,91
12732,47852,86
12733,42518,87
12734,43817,80
12735,34622,77
12736,33677,76
12737,1663,88
12738,43022,92
12739,21000000,74
12740,55727,84
12741,42917,76
12742,42182,75
12743,43022,81
12744,47852,83
12745,1658,76
12746,53497,81
12747,42770,88
12748,43022,68
12749,1658,71
12750,1658,75
12751,47852,89
12752,43127,73
12753,42182,83
12754,43022,78
12755,71477,89
12756,43817,78
12757,1658,78
12758,1658,79
12759,4157,81
12760,43127,89
12761,1658,77
12762,1658,88
12763,43022,72
12764,43022,84
12765,1658,90
12766,85652,82
12767,80927,80
12768,254653,76
12769,40292,89
12770,68474,83
12771,24178,81
12772,47852,90
12773,42252,81
12774,62027,74
12775,43967,78
12776,85652,71
12777,7630,100
12778,44072,98
12779,19502,81
12780,59910,79
12781,1658,87
12782,43526,95
12783,42648,74
12784,1658,84
12785,80927,79
12786,1658,74
12787,42602,81
12788,1663,79
12789,53497,76
12790,42917,79
12791,43337,85
12792,1658,80
12793,1652,93
12794,42707,80
12795,7630,91
12796,43085,88
12797,43022,82
12798,1658,77
12799,38402,94
12800,71477,86
12801,42980,84
12802,34622,87
12803,42686,79
12804,43022,72
12805,43127,82
12806,1658,74
12807,47950,93
12808,85547,82
12809,1658,85
12810,43127,84
12811,1658,77
12812,43127,81
12813,1658,83
12814,42833,87
12815,43127,78
12816,1663,95
12817,1658,73
12818,43127,79
12819,1658,80
12820,4157,79
12821,1658,76
12822,43022,65
12823,24227,75
12824,4157,89
12825,1658,73
12826,42602,77
12827,43127,78
12828,21000000,75
12829,1658,82
12830,1658,75
12831,42182,80
12832,1658,75
12833,43817,86
12834,43127,79
12835,1658,87
12836,43022,75
12837,1658,100
12838,42182,88
12839,1658,78
12840,1658,71
12841,1658,77
12842,59928,85
12843,43127,77
12844,42959,80
12845,1658,77
12846,21000000,89
12847,1658,78
12848,42917,85
12849,43127,76
12850,1658,76
12851,59990,90
12852,43862,89
12853,43127,78
12854,42182,83
12855,1658,82
12856,43127,83
12857,43442,70
12858,88487,73
12859,43127,77
12860,14777,92
12861,1663,75
12862,43817,73
12863,4157,75
12864,43127,77
12865,1658,78
12866,1658,79
12867,52577,80
12868,1658,82
12869,1663,84
12870,53497,73
12871,42917,82
12872,1658,83
12873,54610,83
12874,17717,84
12875,36037,84
12876,19502,85
12877,43652,74
12878,43127,74
12879,52577,82
12880,4157,69
12881,1658,73
12882,43001,74
12883,91427,95
12884,46907,74
12885,1658,78
12886,1658,79
12887,49668,74
12888,43442,76
12889,9254,84
12890,43022,80
12891,42182,86
12892,47852,68
12893,1658,70
12894,34517,74
12895,46977,86
12896,1658,80
12897,43127,81
12898,1658,80
12899,59928,83
12900,42917,75
12901,44072,88
12902,38906,90
12903,109277,75
12904,42182,79
12905,1652,81
12906,42833,78
12907,73654,87
12908,42854,74
12909,4252,79
12910,43022,76
12911,43022,78
12912,43232,85
12913,47852,83
12914,26054,77
12915,1658,76
12916,43841,97
12917,1658,78
12918,39172,77
12919,55878,81
12920,42476,80
12921,43337,84
12922,4157,76
12923,36470,89
12924,1658,80
12925,1658,74
12926,21000000,74
12927,42497,80
12928,45857,92
12929,43127,73
12930,43169,92
12931,1658,82
12932,43127,86
12933,13615,75
12934,1658,92
12935,1658,86
12936,21000000,73
12937,44378,75
12938,14777,79
12939,1658,78
12940,1658,88
12941,37345,89
12942,1658,93
12943,1658,85
12944,10052,82
12945,53497,77
12946,43127,81
12947,38402,86
12948,62377,79
12949,44072,90
12950,62027,79
12951,47852,79
12952,123158,84
12953,4157,76
12954,119672,74
12955,42812,96
12956,57237,83
12957,1658,92
12958,42791,88
12959,34622,76
12960,33593,85
12961,43967,84
12962,1658,77
12963,1658,72
12964,42791,89
12965,43127,70
12966,33712,85
12967,1658,71
12968,42182,91
12969,1658,78
12970,43022,78
12971,47852,84
12972,4157,73
12973,43022,74
12974,42077,73
12975,35378,76
12976,1658,85
12977,43127,86
12978,42707,75
12979,1658,79
12980,42938,83
12981,1658,71
12982,1658,81
12983,1658,77
12984,16072,79
12985,1658,90
12986,42182,94
12987,1658,81
12988,43022,79
12989,47852,72
12990,43022,71
12991,43022,78
12992,1663,73
12993,55968,79
12994,13475,82
12995,1658,75
12996,71099,71
12997,43022,76
12998,47852,76
12999,4157,85
13000,1658,81
13001,43022,75
13002,1658,83
13003,44072,83
13004,1663,74
13005,32900,87
13006,95312,100
13007,42182,84
13008,43127,74
13009,59572,82
13010,85652,75
13011,1658,89
13012,1658,79
13013,43127,90
13014,37870,98
13015,43022,72
13016,55878,77
13017,43022,73
13018,43127,76
13019,33677,80
13020,21000000,84
13021,42959,78
13022,1658,74
13023,1658,76
13024,30548,77
13025,90377,76
13026,1658,72
13027,1658,78
13028,43022,77
13029,42875,77
13030,169498,93
13031,1658,88
13032,41342,76
13033,1658,75
13034,42182,83
13035,1658,79
13036,1658,91
13037,1658,82
13038,43022,74
13039,1658,79
13040,44198,79
13041,43022,69
13042,1658,91
13043,43022,78
13044,34538,75
13045,43022,82
13046,42182,84
13047,55878,86
13048,1658,77
13049,1658,74
13050,42686,91
13051,1658,82
13052,1658,77
13053,68348,77
13054,77500,86
13055,1658,86
13056,1658,74
13057,174533,83
13058,1658,79
13059,43337,82
13060,42917,85
# After 6400 updates
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 inc F x < 9 eql -1 be F T greedy? F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x < -4 ∧ 0 x be 9 * x ∨ copy depth neg swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1658: "-10 swap swap if T x be * F greedy 9 ¬ -10 ∨ x -7 5 x T > x -10 inc -5 * 9 * dec 5 *"
# 1658: "T x T T F ∨ x ∨ 9 eql copy pop F ∨ 4 x be > 7 if x -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy -6 T if x x 5 T x ∧ x > F > -1 dec be greedy? greedy -2 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x 0 9 x if x x x x swap T ∨ -8 ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 neg 6 -3 4 eql F swap 2 ∨ - eql x x x x -7 6 x x F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x ∨ -7 T -3 ungreedy ungreedy -7 -1 x -2 T T F x ¬ T x ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x > x swap neg 8 ≤ 4 -5 x ∨ x - pop x F x x greedy? x x eql -9 -5 * 9 * dec 5 *"
# 1658: "6 ≥ dec T x copy 7 - F x x x x T x -8 F + 6 -3 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "-8 ¬ * 4 0 F x T 9 -9 T depth F x ∧ ∨ copy 8 greedy -10 ∨ F inc -5 * 9 * dec 5 *"
# 1658: "5 ∨ x x 4 eql x x 2 ∨ - eql x x x x -7 6 x x -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x T * ¬ x -7 / * x depth copy 1 x x + swap x -10 + ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "T inc * < -4 if 1 dec dec F x T x -1 inc F x -2 4 x > -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ -9 * * 6 be x T x x F + x swap + ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "dec dec x x inc dec inc inc x F x -3 5 7 -6 4 if -5 x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy ≥ dec ∧ ¬ -10 be 9 copy x -5 copy greedy x -5 T dec 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x - be dec -4 8 0 x -9 x copy -1 x > x inc 5 T ¬ depth F -10 inc -5 * 9 * dec 5 *"
# 1658: "T x x copy -5 dec x eql < if depth 8 * x inc inc copy x dec x F -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 x T -4 9 be x / x -2 x dec ¬ T ∨ x T x be x if -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 F T 4 T F x < be eql -1 pop F T -1 x x greedy? greedy? ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x dec swap swap -9 / x 0 be neg 8 copy F F ungreedy x -9 pop 7 > -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 dec dec ∧ 6 x 9 * x ≤ * depth swap greedy 4 x x -5 -5 T if -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy -6 T if x x 5 T x ∧ x > F > -1 dec 4 be x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "if ∨ x x 4 eql x x < greedy eql dec dec x x F F -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x * / if 6 ungreedy x 6 x x -5 -7 ¬ -5 > T 3 > F -10 inc -5 * 9 * dec 5 *"
# 1658: "eql x T x x if 1 -3 F F x T T x x be T x swap + ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? x > T -5 x x * greedy? T depth -1 x -6 x T 5 -10 ¬ T F -10 inc -5 * 9 * dec 5 *"
# 1658: "F x -6 > 9 x T x ungreedy F x -3 + x ∨ F 8 3 < T 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x be > 4 copy 8 -9 + x F 9 neg F -6 x inc - x ≤ x dec -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 6 x eql 3 -4 x - F x x x -6 be F F depth 4 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x 3 x be * * x -8 copy x inc x T T 2 swap x F -10 inc -5 * 9 * dec 5 *"
# 1658: "eql copy -6 > T * x x ungreedy F T depth F eql ¬ x / x F ≥ -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc ungreedy / -3 6 ungreedy 0 x inc x -5 T > T dec x be x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x F 9 eql -1 pop x T 0 T T 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "T 0 7 x x T x be 1 x x x -5 x x * copy 8 ∨ -10 ∨ F inc -5 * 9 * dec 5 *"
# 1658: "-6 x 6 -3 x x x x if ≤ 3 5 F 0 T * -7 F x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc -7 4 T F ≤ 4 9 eql -1 pop F T -1 F 4 7 be / F -10 inc -5 * 9 * dec 5 *"
# 1658: "if ≤ F x ¬ -4 be be x < -5 copy x F < T F 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 neg F T x 0 -9 F x T 2 F x -8 x -6 -10 ≥ if -10 inc -5 * 9 * dec 5 *"
# 1658: "copy * x 9 -9 5 T x + be F be 5 ∨ > dec T x 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x 0 9 x if x x x x swap T ∨ T swap copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x swap x -8 ≤ x x F x greedy? dec neg x T x -3 / x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x 3 x be * * pop greedy? copy F inc x T T x swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ -6 -3 x be ∨ -5 x x ¬ x ∧ swap T x be 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T pop ungreedy ungreedy 0 -1 x -2 greedy F F x T ∨ F -5 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x x - 0 F pop - T F x inc copy * x -7 1 8 swap be x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x F 9 -9 5 T < + be x be 5 ∨ > dec T x 4 x F -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -5 * ¬ x -7 -7 * x T -10 -5 T x -8 F x 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x x -5 swap swap -7 7 swap -8 T neg F greedy ∨ x -3 T + x x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc 7 copy T -3 -5 ungreedy -7 -1 x greedy? T F F x ¬ T x ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T -3 ungreedy ungreedy 0 -1 x -2 T F F x ¬ ¬ x ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 x -5 swap x ∧ x * 8 x be x - pop x F x x greedy? x x eql -9 -5 * 9 * dec 5 *"
# 1658: "inc x dec ∧ ¬ x 0 -1 -7 if x 9 x x 4 T ∨ -8 ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x x * x if x ungreedy x 6 x x -5 -7 ¬ -5 > T 3 > F -10 inc -5 * 9 * dec 5 *"
# 1658: "8 x 8 x 0 2 -9 be * x be x x -1 inc F x -2 -3 x > -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 eql ≥ - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 -9 -5 * 9 * dec 5 *"
# 1658: "-1 x x swap 0 ¬ -9 * copy 6 be depth T x -9 F + x swap + ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x be 9 * x ∨ x x F ≤ T -5 2 swap ∨ F -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 1 x -6 -3 x ungreedy ∨ -5 if T ¬ x x swap x x F -4 if -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x 0 9 x -6 x x x x swap x ∨ -8 < -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec 7 copy -5 -7 7 swap -8 x neg F greedy ∨ x -3 / + x copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "T dec 7 -4 + -7 7 + x -2 if T x copy > x F depth 4 -4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ¬ * 4 0 F x T 9 -9 if + x x > x 5 -1 swap -5 T -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec pop ∧ T x -3 T x x T pop ≥ x T * x F T -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x < 9 x -1 eql x 1 x F eql 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -5 swap x 8 ≤ 7 -5 x eql dec x x x 8 x x ¬ x F -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x ≤ copy F 3 8 -1 pop x greedy x T T 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 1 T F 3 x be * * x ∨ copy x pop x T T x < -7 -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "-10 x -6 -2 9 T 1 -3 F x x x 5 T F x 9 x ∧ x > -10 inc -5 * 9 * dec 5 *"
# 1658: "swap / -6 x + 9 -2 x - 0 -2 / -9 x - > 8 x be swap F -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 neg F x x -7 -9 F x T x 4 x F 1 8 > x T -10 inc -5 * 9 * dec 5 *"
# 1658: "copy -2 x x F x F T -5 F ¬ T / ∨ 0 -7 -9 x depth x -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "swap / -6 x + 9 -2 F F 0 -2 / -9 x - > 8 x be swap F -10 inc -5 * 9 * dec 5 *"
# 1658: "depth x 5 - 0 ¬ -9 * * < be x x / x -7 T -2 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc > T -5 x 9 * x be * depth F greedy ¬ x / ¬ F -10 -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "8 swap x x F x x ungreedy x x x x ¬ x F x 9 -6 -5 x neg x -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc * -8 T x x < 9 greedy -1 pop F T -1 F 4 7 be x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "7 -1 dec > - -1 x greedy T ¬ T -6 F be x 7 neg F ¬ copy F -10 inc -5 * 9 * dec 5 *"
# 1658: "x - * 3 dec -6 -8 x / 9 x T -5 T dec ∨ 2 inc greedy? x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "5 ∨ swap x 4 eql x x 2 ∨ - eql -7 x x x -7 6 x x -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc -1 T -4 9 be x / -9 -2 x x x -6 be ∧ F depth 4 4 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc ∧ x be x x -1 -3 T x x x x x x -10 x -2 ≤ x > -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 3 x < F x T -10 swap T inc -8 F + 6 -6 -9 T if -5 * 9 * dec 5 *"
# 1658: "inc -1 dec ∧ - -10 x greedy T ungreedy T -6 F ¬ T 7 x F swap -10 greedy? F inc -5 * 9 * dec 5 *"
# 4157: "x T x neg -4 8 x / F T -3 2 x T 8 x swap T x x x -10 T -5 * 9 * dec 5 *"
# 42077: "-6 neg 6 -3 x x -6 8 F 2 if -9 x F -9 9 < 4 - 5 -10 / copy -5 * 9 ∨ F 5 *"
# 42350: "T x x 6 inc x F F 0 x ∧ x > F > x dec 9 x -2 x 6 inc -5 * 9 1 inc depth *"
13061,43001,74
13062,42875,70
13063,43001,68
13064,43022,72
13065,43022,66
13066,1658,86
13067,1658,79
13068,42917,77
13069,43127,79
13070,198833,75
13071,16072,79
13072,14777,78
13073,8848,81
13074,53497,92
13075,1658,72
13076,43127,93
13077,43022,83
13078,42308,89
13079,11851,84
13080,1658,94
13081,47852,77
13082,127652,77
13083,1658,79
13084,21000000,85
13085,42287,85
13086,1658,87
13087,7630,89
13088,1658,74
13089,49743,87
13090,19502,87
13091,42917,80
13092,48755,91
13093,5327,80
13094,1658,76
13095,44030,82
13096,76202,92
13097,1658,87
13098,1658,77
13099,7630,80
13100,5327,79
13101,43022,72
13102,1658,103
13103,49742,95
13104,1658,85
13105,43001,72
13106,42917,81
13107,1658,82
13108,43817,75
13109,43022,72
13110,1658,94
13111,43022,76
13112,43106,89
13113,1658,79
13114,43022,83
13115,24514,80
13116,7630,86
13117,43022,72
13118,26138,81
13119,43022,100
13120,118433,81
13121,42917,84
13122,47852,92
13123,43817,92
13124,43967,80
13125,52346,81
13126,1658,88
13127,34559,87
13128,1658,70
13129,60137,77
13130,182186,88
13131,42917,70
13132,5033,81
13133,1658,81
13134,37457,78
13135,1658,81
13136,1663,76
13137,34622,74
13138,1658,82
13139,1658,68
13140,1663,75
13141,4157,85
13142,43127,104
13143,43022,70
13144,52577,90
13145,62027,93
13146,1658,88
13147,42938,93
13148,42833,93
13149,1672,87
13150,24227,73
13151,43211,79
13152,1658,81
13153,62003,91
13154,43127,73
13155,43547,70
13156,1658,73
13157,43043,80
13158,43022,79
13159,42707,77
13160,53497,65
13161,221102,81
13162,4157,93
13163,4157,88
13164,1658,78
13165,43232,96
13166,95312,102
13167,102410,78
13168,43127,74
13169,38801,92
13170,43022,91
13171,46907,79
13172,35567,79
13173,16408,67
13174,1658,83
13175,43022,86
13176,43190,86
13177,19502,75
13178,42854,84
13179,1658,93
13180,4157,89
13181,42896,73
13182,3545,85
13183,43127,85
13184,53497,82
13185,3358,81
13186,127862,73
13187,43022,87
13188,42875,71
13189,43127,72
13190,1658,86
13191,1658,79
13192,42791,87
13193,42875,74
13194,43127,78
13195,40376,80
13196,1658,94
13197,1658,82
13198,42980,87
13199,42917,87
13200,1658,75
13201,8848,82
13202,43127,82
13203,43022,93
13204,43817,75
13205,4157,90
13206,43127,86
13207,1658,95
13208,48797,82
13209,1658,95
13210,43127,77
13211,42497,77
13212,43817,95
13213,1658,91
13214,22127,77
13215,43022,77
13216,17710,88
13217,9254,79
13218,43127,82
13219,44072,100
13220,3545,90
13221,1658,84
13222,43778,92
13223,42917,84
13224,43127,85
13225,76202,76
13226,43022,71
13227,1658,81
13228,43817,92
13229,102662,76
13230,1658,87
13231,28952,90
13232,62377,79
13233,4157,92
13234,33418,73
13235,1658,89
13236,80738,85
13237,56357,78
13238,43127,78
13239,43022,85
13240,42252,77
13241,42770,99
13242,42833,76
13243,53755,88
13244,1658,79
13245,42917,88
13246,46907,82
13247,1658,90
13248,1658,79
13249,1658,78
13250,1658,86
13251,43127,89
13252,43127,95
13253,1658,70
13254,1658,85
13255,43022,71
13256,43001,86
13257,43127,78
13258,59910,85
13259,1652,103
13260,14777,77
13261,1663,72
13262,38402,95
13263,1658,89
13264,43022,85
13265,55878,78
13266,42182,74
13267,39242,76
13268,1658,80
13269,42392,93
13270,1658,84
13271,1658,77
13272,49299,86
13273,1658,83
13274,42917,83
13275,1658,90
13276,1652,78
13277,42077,70
13278,13475,79
13279,47852,71
13280,36092,74
13281,43001,73
13282,1658,75
13283,90377,80
13284,1658,81
13285,66752,71
13286,41762,96
13287,1658,71
13288,17710,82
13289,1658,75
13290,1658,91
13291,21000000,79
13292,1658,89
13293,34496,83
13294,32312,99
13295,43817,75
13296,57588,94
13297,1658,74
13298,1658,88
13299,21000000,86
13300,33418,79
13301,43127,73
13302,9086,82
13303,44072,94
13304,1658,76
13305,1658,96
13306,55307,85
13307,19502,81
13308,90377,90
13309,42707,89
13310,51632,94
13311,1658,82
13312,34622,70
13313,43001,67
13314,94157,76
13315,1658,76
13316,14777,87
13317,43127,78
13318,21000000,85
13319,42938,88
13320,43127,87
13321,42707,77
13322,34622,82
13323,47852,70
13324,55878,68
13325,1658,89
13326,40376,78
13327,71477,84
13328,51490,84
13329,55155,79
13330,40754,101
13331,55878,89
13332,90377,77
13333,1658,96
13334,43127,84
13335,1658,81
13336,40292,82
13337,1658,80
13338,42252,73
13339,121457,102
13340,42791,83
13341,47852,88
13342,1658,79
13343,1658,93
13344,76202,77
13345,43211,76
13346,1658,93
13347,43022,78
13348,47852,89
13349,1658,78
13350,1658,80
13351,68642,76
13352,1658,80
13353,1658,86
13354,1658,82
13355,181622,86
13356,5327,94
13357,1658,85
13358,43022,77
13359,7630,100
13360,43127,89
13361,88991,94
13362,43022,73
13363,1658,86
13364,1658,77
13365,1658,74
13366,47852,94
13367,9107,91
13368,53497,84
13369,43127,74
13370,50687,85
13371,78008,83
13372,66752,79
13373,10052,75
13374,1658,77
13375,42938,82
13376,45038,85
13377,9254,83
13378,42252,70
13379,128177,82
13380,1658,85
13381,43127,74
13382,42182,77
13383,90377,81
13384,55878,98
13385,37457,77
13386,56319,81
13387,46907,73
13388,34622,65
13389,46907,89
13390,43127,76
13391,43127,82
13392,1658,95
13393,66752,82
13394,53497,73
13395,42252,82
13396,43127,91
13397,1658,77
13398,1658,85
13399,43817,83
13400,42917,84
13401,5033,82
13402,1658,78
13403,43043,83
13404,50687,71
13405,1658,70
13406,60108,75
13407,43547,82
13408,27949,80
13409,1658,75
13410,43127,86
13411,53497,75
13412,1658,72
13413,47852,75
13414,44665,89
13415,11851,82
13416,43022,82
13417,42095,85
13418,1658,79
13419,11851,86
13420,42812,76
13421,1658,88
13422,43127,84
13423,41923,82
13424,1658,81
13425,1658,76
13426,43022,77
13427,43652,90
13428,1658,83
13429,1658,94
13430,43022,90
13431,1658,75
13432,53497,81
13433,1658,85
13434,1658,77
13435,13475,98
13436,28735,78
13437,28511,77
13438,4157,75
13439,1658,77
13440,43127,73
13441,42182,81
13442,43022,86
13443,94157,67
13444,4157,83
13445,1658,76
13446,43001,97
13447,47852,77
13448,21000000,77
13449,57408,83
13450,43022,76
13451,41237,97
13452,49323,80
13453,1658,69
13454,1658,79
13455,42917,95
13456,55878,80
13457,42455,80
13458,16366,75
13459,43757,79
13460,7630,98
13461,1658,95
13462,9086,84
13463,39914,73
13464,1658,85
13465,42980,69
# After 6600 updates
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x F x * / if 6 T x x x x -5 -7 ¬ -5 > T swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 inc F x < 9 eql -1 be F T greedy? F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1658: "-7 * / x + -8 greedy * x F x greedy? dec neg x F pop 4 x x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "inc x dec pop ¬ x -10 greedy -7 greedy x 9 -9 - T be x -5 x -4 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if inc F x < 9 x -1 eql x 1 F F eql 8 x T ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "greedy 4 -6 T if ungreedy x greedy T ungreedy T -6 F ¬ greedy 5 x F swap -10 T -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x < 9 x -1 eql x 1 x F eql 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc F 4 T F x < 9 -4 -1 ≥ -5 neg ¬ -5 > -2 3 > F -10 inc -5 * 9 * dec 5 *"
# 1658: "inc x dec ∧ ¬ x 0 -1 -7 if x 9 x x 4 T ∨ -8 ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "dec dec x x inc dec inc inc x F x F 5 7 x 4 if -5 x inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x x * * x x pop x 6 - ungreedy -5 neg ¬ -5 T depth 3 > F -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 6 x x 3 depth be * be depth copy dec ungreedy T * -7 F x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc pop swap -5 8 > T -5 x ∨ x - pop x F x T ¬ x x eql -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 inc F 8 < 9 eql -1 be F x x F -5 x ¬ F -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 x 1 x -6 -3 x ungreedy ∨ -5 if T ¬ x x swap x x F -4 if -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? x > T -5 x x x greedy? T depth x T x ∧ swap T x be copy T -10 inc -5 * 9 * dec 5 *"
# 1658: "x -6 be dec -4 8 0 x -9 x F -1 x > x x 5 T greedy? F F -10 inc -5 * 9 * dec 5 *"
# 1658: "< * / x + -8 greedy 9 T -6 x - x x swap x ∨ -8 < -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc ungreedy / -3 6 ungreedy 0 x inc x -5 T > T dec x be x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc inc inc ungreedy / -3 6 ungreedy 0 x inc x -5 T > T greedy x * x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x -6 -2 9 T x -10 F 9 x x 5 x F x 9 x ∧ T > -10 inc -5 * 9 * dec 5 *"
# 1658: "5 neg neg -3 4 eql F swap 2 ∨ - eql x x x x x 6 x ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 + -9 < * 6 x if T x x F x - pop 7 depth -10 inc -5 * 9 * dec 5 *"
# 1658: "if ∨ x x 4 eql x x < greedy eql dec dec x x F F -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc -7 4 T F ≤ 4 9 eql -1 pop F T -1 F 4 7 be / F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy be T ∧ ¬ x 0 9 x if x x x x * greedy ungreedy x - 7 > -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -5 * ¬ x -7 -7 * x T -10 -5 T x -8 F x 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x x ungreedy T -5 ∨ x ∨ 9 eql copy pop F ∨ 4 x be > 7 if x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x swap x -8 ≤ x x F x greedy? dec neg x T x -3 / x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "-6 eql ∧ - be 7 x 5 T ≤ 3 greedy? dec neg x F > x 5 x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "-1 x x swap 0 ¬ -9 * copy 6 be depth T x -9 F + x swap + ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "copy * x 9 -9 5 T neg + be F be 5 ∨ -9 x T x 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ¬ * 4 0 F x T 9 -9 T depth F x ∧ ∨ copy 8 greedy -10 ∨ F inc -5 * 9 * dec 5 *"
# 1658: "x inc x 4 5 F x F 9 eql -1 pop x T 0 x T 2 5 -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec 7 copy -5 -7 7 swap -8 x neg F greedy ∨ x -3 / + x copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 6 x eql 3 depth eql * be depth copy dec ungreedy x F > 4 5 x -9 x -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc -7 4 T ungreedy x greedy T ungreedy T x F T dec -8 F + x -3 -9 F T -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T -3 ungreedy ungreedy 0 -1 x -2 T F F x ¬ ¬ x ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy 4 T x x if 1 -3 greedy? F x T * x -1 F 4 T be x 8 -10 -9 -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x 3 x x * * x ∨ copy x greedy 4 > x -5 -5 T if -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x ∨ -7 x -3 ungreedy ungreedy F x 6 ∨ swap T depth -8 F 3 -10 -6 -9 T if -5 * 9 * dec 5 *"
# 1658: "x * x x -4 8 x / F T greedy? ¬ -10 ∨ x -7 5 eql T > x -10 inc -5 * 9 * dec 5 *"
# 1658: "x < 5 x neg 3 -4 x - 7 x x x -6 3 * x F swap pop -10 -6 -9 -5 * 9 * dec 5 *"
# 1658: "x x -5 swap x 8 ≤ 7 -5 x eql dec x x x 8 x x ¬ x F -10 inc -5 * 9 * dec 5 *"
# 1658: "dec dec x x inc dec inc inc x F x -3 5 7 -6 4 if -5 x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "x 2 x greedy? * if x ungreedy x 6 x x ∨ neg F -5 > T x > F -10 inc -5 * 9 * dec 5 *"
# 1658: "depth x 5 - 0 ¬ -9 * * < be x x / ungreedy x 9 -6 -5 x neg x -9 -5 * 9 * dec 5 *"
# 1658: "T x x T -5 dec x eql < T depth 8 * x inc inc copy x be swap F -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x swap F -8 ≤ x x F depth -1 depth -6 x T 5 -10 ¬ T F -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 9 inc 5 T x T be x be 5 -3 copy dec T x 4 x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x < x -8 ≤ -7 x F x greedy? dec neg x T x -3 greedy? x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "if x pop ∨ greedy? ≥ swap 7 1 x be x -1 T depth F 8 3 < T 3 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ -9 * * 6 be x T x x F + x swap + ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec neg ∧ T x copy T x x T pop ≥ x T * x F T -10 4 -10 inc -5 * 9 * dec 5 *"
# 1658: "8 x 8 x 0 2 -9 be * x be x x -1 inc F x -2 -3 x > -10 inc -5 * 9 * dec 5 *"
# 1658: "4 eql ≥ - be 7 x 5 T ≤ x F inc 6 3 F x x greedy? x x eql -9 -5 * 9 * dec 5 *"
# 1658: "x - inc x < 0 be x * pop greedy? copy F ≥ x T T x swap -4 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc 7 copy F -3 -5 ungreedy -7 -1 x greedy? T inc F x ¬ T x pop -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x greedy > 4 copy 8 -9 -8 x F 9 neg F -6 x inc - x ≤ T F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy be dec ∧ ¬ x 0 9 x if x x x x * T -5 2 swap ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x -9 5 T 9 + x > be 5 ∨ -9 x T x F x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc pop swap -5 8 > 4 -5 x ∨ x - pop x F x x greedy? x x eql -9 -5 * 9 * dec 5 *"
# 1658: "inc ≥ dec ∧ ¬ x 0 - x if be x T x x F + x swap + F -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 3 0 < F x T -10 T T inc -8 F + T -6 -9 T if -5 * 9 * dec 5 *"
# 1658: "x x F 9 inc 6 T x + -9 x be 5 ∨ -6 dec T x 4 x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x - ¬ x < > x greedy T ungreedy T -6 F ≥ greedy 7 x F swap -10 T -10 inc -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T x ungreedy -1 0 -1 x -2 T F F x T -1 x -10 if -10 inc -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T pop ungreedy ungreedy 0 -1 x -2 greedy F F x T ∨ F -5 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x ¬ ∨ x 0 F x T 9 -9 -5 + x x > x 5 -1 swap -5 T -10 inc -5 * 9 * dec 5 *"
# 1658: "T x ∨ / T -3 ungreedy -1 0 -1 x greedy T F F x ¬ -5 x -10 if -10 inc -5 * 9 * dec 5 *"
# 1658: "eql copy -6 > T * x x ungreedy F T depth F eql ¬ x / x F ≥ -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy ≥ dec ∧ 8 x be 9 * x ∨ x x F F x x x swap F -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "dec * / x x -8 greedy * x F x greedy? dec neg x F > 4 5 x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ ¬ x 0 9 * x ∨ x x inc swap -8 F 3 6 -6 -9 T swap -5 * 9 * dec 5 *"
# 1658: "x 0 7 neg F T x 0 -9 F x T 2 F x -8 x -6 -10 ≥ if -10 inc -5 * 9 * dec 5 *"
# 1658: "x swap x x F x x ungreedy x x x x ¬ x x greedy? T -2 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "+ depth dec * ¬ x 0 8 x -6 x x x x swap x T x be 2 T -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 1 T F 3 x be * * x ∨ copy x pop x T T x < -7 -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy -6 T if x x 5 T x ∧ x > T > -1 x + / x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 neg F x x -7 -9 F x T x 4 x F 1 8 > x T -10 inc -5 * 9 * dec 5 *"
# 1658: "swap / -6 x + 9 -2 F F 0 pop pop -9 x neg > 8 T dec x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc > T -5 x 9 * x be * depth F greedy ¬ x / ¬ F -10 -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy ≥ dec ∧ ¬ -10 be 9 copy x -5 copy greedy x -5 T dec 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ T greedy? swap x x copy x neg 8 -1 T x inc ¬ -5 ungreedy depth 3 > F -10 inc -5 * 9 * dec 5 *"
# 9254: "- x x 6 inc x F ≤ 0 x -1 x > F > * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 34622: "x < 6 x x 7 T 5 T ≤ 6 T x 4 x F 1 8 > -3 T -10 T -5 9 9 * dec 5 *"
# 42252: "+ + dec ∧ ¬ x be 9 * -1 ∨ be greedy F F x T ∨ F -5 9 F inc -5 * 9 * x x *"
13466,43022,68
13467,43085,72
13468,43022,70
13469,43022,69
13470,43022,74
13471,1658,95
13472,43148,88
13473,43127,74
13474,1658,81
13475,34622,64
13476,1658,95
13477,21000000,79
13478,9254,86
13479,43085,76
13480,1658,71
13481,43652,72
13482,1658,69
13483,14777,74
13484,1658,93
13485,48797,83
13486,43022,80
13487,83985,99
13488,43022,72
13489,4157,91
13490,43022,86
13491,14777,80
13492,93436,81
13493,47558,105
13494,94157,76
13495,1658,82
13496,81011,90
13497,43118,84
13498,47852,87
13499,43022,72
13500,47852,79
13501,42812,82
13502,1658,79
13503,38402,82
13504,23762,85
13505,57302,72
13506,48869,75
13507,33677,93
13508,1658,76
13509,43127,89
13510,1658,97
13511,1658,75
13512,119672,85
13513,22127,77
13514,42707,100
13515,5222,72
13516,32690,80
13517,43022,81
13518,1658,78
13519,47852,84
13520,1658,83
13521,1658,74
13522,43022,78
13523,55878,78
13524,1658,91
13525,44845,88
13526,55878,94
13527,19502,83
13528,1658,87
13529,43022,85
13530,21000000,75
13531,42707,66
13532,34433,81
13533,52577,79
13534,52577,76
13535,24227,90
13536,9254,78
13537,1658,80
13538,42182,101
13539,43022,80
13540,1658,83
13541,21000000,74
13542,9086,87
13543,43127,82
13544,43817,75
13545,1658,85
13546,43127,81
13547,5033,95
13548,43022,76
13549,76342,82
13550,42287,82
13551,43967,83
13552,41552,92
13553,1658,74
13554,1658,82
13555,127862,80
13556,63511,82
13557,53497,82
13558,46806,89
13559,43127,86
13560,40637,89
13561,1658,84
13562,42182,75
13563,55878,78
13564,42875,88
13565,21133,77
13566,78274,76
13567,1658,81
13568,43967,77
13569,5327,85
13570,43106,88
13571,43022,72
13572,1658,74
13573,11851,90
13574,42182,87
13575,1658,85
13576,1658,86
13577,1658,83
13578,55878,80
13579,1658,82
13580,44933,84
13581,60137,78
13582,1658,70
13583,1663,85
13584,20293,94
13585,43127,80
13586,43127,83
13587,1658,75
13588,38402,77
13589,33418,87
13590,24850,74
13591,34643,92
13592,1658,95
13593,151823,79
13594,43022,88
13595,42182,93
13596,1658,94
13597,62027,81
13598,38402,80
13599,52577,81
13600,47852,86
13601,1658,85
13602,43127,83
13603,44933,95
13604,21000000,92
13605,42707,74
13606,105140,96
13607,43547,78
13608,38402,79
13609,1658,80
13610,43127,95
13611,34538,76
13612,1658,74
13613,42917,79
13614,43064,85
13615,19502,78
13616,43022,93
13617,42077,101
13618,42182,87
13619,1658,86
13620,42182,89
13621,34622,76
13622,1658,77
13623,43127,84
13624,43085,84
13625,17570,80
13626,60515,97
13627,57302,89
13628,1658,76
13629,1658,79
13630,85232,99
13631,85652,85
13632,55878,74
13633,42917,79
13634,1658,84
13635,40565,97
13636,1658,79
13637,43022,95
13638,47852,85
13639,452858,80
13640,1658,80
13641,40120,100
13642,43022,85
13643,43022,74
13644,42182,92
13645,34622,81
13646,43127,81
13647,1663,95
13648,1663,84
13649,52330,85
13650,1658,76
13651,36946,82
13652,43022,84
13653,19502,82
13654,58030,88
13655,55878,81
13656,1658,73
13657,26054,77
13658,1658,79
13659,43001,88
13660,43127,83
13661,53497,81
13662,1658,73
13663,42287,72
13664,43337,73
13665,43127,81
13666,24227,78
13667,43022,85
13668,1658,80
13669,47852,85
13670,38402,73
13671,44072,83
13672,43022,91
13673,1658,73
13674,51632,87
13675,1658,72
13676,1658,76
13677,17570,86
13678,43442,76
13679,1658,99
13680,33677,75
13681,19502,90
13682,45760,96
13683,43862,72
13684,3545,87
13685,42917,93
13686,47852,80
13687,43127,81
13688,1658,72
13689,43232,79
13690,12649,80
13691,43652,95
13692,53497,79
13693,4487,75
13694,1658,75
13695,1658,76
13696,52850,89
13697,1658,72
13698,42182,87
13699,42896,92
13700,34517,89
13701,1658,84
13702,1658,92
13703,1658,92
13704,44072,86
13705,43127,81
13706,1663,80
13707,55878,93
13708,1658,77
13709,1658,88
13710,1658,93
13711,1658,85
13712,43001,86
13713,45710,88
13714,43022,96
13715,43022,91
13716,1658,80
13717,43127,77
13718,1658,77
13719,1658,73
13720,43022,94
13721,5222,94
13722,42938,81
13723,1658,79
13724,43817,86
13725,1658,77
13726,1658,75
13727,89655,69
13728,38402,75
13729,34538,91
13730,55878,81
13731,42182,77
13732,109277,79
13733,1658,74
13734,42287,84
13735,1658,97
13736,19502,86
13737,43127,83
13738,1663,81
13739,43337,82
13740,43967,79
13741,43106,80
13742,42917,95
13743,43127,79
13744,8008,75
13745,43127,85
13746,43022,76
13747,76202,80
13748,5033,85
13749,39172,88
13750,1658,89
13751,1658,75
13752,43127,83
13753,43022,83
13754,1658,85
13755,1658,71
13756,43817,70
13757,45017,86
13758,40120,83
13759,1658,91
13760,71477,82
13761,76202,76
13762,43337,78
13763,42749,80
13764,47852,80
13765,43127,83
13766,42665,81
13767,71477,96
13768,59948,83
13769,42182,85
13770,111167,83
13771,42014,78
13772,24311,96
13773,1658,95
13774,43313,82
13775,50603,86
13776,1658,84
13777,43127,77
13778,47852,79
13779,1658,93
13780,2366,109
13781,1907,78
13782,43022,76
13783,1663,77
13784,1658,85
13785,166145,95
13786,43022,92
13787,47852,73
13788,43547,79
13789,43022,88
13790,119378,95
13791,56508,66
13792,41132,97
13793,44387,80
13794,43967,84
13795,1652,74
13796,1658,88
13797,1658,83
13798,42875,89
13799,1658,88
13800,1658,80
13801,43757,87
13802,42182,86
13803,34622,70
13804,43022,73
13805,60279,77
13806,1658,76
13807,1658,75
13808,43817,76
13809,42980,104
13810,1658,75
13811,4157,98
13812,43547,77
13813,49743,81
13814,103754,83
13815,1663,79
13816,93632,92
13817,77147,76
13818,1658,81
13819,1658,82
13820,1658,85
13821,43148,80
13822,42182,78
13823,43127,83
13824,1658,93
13825,35273,93
13826,43127,85
13827,34643,66
13828,4157,76
13829,114002,89
13830,1658,77
13831,47852,81
13832,1658,81
13833,38801,76
13834,3545,87
13835,42252,71
13836,43127,83
13837,3545,91
13838,21000000,79
13839,1658,83
13840,47852,74
13841,1658,71
13842,1658,89
13843,9212,85
13844,54488,83
13845,42252,79
13846,42644,78
13847,42917,86
13848,1658,80
13849,14777,76
13850,4157,79
13851,42852,86
13852,43169,82
13853,39347,79
13854,1658,85
13855,1658,78
13856,1658,82
13857,1658,72
13858,55878,76
13859,118727,82
13860,43022,82
13861,21000000,79
13862,40376,75
13863,57302,84
13864,43022,82
13865,42917,86
13866,1658,73
13867,68474,78
13868,1658,86
13869,42644,90
13870,43757,90
# After 6800 updates
# 1652: "-7 inc * 4 inc F x < 9 eql -1 be F T greedy? F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x x 5 - 0 ¬ -9 * * 6 be -1 T x x F + x x -10 + -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x F x * / if 6 T x x x x -5 -7 ¬ -5 > T swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1658: "inc ≥ dec ∧ ¬ x 0 - x if be x T x x F + x swap + F -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 * / x + -8 greedy * x F x greedy? dec neg x F pop 4 x x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc be 4 T F x < x -4 -1 ≥ -5 x ¬ -5 > -2 3 > F -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x 1 -5 if x eql 2 ∨ - eql x 2 x x x 6 x dec ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy be dec ∧ ¬ F 0 9 x if x x x x 5 0 -5 2 swap ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 6 x eql 3 x ≤ T ≤ 3 F inc x 3 * x F x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if -7 F x < -9 x -1 eql x 1 F F eql 8 x T ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "x - ¬ x < > x greedy T ungreedy T -6 F 3 eql 7 x F swap -10 > -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 6 x x 3 depth be * be depth copy dec ungreedy T * -7 F x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x < x -8 ≤ -7 x F x greedy? dec neg x T x -3 greedy? x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "if x pop ∨ greedy? ≥ swap 9 9 -6 x - x ¬ swap neg ∨ depth 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "eql copy T > T * x < ungreedy eql x pop x T x x T 2 x -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -4 x 5 F x < 9 -1 x greedy T F F x ¬ depth x -10 if -10 inc -5 * 9 * dec 5 *"
# 1658: "T x T -7 T x ungreedy 5 -9 ≤ 3 greedy? dec neg x F > x - x -9 -10 -9 -5 * 9 * dec 5 *"
# 1658: "-7 T -4 if 5 3 0 < depth x T -10 T T F -8 F + T -9 swap T if -5 * 9 * dec 5 *"
# 1658: "greedy x -6 T if ungreedy x greedy T ungreedy T -6 F 7 x 4 inc x x inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "F 4 T x 3 x be * * x ∨ copy x T > + greedy x T x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy * x 9 -9 5 T neg + be F be 5 ∨ -9 x T x 4 x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x * 4 x F x < 9 eql -1 be F T greedy? F 4 x be pop T -6 -9 -5 * 9 * dec 5 *"
# 1658: "≤ 4 -8 x -9 5 8 9 -7 * -3 x x x 4 4 x x x x ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "greedy be T ∧ ∧ F x < 9 -5 greedy T ∧ x * swap x x F eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 T -4 if 5 3 0 < depth x T -10 T T inc -8 F + T ≤ -9 T if -5 * 9 * dec 5 *"
# 1658: "F x x swap F -8 F x - 3 * -1 ¬ inc ¬ -5 ungreedy depth 3 > F -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -5 * ¬ x depth 6 * x T -10 -5 T x x F x 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "≥ x x swap 0 ¬ -9 * neg 6 be x T x -9 F + -8 ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ -9 ¬ x if x be 5 ∨ -6 3 T x 4 x < -10 inc -5 * 9 * dec 5 *"
# 1658: "T x x x -5 if x eql 2 ∨ T x x x x x x 6 if x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x ungreedy T -5 ∨ x ∨ 9 eql copy pop F ∨ 4 x be > 7 if x -10 inc -5 * 9 * dec 5 *"
# 1658: "T x x x -5 if x depth 2 ∨ T x x x x x x 6 if x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "F x x swap F -8 F x x 3 * -1 depth -6 x x x F 8 x -9 < -9 -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T x ungreedy -1 0 -1 x -2 T F F x T -1 x -10 if -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc 7 copy F -3 -5 ungreedy depth x x greedy? T * F x ¬ x T neg 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec 0 ∧ ¬ -4 be 9 * x ∨ copy x inc swap T -5 2 swap be 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T pop ungreedy ungreedy 0 -1 x -2 greedy F F x T ∨ F -5 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy ≥ dec ∧ ¬ -10 be 9 copy x -5 copy greedy x -5 T dec 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc x < 0 be x x pop greedy? copy F ≥ x -1 T x swap -4 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x F 9 inc 6 T x + -9 x be 5 ∨ -6 dec T x 4 x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x greedy > 4 copy 8 pop -8 x F 9 neg - pop -7 F x T greedy? x x eql -9 -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ -9 * greedy 6 be F dec neg x greedy? 5 + ≤ greedy? F -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 F * 4 inc F x < 9 eql -1 be F T 4 x - -8 -1 -1 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if inc F x < 9 x -1 eql x 1 F F eql 8 x T ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "4 x ∨ -7 3 -7 ungreedy -1 0 -1 x -2 x 6 F x T be greedy? F x -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 inc F x < 9 eql -1 T F T greedy? F 4 -2 9 neg F -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x -6 -2 9 eql x -10 F 9 x x 5 x F x 9 x ∧ T x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x swap F -8 ≤ x x F depth ≥ depth < x T 5 x greedy? x F eql -9 -5 * 9 * dec 5 *"
# 1658: "T x 5 - 0 ¬ x * * 6 be -1 T x x F ∨ -8 greedy? -1 x -10 inc -5 * 9 * dec 5 *"
# 1658: "if ∨ x x 4 eql x x < greedy eql dec dec x x F F -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x * x x if if x -3 greedy? F be T F 7 -1 F 4 T be x 8 depth -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 inc F 8 < 9 eql -1 be F x x F -5 x ¬ F -1 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ -9 * * 6 be F dec neg x if x 5 > x x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 neg neg -3 4 eql F swap 2 ∨ - eql x x x x x 6 x ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc inc inc -8 / -3 6 T 0 x inc x -5 neg > T greedy x * x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ ¬ x 0 9 * x ∨ x x inc swap -8 F 3 6 -6 -9 T swap -5 * 9 * dec 5 *"
# 1658: "x - inc ungreedy / -3 6 ungreedy 0 x inc x -5 T > T dec x be x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 9 inc 5 T x T be x be 5 -3 copy dec T x 4 x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "eql ∧ -6 > T * x x ungreedy depth -10 depth x ¬ swap neg ∨ depth 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ be T ∧ ¬ x 0 9 x F 9 neg F -6 x inc - x ≤ x F -10 inc -5 * 9 * dec 5 *"
# 1658: "F x x swap T -8 F x x ungreedy 3 x F T dec -8 F + x ¬ -9 F T -5 * 9 * dec 5 *"
# 1658: "+ x -1 swap x greedy copy F 1 8 -1 x x F x x x - swap F F -10 inc -5 * 9 * dec 5 *"
# 1658: "< 0 7 neg F T x 0 -9 F x x x x -4 ¬ -5 x swap ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T greedy eql * x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 F * 4 inc F x < 9 -5 greedy T ∧ x * swap x x F eql if -10 inc -5 * 9 * dec 5 *"
# 1658: "x ¬ F x 0 F greedy? T 9 -9 swap + x F inc x 5 ¬ swap ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ x x * greedy? greedy 6 pop x 6 -1 ungreedy x neg ¬ -5 T T < -1 pop -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy 4 T x x if 1 -3 greedy? F be T * 7 -1 F 4 T be x 8 depth -9 -5 * 9 * dec 5 *"
# 1658: "T inc ≥ - T 7 x 5 T ≤ F ungreedy inc 6 + F x x greedy? x ∧ eql -9 -5 * 9 * dec 5 *"
# 1658: "dec dec x x inc dec inc x x be x -3 5 7 ∨ 4 if -5 x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "< * / x + -8 greedy 9 T -6 x - x x swap x ∨ -8 < -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -5 * ¬ x -7 -7 * x T -10 -5 T x -8 F x 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x inc -4 if inc F greedy ¬ 9 x -1 neg - F -7 F x T x x x eql -9 -5 * 9 * dec 5 *"
# 1658: "inc dec 7 copy -5 -7 7 swap -8 x neg F greedy ∨ x -3 / + x copy ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x T 9 x -1 eql x x ∧ F -1 x be neg T -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x < 9 x -1 eql x 1 x F eql 8 x greedy? ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 6 x dec x depth x * be depth copy dec ungreedy x F > 4 5 ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 ¬ 1 4 0 / x T 9 -9 T depth F x 5 swap x 8 5 -10 ∨ F inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 greedy? x -9 x T 9 + x > be 5 ∨ ∨ 4 2 -5 x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -5 swap x 8 ≤ 7 -5 x eql dec x x x 8 x x ¬ x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x 0 7 neg F T x 0 -9 F x T 2 F x -8 x -6 -10 ≥ if -10 inc -5 * 9 * dec 5 *"
# 1658: "dec dec x x inc * -4 < ungreedy eql -1 -2 x T x x x 2 - -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy 4 -6 T if ungreedy x - T ungreedy -5 -6 F ¬ greedy 5 x F swap x T -10 inc -5 * 9 * dec 5 *"
# 9254: "- x x 6 0 x be * * x ∨ copy x -2 - T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 34622: "F < T T -5 ∨ x ∨ 9 eql copy pop F ∨ 4 x be > T 0 x 2 6 9 ¬ 9 * dec 5 *"
# 40120: "-7 inc be -3 T F ¬ < x 6 T -6 F 7 * 4 inc x x inc T -10 inc -5 * ungreedy * dec 5 *"
# 42252: "depth inc * 4 5 F x < 9 eql -1 pop F x T F 4 7 be -10 - -6 inc -5 neg 8 * x x *"
13871,43043,62
13872,43022,72
13873,43022,67
13874,43022,75
13875,43127,69
13876,1658,74
13877,1658,84
13878,43127,73
13879,1658,80
13880,47852,78
13881,19502,73
13882,42959,81
13883,43757,68
13884,43127,90
13885,53497,81
13886,43127,76
13887,1658,83
13888,43652,82
13889,43022,77
13890,113722,74
13891,1658,86
13892,43127,96
13893,1658,81
13894,47852,92
13895,1658,84
13896,47852,84
13897,1658,79
13898,1658,86
13899,1658,87
13900,1658,82
13901,17710,87
13902,43022,74
13903,43106,70
13904,43022,86
13905,94157,88
13906,1658,73
13907,42791,90
13908,42182,84
13909,55878,73
13910,33677,74
13911,44807,74
13912,1658,88
13913,43127,83
13914,1663,86
13915,1658,93
13916,39242,93
13917,1658,88
13918,1658,73
13919,42896,81
13920,21000000,86
13921,42182,84
13922,43211,71
13923,37457,89
13924,94157,82
13925,1658,76
13926,43127,79
13927,62902,89
13928,1658,82
13929,42182,93
13930,42917,83
13931,43652,79
13932,1658,102
13933,38402,85
13934,21000000,79
13935,1658,90
13936,39998,77
13937,34643,103
13938,1658,74
13939,43817,93
13940,1815,78
13941,43127,78
13942,42182,75
13943,61271,86
13944,40754,80
13945,3545,75
13946,42854,90
13947,42182,78
13948,33677,74
13949,1658,77
13950,42182,85
13951,53497,71
13952,1658,83
13953,1658,78
13954,43022,77
13955,43022,69
13956,42917,89
13957,42917,77
13958,43022,85
13959,1658,87
13960,43002,83
13961,43127,88
13962,5327,81
13963,55878,76
13964,43085,86
13965,43022,76
13966,43127,74
13967,1658,100
13968,1658,87
13969,1658,90
13970,43022,72
13971,3545,81
13972,43127,83
13973,9254,82
13974,43712,75
13975,16072,81
13976,1652,84
13977,13475,95
13978,43043,80
13979,24227,64
13980,22127,89
13981,8918,90
13982,43127,78
13983,24514,85
13984,1663,79
13985,1658,85
13986,59717,102
13987,1658,90
13988,43022,82
13989,42938,88
13990,1658,84
13991,3545,93
13992,56319,76
13993,53497,74
13994,43127,71
13995,1658,81
13996,13475,79
13997,7630,91
13998,1663,79
13999,1658,84
14000,9527,88
14001,70049,99
14002,42392,89
14003,1658,72
14004,43022,85
14005,43022,73
14006,1658,76
14007,43652,81
14008,42959,84
14009,43022,92
14010,1658,84
14011,1658,74
14012,41923,84
14013,1658,80
14014,47602,77
14015,1658,83
14016,42833,100
14017,1658,78
14018,1658,83
14019,43022,83
14020,53497,78
14021,21000000,74
14022,11851,89
14023,1658,79
14024,1658,81
14025,40369,77
14026,43022,80
14027,1658,83
14028,42917,86
14029,44620,84
14030,9254,91
14031,49299,76
14032,42182,82
14033,51527,80
14034,41825,87
14035,1658,84
14036,1658,80
14037,42917,81
14038,42854,80
14039,42497,85
14040,1658,83
14041,94864,76
14042,43127,94
14043,1658,75
14044,1658,80
14045,1658,79
14046,1658,92
14047,66752,84
14048,1689148,91
14049,21000000,80
14050,42959,85
14051,42707,88
14052,58042,79
14053,52850,93
14054,1658,87
14055,7630,90
14056,1652,85
14057,42791,76
14058,21917,92
14059,45752,75
14060,14252,81
14061,1658,80
14062,1658,72
14063,21000000,96
14064,1658,87
14065,11851,97
14066,1658,80
14067,47852,88
14068,43127,75
14069,13475,79
14070,1658,77
14071,42917,73
14072,43127,78
14073,42686,98
14074,38402,77
14075,21000000,82
14076,19502,76
14077,1658,80
14078,43127,88
14079,1658,80
14080,99407,78
14081,118727,77
14082,43043,69
14083,51632,68
14084,43127,77
14085,43967,84
14086,47852,82
14087,21000000,92
14088,93926,90
14089,3545,91
14090,43022,79
14091,19502,87
14092,1658,93
14093,1658,87
14094,51632,75
14095,21000000,77
14096,1658,85
14097,43127,79
14098,42287,63
14099,24227,99
14100,93926,81
14101,1658,81
14102,53387,75
14103,1658,77
14104,48797,82
14105,90377,100
14106,60063,79
14107,43127,82
14108,1658,85
14109,38402,79
14110,47852,70
14111,1658,86
14112,55878,78
14113,43022,96
14114,52346,76
14115,43127,99
14116,7630,92
14117,42833,103
14118,1658,75
14119,34622,87
14120,21000000,86
14121,1658,96
14122,119756,70
14123,43127,96
14124,55878,82
14125,42917,93
14126,33677,86
14127,21000000,83
14128,85232,97
14129,43022,81
14130,8876,90
14131,42182,88
14132,43127,85
14133,41657,74
14134,76958,72
14135,43127,72
14136,69734,99
14137,1658,78
14138,1658,80
14139,43127,76
14140,33677,79
14141,43127,82
14142,4157,79
14143,15974,95
14144,40292,84
14145,42182,83
14146,1658,80
14147,43127,80
14148,21000000,93
14149,38402,72
14150,43127,101
14151,2840,81
14152,42707,79
14153,4081,87
14154,43127,89
14155,24227,97
14156,216461,93
14157,1658,83
14158,47852,83
14159,119672,93
14160,85855,90
14161,20537,87
14162,1658,87
14163,68642,72
14164,47852,71
14165,42182,80
14166,1658,78
14167,47852,90
14168,42917,97
14169,1658,73
14170,42182,90
14171,43817,91
14172,169498,77
14173,7630,96
14174,117992,88
14175,1663,83
14176,43118,79
14177,1658,74
14178,44177,78
14179,43817,71
14180,4157,76
14181,60018,101
14182,1658,76
14183,43127,77
14184,1658,80
14185,147742,79
14186,1658,75
14187,1658,79
14188,45940,80
14189,41321,97
14190,34328,91
14191,85652,90
14192,43064,79
14193,42917,87
14194,43127,79
14195,1658,89
14196,1658,83
14197,1658,100
14198,1658,75
14199,43022,90
14200,43022,81
14201,3545,80
14202,42252,80
14203,43127,79
14204,136559,87
14205,43022,83
14206,66752,89
14207,1658,80
14208,1658,76
14209,51982,82
14210,1658,86
14211,1658,84
14212,42917,84
14213,90377,86
14214,1658,89
14215,1658,77
14216,51632,80
14217,1652,91
14218,43022,76
14219,85652,71
14220,1658,87
14221,42602,82
14222,22127,75
14223,63154,74
14224,567826,74
14225,31787,86
14226,43547,84
14227,43127,85
14228,4157,97
14229,9254,88
14230,43022,77
14231,27274,84
14232,41923,78
14233,1658,73
14234,1658,78
14235,1658,101
14236,1658,87
14237,16408,81
14238,63511,100
14239,1663,77
14240,1658,73
14241,43022,80
14242,43022,83
14243,34433,78
14244,55878,78
14245,43022,83
14246,1658,77
14247,43022,88
14248,42182,97
14249,1658,84
14250,1658,72
14251,4157,80
14252,9254,84
14253,42749,81
14254,42686,81
14255,19502,76
14256,43127,91
14257,42917,92
14258,62027,81
14259,1658,79
14260,1658,84
14261,49897,92
14262,1658,77
14263,24227,84
14264,42875,89
14265,42497,86
14266,93926,87
14267,1658,85
14268,43022,78
14269,1658,80
14270,44072,85
14271,81011,95
14272,53497,79
14273,47834,80
14274,21000000,84
14275,53252,69
# After 7000 updates
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-2 inc 7 copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 inc F x < 9 eql -1 be F T greedy? F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1658: "ungreedy 4 greedy 4 neg F x T x -4 1 -10 depth T F -8 F + T -9 swap T if -5 * 9 * dec 5 *"
# 1658: "x x x 9 x -8 ≤ -7 x F x greedy? dec 8 T T x -3 greedy? x ∧ -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 6 x eql 3 x ≤ T ≤ 3 F inc x 3 * x F x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "neg be T F F T x 0 -9 F x x ¬ x -4 ¬ -5 x swap ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -5 * ¬ x -7 -7 * x T -10 -5 T x -8 F x 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "x - inc x < 0 ungreedy -3 -10 -3 be T < -5 -1 F < T F x -9 9 -9 -5 * 9 * dec 5 *"
# 1658: "x - ¬ x < > x greedy depth ungreedy T -6 F 3 eql F greedy? x -1 copy ungreedy -10 -9 -5 * 9 * dec 5 *"
# 1658: "x swap 6 x x 3 depth be * be depth copy dec x -7 F x T greedy? 6 x eql -9 -5 * 9 * dec 5 *"
# 1658: "F x x swap T F x < 9 T T ungreedy F T greedy? swap 4 x be pop T -6 -9 -5 * 9 * dec 5 *"
# 1658: "-2 x x swap T -8 x x x ungreedy 3 x F x dec -8 F + x x -9 F T -5 * 9 * dec 5 *"
# 1658: "x T 6 x 3 x depth x * be depth dec 8 eql x x 4 -2 ≤ neg dec -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ dec x -3 T 4 be x -3 ∧ 7 ∨ 4 if -5 x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x * 4 if if ungreedy -3 -10 -3 be T F 7 -1 F 4 T be x 8 depth -9 -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ -9 * greedy 6 be F dec neg x greedy? 5 + ≤ greedy? F -10 inc -5 * 9 * dec 5 *"
# 1658: "T x T -7 x x ungreedy 5 -9 ≤ 3 greedy? dec neg x 9 T ¬ F x x eql -9 -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T x ∧ -1 0 -1 x -2 T ≥ F x T -1 x -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec x T x 0 9 2 F 9 neg T ¬ F neg T F 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 x x * * 6 be -1 T greedy x 7 x F swap -10 > -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 ¬ -9 ¬ x if x be 5 ∨ -6 3 T x 4 x < -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec -6 ∧ T -4 x ¬ x x depth copy dec x -7 F x T greedy? T x eql -9 -5 * 9 * dec 5 *"
# 1658: "x < 6 x eql 3 x x x 0 * -1 depth -6 x x x F 8 ungreedy -9 eql -9 -5 * 9 * dec 5 *"
# 1658: "x T 6 x eql 3 x 0 x 0 * -1 depth -6 F F > x - x -9 -8 -9 -5 * 9 * dec 5 *"
# 1658: "inc dec dec greedy? ¬ x be 9 * -2 T * * T 8 x F - 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "greedy x -6 T if ungreedy x greedy T ungreedy T -6 F 7 x 4 inc x x inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "eql copy T > T * x < ungreedy eql x pop x T x x T 2 x -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "T + greedy? swap x F x < x -4 -1 ≥ -5 x ¬ -5 x -2 3 > F -10 inc -5 * 9 * dec 5 *"
# 1658: "x x ungreedy T -5 ∨ x ∨ 9 eql copy pop F ∨ 4 x be > 7 if x -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x T 9 x -1 eql x x ∧ F -1 x be neg T -10 inc -5 * 9 * dec 5 *"
# 1658: "swap inc -4 if 0 F -1 ungreedy depth x x greedy? T pop F x ¬ x x neg greedy -10 inc -5 * 9 * dec 5 *"
# 1658: "if ¬ pop ∨ greedy? ≥ swap 9 9 -6 x - x if swap neg ∨ depth 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x x x -5 if x -1 0 -1 x -4 T F F x T -1 x ∧ if -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x -6 -2 9 eql dec -10 F 9 x copy 2 inc swap T -5 2 swap x 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 T -4 if 5 3 0 < depth x T -10 T T inc -8 F + T ≤ -9 T if -5 * 9 * dec 5 *"
# 1658: "inc x 7 copy T -7 7 swap -8 x neg F greedy ∨ x -3 / + neg -1 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc x < 0 ungreedy ¬ -10 eql > 1 x 1 1 F eql 8 x T ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "x ungreedy F 9 inc 6 T x + -9 x be 5 ∨ T x -7 F x x T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -4 x 5 F 3 < 9 -1 x greedy T T greedy? F 4 T be pop T -6 -9 -5 * 9 * dec 5 *"
# 1658: "< * x x + ≥ swap dec 1 x < x dec neg x ∧ pop x x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "x x x swap F -8 ≤ x x F depth ≥ depth < x T 5 x greedy? x F eql -9 -5 * 9 * dec 5 *"
# 1658: "5 x x - ungreedy -10 x * x T - x - -2 2 x ∨ -3 / x + -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy be dec ∧ 0 ¬ -9 * * 6 -5 F 4 neg x if x 5 dec x x -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ ≤ 6 x x 3 depth be * be x copy x x -9 -5 x x greedy > if -10 inc -5 * 9 * dec 5 *"
# 1658: "F x 4 swap 3 -8 swap x - 3 -5 -1 ¬ inc ¬ -5 F -8 ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 -8 x -9 5 8 9 -7 * -3 x x x 4 4 x x x x ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "-7 * F x + -8 greedy if x depth x -3 -10 neg x F pop 4 x x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x ≤ x 4 inc ≥ x < 9 eql -1 be F ¬ 4 x T -4 7 inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "2 T pop x dec > x < 9 3 -1 eql x dec F F eql 8 x x ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "x x x F if -8 ≤ x ∧ 8 * -1 depth -6 F ¬ > 4 - x -9 -8 -9 -5 * 9 * dec 5 *"
# 1658: "F x x + T F x < 9 T T ungreedy -10 T greedy? swap 4 9 be ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "5 neg neg -3 4 eql F swap 2 ∨ - eql x x x x x 6 x ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "eql < 6 x eql 3 x x F 0 * -1 depth -6 x x x F 8 ungreedy pop eql -9 -5 * 9 * dec 5 *"
# 1658: "x inc -4 9 inc 5 T x T be x be 5 -3 copy dec T x 4 x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x -6 -2 9 eql x -10 F 9 F x 5 x ¬ ungreedy 9 x ∧ T x -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc be 4 F F x < x -4 -1 ≥ x x ¬ -5 > -2 copy ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "eql ∧ -6 -1 x * x x ungreedy depth -10 depth x ¬ swap neg ∨ depth 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 -3 -1 4 5 F -1 < 1 x x x dec neg x F pop 4 x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "ungreedy ≥ dec ∧ ¬ -10 be 9 copy x -5 copy greedy x -5 T dec 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x * / F 6 T x + T -6 greedy ¬ x -3 / + ungreedy x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "T x ∨ -7 T x ungreedy -1 0 -1 x -2 T F F x T -1 x -10 if -10 inc -5 * 9 * dec 5 *"
# 1658: "+ x -1 swap x inc x -9 1 x -1 dec x ∧ F F eql 8 x T ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc 7 copy F -3 greedy ¬ 9 x -1 neg 5 ∨ -9 be x x 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x -6 -2 9 eql x -10 F 9 x x 5 x F x 9 x ∧ T x -10 inc -5 * 9 * dec 5 *"
# 1658: "x 8 x x F > x x x if > be x ∨ -6 3 T swap 4 x < -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x 4 inc F x < 9 eql -1 be F x 4 x T T -1 -1 x -10 inc -5 * 9 * dec 5 *"
# 1658: "if ∨ x x 4 eql x x < greedy eql dec dec x x F F -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc T -6 x if 1 -3 greedy? F be T * 7 -1 F 4 T be x 8 x -9 -5 * 9 * dec 5 *"
# 1658: "≤ 4 -6 T if ungreedy x - T ∨ - eql x F x x x 6 -6 dec ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "T x depth * ¬ x -7 -7 * x T -10 -5 T 6 T swap 2 swap -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "if x pop ∨ 4 ≥ ≥ T 0 pop T x greedy? x > -3 greedy x eql x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "T 6 T -7 x * ungreedy F T F < -6 ∧ 7 ∨ 4 if -5 x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ ¬ x 0 9 * x ∨ x x inc swap -8 F 3 6 -6 -9 T swap -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x < 9 -9 -1 eql x 1 x F swap T F x -9 9 -9 -5 * 9 * dec 5 *"
# 1658: "x ¬ F x 0 F greedy? T 9 -9 swap + x F inc x 5 ¬ swap ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "∧ x 5 - 0 F x ¬ x if x be 5 ∨ -6 3 T swap 4 x < -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc x 0 ¬ -5 * F 6 be F dec neg x greedy? 5 + ≤ ¬ F -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec 0 ∧ ¬ -4 be 9 * x greedy T ∧ x * ≥ F x F eql x -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 0 4 neg F T x 0 -9 F x inc - 3 -4 F x T x -2 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ ≤ 6 x x 3 depth be * be x -1 x x -9 -5 x x greedy x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "¬ 9 -6 T if greedy x - T ungreedy -5 -6 F ¬ greedy 5 x F greedy x ¬ -10 inc -5 * 9 * dec 5 *"
# 1663: "≥ copy -6 - x x be * x x -8 copy x -2 F x T - swap x 6 -10 inc -5 * 9 * T 5 *"
# 3545: "-7 * F x + x 9 -10 ≥ x 7 T -1 x 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 7630: "x x -1 - x x copy F neg 8 -1 pop x inc / T x 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 42252: "T x ∨ -7 T neg ungreedy < 9 eql -1 pop F x T F 4 7 be x - F inc -5 neg 8 * x x *"
14276,42938,72
14277,43000,66
14278,43022,72
14279,43232,76
14280,43148,72
14281,19502,84
14282,47950,95
14283,43022,83
14284,46277,76
14285,43022,78
14286,1658,75
14287,37667,99
14288,26117,91
14289,1663,78
14290,42077,80
14291,1662,84
14292,7588,97
14293,43022,80
14294,43127,96
14295,53186,79
14296,42917,95
14297,17696,79
14298,43022,83
14299,43127,75
14300,1658,76
14301,1658,88
14302,42917,76
14303,42938,81
14304,42497,86
14305,1658,77
14306,1658,70
14307,43127,72
14308,43106,82
14309,43085,84
14310,42917,75
14311,42938,74
14312,43442,85
14313,1658,78
14314,1658,72
14315,1658,84
14316,1658,85
14317,17626,95
14318,1658,78
14319,48843,83
14320,53497,80
14321,223118,92
14322,1663,75
14323,42497,76
14324,20293,85
14325,4157,75
14326,1658,95
14327,51212,105
14328,9254,84
14329,23762,74
14330,43022,77
14331,39032,77
14332,43187,76
14333,43127,81
14334,1658,90
14335,42917,88
14336,53497,90
14337,55878,88
14338,47852,78
14339,43127,81
14340,42392,88
14341,21000000,94
14342,3545,93
14343,39246,94
14344,1658,73
14345,43148,68
14346,53497,75
14347,47852,80
14348,1658,84
14349,5033,84
14350,42946,82
14351,41552,81
14352,33677,85
14353,1658,78
14354,5327,80
14355,1658,89
14356,43862,84
14357,43022,75
14358,1658,92
14359,42287,83
14360,223133,79
14361,1658,77
14362,53497,83
14363,43232,87
14364,40292,73
14365,42182,89
14366,43022,78
14367,1657,85
14368,38990,89
14369,19502,83
14370,23870,78
14371,43127,83
14372,1658,86
14373,1658,74
14374,80927,82
14375,43817,79
14376,1658,84
14377,25207,80
14378,44665,82
14379,1658,88
14380,1658,76
14381,43127,82
14382,1658,87
14383,13475,88
14384,41678,87
14385,19502,94
14386,43127,83
14387,53497,91
14388,1663,82
14389,42917,80
14390,42182,75
14391,1658,81
14392,1652,91
14393,1658,83
14394,42707,90
14395,1658,84
14396,42252,74
14397,43022,75
14398,43127,80
14399,42182,91
14400,1663,86
14401,14777,70
14402,42917,105
14403,47852,73
14404,43127,83
14405,43022,85
14406,1658,73
14407,55878,86
14408,4157,74
14409,42182,85
14410,1658,86
14411,1658,81
14412,47852,80
14413,43232,83
14414,43127,78
14415,42917,94
14416,1658,72
14417,1658,79
14418,15778,83
14419,1658,77
14420,33418,78
14421,42707,90
14422,43862,88
14423,1658,91
14424,43043,76
14425,1658,86
14426,1658,89
14427,42252,90
14428,33677,95
14429,1658,84
14430,43022,95
14431,1658,80
14432,47852,87
14433,43022,78
14434,203693,83
14435,1658,89
14436,43967,86
14437,13475,81
14438,53497,77
14439,1658,79
14440,42182,84
14441,42817,72
14442,42938,91
14443,42854,76
14444,43862,85
14445,10259,84
14446,1658,77
14447,39277,64
14448,43031,77
14449,1658,81
14450,56294,84
14451,21000000,68
14452,42896,72
14453,54082,96
14454,43732,72
14455,1663,97
14456,28952,84
14457,1658,83
14458,43022,96
14459,35567,91
14460,42077,86
14461,41342,76
14462,47852,72
14463,113288,90
14464,1658,77
14465,1658,97
14466,37457,79
14467,1658,77
14468,80927,76
14469,21917,98
14470,42392,73
14471,1658,90
14472,34328,83
14473,1658,107
14474,47852,99
14475,1658,79
14476,7630,98
14477,1658,86
14478,93926,87
14479,43022,75
14480,48797,75
14481,1658,78
14482,1663,87
14483,42182,84
14484,1657,98
14485,67270,90
14486,42812,82
14487,43022,80
14488,1658,73
14489,44492,95
14490,24227,77
14491,55878,71
14492,43127,82
14493,69062,83
14494,60961,81
14495,2392623,78
14496,1658,77
14497,42182,83
14498,43817,96
14499,1658,94
14500,1658,82
14501,128072,116
14502,1658,86
14503,85652,85
14504,1658,80
14505,70007,83
14506,41972,85
14507,20293,98
14508,7630,81
14509,7630,80
14510,55878,88
14511,1658,82
14512,76202,79
14513,43022,87
14514,42707,87
14515,42917,92
14516,42658,83
14517,4157,74
14518,93926,93
14519,43022,91
14520,43127,74
14521,1658,69
14522,1652,88
14523,42612,85
14524,42077,85
14525,44845,91
14526,81417,78
14527,39032,89
14528,22127,72
14529,55878,74
14530,39277,75
14531,1658,88
14532,33334,91
14533,1658,87
14534,42791,88
14535,16408,90
14536,52642,80
14537,105392,82
14538,53497,85
14539,17696,89
14540,65807,69
14541,43547,84
14542,78302,78
14543,24227,73
14544,1658,86
14545,42077,85
14546,55878,85
14547,1658,89
14548,1663,89
14549,47852,67
14550,1078,78
14551,43127,70
14552,163730,84
14553,1658,87
14554,39347,83
14555,43526,77
14556,4157,91
14557,1658,81
14558,9254,97
14559,22127,71
14560,25186,78
14561,49532,88
14562,75754,79
14563,1658,84
14564,42917,80
14565,178724,75
14566,1658,74
14567,80087,81
14568,11851,79
14569,1658,86
14570,110894,87
14571,47852,88
14572,42077,80
14573,84238,89
14574,21917,95
14575,51288,85
14576,43022,83
14577,43232,86
14578,42917,85
14579,1658,92
14580,4157,76
14581,1658,92
14582,1658,81
14583,1658,84
14584,1658,81
14585,38402,76
14586,1658,84
14587,32767,95
14588,49609,75
14589,47852,89
14590,1658,83
14591,44597,92
14592,7630,92
14593,43127,88
14594,34433,87
14595,43127,92
14596,43127,81
14597,1658,91
14598,24227,69
14599,27832,93
14600,43127,81
14601,57988,80
14602,43127,72
14603,43862,93
14604,1658,86
14605,42182,81
14606,4157,83
14607,71477,93
14608,43967,80
14609,1658,87
14610,43022,82
14611,42770,82
14612,26138,90
14613,3545,109
14614,42812,91
14615,1658,78
14616,43043,80
14617,1658,75
14618,1652,79
14619,53497,85
14620,43232,100
14621,1658,87
14622,1658,81
14623,43127,84
14624,90377,80
14625,1658,86
14626,16072,79
14627,43127,78
14628,55878,82
14629,42392,87
14630,43127,92
14631,34538,93
14632,66752,85
14633,1658,78
14634,53497,72
14635,1658,79
14636,1658,102
14637,42182,78
14638,20293,89
14639,43022,97
14640,1658,96
14641,19502,83
14642,95648,86
14643,42917,99
14644,42917,83
14645,1658,75
14646,42182,84
14647,43127,101
14648,85232,81
14649,119567,94
14650,1658,80
14651,47852,77
14652,43022,86
14653,49186,78
14654,43022,85
14655,42938,82
14656,43127,80
14657,66752,88
14658,56319,78
14659,1658,83
14660,1658,90
14661,127862,78
14662,33551,81
14663,42917,73
14664,43022,80
14665,4157,86
14666,1658,84
14667,21000000,79
14668,94157,74
14669,1652,101
14670,60961,90
14671,48797,86
14672,20293,91
14673,1658,73
14674,1658,72
14675,42392,79
14676,4157,108
14677,40754,95
14678,51212,82
14679,50764,80
14680,1166410,86
# After 7200 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 inc F x < 9 eql -1 be F T greedy? F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T F < -5 4 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1657: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "depth 9 -6 T -9 x x - T ungreedy -5 copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "-7 x * 4 if if ungreedy -3 -10 -3 be T F 7 -1 F 4 T be x 8 depth -9 -5 * 9 * dec 5 *"
# 1658: "F x x + -4 F x < 9 T T T greedy? T greedy? T 4 9 be ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "F copy x dec T F x copy 9 T T pop * T greedy? x x x eql x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "depth 9 ¬ T -9 x x - T ungreedy -5 copy 3 greedy x T T 2 swap greedy? F -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy ≥ T 4 neg F x T x -4 1 -10 depth T F -8 F + x -9 F T if -5 * 9 * dec 5 *"
# 1658: "x swap 6 x x 3 depth be * be F copy * x -7 F T T greedy? 6 if -10 inc -5 * 9 * dec 5 *"
# 1658: "x ¬ F F 0 F greedy? T 9 -9 swap * -10 F inc x 5 ¬ swap ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "swap inc -4 if x ≥ swap 9 9 -6 x - x if F neg ∨ depth > x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy 4 greedy ∧ ¬ F swap greedy? T -6 x - -3 if T neg ∨ T 3 x F -10 inc -5 * 9 * dec 5 *"
# 1658: "T x depth * ¬ x -7 - * x x x -5 T 6 T swap x swap ≤ 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "F dec dec x ¬ x 0 -9 1 x -1 dec x ∧ x F eql 8 x T ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "F x 4 swap 3 -8 swap x - 3 -5 -1 ¬ inc ¬ -5 -4 copy ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x x ≥ x be * * x ∨ copy x inc x 8 T 2 swap eql < -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 x x * * 6 be -1 T greedy x 7 x F swap -10 > -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 7 x F -3 greedy ¬ 9 x -1 neg 5 ∨ -9 be x x 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "< * x x + ≥ swap dec 1 x < x dec neg x ∧ pop x x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "x x -4 x 5 F 7 < 9 -1 x x T T greedy? F 4 T be pop T -6 -9 -5 * 9 * dec 5 *"
# 1658: "greedy x -6 x ≤ 0 ungreedy ¬ 8 eql > 1 x 5 1 F eql 8 x T greedy -10 -9 -5 * 9 * dec 5 *"
# 1658: "F x x + T F x < 9 T T T greedy? T greedy? swap 4 9 be ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "T x depth * ¬ x -7 -7 * x T -10 -5 T 6 T swap 2 swap -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 3 6 x 3 x depth x - -9 / be 5 ∨ F x -7 F x x T -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x 9 x -8 ungreedy -7 x F x greedy? ungreedy 8 T T x -2 greedy? x ∧ T -9 -5 * 9 * dec 5 *"
# 1658: "-5 dec -6 ∧ if x x ¬ ungreedy eql > 1 x 5 1 F eql F x T ∧ * -9 -5 * 9 * dec 5 *"
# 1658: "≤ x -6 -2 9 eql x -10 F 9 F x 5 x ¬ ungreedy 9 x ∧ T x -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x -6 T if ungreedy x greedy T ungreedy -6 -6 F 7 -10 pop inc x x inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "if be dec ∧ 0 ¬ -9 ∧ * 6 -5 F 4 neg x if x x dec x x -10 inc -5 * 9 * dec 5 *"
# 1658: "be x 5 - 9 > x x x if > be T ∨ -6 3 T swap 4 x < -10 inc -5 * 9 * dec 5 *"
# 1658: "dec x T ∧ ¬ F be 9 copy x -5 copy greedy x -5 x 3 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 inc ≤ ≤ -4 x / x x depth copy dec x -7 F x T greedy? T 3 eql -9 -5 * 9 * dec 5 *"
# 1658: "swap inc -4 if x ≥ swap 9 9 + x - * 8 T T x -2 greedy? x ∧ T -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 6 F x * 9 eql -1 be F T greedy? F 4 -5 x ≥ -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x pop ∨ 4 ≥ ≥ T 0 depth T x greedy? x > -3 - 6 -6 dec ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x swap F -8 ≤ x x F depth ≥ depth < x T 5 x greedy? x F eql -9 -5 * 9 * dec 5 *"
# 1658: "x x x -10 ungreedy x x < 9 T T T greedy? T greedy? swap 4 9 be ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "T + greedy? swap x F x < if -4 < -6 ∧ 7 ∨ 4 7 -5 x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "x -5 -4 9 inc 5 T x T be x be 5 -3 T dec T x eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "* - ¬ greedy? < F swap 9 x -6 x - x if swap neg ∨ depth 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 x T eql eql x x F ¬ * -1 depth -6 x x x F 8 ungreedy pop eql -9 -5 * 9 * dec 5 *"
# 1658: "inc x 7 copy T -7 7 swap -8 x neg F greedy ∨ T x -7 ≥ + F T -10 inc -5 * 9 * dec 5 *"
# 1658: "x be x 4 inc ≥ greedy < 2 ∨ - eql x x F x x 6 x ∨ F -10 inc -5 * 9 * dec 5 *"
# 1658: "if ∨ x x 4 eql x x < greedy eql dec dec x x F F -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "¬ x x x eql 3 x ≤ T ≤ 3 F inc x 3 * x F x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x T 6 x eql 3 x 0 x 0 * -1 depth -6 F F > x - x -9 -8 -9 -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ ¬ x be 9 0 6 x -2 T ≥ F x 1 -1 x -10 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x - T if ungreedy x - T x - eql x F x x greedy x eql x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc T -6 x if 1 -3 greedy? F be T * 7 -1 F 4 T be x 8 x -9 -5 * 9 * dec 5 *"
# 1658: "eql copy T > T * x < ungreedy eql x pop x T x x T 2 x -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x F ¬ x 5 -3 greedy ¬ 9 x -1 neg 5 ∨ -9 be ≥ x > x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x x ≥ x be * * -1 3 depth x ¬ swap ≤ ∨ depth 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 -3 -1 4 5 F -1 < 1 x x x dec neg x F pop 4 x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "inc x 7 x dec -3 x F T x neg copy swap < x x pop 4 x x x -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ x F -2 9 eql x -10 F 9 F x ≥ x ¬ ungreedy T x ungreedy x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc x x x x 5 -9 ≤ 3 > dec neg x ¬ 1 -1 x -10 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ ¬ x 0 9 * x ≥ pop x T x x T 2 greedy? -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x T 9 x -1 eql x x ∧ F -1 x be neg T -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 T x swap x be * * x -8 copy dec -2 F x T 2 x -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "T + F swap -2 F x depth x -4 -1 ≥ -5 greedy? ¬ x 9 x swap ∨ 6 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x ≥ ¬ x 0 9 * if ≥ pop x T x x T 2 be -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 inc * 4 5 ≥ -1 < 9 ∨ -1 eql x dec F pop x -8 ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc be 4 F F x < x -4 -1 -4 x x ¬ -5 > -2 copy ∨ 6 -10 -9 -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x < 9 x -4 pop F x -1 x T -1 1 ∧ if -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ ≤ 6 x x 3 depth be * be x copy x x -9 -5 x x greedy > if -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 T -4 if -3 greedy be 9 copy x -5 copy greedy x -5 x 3 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "- - ¬ greedy? < > T greedy depth ungreedy T -6 F 3 eql F greedy? x -1 copy ungreedy -10 -9 -5 * 9 * dec 5 *"
# 1658: "F x x dec T F x < 9 T T pop * T greedy? x x 6 -6 dec ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-2 4 7 copy T dec x swap -8 x neg F greedy ∨ x -3 / + neg -1 x -10 inc -5 * 9 * dec 5 *"
# 1658: "5 neg eql neg 4 copy F swap 4 x -8 copy x -2 greedy? x greedy? ¬ dec ¬ x -10 inc -5 * 9 * dec 5 *"
# 1658: "x swap 6 x x 3 depth be * be depth copy dec x -7 F x T greedy? 6 x eql -9 -5 * 9 * dec 5 *"
# 1658: "T + 6 swap x F x depth x -4 -1 ≥ -5 x ¬ x 9 x ∧ T x -10 inc -5 * 9 * dec 5 *"
# 1658: "2 if pop x dec > ∨ < 9 3 -1 eql x dec F -5 pop -8 ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 6 x if -8 ≤ 9 5 8 * F depth -6 F ¬ > 4 - x -9 -8 -9 -5 * 9 * dec 5 *"
# 1658: "≤ 4 -5 * T < -7 -7 * x T -10 -5 T 6 -8 F x 6 4 -9 -10 if -5 * 9 * dec 5 *"
# 1658: "inc dec -6 ∧ T -4 x ¬ x x depth copy dec x -7 F x T greedy? T x eql -9 -5 * 9 * dec 5 *"
# 3545: "-7 * F x + x 9 -10 ≥ x 7 T -1 x 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 17696: "* x x inc swap ¬ -9 * * 6 be -1 T -10 x x < x if -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 39277: "T dec 6 swap -8 9 x ungreedy * x x + 8 x 6 -2 + 9 x * 3 - / 0 x x * dec 5 *"
# 42896: "≤ 4 -5 * T < -7 -7 * x T -10 -5 T 6 -8 F x 6 4 -9 -10 if -5 * 9 - - -8 ≥"
14681,42917,67
14682,42854,71
14683,43148,72
14684,42854,68
14685,43148,82
14686,43817,79
14687,43862,87
14688,3545,80
14689,32690,81
14690,43127,81
14691,44845,86
14692,1658,73
14693,46907,82
14694,43652,79
14695,85652,82
14696,1658,104
14697,47852,75
14698,1658,75
14699,51464,87
14700,47852,80
14701,7630,78
14702,21000000,81
14703,50208,80
14704,40565,89
14705,76958,78
14706,43022,79
14707,81011,76
14708,1652,79
14709,43232,76
14710,1658,83
14711,50403,75
14712,5033,94
14713,45430,79
14714,55878,82
14715,43127,78
14716,42917,95
14717,42917,76
14718,60613,82
14719,43022,86
14720,5222,78
14721,48797,100
14722,1658,67
14723,1658,73
14724,40427,90
14725,1663,76
14726,43022,76
14727,44072,78
14728,11851,98
14729,42917,75
14730,1658,83
14731,43022,73
14732,1658,78
14733,1657,92
14734,42182,92
14735,42917,79
14736,1658,85
14737,47852,80
14738,24227,73
14739,42854,68
14740,34622,89
14741,527468,88
14742,42182,99
14743,43732,82
14744,43127,77
14745,55878,76
14746,1658,88
14747,42917,73
14748,51506,75
14749,12530,113
14750,59290,88
14751,8501318,88
14752,13475,87
14753,1658,89
14754,1663,88
14755,43127,79
14756,60961,87
14757,62027,79
14758,43022,80
14759,21000000,86
14760,56319,94
14761,126812,93
14762,46907,75
14763,1658,82
14764,26012,100
14765,1658,89
14766,42852,90
14767,87401,86
14768,42812,82
14769,43085,78
14770,1658,87
14771,21000000,84
14772,42707,82
14773,47852,106
14774,55878,103
14775,21000000,75
14776,42749,91
14777,1658,87
14778,47852,75
14779,74578,103
14780,47852,82
14781,24878,80
14782,43127,88
14783,25123,81
14784,47852,81
14785,103313,85
14786,55878,85
14787,38801,101
14788,1658,89
14789,34643,78
14790,90377,81
14791,43106,84
14792,1662,105
14793,43203,84
14794,55878,81
14795,1658,79
14796,1658,90
14797,1652,80
14798,43400,91
14799,802262,91
14800,42927,89
14801,85022,101
14802,1658,97
14803,4157,80
14804,63511,77
14805,169498,94
14806,43022,84
14807,42791,84
14808,43148,80
14809,43022,85
14810,53252,75
14811,43127,90
14812,44387,102
14813,1658,82
14814,49299,94
14815,7630,89
14816,59910,99
14817,1658,87
14818,43211,74
14819,46214,85
14820,43022,71
14821,1658,78
14822,90823,88
14823,19502,77
14824,7595,86
14825,43211,70
14826,42896,84
14827,2001093,84
14828,1658,91
14829,1658,85
14830,42917,97
14831,43127,79
14832,17927,79
14833,102704,88
14834,53497,89
14835,55878,72
14836,42707,82
14837,1663,80
14838,42749,95
14839,98623,83
14840,47852,72
14841,46817,78
14842,9254,86
14843,43022,82
14844,1658,81
14845,1658,91
14846,1658,98
14847,53497,84
14848,43118,101
14849,1658,79
14850,3545,81
14851,34643,84
14852,47698,101
14853,43694,80
14854,4157,91
14855,43127,77
14856,1652,82
14857,24913,75
14858,1658,85
14859,1658,82
14860,47852,87
14861,43127,89
14862,43148,85
14863,49378,87
14864,14777,75
14865,23392,83
14866,39998,85
14867,43022,75
14868,43022,85
14869,1658,75
14870,42896,86
14871,1663,81
14872,42287,84
14873,42728,87
14874,40565,90
14875,90377,93
14876,62377,83
14877,55878,90
14878,51632,77
14879,1658,74
14880,1672,91
14881,47852,97
14882,43022,93
14883,1658,97
14884,42357,90
14885,45827,73
14886,49721,87
14887,47852,83
14888,47968,74
14889,1658,83
14890,60063,74
14891,1658,81
14892,19397,81
14893,55531,82
14894,43022,86
14895,62027,77
14896,42252,99
14897,51632,83
14898,1658,82
14899,43967,102
14900,43022,85
14901,1658,97
14902,9254,89
14903,43022,79
14904,1658,80
14905,41227,85
14906,1658,90
14907,1658,96
14908,1658,84
14909,1658,86
14910,14777,78
14911,15778,82
14912,42686,93
14913,42917,74
14914,1658,84
14915,42182,76
14916,55878,91
14917,43022,100
14918,53497,85
14919,39277,76
14920,1658,85
14921,5327,83
14922,43293,98
14923,42287,72
14924,35462,86
14925,34622,85
14926,43022,87
14927,4157,80
14928,43022,85
14929,1662,89
14930,1658,84
14931,43022,73
14932,37457,89
14933,52932,83
14934,20293,77
14935,37007,86
14936,11851,95
14937,1658,87
14938,42917,100
14939,69566,85
14940,47852,78
14941,1658,78
14942,43022,98
14943,3545,101
14944,21000000,94
14945,1658,70
14946,76790,75
14947,42833,85
14948,42917,75
14949,54610,90
14950,24846,84
14951,42917,76
14952,14777,82
14953,42917,68
14954,43634,88
14955,53497,83
14956,43127,77
14957,2576,80
14958,58030,85
14959,1658,96
14960,55878,85
14961,43127,77
14962,42917,82
14963,74872,96
14964,34643,78
14965,1658,76
14966,1658,81
14967,1658,81
14968,1658,106
14969,42896,93
14970,44072,83
14971,42770,84
14972,1657,95
14973,43022,78
14974,1658,86
14975,80717,78
14976,43003,99
14977,1658,85
14978,21000000,82
14979,1658,82
14980,5033,89
14981,42749,99
14982,43022,90
14983,1658,74
14984,30317,79
14985,73822,90
14986,5033,80
14987,1658,72
14988,1657,92
14989,43442,76
14990,1658,94
14991,44198,78
14992,17696,89
14993,1658,70
14994,17696,89
14995,3545,87
14996,43127,77
14997,1652,86
14998,41923,79
14999,47117,90
15000,1658,78
15001,43085,84
15002,43127,73
15003,21917,80
15004,95627,87
15005,44665,87
15006,51632,78
15007,1658,70
15008,1658,76
15009,43442,98
15010,84917,85
15011,43127,76
15012,3545,80
15013,41762,82
15014,42707,91
15015,42287,91
15016,43022,87
15017,1657,95
15018,19502,79
15019,93436,85
15020,54361,84
15021,1658,87
15022,28007,89
15023,43022,77
15024,42917,102
15025,43064,82
15026,85232,93
15027,42252,83
15028,47852,85
15029,43022,77
15030,43022,86
15031,43817,78
15032,42677,76
15033,43817,104
15034,42833,88
15035,1658,78
15036,42917,91
15037,43127,97
15038,1658,84
15039,47852,78
15040,1658,87
15041,21000000,84
15042,84371,80
15043,52577,90
15044,1658,84
15045,93926,78
15046,1658,86
15047,21000000,87
15048,43022,79
15049,80927,80
15050,40397,89
15051,43165,83
15052,43127,79
15053,77102,77
15054,44177,75
15055,53497,74
15056,15013060,78
15057,1658,90
15058,110999,92
15059,1658,92
15060,85022,86
15061,16072,83
15062,43022,83
15063,48797,73
15064,1658,86
15065,43022,89
15066,47852,98
15067,1658,87
15068,55968,87
15069,14777,87
15070,4157,81
15071,77672,91
15072,58982,86
15073,1657,97
15074,19502,79
15075,42791,82
15076,43127,81
15077,1658,74
15078,1672,83
15079,14777,88
15080,42917,88
15081,7630,85
15082,42917,76
15083,84238,81
15084,16072,78
15085,21000000,85
# After 7400 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T F < -5 4 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x depth * ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec -5 x 4 * -5 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "x < 6 x eql 3 x 5 T ≤ 3 F inc 6 3 * x F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 inc F x < 9 eql -1 be F T greedy? F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ F ∨ ¬ 8 eql > 1 x 5 1 -4 eql 8 x T x -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc * 4 5 F x < 9 eql -1 pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1657: "depth 9 -6 T -9 x x - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 F pop ∨ 4 ≥ neg - T ungreedy -5 copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "∨ ≤ 6 x x 3 depth be * be 7 copy x greedy x T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 x depth * ¬ x 0 F 9 be 7 copy x greedy + T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x -2 > - eql T dec - T ungreedy -5 copy x greedy? x T T 2 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 -5 -1 T F < pop 4 > -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 T x swap x be * * x -8 copy dec -2 F x T 2 x -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x swap 6 x depth 3 depth be * be T copy * x -7 F T T greedy? - if -10 inc -5 * 9 * dec 5 *"
# 1658: "> inc inc T if ungreedy x - T greedy - eql x F x x x x eql x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x x copy F neg x -5 copy greedy x -5 ≤ be -1 x -10 -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec x greedy? T x < 9 eql -1 pop F 8 T T x ¬ greedy? x -3 T -9 -5 * 9 * dec 5 *"
# 1658: "pop T 7 x F -3 - 4 9 -4 -1 neg copy swap -9 be 4 T be pop T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc pop if -3 greedy be x copy x > copy greedy x -5 4 3 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x x 5 F x ungreedy x x x < -3 x > x 5 ¬ swap x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x 5 6 x eql 2 x 0 x -4 pop -1 depth -6 x > swap * swap -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "T x depth * ¬ x -7 -7 * x T -10 -5 T 6 T swap 2 swap -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "F copy x dec T F x copy 9 T T pop * T greedy? x x x eql x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy ≥ T 4 neg / -9 * * 6 depth copy x x -7 F x T 1 T -8 eql -9 -5 * 9 * dec 5 *"
# 1658: "< * x x + ≥ swap dec 1 x < x dec neg x ∧ pop x x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "-5 dec -6 ∧ if x x ¬ 2 ≥ - eql x x F x x 6 x ∨ x -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x x ≥ x be * * -1 3 depth x ¬ swap ≤ ∨ depth 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "eql + greedy? be ∨ -6 copy x x 8 8 pop - inc x * -1 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x -6 T if ungreedy x x x ungreedy -9 -6 F 7 -10 -3 inc x x inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "if pop dec ∧ 0 T x x F ¬ * -1 depth -6 x x x F 8 ungreedy pop eql -9 -5 * 9 * dec 5 *"
# 1658: "x F ¬ x 5 -3 greedy ¬ 9 x -1 neg 5 ∨ -9 be ≥ x > x x -10 inc -5 * 9 * dec 5 *"
# 1658: "7 inc pop ∨ 4 ≥ swap x 1 x 4 x 5 x ¬ ungreedy dec x ∧ T x -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 -7 F x < 9 eql ≥ pop ¬ T x x T 2 greedy? -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "be x 5 copy 0 / -9 * * 6 depth copy dec x -7 F x T greedy? T -8 eql -9 -5 * 9 * dec 5 *"
# 1658: "greedy copy -6 - T x x 5 T ≤ x F inc 6 3 * -4 dec F / ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x dec x F x copy swap T T pop * T greedy? x x x eql dec ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "x x 5 - 0 x x * ungreedy 6 be -1 T greedy x > x F swap -10 -3 -10 inc -5 * 9 * dec 5 *"
# 1658: "T + greedy? swap x F x swap F ¬ * -1 depth x x x x F 8 greedy? pop eql -9 -5 * 9 * dec 5 *"
# 1658: "x x x x 5 F 7 x 9 -1 x x T T 3 F x x 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "+ 0 6 x 4 3 depth be * be x copy x x -9 -6 x x greedy T if -10 inc -5 * 9 * dec 5 *"
# 1658: "∨ ≤ F x 5 3 depth be * be 7 copy x greedy x T T > greedy be T -10 inc -5 * 9 * dec 5 *"
# 1658: "inc x 7 copy T -7 7 swap -8 x neg F greedy ∨ T x -7 ≥ + F T -10 inc -5 * 9 * dec 5 *"
# 1658: "pop -9 dec x greedy? T F T 0 x T x greedy? x > -3 - 6 -6 dec ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x ¬ F F 0 F greedy? T 9 -9 swap * -10 F inc x 5 ¬ swap ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "¬ inc pop ∨ 4 ≥ swap x 1 x 4 F inc T F < pop 4 > F ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x pop if x ≥ swap 9 6 -6 x - x if F neg x depth > x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ x x x eql 3 x ≤ T ≤ 3 ¬ inc x 3 * x F x x copy ≥ -9 -5 * 9 * dec 5 *"
# 1658: "-8 inc * 3 5 F x swap F ¬ * -1 depth x dec x x F F greedy? pop eql -9 -5 * 9 * dec 5 *"
# 1658: "x x x be ∨ 8 copy x x 8 3 pop - inc x * -1 4 - x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "depth 9 -6 T -9 x x - T pop -5 copy x greedy x T T 2 eql -10 F F inc -5 * 9 * dec 5 *"
# 1658: "x 4 inc ≤ ≤ -4 x / x x depth copy dec x -7 F x T greedy? T 3 eql -9 -5 * 9 * dec 5 *"
# 1658: "F F pop F -6 T swap ∧ 1 x 4 x x T x x T 2 x -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc * 4 5 F x < 9 x -4 pop F x -1 x T -1 1 ∧ if -10 inc -5 * 9 * dec 5 *"
# 1658: "depth 9 -6 T -9 x x - T 6 -5 copy -7 x F pop x -8 ∧ x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x -6 T if ungreedy x greedy T ungreedy -6 -6 F 7 -10 pop inc x x inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < ¬ -8 greedy? x ∧ T -9 -5 * 9 * dec 5 *"
# 1658: "F x x dec T F x < 9 T T pop * T greedy? x x 6 -6 dec ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "¬ inc pop ∨ eql 3 x ≤ 9 F 3 F inc 8 3 F x F x x + -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x * 4 if if ungreedy -3 -10 -3 be T F 7 -1 F 4 T be x 8 depth -9 -5 * 9 * dec 5 *"
# 1658: "T + greedy? swap x F x < if -4 < -6 ∧ 7 ∨ 4 7 -5 x ≥ T -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x x ≥ ¬ x 0 9 * if ≥ pop x T x x T 2 be -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "- - ¬ greedy? < > T greedy depth ungreedy T copy F 3 eql pop greedy? x -1 copy x -10 -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc 9 -6 x if x ¬ x x depth if dec x -7 F x x greedy? T x eql -9 -5 * 9 * dec 5 *"
# 1658: "¬ x x x eql 3 x ≤ T ≤ 3 F inc x 3 * x F x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "F x 4 swap 3 -8 swap x - 3 -5 -1 ¬ inc ¬ -5 -4 copy ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x inc -4 if 5 F x T 9 x -1 eql x x ∧ F -1 x be neg T -10 inc -5 * 9 * dec 5 *"
# 1658: "x -5 -4 9 inc 5 T x T be x be 5 -3 T dec T x eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "/ - dec * ¬ x ¬ 9 * x -6 pop -6 x F x x x F ∨ x -10 inc -5 * 9 * dec 5 *"
# 1658: "swap inc -4 copy 4 ≥ swap x 1 -6 ¬ - -3 if ungreedy neg -8 T 3 x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x x ≥ x be * * x ∨ copy x inc x 8 T 2 swap eql < -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 6 F x * 9 eql -1 be F T greedy? F 4 -5 x ≥ -6 -10 inc -5 * 9 * dec 5 *"
# 1658: "x - inc x x x x 5 -9 ≤ 3 > dec neg x ¬ 1 -1 x -10 neg -10 inc -5 * 9 * dec 5 *"
# 1658: "x 4 4 ≤ 1 -4 x / x x depth copy dec x -7 F 4 -2 + x T -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc be 4 F F x < x -4 -1 -4 x x ¬ dec > -2 copy ∨ 6 -10 -9 -5 * 9 * dec 5 *"
# 1658: "if ∨ x x 4 eql x x < greedy eql dec dec x x F F -2 ≤ x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "F dec dec x ¬ x 0 -9 1 x -1 dec x ∧ x F eql 8 x T ∧ -10 -9 -5 * 9 * dec 5 *"
# 1658: "inc x 7 x dec -3 x F T x neg copy swap < x x pop 4 x x x -10 inc -5 * 9 * dec 5 *"
# 7595: "inc dec dec ∧ ¬ x be 9 * be ∨ copy x inc swap T T 2 swap 2 x -6 T -5 * 8 * inc depth *"
# 9254: "-1 -2 > - eql dec x 6 * x x x -5 T greedy? T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 14777: "x inc x x inc + 2 x -7 x -1 be F T greedy? F 4 -5 x ≥ -6 -10 swap -5 * 9 * dec 5 *"
15086,43022,67
15087,43190,72
15088,43022,66
15089,42896,63
15090,43148,72
15091,1658,80
15092,42938,106
15093,172859,82
15094,46974,76
15095,54361,79
15096,1652,91
15097,1658,88
15098,55878,82
15099,43127,80
15100,67424,88
15101,1658,76
15102,43022,78
15103,57617,86
15104,95102,88
15105,48230,80
15106,1658,79
15107,1658,79
15108,47852,72
15109,1658,77
15110,43127,93
15111,1658,84
15112,5033,78
15113,47852,80
15114,46907,82
15115,1658,77
15116,43148,70
15117,24514,83
15118,1658,89
15119,3545,92
15120,47852,76
15121,19502,82
15122,70693,85
15123,42917,80
15124,42665,92
15125,103670,91
15126,42182,87
15127,42182,86
15128,42854,74
15129,1658,74
15130,17717,84
15131,37646,93
15132,21917,98
15133,85442,80
15134,1658,76
15135,38801,83
15136,43022,73
15137,43190,79
15138,43022,73
15139,1658,94
15140,40292,77
15141,1658,86
15142,42182,83
15143,1658,75
15144,43127,95
15145,16072,74
15146,1658,99
15147,1657,86
15148,67277,88
15149,43106,103
15150,7630,82
15151,40586,77
15152,1658,92
15153,56882,98
15154,22127,75
15155,42791,76
15156,4157,78
15157,42959,89
15158,43022,82
15159,1658,96
15160,1658,94
15161,5327,76
15162,42077,92
15163,3545,77
15164,76244,77
15165,42665,91
15166,6167,93
15167,1658,85
15168,1658,89
15169,42833,92
15170,1657,96
15171,1658,84
15172,37562,80
15173,42896,72
15174,42854,83
15175,42182,92
15176,39373,83
15177,60961,78
15178,1652,82
15179,22127,79
15180,59290,90
15181,43190,86
15182,47852,74
15183,1658,112
15184,42182,82
15185,43022,80
15186,1652,88
15187,1657,86
15188,1658,78
15189,1658,76
15190,41951,91
15191,47852,108
15192,43127,91
15193,4157,90
15194,43127,77
15195,52577,94
15196,28952,79
15197,43127,78
15198,1658,78
15199,62027,72
15200,47852,83
15201,31829,91
15202,43127,80
15203,77147,75
15204,53362,83
15205,52577,95
15206,43022,88
15207,4157,82
15208,57197,79
15209,42917,87
15210,41237,98
15211,188398,87
15212,21000000,77
15213,59910,84
15214,1658,81
15215,90377,78
15216,1658,81
15217,43757,81
15218,94157,71
15219,169478,77
15220,53669,88
15221,42182,82
15222,42791,83
15223,21000000,82
15224,42917,68
15225,24514,80
15226,55878,74
15227,42917,95
15228,1658,84
15229,51485,99
15230,59910,91
15231,1658,86
15232,43817,81
15233,76202,79
15234,21000000,105
15235,42182,102
15236,43579,83
15237,4157,77
15238,43022,70
15239,32417,91
15240,21000000,76
15241,1730,69
15242,37877,86
15243,1658,84
15244,1658,86
15245,9254,79
15246,1658,78
15247,41132,88
15248,1658,75
15249,1658,84
15250,43022,84
15251,43442,86
15252,1663,82
15253,1658,77
15254,44072,83
15255,42728,90
15256,1658,85
15257,7630,84
15258,43127,84
15259,1658,86
15260,43127,81
15261,1658,83
15262,57302,94
15263,43022,72
15264,63917,85
15265,40964,102
15266,1658,77
15267,1658,76
15268,42854,88
15269,5033,90
15270,73717,82
15271,80927,87
15272,21000000,73
15273,65597,93
15274,74627,86
15275,43043,78
15276,74578,88
15277,42959,79
15278,1658,81
15279,77147,92
15280,43127,90
15281,42854,87
15282,1658,72
15283,21000000,84
15284,43022,84
15285,19502,75
15286,85855,81
15287,43022,90
15288,40754,85
15289,43127,75
15290,1652,97
15291,43022,82
15292,21000000,79
15293,1658,94
15294,1658,101
15295,1658,93
15296,51632,87
15297,43127,70
15298,1658,84
15299,47852,85
15300,1658,87
15301,1657,92
15302,1658,96
15303,180458,77
15304,14777,87
15305,42896,86
15306,52932,96
15307,1658,73
15308,59822,97
15309,57302,88
15310,108598,85
15311,84238,88
15312,56058,82
15313,1657,86
15314,4157,70
15315,43022,82
15316,42077,87
15317,42791,80
15318,42829,80
15319,43442,84
15320,1658,82
15321,94787,84
15322,43106,82
15323,73822,88
15324,1658,91
15325,44620,82
15326,13475,98
15327,1658,87
15328,17626,85
15329,43127,74
15330,52850,78
15331,1658,88
15332,44156,79
15333,63112,92
15334,10052,83
15335,1658,73
15336,43127,92
15337,221102,74
15338,49668,79
15339,5117,87
15340,41657,96
15341,43817,81
15342,43022,81
15343,42875,98
15344,38402,102
15345,43022,97
15346,43817,92
15347,43127,70
15348,1658,87
15349,42959,75
15350,1658,80
15351,42896,89
15352,21000000,87
15353,43022,76
15354,53497,77
15355,1663,75
15356,1658,94
15357,84917,85
15358,42770,90
15359,43190,74
15360,43817,78
15361,20293,88
15362,1658,77
15363,103334,95
15364,1652,90
15365,44072,85
15366,4157,93
15367,1658,88
15368,43190,69
15369,1658,84
15370,35630,80
15371,43817,91
15372,21000000,99
15373,47852,91
15374,76517,94
15375,11851,78
15376,42875,73
15377,125608,81
15378,42917,85
15379,26138,81
15380,1658,82
15381,24514,90
15382,38717,90
15383,128177,81
15384,43098,81
15385,62027,79
15386,43127,71
15387,1652,99
15388,1658,77
15389,1658,89
15390,1658,85
15391,43127,81
15392,42792,83
15393,1658,82
15394,1658,75
15395,1658,79
15396,1658,77
15397,42917,86
15398,43022,71
15399,1672,79
15400,43757,82
15401,223657,85
15402,51317,85
15403,47852,84
15404,43022,79
15405,1652,84
15406,4157,85
15407,43127,82
15408,90377,83
15409,43022,93
15410,47852,85
15411,21000000,80
15412,43211,93
15413,26408,74
15414,85652,96
15415,7630,82
15416,9254,88
15417,43022,78
15418,43022,85
15419,43001,87
15420,1658,72
15421,59928,94
15422,22127,84
15423,43127,79
15424,43967,71
15425,16072,85
15426,119378,78
15427,1658,84
15428,1658,80
15429,44156,81
15430,37268,95
15431,5033,82
15432,1658,73
15433,1658,88
15434,73822,82
15435,4157,83
15436,40292,83
15437,19502,79
15438,25207,93
15439,51317,100
15440,85547,81
15441,33418,78
15442,43127,81
15443,1658,87
15444,43127,85
15445,13475,86
15446,9254,82
15447,1658,78
15448,1658,90
15449,42287,79
15450,9506,86
15451,7630,94
15452,3545,75
15453,1658,87
15454,1658,82
15455,43127,76
15456,1652,93
15457,46974,74
15458,43118,76
15459,20293,96
15460,62027,86
15461,5117,90
15462,4157,95
15463,42917,80
15464,1652,91
15465,42917,81
15466,60137,90
15467,43022,79
15468,43022,83
15469,1658,81
15470,52052,88
15471,43127,92
15472,1658,72
15473,88155,89
15474,43085,84
15475,43127,90
15476,43127,85
15477,21000000,92
15478,221102,81
15479,1658,84
15480,1658,98
15481,3545,95
15482,41923,92
15483,35567,90
15484,1658,94
15485,16660,97
15486,43127,91
15487,43442,88
15488,76517,88
15489,43022,85
15490,43967,87
# After 7600 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "-7 inc 9 -6 6 if -9 ¬ eql x depth if dec x -7 F x x greedy? T - -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ F ∨ ¬ 9 eql -1 be F T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec -5 x 4 * -5 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T F < -5 4 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy ¬ 9 x -1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < be eql -1 pop F x -1 x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x be 9 * x F copy x x swap T T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg x -5 x greedy x -5 ≤ be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x depth * ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec ∧ T x -3 T x x T pop ≥ x 7 * x F inc -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ F ∨ ¬ 8 eql > 1 x 5 1 -4 eql 8 x T x -6 inc -5 * 8 * inc depth *"
# 1657: "-7 F pop ∨ 4 ≥ neg - T ungreedy -5 copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc x 7 x dec -3 x F > F neg copy x x x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 x depth * ¬ x 0 F 9 be 7 copy x greedy + T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "∨ ≤ 6 x x 3 depth be * be 7 copy x greedy x T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x -2 > - eql T dec - T ungreedy -5 copy x greedy? x T T 2 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x ¬ x be neg 8 copy x x 8 3 pop - inc x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 be x - x be * ≥ x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + greedy? -5 x F x swap F ¬ * greedy depth 8 x x T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "depth 9 -6 T -9 x x - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop -9 dec x greedy? F F T 0 x T x greedy? greedy? x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "depth 9 -6 0 x x x - T 6 -5 copy -7 x F pop -1 4 greedy? x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec 6 greedy? T x < 9 eql -1 pop x T greedy? x T 6 x x * -10 inc -5 * 9 * dec 5 *"
# 1658: "F copy x dec T F x copy 9 T T pop * T greedy? x x x eql x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x -6 x ≤ F ∨ ¬ T be x be greedy -3 T dec T T eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "¬ inc pop ∨ 4 ≥ swap x 1 x 4 F inc T F < pop 4 > F ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x copy -6 -7 ¬ x ¬ 9 * x -6 x -6 x F x x x F ∨ x -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ inc pop if / greedy be x copy x ∧ copy greedy 9 6 T eql be dec ≤ x T -9 -5 * 9 * dec 5 *"
# 1658: "greedy x -6 3 if ungreedy x greedy - ungreedy -6 -6 F 7 -10 -7 inc x x inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x -6 x greedy? -4 x < x eql -1 pop - inc T * x -8 ∧ T ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x ungreedy 3 x 5 x be * * x 3 depth x ¬ swap ≤ ungreedy depth 3 -10 ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "if pop dec ∧ 0 T x x F ¬ * -1 depth -6 x x x F 8 ungreedy pop eql -9 -5 * 9 * dec 5 *"
# 1658: "T 5 depth * -5 x be 9 < x F x - inc T * x -8 ∧ T ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "if * 4 swap 5 x T x - x -1 eql F x -1 F 4 if + F T -10 inc -5 * 9 * dec 5 *"
# 1658: "x + ≤ 3 x x be * * x ∨ copy x inc x 8 T 2 swap eql F -10 inc -5 * 9 * dec 5 *"
# 1658: "F x 4 swap * -8 swap x - 3 x -1 ¬ if ¬ -5 -4 copy ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "ungreedy x 5 - 0 x x * ungreedy x < x -5 neg x ∧ pop - x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < ¬ -8 greedy? x ∧ T -9 -5 * 9 * dec 5 *"
# 1658: "x inc x x 5 F T < ¬ x -4 pop ¬ x -1 x 5 ¬ ungreedy ¬ pop -10 inc -5 * 9 * dec 5 *"
# 1658: "+ 0 6 swap 4 3 depth be * be x copy x x -9 -6 5 x -8 x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 -7 F x < 9 eql ≥ pop ¬ T x x T 2 greedy? -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "¬ x x 1 eql 3 x ≤ ≤ ≤ 3 F inc x 3 F 4 x be x 8 depth -9 -5 * 9 * dec 5 *"
# 1658: "x 5 6 x neg 2 x 0 x -4 pop -1 x -6 x > swap * swap -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy -6 - T x x 5 T ≤ x F inc 6 3 * -4 dec F / ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x pop if x ≥ swap 9 6 -6 x - x if F neg x depth > x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x depth * ¬ T -7 - * x x x -5 1 x pop ∨ depth 3 x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc 9 -6 x if x ¬ x x depth if dec x -7 T x x greedy? T x eql -9 -5 * 9 * dec 5 *"
# 1658: "-7 inc 9 x 5 F T * 9 x -4 pop F x -1 x 5 ¬ ungreedy ¬ T -10 inc -5 * 9 * dec T *"
# 1658: "eql + x 0 ∨ -6 copy x x 8 x pop - inc x * x -8 ∧ x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x x 5 x x x x x x < -3 x copy ∧ x x greedy T 2 -10 inc -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T greedy? T x ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x x 5 F x ungreedy x x x < -3 x > x 5 ¬ swap x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x -6 T if / x x x ungreedy -9 -6 F 7 -10 -3 inc x ≥ inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ x x x eql 3 x ≤ T ≤ 3 ¬ inc x 3 * x F x x copy ≥ -9 -5 * 9 * dec 5 *"
# 1658: "x 4 T -2 swap 7 be * * x -8 copy x -2 F x T 2 x -10 T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "T x depth * ¬ x -7 -7 * x T -10 -5 T 6 T swap 2 swap -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "-1 -2 > - eql dec x 6 * x x be 5 inc swap T x F F -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x x ≥ F x < 8 -4 ¬ x -3 if ungreedy neg -2 T 3 x F -10 inc -5 * 9 * dec 5 *"
# 1658: "¬ x x x eql 3 x ≤ T ≤ 3 F inc x 3 * x F x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "depth - ¬ greedy? < > T dec depth ungreedy T copy F 3 eql pop greedy? ungreedy -1 copy x -10 -9 -5 * 9 * dec 5 *"
# 1658: "be x 5 > 0 / -9 * x -3 be T F 7 -1 F F T be x 8 depth -9 -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ if x x ¬ 2 -1 - eql x x -6 F x T greedy? x if -10 inc -5 * 9 * dec 5 *"
# 1658: "x ¬ F F 0 F greedy? T 9 -9 swap * -10 F inc x 5 ¬ swap ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 ungreedy * 4 inc F x < 9 eql -1 be F T greedy? swap 4 T be pop T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "T x depth * ¬ neg -7 -7 * x T -10 -5 T x F eql 8 be T ∧ be -9 -5 * 9 * dec 5 *"
# 1658: "F x x ∧ - x - + x -6 1 -3 T 9 x ≤ ∨ depth 3 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec x greedy? T x T 9 eql -1 0 x T greedy? x T 6 3 x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 depth * be x F / swap F ¬ * -1 depth x dec x x F F greedy? x eql -9 -5 * 9 * dec 5 *"
# 1658: "swap inc -4 copy 4 ≥ swap x 1 -6 ¬ - -3 if ungreedy neg -8 T 3 x F -10 inc -5 * 9 * dec 5 *"
# 1658: "eql + neg 0 T x copy x x 8 x pop x T -9 dec T x eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "- -3 -1 4 eql F x copy 9 x T F inc x 3 * x x ≥ inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 ungreedy * 4 inc -4 x < 9 eql -1 be F T greedy? dec 4 x x -10 T 9 -9 -5 * 9 * dec 5 *"
# 1658: "-4 copy x dec T F x copy 9 T T pop < T greedy? x x 7 eql dec -8 eql -9 -5 * 9 * dec 5 *"
# 1658: "pop dec dec x greedy? T x < 9 eql -1 pop x ≥ greedy? x -10 6 -6 -10 * -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec x greedy? T -4 < T eql -1 pop greedy 8 ∨ ≤ x x x dec ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 x / x + F -6 / 1 x 4 x -1 T x * x T + / ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "depth 9 -6 T -9 x x - T pop -5 copy x greedy x T T 2 eql -10 F F inc -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ greedy? T x T 9 eql -1 0 x -3 greedy? x x 6 - ≤ T -10 inc -5 * 9 * dec 5 *"
# 14777: "pop dec dec ∧ T x 2 -4 -7 x -1 be F T greedy? -2 4 neg x ≥ -6 -10 swap -5 * 9 * dec 5 *"
# 43022: "x inc pop ∨ 4 ≥ swap x pop x T pop 7 T greedy? x -6 x -3 -3 x x - + 7 x - 1 * x"
15491,43022,72
15492,42896,66
15493,43211,82
15494,43190,70
15495,43043,74
15496,101969,96
15497,43022,74
15498,42833,79
15499,24527,88
15500,34433,85
15501,42329,85
15502,224210,75
15503,19502,98
15504,42896,73
15505,42266,74
15506,43022,74
15507,52297,79
15508,1658,77
15509,7630,95
15510,15778,90
15511,1658,84
15512,11851,84
15513,42182,90
15514,43127,87
15515,42770,87
15516,3545,84
15517,3545,84
15518,1652,103
15519,21000000,78
15520,1658,88
15521,21000000,80
15522,43127,87
15523,70693,87
15524,42182,84
15525,1833,94
15526,51632,89
15527,1658,85
15528,53497,86
15529,43022,84
15530,34067,78
15531,51317,100
15532,42728,88
15533,19502,87
15534,15778,100
15535,1658,105
15536,76412,85
15537,5033,94
15538,1658,88
15539,43127,71
15540,43022,86
15541,43043,77
15542,1658,86
15543,5033,80
15544,77777,87
15545,43118,92
15546,51122,77
15547,3545,77
15548,43127,80
15549,42602,72
15550,21917,89
15551,52330,76
15552,1658,83
15553,43022,75
15554,43022,76
15555,1658,74
15556,16072,89
15557,1658,71
15558,43127,70
15559,56357,90
15560,42770,79
15561,43232,100
15562,42182,92
15563,38402,93
15564,43547,83
15565,42182,79
15566,26138,89
15567,43022,87
15568,79163,86
15569,57363,93
15570,19502,78
15571,47950,89
15572,283367,66
15573,9422,87
15574,1658,83
15575,34538,86
15576,42182,83
15577,47852,91
15578,85232,83
15579,1658,79
15580,43022,89
15581,21000000,99
15582,1657,89
15583,42707,87
15584,42707,85
15585,116788,91
15586,47642,84
15587,43442,94
15588,221102,71
15589,1658,87
15590,39053,96
15591,42938,84
15592,42833,97
15593,43211,87
15594,43022,90
15595,71086,96
15596,41132,92
15597,43022,86
15598,43337,86
15599,42182,79
15600,21000000,76
15601,44366,99
15602,42917,88
15603,37954,81
15604,42749,97
15605,48167,95
15606,1657,82
15607,43190,76
15608,43022,70
15609,43022,86
15610,43295,84
15611,43098,73
15612,1657,84
15613,1657,102
15614,88277,96
15615,7630,98
15616,43022,68
15617,42392,86
15618,13727,98
15619,42238,79
15620,2450,81
15621,55878,71
15622,1658,73
15623,44845,89
15624,4252,91
15625,1658,80
15626,42917,105
15627,1657,84
15628,31129,90
15629,43022,88
15630,47117,83
15631,41188,91
15632,43022,91
15633,41321,93
15634,43022,85
15635,1658,94
15636,43127,79
15637,51632,89
15638,40754,93
15639,7630,82
15640,68362,79
15641,85652,97
15642,76202,80
15643,1658,81
15644,43211,83
15645,42917,88
15646,1658,78
15647,1658,81
15648,85652,75
15649,42077,92
15650,42182,79
15651,13475,93
15652,15925,93
15653,1658,84
15654,43022,92
15655,43001,81
15656,3545,82
15657,40502,80
15658,32956,92
15659,43022,86
15660,43022,82
15661,42896,80
15662,43757,89
15663,16408,72
15664,28735,77
15665,43757,87
15666,42791,89
15667,3545,86
15668,9107,87
15669,1658,96
15670,47852,82
15671,42917,90
15672,1658,82
15673,47852,81
15674,1658,92
15675,44072,74
15676,1658,76
15677,42833,96
15678,43022,83
15679,1658,88
15680,43547,87
15681,43127,84
15682,110894,72
15683,38402,89
15684,1658,81
15685,43127,79
15686,1658,110
15687,1658,88
15688,1652,84
15689,235501,89
15690,43022,76
15691,43022,82
15692,3545,86
15693,16408,75
15694,49743,82
15695,43022,94
15696,1658,96
15697,40565,82
15698,55878,87
15699,26831,91
15700,42182,70
15701,42077,87
15702,41818,84
15703,42917,78
15704,43627,84
15705,42749,96
15706,55878,72
15707,43022,71
15708,55878,89
15709,1658,75
15710,3545,104
15711,47852,89
15712,42875,96
15713,53497,76
15714,101584,95
15715,30957703,81
15716,34538,78
15717,1658,80
15718,1658,85
15719,43022,88
15720,52031,93
15721,53627,85
15722,42833,81
15723,21917,73
15724,43022,74
15725,76202,83
15726,42182,82
15727,21000000,88
15728,4157,92
15729,101717,90
15730,1658,86
15731,43127,88
15732,20153,86
15733,7630,83
15734,43127,82
15735,5117,80
15736,53497,80
15737,1658,81
15738,43127,84
15739,1658,79
15740,25207,94
15741,43127,79
15742,47852,84
15743,1658,85
15744,43817,111
15745,43118,82
15746,42791,81
15747,43400,76
15748,34622,85
15749,76958,86
15750,43817,79
15751,47852,87
15752,21000000,75
15753,17696,85
15754,44786,87
15755,21917,87
15756,22771,85
15757,1658,78
15758,42917,79
15759,35903,97
15760,1658,78
15761,34517,88
15762,42875,90
15763,1658,96
15764,1657,94
15765,7546,84
15766,1658,74
15767,43172,74
15768,19502,82
15769,40369,82
15770,1658,85
15771,42917,95
15772,41818,104
15773,21917,79
15774,76202,78
15775,53673,93
15776,9254,88
15777,3545,87
15778,43817,82
15779,57302,87
15780,1657,88
15781,1658,81
15782,42917,88
15783,4157,70
15784,753453,76
15785,42875,99
15786,48759,81
15787,19502,89
15788,45437,87
15789,43022,85
15790,45017,80
15791,1658,111
15792,1658,79
15793,1658,81
15794,54361,87
15795,19397,103
15796,468272,84
15797,5033,100
15798,49787,84
15799,19502,89
15800,49742,97
15801,42917,81
15802,1658,88
15803,36995,94
15804,64862,84
15805,43127,86
15806,1658,83
15807,1658,84
15808,1657,99
15809,19502,86
15810,55878,84
15811,21000000,72
15812,14777,84
15813,43022,89
15814,9254,76
15815,43817,73
15816,1658,83
15817,43127,80
15818,42434,78
15819,55968,92
15820,72884,90
15821,80717,92
15822,35462,89
15823,24227,89
15824,43203,93
15825,1658,81
15826,42854,78
15827,222146,82
15828,1658,74
15829,43022,85
15830,1658,73
15831,36470,87
15832,42917,85
15833,4157,95
15834,42833,95
15835,1658,80
15836,42917,89
15837,1368855,83
15838,57295,81
15839,21917,79
15840,1658,77
15841,1658,78
15842,5033,93
15843,43022,75
15844,1658,100
15845,43303,87
15846,42266,73
15847,1658,78
15848,1657,86
15849,21000000,86
15850,43118,87
15851,52577,83
15852,21000000,81
15853,42917,85
15854,43022,83
15855,3545,78
15856,62027,80
15857,42182,78
15858,5327,84
15859,42077,78
15860,49637,74
15861,3545,97
15862,55878,80
15863,43022,85
15864,63917,79
15865,42728,98
15866,58786,91
15867,3384514,112
15868,1657,82
15869,23870,82
15870,51527,80
15871,43211,83
15872,21000000,83
15873,43127,86
15874,56126,93
15875,42917,84
15876,38297,85
15877,43127,83
15878,62027,85
15879,1658,77
15880,42728,120
15881,43043,78
15882,43127,80
15883,56126,83
15884,53497,94
15885,33677,101
15886,42182,91
15887,1658,82
15888,47852,70
15889,31948,86
15890,57363,84
15891,1658,94
15892,53497,78
15893,1658,79
15894,94178,91
15895,9254,105
# After 7800 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ F ∨ ¬ 9 eql -1 be F T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy ¬ 9 x -1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x be 9 * x F copy x x swap T T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T F < -5 4 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x depth * ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg x -5 x greedy x -5 ≤ be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 + greedy? -3 greedy ¬ 9 x -1 < 5 ∨ depth be T 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc 9 -6 6 if -9 ¬ eql x depth if dec x -7 F x x greedy? T - -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec -5 x 4 * -5 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < be eql -1 pop F x -1 x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1657: "∨ ≤ 6 x x 3 depth be * be 7 copy x greedy x T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 dec F x copy 9 x T pop inc x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "-9 x depth * ¬ x 0 F 9 be 7 copy x greedy + T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "8 x -10 3 x 5 5 eql ≥ 4 F x -8 x inc x + -5 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≥ if pop if x 5 F eql x 4 x x -8 x inc x + -5 swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "greedy 5 6 x neg 2 x x x ∧ pop -1 greedy? greedy? x T T depth 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "depth 9 -6 T -9 x x - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x ¬ x be neg 8 copy x x 8 3 pop - inc x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x -2 > - eql T dec - T ungreedy -5 copy x greedy? x T T 2 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc pop ∨ 4 pop x swap x 0 * greedy x + F x T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop -9 dec x greedy? F F T 0 x T x greedy? greedy? x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc dec dec T greedy? T x T 9 eql -1 0 x -3 ∨ x x 1 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 be x - x be * ≥ x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 x inc x + -5 ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 F pop ∨ 4 ≥ x swap F 0 * greedy x + x x T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "greedy copy -6 - T x x 5 T ≤ x F inc 6 3 * -4 dec F / ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x pop copy ≤ x T x - x -1 eql F x -1 F 4 if + F -10 -10 inc -5 * 9 * dec 5 *"
# 1658: "-5 x / x + greedy? -6 -10 1 x 4 x / T x * x T + / ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x copy -6 -7 ¬ x ¬ 9 * x -6 x -6 x F x x x F ∨ x -10 inc -5 * 9 * dec 5 *"
# 1658: "F x 4 swap * -8 swap x - 3 x -1 ¬ if ¬ -5 -4 copy ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 5 6 x neg 2 x 0 x -4 pop -1 x -6 x > x T swap inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "T 5 dec x x x F 9 < x F inc x inc > x x x eql x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "0 * 4 swap 5 ≥ swap 9 6 -6 x - x if -4 neg x depth x x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "T + greedy? swap x F x -2 if > < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "F x x x 5 F x ungreedy x F neg copy -3 3 ¬ x -4 copy ∧ -1 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < ¬ -8 greedy? x ∧ T -9 -5 * 9 * dec 5 *"
# 1658: "-9 x depth * ¬ x 0 F 9 eql T pop ¬ T x -4 T 2 T -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 9 -6 T -9 x x - x pop -5 copy x greedy x T T -9 eql -10 F F inc -5 * 9 * dec 5 *"
# 1658: "depth 9 -6 T -9 x x - T pop -5 copy x greedy x T T 2 eql -10 F F inc -5 * 9 * dec 5 *"
# 1658: "T + greedy? swap x F x T if > x ¬ ∧ x 0 4 7 -5 x -7 -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 x depth * ¬ x 0 F 9 > 7 copy x pop + T T > * -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "x + greedy? swap F greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? -2 greedy? swap x greedy copy F dec if -5 - -3 / ungreedy x -8 T greedy? eql F -10 inc -5 * 9 * dec 5 *"
# 1658: "+ 0 6 swap 4 3 depth be * be x copy x x -9 -6 5 x -8 x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 3 dec 5 -9 * x ≥ x + x -9 inc -3 3 * 2 T x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x copy -6 - T x x 5 T ≤ x F inc 6 3 F -4 dec F / T -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc 9 x 5 F T * 9 x -4 pop F x -1 x 5 ¬ ungreedy ¬ T -10 inc -5 * 9 * dec T *"
# 1658: "pop dec T T greedy? T x < 9 eql -1 pop x 6 greedy? x T 6 swap eql F -10 inc -5 * 9 * dec 5 *"
# 1658: "-3 x x copy -5 * x F T x x inc x inc > * x -8 9 T ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 ungreedy * 4 inc F x 3 9 ungreedy -1 be F T greedy? swap x x swap T x -10 -9 -5 * 9 * dec 5 *"
# 1658: "x inc x x 5 F T < ¬ x -4 pop ¬ x -1 x 5 ¬ ungreedy ¬ pop -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 ungreedy * 4 inc F x < 9 eql -1 be F T greedy? swap 4 T be pop T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "depth - ¬ greedy? < > T dec depth ungreedy T copy F 3 eql pop greedy? ungreedy -1 copy x -10 -9 -5 * 9 * dec 5 *"
# 1658: "depth 9 -6 0 x x x - T 6 -5 copy -7 x F pop -1 4 greedy? x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "pop inc dec x greedy? T x < eql be x be x -3 x dec 3 T eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "- inc pop ∨ 4 ≥ ∨ x pop x 4 F inc T F < pop 4 > F ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x x 5 x x x x x x < -3 x copy ∧ x x greedy T 2 -10 inc -5 * 9 * dec 5 *"
# 1658: "be x 5 > 0 / -9 * x F be T T 7 -1 F 5 ¬ swap x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 + dec 3 x F be * * x ∨ copy x inc x 8 T 2 swap eql F -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy? -2 greedy? swap x greedy copy F neg x -5 - -3 / ungreedy neg -8 T greedy? F F -10 inc -5 * 9 * dec 5 *"
# 1658: "x -2 greedy? swap x greedy copy x x x x pop - inc x * ≥ -8 ∧ x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-4 3 dec 5 -9 * x x x + -6 -9 inc -3 3 * x T x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 ungreedy * 4 inc F F pop 9 ungreedy -1 be x -2 F x T 2 x -10 ungreedy ≥ -9 -5 * 9 * dec 5 *"
# 1658: "x x x be 5 F x ungreedy x x F x ∧ x 0 4 x -5 x -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "x -3 -1 4 eql F x copy 9 -4 ¬ -8 -3 if ungreedy neg -2 be 3 x F -10 inc -5 * 9 * dec 5 *"
# 1658: "¬ x x x eql 3 x ≤ T 8 3 x inc -3 3 * x F x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x F x x ≥ x ≤ * * x ∨ copy x inc x F eql 5 x T ∧ be -9 -5 * 9 * dec 5 *"
# 1658: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T greedy? < ungreedy ¬ 8 -10 inc -5 * 9 * dec 5 *"
# 1658: "F x x ∧ - x - + x -6 1 -3 T 9 x ≤ ∨ depth 3 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x ¬ F F 0 F greedy? T 9 -9 swap * -10 F inc x 5 ¬ swap ¬ -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 depth * be x - / swap F ¬ * + pop x dec x x F F greedy? x eql -9 -5 * 9 * dec 5 *"
# 1658: "¬ x x 1 eql 3 x ≤ ≤ ≤ 3 F inc x 3 F 4 x be x 8 depth -9 -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ inc 8 be 9 * eql F copy 1 x swap < pop greedy > F ungreedy -10 -9 -5 * 9 * dec 5 *"
# 1658: "x x x x 5 F x ungreedy x x x dec x inc T * x -8 1 T ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "F F ¬ - 0 -8 x * ungreedy ≥ < T -5 neg x ∧ pop - x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "F copy x dec T F x copy 9 T T pop * T greedy? x x x eql x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "pop dec dec ∧ T x 2 -4 -7 x x be F T greedy? swap 4 T be x T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "eql + neg 0 T x copy x x 8 x pop x T -9 dec T x eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 42917: "inc - dec inc x -3 x F > F neg copy x x x T T > swap -10 ungreedy -6 inc x * 8 * inc 5 *"
15896,42985,73
15897,43043,66
15898,43043,72
15899,43022,69
15900,42959,77
15901,43022,93
15902,10052,84
15903,34013,81
15904,1658,77
15905,43022,76
15906,43022,103
15907,1658,79
15908,43022,92
15909,43127,76
15910,43022,80
15911,49787,84
15912,43127,79
15913,1658,75
15914,28022,80
15915,5033,81
15916,43127,85
15917,42917,97
15918,1658,84
15919,36470,108
15920,96614,77
15921,7483,93
15922,42917,92
15923,1657,82
15924,42182,87
15925,1657,86
15926,1658,79
15927,1658,79
15928,43127,79
15929,1658,104
15930,42917,81
15931,93317,83
15932,44404,86
15933,5117,110
15934,43127,88
15935,13573,90
15936,5117,97
15937,42182,75
15938,1658,80
15939,55608,92
15940,42665,92
15941,3545,85
15942,47852,85
15943,43043,87
15944,41846,66
15945,1658,82
15946,42182,70
15947,43652,80
15948,42947,95
15949,1658,85
15950,50624,86
15951,19502,90
15952,52154,80
15953,41846,70
15954,118412,81
15955,1658,77
15956,85652,81
15957,1658,88
15958,110012,80
15959,1658,88
15960,53497,75
15961,26901,87
15962,1672,95
15963,43022,74
15964,38402,79
15965,1658,85
15966,1657,96
15967,42959,79
15968,42833,79
15969,44156,92
15970,805399,88
15971,56945,90
15972,1657,76
15973,43127,77
15974,42938,91
15975,42182,88
15976,1652,84
15977,55518,78
15978,34538,81
15979,43022,90
15980,1657,84
15981,43127,84
15982,31094,91
15983,20293,87
15984,42917,82
15985,47117,92
15986,38402,80
15987,42287,100
15988,1658,82
15989,46648,78
15990,1658,86
15991,43022,74
15992,43127,87
15993,1673,85
15994,38192,89
15995,15974,76
15996,50687,101
15997,3545,89
15998,54361,86
15999,42917,88
16000,43022,86
16001,127232,85
16002,43652,84
16003,54361,81
16004,72317,77
16005,11851,94
16006,1658,88
16007,42644,86
16008,50834,81
16009,43142,80
16010,46974,83
16011,32893,97
16012,1658,92
16013,1658,80
16014,1658,100
16015,42854,90
16016,53442,93
16017,43022,77
16018,1672,87
16019,11851,84
16020,43148,73
16021,48797,76
16022,1658,78
16023,43027,81
16024,219583,80
16025,1658,77
16026,1658,78
16027,43022,80
16028,1658,79
16029,136682,86
16030,43022,80
16031,201341,78
16032,43253,89
16033,1658,84
16034,18298,93
16035,42917,78
16036,80106,88
16037,43127,71
16038,48797,82
16039,4328,109
16040,43022,64
16041,1657,86
16042,85022,92
16043,47852,90
16044,1657,91
16045,61250,84
16046,43127,80
16047,1658,88
16048,1658,78
16049,40943,94
16050,5033,87
16051,43862,86
16052,43022,74
16053,19502,79
16054,32788,84
16055,43203,86
16056,10052,74
16057,1658,78
16058,1658,96
16059,1658,85
16060,47663,86
16061,53497,74
16062,1658,90
16063,42917,94
16064,150332,71
16065,44620,101
16066,49743,89
16067,55878,72
16068,43127,82
16069,43022,80
16070,42917,78
16071,42182,90
16072,54488,102
16073,43203,91
16074,1672,99
16075,43022,84
16076,42917,81
16077,59928,79
16078,55878,76
16079,4157,74
16080,44665,94
16081,1658,84
16082,64590,91
16083,21000000,108
16084,42182,81
16085,43127,91
16086,135593,76
16087,43118,82
16088,22771,101
16089,1658,87
16090,47767,88
16091,1658,94
16092,7630,83
16093,105392,89
16094,52099,83
16095,76622,81
16096,11851,85
16097,1658,87
16098,43127,104
16099,9254,82
16100,21917,92
16101,3545,82
16102,1658,75
16103,43127,77
16104,43043,86
16105,17696,83
16106,13475,83
16107,11851,81
16108,1658,85
16109,1652,86
16110,43022,83
16111,21000000,85
16112,36512,81
16113,513422,98
16114,42980,100
16115,21917,80
16116,81905,82
16117,1658,86
16118,5033,90
16119,43817,82
16120,1658,76
16121,65478,76
16122,22127,85
16123,53497,77
16124,38402,81
16125,47852,77
16126,17696,79
16127,42875,97
16128,47558,92
16129,1658,94
16130,7630,95
16131,55878,79
16132,3545,83
16133,1658,98
16134,80927,86
16135,11851,103
16136,42812,75
16137,41678,105
16138,1658,83
16139,17563,75
16140,43127,77
16141,1658,78
16142,42770,85
16143,43127,73
16144,1652,84
16145,42812,99
16146,1658,76
16147,29414,84
16148,85547,86
16149,43022,82
16150,21000000,84
16151,43022,81
16152,44620,86
16153,43022,81
16154,42182,84
16155,42917,89
16156,43817,85
16157,44611,104
16158,1658,82
16159,1657,86
16160,1658,78
16161,1658,78
16162,9254,87
16163,43203,99
16164,53755,82
16165,42917,88
16166,43778,90
16167,16072,85
16168,111230,93
16169,42875,87
16170,42917,76
16171,1652,89
16172,43022,73
16173,42875,97
16174,7483,96
16175,24514,82
16176,32417,87
16177,42917,101
16178,62930,91
16179,43022,78
16180,47852,70
16181,43022,89
16182,41317,81
16183,73822,77
16184,43022,82
16185,42812,90
16186,43579,104
16187,1658,85
16188,43106,87
16189,3545,87
16190,1657,85
16191,4214,83
16192,43127,94
16193,1658,81
16194,21000000,106
16195,43442,90
16196,52932,85
16197,1658,77
16198,42917,93
16199,42182,81
16200,40292,83
16201,42770,83
16202,41867,87
16203,21000000,86
16204,43064,89
16205,17696,87
16206,42875,82
16207,16072,82
16208,37852,80
16209,55878,97
16210,43022,78
16211,43732,78
16212,1658,74
16213,32417,92
16214,59856,81
16215,53497,86
16216,4157,89
16217,42497,89
16218,41867,80
16219,4157,101
16220,42917,84
16221,7504,91
16222,21000000,90
16223,57932,82
16224,17626,86
16225,3545,92
16226,7483,90
16227,42770,84
16228,39662,90
16229,43022,74
16230,1658,100
16231,43694,101
16232,70693,80
16233,17696,86
16234,16072,94
16235,70679,84
16236,42728,92
16237,51632,76
16238,1657,95
16239,9254,88
16240,42917,84
16241,35378,78
16242,118412,81
16243,9254,88
16244,43118,89
16245,93086,77
16246,1658,75
16247,43274,82
16248,22022,90
16249,43127,83
16250,5117,95
16251,20293,94
16252,43817,81
16253,51317,80
16254,1652,99
16255,43022,84
16256,58814,81
16257,42812,81
16258,42917,86
16259,43148,91
16260,43442,82
16261,68219,82
16262,1657,94
16263,62027,97
16264,42182,82
16265,43127,83
16266,43022,82
16267,43547,80
16268,42896,86
16269,21000000,78
16270,12649,82
16271,40565,87
16272,42812,78
16273,62377,72
16274,42938,78
16275,1658,86
16276,17696,93
16277,42770,98
16278,43022,84
16279,42833,92
16280,38108,85
16281,11851,91
16282,1658,76
16283,119378,82
16284,51716,76
16285,1657,83
16286,38654,94
16287,50533,85
16288,43022,85
16289,49787,79
16290,66752,82
16291,42686,89
16292,21000000,74
16293,58037,92
16294,1658,89
16295,42917,91
16296,42917,85
16297,52577,79
16298,43022,87
16299,7630,90
16300,47852,87
# After 8000 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "x inc x dec 5 F T < ¬ x -4 pop ¬ x -1 x 5 pop swap x neg -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy F 9 x -1 + 5 ∨ ∧ be T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg x -5 x greedy x -5 ≤ be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy ¬ 9 x -1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < be eql -1 pop F x -1 x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x dec x * greedy x x -1 T depth < 8 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 + greedy? -3 greedy ¬ 9 x -1 < 5 ∨ depth be T 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ F ∨ ¬ 9 eql -1 be F T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc 9 -6 6 if -9 ¬ eql x depth if dec x -7 F x x greedy? T - -6 inc -5 * 8 * inc depth *"
# 1652: "T x depth * ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x be 9 * x F copy x x swap T T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T F < -5 4 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1657: "-8 -3 -1 4 dec F x copy 9 x T pop inc x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "greedy 5 6 x neg 2 x x x ∧ pop -1 greedy? greedy? x T T depth 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≥ if pop if x 5 F eql x 4 x x -8 x inc x + -5 swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "x -2 > - eql T dec - T ungreedy -5 copy x greedy? x T T 2 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy? x 4 swap * -8 be * + x T copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 dec -7 x copy 9 x T T + x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "x + dec 3 x F be * * x ∨ copy x inc x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc pop ∨ 4 -4 swap x 1 x 4 x -1 T T < T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "8 x -10 3 x -2 5 eql ≥ 4 F x -8 be inc x + -5 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "depth 9 -6 T -9 x x - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop -9 dec x greedy? F F T 0 x T x greedy? greedy? x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc dec dec T greedy? T x T 9 eql -1 0 x -3 ∨ x x 1 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 x depth * ¬ x 0 F 9 be 7 copy x greedy + T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 x inc x + -5 ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 be x - x be * ≥ x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x ¬ x be neg 8 copy x x 8 3 pop - inc x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "∨ ≤ 6 x x 3 depth be * be 7 copy x greedy x T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 eql F 1 copy -6 > T x greedy? greedy? x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc pop ∨ 4 F swap x 1 7 4 x -1 T F < -5 4 x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "T x depth x ¬ x -7 x * greedy T x -5 pop F x T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "-7 inc 9 x 5 F T * 9 x -4 pop F x -1 x 5 ¬ ungreedy ¬ T -10 inc -5 * 9 * dec T *"
# 1658: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < ¬ -8 greedy? x ∧ T -9 -5 * 9 * dec 5 *"
# 1658: "-9 x depth * ¬ x 0 F 9 eql T pop ¬ T x -4 T 2 T -10 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "F F ∧ + 5 -3 greedy < 9 x -1 + 5 ∨ depth be T 2 swap copy x T -9 -5 * 9 * dec 5 *"
# 1658: "pop dec dec x greedy? x x < 9 eql -1 pop x x ∨ F 4 7 be T depth -10 inc -5 * 9 * dec 5 *"
# 1658: "T + -1 x 5 F T * 9 x -3 pop F x ∨ x 5 ¬ ungreedy ¬ T -10 inc -5 * 9 * dec T *"
# 1658: "-6 x 4 x * -8 swap x 4 3 x -1 ¬ if ¬ -5 -4 copy ∧ -1 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 ungreedy * 4 inc F x 3 9 ungreedy -1 be F T greedy? swap x x swap T x -10 -9 -5 * 9 * dec 5 *"
# 1658: "x -3 -1 4 eql F x copy 9 -4 ¬ -8 -3 if ungreedy neg -2 be 3 x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x copy -6 - T x x 5 T ≤ x F inc 6 3 F -4 dec F / T -10 inc -5 * 9 * dec 5 *"
# 1658: "eql + neg 0 T x copy x x 8 x pop x T -9 dec T x eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "pop x ∧ ∧ T x 2 -4 -7 x x be F T greedy? swap 4 T be x be ≥ -9 -5 * 9 * dec 5 *"
# 1658: "pop -9 dec x greedy? F F T 0 x 8 5 pop -6 x T T -8 6 T T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "pop dec T be greedy? ∧ swap < 9 dec 8 pop -1 6 greedy? x T 6 eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "pop x x F 5 F x F T x 3 x inc -3 x * F F x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "x -3 -1 4 eql F x copy 9 -10 ¬ -8 -3 if ungreedy neg -2 be 3 x be -10 inc -5 * 9 * dec 5 *"
# 1658: "pop inc dec + 5 -3 greedy ¬ be -2 T x x 3 x x F 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -6 + greedy? -3 greedy ¬ 9 x -1 < 5 ∨ 3 -6 2 T x dec copy -10 inc -5 * 9 * dec 5 *"
# 1658: "T x depth * ¬ pop -7 - * x x x - T 6 neg swap be ungreedy < 8 -10 inc -5 * 9 * dec 5 *"
# 1658: "/ - ∨ 8 0 5 / F neg be -5 - 9 / ungreedy neg ¬ T 6 T T x -9 -5 * 9 * dec 5 *"
# 1658: "depth 9 -6 0 x x x - T 6 -5 copy -7 x F pop -1 4 greedy? x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 T F - x swap -6 1 -3 T 9 x ≤ ∨ depth 4 x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x be 5 F x ungreedy F x 2 x F x x F x 1 x -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "F F ¬ - 0 -8 x * ungreedy ≥ < T -5 neg x ∧ pop - x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "-7 x * 4 inc F if pop 9 ungreedy -1 be x -2 F x 7 2 x -10 ungreedy ≥ -9 -5 * 9 * dec 5 *"
# 1658: "F F ¬ + 5 -3 greedy ¬ be -2 -1 pop x 3 x x T 2 swap -10 x -10 inc -5 * 9 * dec 5 *"
# 1658: "x -2 greedy? swap x greedy copy x x x x pop - inc x * ≥ -8 ∧ x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x 1 / x ≥ x be * * x ∨ copy x inc x T T 2 swap 6 -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x copy -5 * x F -4 x x inc x x > * * T ∧ inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy -6 - T x x 5 T ≤ x F inc 6 3 * -4 dec F / ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "F copy x dec T F x copy 9 T T pop * T greedy? x x x eql x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x copy -5 * x F -4 x x inc x inc > * * T swap inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "0 * 4 swap 5 ≥ swap 6 6 -6 x copy x if -4 neg x depth x x 9 -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x neg ∧ T x 2 -4 -7 x F be F T greedy? swap 4 T be x T ∨ -9 -5 * 9 * dec 5 *"
# 1658: "1 pop -6 eql eql neg T -10 1 T 1 x / T -7 * x T if / ungreedy -10 -9 -5 * 9 * dec 5 *"
# 1658: "pop dec T T greedy? ∧ x < 9 dec 8 pop -1 6 greedy? x T 6 eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "be x 5 > 0 / -9 * x F be T T 7 -1 F 5 ¬ swap x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-3 inc x copy -5 -3 x -10 T F neg copy -3 T ¬ x -4 copy be -1 7 -10 inc -5 * 9 * dec 5 *"
# 1658: "T 5 dec x x x F 9 < x F inc x inc > x x x eql x ¬ -10 inc -5 * 9 * dec 5 *"
# 1672: "-7 ungreedy * 4 inc F x 3 copy ungreedy -1 -2 F x greedy? -7 x x swap neg x -10 -9 -5 * 9 * inc 5 *"
# 4328: "greedy depth greedy? swap x F copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -5 inc -5 * 8 * inc depth *"
# 38402: "* 0 x 5 -9 * x ≥ x + x -9 inc -3 3 copy 2 T x x copy -10 inc -5 neg 9 * dec 5 *"
# 40565: "/ ¬ x 8 0 5 / -6 x x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 if inc depth *"
# 42938: "pop -9 dec x greedy? F F T 0 x 8 dec x -3 x -10 x 2 + -6 7 dec 9 x 4 x / * x 4"
# 42947: "x + greedy? swap -7 T copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -10 inc x F - 9 / inc /"
16301,42896,72
16302,42833,77
16303,42959,73
16304,43030,65
16305,43022,72
16306,42665,88
16307,43232,90
16308,1658,84
16309,1652,95
16310,20293,82
16311,1658,83
16312,9254,85
16313,1658,90
16314,55338,87
16315,43547,95
16316,42770,89
16317,1663,85
16318,47117,80
16319,4157,84
16320,5033,81
16321,7630,83
16322,39809,94
16323,22988,78
16324,90377,77
16325,43148,83
16326,43589,76
16327,43022,85
16328,5033,95
16329,13475,97
16330,9254,85
16331,44030,89
16332,42917,90
16333,1657,95
16334,41027,80
16335,33677,86
16336,43022,82
16337,42707,99
16338,1658,95
16339,42728,96
16340,26054,88
16341,1658,98
16342,43022,80
16343,1658,91
16344,44072,85
16345,43442,86
16346,19502,94
16347,55531,104
16348,43030,80
16349,41657,73
16350,59910,80
16351,13622,106
16352,14252,83
16353,55727,80
16354,12649,80
16355,42896,81
16356,43127,85
16357,1657,83
16358,79828,85
16359,1652,81
16360,79667,84
16361,1658,78
16362,43127,78
16363,49532,85
16364,36092,80
16365,51632,80
16366,1658,87
16367,24437,97
16368,11851,83
16369,1658,80
16370,1652,99
16371,9254,98
16372,43211,92
16373,42602,71
16374,85652,78
16375,1658,93
16376,40943,93
16377,24850,81
16378,1658,99
16379,127862,96
16380,44542,86
16381,7630,78
16382,55608,95
16383,42959,82
16384,38927,90
16385,21000000,86
16386,32767,87
16387,1658,89
16388,85232,87
16389,32788,96
16390,42917,86
16391,43022,96
16392,43043,75
16393,62027,84
16394,1657,95
16395,42077,96
16396,1658,87
16397,73822,82
16398,94401,72
16399,43022,82
16400,62272,78
16401,43022,87
16402,42791,79
16403,37457,74
16404,42917,83
16405,1657,81
16406,36862,105
16407,53497,89
16408,1658,85
16409,7588,95
16410,43579,85
16411,9254,100
16412,20293,88
16413,63917,91
16414,21917,81
16415,53648,98
16416,43022,89
16417,1662,94
16418,46907,86
16419,1658,85
16420,1658,80
16421,47117,86
16422,1658,89
16423,43085,87
16424,42917,91
16425,16072,85
16426,9254,102
16427,6167,83
16428,43203,87
16429,376978,90
16430,3358,80
16431,1657,84
16432,43022,98
16433,42917,84
16434,42728,93
16435,42287,84
16436,27790,83
16437,1662,89
16438,42182,85
16439,45710,93
16440,43022,80
16441,42959,82
16442,55608,78
16443,76202,87
16444,42917,82
16445,43022,100
16446,43579,84
16447,5033,82
16448,41972,91
16449,42077,88
16450,2975,80
16451,19502,80
16452,1658,80
16453,43022,77
16454,20293,99
16455,43127,87
16456,42917,78
16457,1658,85
16458,17696,87
16459,128345,82
16460,74872,80
16461,1658,76
16462,43127,77
16463,43022,90
16464,9254,83
16465,28511,82
16466,37177,96
16467,22127,83
16468,60063,89
16469,1658,77
16470,9254,99
16471,42728,89
16472,43652,91
16473,40754,79
16474,1658,82
16475,42917,82
16476,1657,89
16477,3545,95
16478,43022,95
16479,42917,84
16480,43127,94
16481,21000000,75
16482,43022,94
16483,35120,97
16484,43118,95
16485,11851,86
16486,39809,93
16487,42833,93
16488,26477,86
16489,1658,85
16490,43118,84
16491,3358,94
16492,42833,102
16493,1652,91
16494,43232,87
16495,3545,82
16496,3545,91
16497,110999,78
16498,42833,90
16499,43127,91
16500,90860,81
16501,22127,81
16502,42665,84
16503,42917,90
16504,42917,83
16505,8008,78
16506,1657,103
16507,7630,91
16508,42938,79
16509,24227,84
16510,1658,81
16511,43127,74
16512,1657,89
16513,42917,78
16514,1658,93
16515,1658,83
16516,44665,88
16517,3545,91
16518,16072,91
16519,41867,78
16520,42770,88
16521,42812,88
16522,43652,102
16523,42917,78
16524,156905,86
16525,42917,91
16526,42791,97
16527,42812,93
16528,57953,96
16529,42959,94
16530,43022,89
16531,19502,85
16532,110894,88
16533,53497,78
16534,47852,86
16535,43152,86
16536,1658,77
16537,1658,80
16538,43022,86
16539,5117,71
16540,1657,96
16541,43127,96
16542,57653,85
16543,1652,86
16544,42287,94
16545,33712,87
16546,7630,93
16547,42917,83
16548,43022,86
16549,42959,98
16550,43106,76
16551,46457,86
16552,42917,97
16553,43022,83
16554,5033,89
16555,17626,89
16556,1652,92
16557,42917,75
16558,39620,78
16559,1658,85
16560,9254,92
16561,1652,83
16562,44695,88
16563,43022,87
16564,43022,88
16565,1658,91
16566,7630,89
16567,42812,101
16568,1658,84
16569,43817,74
16570,38717,82
16571,43232,92
16572,47852,100
16573,1657,96
16574,44695,95
16575,42917,96
16576,40229,86
16577,43127,84
16578,42938,88
16579,59910,98
16580,1658,79
16581,42077,86
16582,5033,82
16583,1658,79
16584,91714,93
16585,42392,81
16586,7630,81
16587,43022,88
16588,55608,105
16589,42959,87
16590,42686,100
16591,1657,91
16592,43127,82
16593,49743,82
16594,42602,84
16595,43022,78
16596,3545,85
16597,42182,79
16598,42854,90
16599,37667,87
16600,3545,86
16601,5033,83
16602,42896,80
16603,38402,80
16604,1657,98
16605,1658,93
16606,42917,83
16607,43127,81
16608,11851,79
16609,88388,85
16610,42959,87
16611,1658,81
16612,42623,86
16613,1658,87
16614,1657,89
16615,3545,90
16616,43022,87
16617,1658,80
16618,45152,86
16619,16072,106
16620,21000000,80
16621,41993,101
16622,1658,78
16623,43946,78
16624,1662,90
16625,18998,91
16626,51632,90
16627,1657,82
16628,1652,93
16629,43022,79
16630,1658,77
16631,1658,95
16632,7630,84
16633,44665,83
16634,42938,82
16635,40922,87
16636,1658,77
16637,1657,90
16638,58037,84
16639,24514,80
16640,34622,83
16641,42917,92
16642,43127,81
16643,43232,93
16644,68285,101
16645,42896,84
16646,1658,82
16647,102662,85
16648,1657,88
16649,47117,95
16650,43022,97
16651,43193,77
16652,21917,86
16653,41188,89
16654,51527,88
16655,52132,87
16656,1657,89
16657,43022,86
16658,43022,92
16659,43022,97
16660,1652,82
16661,9254,86
16662,43022,90
16663,45542,94
16664,85232,91
16665,42812,89
16666,1658,76
16667,79667,84
16668,55878,82
16669,16072,86
16670,26838,76
16671,56319,101
16672,53669,89
16673,50968,81
16674,19502,83
16675,43022,95
16676,47747,86
16677,72317,81
16678,1658,75
16679,1658,93
16680,51632,81
16681,42077,74
16682,3545,79
16683,1657,84
16684,43127,81
16685,42830,81
16686,45437,87
16687,38507,88
16688,39942,97
16689,53277,87
16690,42077,87
16691,85232,87
16692,43022,99
16693,21917,89
16694,26117,78
16695,1657,89
16696,20293,80
16697,42967,113
16698,1658,85
16699,52976,83
16700,18466,87
16701,43148,88
16702,42182,74
16703,76083,82
16704,1657,99
16705,1662,93
# After 8200 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x dec x * greedy x x -1 T depth < 8 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be copy F > - -3 F T 0 x x x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ F ∨ ¬ 9 eql -1 be F T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 T depth < 8 x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 inc * 4 5 F -1 < 9 eql x pop F x -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x inc x dec 5 F T < ¬ x -4 pop ¬ x -1 x 5 pop swap x neg -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < be eql -1 pop F x -1 x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc ∨ x 5 F T * 9 x -4 pop x inc -1 x 5 ¬ ungreedy ¬ ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 + greedy? -3 greedy ¬ 9 x -1 < 5 ∨ depth be T 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T ¬ < -5 2 swap -10 6 -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T + -1 x 5 F T * 9 x -3 pop inc x 3 -1 ≥ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy -6 - T x x 5 T ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x be 9 * x F copy x x swap T T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy ¬ 9 x -1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy F 9 x -1 + 5 ∨ ∧ be T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1657: "≥ if pop if x 5 F eql x 4 x x -8 x inc x + -5 swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 dec -7 x copy 9 x T T + x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "greedy 5 6 x neg 2 x x x ∧ pop -1 greedy? greedy? x T T depth 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "∨ ≤ 6 x x 3 depth be * be 7 copy x greedy x T T T greedy -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "pop -9 dec x greedy? F F T 0 x T x greedy? greedy? x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc pop greedy? 4 -4 swap x x x 4 x be T F x 9 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 x inc x + -5 ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x -3 ∨ 4 eql F 1 copy -6 > T x -8 x inc x + -5 swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "-7 inc * 4 5 -3 x T be 8 5 pop x x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "+ + greedy? swap 6 x copy * neg 8 -1 pop x -3 ∨ x 6 1 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "∨ ≤ 6 x x 3 depth be > be 7 copy x greedy x T 2 > greedy -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "if swap pop -9 eql T dec - T ungreedy -5 copy x greedy? x T T eql 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc dec dec ∧ -7 T * copy x -10 ¬ + -3 if ungreedy neg T copy 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x 1 / x - x be * ≥ x F ungreedy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T T greedy? swap pop 5 x be be x ∨ copy x -3 x -5 6 1 x -10 F -6 inc T * 8 * inc 5 *"
# 1657: "T x depth x ¬ x -7 x * greedy T x -5 pop F x T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T F greedy? swap x F x copy 9 -2 T pop + x 3 * > F swap F -10 -6 inc T * 8 * inc 5 *"
# 1657: "-9 x depth * ¬ x 0 F 9 be 7 copy x greedy + T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 x depth * ¬ x 0 F 9 x ∨ copy x - x x T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 ∨ 5 F T * 9 x -3 pop inc x 3 -1 ≥ copy greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x + dec 3 x F be * * x ∨ copy x inc x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 dec F x copy 9 x T pop inc x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "depth 9 -6 T -9 x x - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "8 x -10 3 x -2 5 eql ≥ 4 F x -8 be inc x + -5 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 be x - x be * ≥ x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "depth 9 -6 T -8 -3 greedy / -2 8 -1 pop x -3 ∨ x 6 ≥ x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x ¬ x be neg 8 copy x x 8 3 pop - inc x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "x x x be 5 F x ungreedy F x 2 x F x x F x 1 T -10 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "8 x -10 3 0 5 x F neg greedy? -5 - 9 / + neg ¬ T 6 T T x -9 -5 * 9 * dec 5 *"
# 1658: "F F ∧ + 5 -3 greedy < 9 x -1 + 5 ∨ depth be T 2 swap copy x T -9 -5 * 9 * dec 5 *"
# 1658: "x x depth 4 ¬ 1 0 * ungreedy ≥ < T -5 neg x ∧ pop - x x -9 T -9 -5 * 9 * dec 5 *"
# 1658: "pop inc dec + 5 -3 greedy x be -2 T x x 3 x x F 2 swap / x -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 ungreedy * 4 inc F x 3 9 ungreedy -1 be F T greedy? swap x x swap T x -10 -9 -5 * 9 * dec 5 *"
# 1658: "-9 x depth * ¬ x 2 -4 -7 x pop be F T x swap 4 T be dec T ∨ -9 -5 * 9 * dec 5 *"
# 1658: "-7 x * 4 inc F if x 9 ungreedy -1 be x F F x 7 2 x -10 ungreedy ≥ -9 -5 * 9 * dec 5 *"
# 1658: "greedy depth greedy? F 5 F x < F x -4 pop x 5 T dec T x eql x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x x -1 4 pop F 3 copy 9 x x pop -10 x 3 * ≤ F eql 9 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "≥ if pop x x 5 F eql 5 4 x x -8 9 x ≤ ∨ depth 4 -3 x -10 inc -5 * 9 * dec 5 *"
# 1658: "pop -9 dec x greedy? F F T 0 x 8 5 pop -6 x T T -8 6 T T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "9 x x swap x -3 greedy ¬ be -2 < pop 4 3 x x > 2 swap -10 - -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 T F / < copy x -1 pop - inc x * ≥ -8 ∧ x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "x -2 greedy? swap x greedy copy x x x x pop - copy 9 T ≥ -8 ungreedy pop x -10 inc -5 * 9 * dec 5 *"
# 1658: "-3 inc inc -8 - dec F T T x 3 x inc -3 x * F F x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy copy -6 - T 3 - 5 T ≤ 3 F inc x F pop -1 4 greedy? x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -6 + greedy? 3 greedy ¬ 9 swap swap < 5 ∨ 3 -6 2 T x dec copy -10 inc -5 * 9 * dec 5 *"
# 1658: "F copy x dec T F x copy 9 T T pop * T greedy? x x x eql x ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x x -5 * x F -4 x * inc ∨ inc > * * T swap inc x -10 inc -5 * 9 * dec 5 *"
# 1658: "-9 x depth * be x 0 pop - ungreedy -1 be x -2 F x 7 if x -10 ungreedy ≥ -9 -5 * 9 * dec 5 *"
# 1658: "-7 ungreedy * 4 inc F x 3 9 ungreedy -1 be F T 9 < x x swap T x 2 -9 -5 * 9 * dec 5 *"
# 1658: "1 pop -6 eql eql neg T -10 1 T 1 x / T -7 * x T if / ungreedy -10 -9 -5 * 9 * dec 5 *"
# 1658: "x > x copy -5 * x F -4 x x inc x inc ≤ * * T ≥ x F -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x copy -5 * x F -4 x x inc x x > * * T ∧ inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "x -3 -1 4 eql F x copy 9 -4 1 -8 -3 if ungreedy neg -2 be swap inc T -10 inc -5 * 9 * dec 5 *"
# 1658: "> inc pop ∨ 4 -4 swap x 1 7 4 x -1 inc + -3 T 6 eql T ungreedy -10 inc -5 * 9 * dec 5 *"
# 12649: "x x x 8 eql F x copy 9 x T pop -8 x 3 * ≤ F swap > -10 -6 ¬ -5 * 8 * inc depth *"
# 16072: "pop -9 greedy? F ungreedy greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 33712: "x x x copy -5 * x < -4 x swap inc x inc 5 * * T swap inc T -10 inc -5 * 9 * inc depth *"
# 38402: "T ¬ x be -9 * ≥ ≥ x + x -9 inc -3 3 copy x T x x copy -10 inc -5 neg 9 * dec 5 *"
# 41657: "x x -2 7 x x dec x x -9 x / + x - 7 * -10 x x > / 3 5 -4 4 be inc depth *"
# 42917: "x + greedy? swap -7 T copy F 1 8 -1 pop x greedy x T T 2 swap -10 ungreedy -6 inc x * 6 * inc 5 *"
16706,43064,72
16707,43190,69
16708,42938,69
16709,43064,72
16710,42980,72
16711,43022,87
16712,43862,94
16713,12677,94
16714,42182,86
16715,43190,80
16716,52683,88
16717,3358,77
16718,9317,88
16719,1652,101
16720,7630,83
16721,43579,92
16722,5033,86
16723,37037,94
16724,1657,84
16725,93548,97
16726,57653,100
16727,42917,87
16728,20293,90
16729,5033,89
16730,53669,79
16731,47568,86
16732,4970,89
16733,40754,93
16734,1652,86
16735,1657,79
16736,1652,83
16737,43579,78
16738,44695,91
16739,47852,90
16740,1657,92
16741,13475,96
16742,1658,74
16743,1658,81
16744,43022,88
16745,43853,94
16746,22127,86
16747,1657,85
16748,5033,83
16749,1657,79
16750,3545,102
16751,11851,100
16752,1657,96
16753,5033,80
16754,40498,89
16755,44870,94
16756,1658,86
16757,1658,84
16758,84917,96
16759,1658,84
16760,11851,78
16761,36512,86
16762,43190,76
16763,7630,91
16764,59910,81
16765,1657,85
16766,73654,92
16767,1658,85
16768,41867,78
16769,4195,92
16770,39297,84
16771,1658,80
16772,7630,84
16773,1657,87
16774,26411,99
16775,7637,77
16776,1657,82
16777,5033,84
16778,1657,94
16779,43232,105
16780,43757,82
16781,108290,88
16782,19502,96
16783,43022,92
16784,11851,82
16785,43022,80
16786,43001,76
16787,42182,77
16788,1658,84
16789,42728,82
16790,39452,82
16791,42917,88
16792,69797,84
16793,42917,90
16794,57653,82
16795,12649,93
16796,55608,83
16797,1662,104
16798,21000000,77
16799,63077,72
16800,28735,105
16801,1658,75
16802,3545,81
16803,1657,88
16804,43442,92
16805,1652,83
16806,43064,72
16807,3358,92
16808,21917,87
16809,42875,93
16810,43118,74
16811,16072,81
16812,13475,85
16813,42917,94
16814,68219,90
16815,42875,96
16816,1658,84
16817,38234,82
16818,42098,94
16819,11851,89
16820,42077,90
16821,44695,87
16822,43393,101
16823,3545,93
16824,41321,97
16825,43022,94
16826,36512,94
16827,40964,95
16828,42833,100
16829,43127,71
16830,65115,89
16831,43001,74
16832,26180,87
16833,42686,104
16834,43022,84
16835,38675,93
16836,47852,96
16837,53497,73
16838,57653,90
16839,41846,92
16840,21917,77
16841,33152,83
16842,43022,84
16843,26138,85
16844,47852,84
16845,43022,83
16846,41888,93
16847,1658,73
16848,16072,91
16849,26180,86
16850,43232,81
16851,1657,87
16852,43295,81
16853,1657,87
16854,44695,94
16855,42980,92
16856,21000000,90
16857,26271,80
16858,42928,93
16859,43127,91
16860,43064,98
16861,6167,95
16862,1657,80
16863,21917,90
16864,261149,86
16865,73003,95
16866,7112,95
16867,19502,93
16868,17626,93
16869,52322,87
16870,19502,87
16871,42917,82
16872,23933,99
16873,9254,91
16874,1658,76
16875,1657,91
16876,5033,81
16877,64590,83
16878,43022,85
16879,7630,92
16880,21000000,95
16881,1658,78
16882,21000000,85
16883,32893,77
16884,1658,88
16885,42140,100
16886,1658,82
16887,43022,90
16888,47117,93
16889,98392,81
16890,41762,82
16891,43127,93
16892,1658,77
16893,21000000,77
16894,118727,84
16895,40292,68
16896,43022,87
16897,9338,96
16898,42686,86
16899,47852,81
16900,3545,79
16901,42182,85
16902,42812,88
16903,43127,92
16904,43232,107
16905,183848,86
16906,44177,83
16907,47747,87
16908,37982,88
16909,47936,79
16910,33740,100
16911,62272,88
16912,1658,83
16913,46907,85
16914,27949,86
16915,40565,97
16916,42728,87
16917,16072,84
16918,43022,97
16919,3545,88
16920,7630,105
16921,11578,90
16922,49743,80
16923,42917,94
16924,47117,82
16925,1652,89
16926,5033,84
16927,1658,83
16928,43127,72
16929,43022,88
16930,25123,90
16931,5033,88
16932,42917,84
16933,43022,90
16934,42182,85
16935,40369,83
16936,350917,89
16937,43127,80
16938,41923,78
16939,1658,81
16940,42980,81
16941,1658,86
16942,20293,82
16943,43127,78
16944,42917,80
16945,47852,77
16946,1658,87
16947,43022,86
16948,1658,76
16949,44200,83
16950,42917,93
16951,42938,74
16952,85687,86
16953,1658,86
16954,1657,85
16955,42938,75
16956,44660,75
16957,98231,85
16958,51280,91
16959,43022,80
16960,1658,80
16961,1658,84
16962,44217,90
16963,96572,92
16964,43022,86
16965,42854,82
16966,7630,82
16967,43127,87
16968,1652,88
16969,9254,93
16970,43022,78
16971,76790,97
16972,36512,86
16973,21000000,83
16974,11851,82
16975,57588,93
16976,19502,93
16977,43017,78
16978,7483,93
16979,42917,86
16980,3545,84
16981,40187,97
16982,43022,80
16983,43862,82
16984,42917,94
16985,42875,86
16986,43022,84
16987,1658,67
16988,61908,103
16989,3545,86
16990,49574,82
16991,51610,80
16992,57302,87
16993,41117,90
16994,46907,87
16995,1658,87
16996,1658,81
16997,1658,78
16998,42077,100
16999,42917,90
17000,1658,70
17001,63917,85
17002,3545,98
17003,76454,90
17004,47222,86
17005,43022,93
17006,36617,96
17007,47852,82
17008,42238,85
17009,1658,85
17010,43003,85
17011,3545,84
17012,55968,77
17013,43022,89
17014,59928,76
17015,5117,78
17016,43778,77
17017,16660,91
17018,22127,84
17019,1657,99
17020,44695,98
17021,1657,92
17022,81011,85
17023,1657,84
17024,43862,90
17025,42854,84
17026,7630,89
17027,69006,93
17028,25186,94
17029,43022,95
17030,7630,98
17031,4252,70
17032,36470,85
17033,223657,85
17034,43022,91
17035,1658,87
17036,11851,89
17037,26180,87
17038,43127,82
17039,2534,103
17040,69090,102
17041,43148,88
17042,21000000,92
17043,34601,86
17044,42791,85
17045,43118,93
17046,1657,85
17047,93632,99
17048,1657,98
17049,42791,85
17050,43841,92
17051,5033,89
17052,1652,100
17053,1658,72
17054,44695,82
17055,68117,85
17056,42833,78
17057,42077,82
17058,1658,85
17059,43022,83
17060,58030,102
17061,43237,86
17062,73822,86
17063,1657,83
17064,85687,88
17065,42896,83
17066,21000000,79
17067,7882,86
17068,55608,81
17069,1657,91
17070,1657,83
17071,56319,86
17072,7630,81
17073,5033,83
17074,5033,86
17075,56319,93
17076,50477,76
17077,19502,79
17078,42833,89
17079,19502,98
17080,43022,87
17081,1658,81
17082,34517,88
17083,42707,93
17084,27338,90
17085,24850,81
17086,65072,81
17087,106897,90
17088,19502,77
17089,43022,89
17090,50393,90
17091,41237,93
17092,42917,72
17093,7630,92
17094,39620,96
17095,1658,94
17096,9254,84
17097,1657,87
17098,75754,83
17099,1658,74
17100,1657,98
17101,47117,85
17102,42077,113
17103,1662,87
17104,1657,85
17105,43967,80
17106,5117,84
17107,5033,82
17108,2885,81
17109,42749,87
17110,9254,83
# After 8400 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "greedy x -6 + greedy? -3 greedy ¬ 9 x -1 < 5 ∨ depth be T 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec copy inc x be 9 * copy F copy -1 T x < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x inc x dec 5 F T < ¬ x -4 pop ¬ x -1 x 5 pop swap x neg -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc ∨ x 5 F T * 9 x -4 pop x inc -1 x 5 ¬ ungreedy ¬ ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ F ∨ ¬ 9 eql -1 be F T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 T depth < 8 x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T < depth * x x -7 - x 4 -2 F inc T greedy? F pop 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T + -1 x 5 F T * 9 x -3 pop inc x 3 -1 ≥ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "-9 x depth * ¬ x x T be eql -1 pop F x -1 x 4 x * -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * 4 T F x < 9 eql -1 pop F T -1 F 4 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T ¬ < -5 2 swap -10 6 -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy F 9 x -1 + 5 ∨ ∧ be T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x dec x * greedy x x -1 T depth < 8 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy ¬ 9 x -1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg x > eql ¬ F pop 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "be copy F > - -3 F T 0 x x x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1657: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc inc inc -8 - -3 F * < x inc x -5 -3 ∨ x 6 1 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x inc * x - -3 F ≤ T x x x -5 greedy? x T x x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "∨ ≤ 6 x x 3 depth be * be 7 copy x greedy x T T T greedy -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "x + dec 3 x F be * * x ∨ copy x inc x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc ∨ x 5 eql T T x x 4 x be T F x 9 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 ∨ 5 F T * 9 x -3 pop inc x 3 -1 ≥ copy greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T T greedy? swap pop 5 x be be x ∨ copy x -3 x -5 6 1 x -10 F -6 inc T * 8 * inc 5 *"
# 1657: "8 x -10 3 x -2 5 eql ≥ 4 F x -8 be inc x + -5 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 T be * * x ∨ depth x ≤ x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 * * 4 T F x -10 if 8 5 pop x x dec T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "8 x -10 3 x -2 5 ¬ ≥ 4 ungreedy / -8 x 3 * > F swap F -10 -6 inc T * 8 * inc 5 *"
# 1657: "be greedy F x 0 ¬ -9 * * 6 be -1 T -10 x x + x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 x inc x + -5 ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 F F x + greedy? ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc * 4 5 -3 x T be 8 5 pop x x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "x ¬ x be neg 8 copy x x 8 3 pop - inc x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy? swap pop -9 eql F 1 copy -6 > T x x x inc x if x swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 dec F x copy 9 x T pop inc x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "-3 inc inc -8 - dec pop T if x 3 3 inc greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "depth 9 -6 T -9 x x - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T T greedy? neg x F x F 9 3 7 copy x greedy T T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc * 4 T F / < 0 x T x greedy? dec x - x x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "depth 9 -6 T -8 -3 greedy / -2 8 -1 pop x -3 ∨ x 6 ≥ x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy 5 6 x neg 2 x x x ∧ pop -1 greedy? greedy? x T T depth 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop -9 dec x greedy? T F T 0 x T x greedy? greedy? x pop T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "be copy F x x F / < 0 x T > greedy? dec x 6 x x 6 -10 ungreedy -6 inc greedy? * 8 * inc 5 *"
# 1657: "¬ x + x ¬ x -7 x * greedy T x -5 pop F x T 5 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop x depth x ¬ x -7 x * greedy depth x -4 pop F x T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 greedy dec -7 x copy 9 x T T > x copy T x 2 swap -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "pop -9 dec x greedy? F F T 0 x T x greedy? greedy? x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-3 x x x - x be * ≥ x -1 ungreedy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "T copy x dec T F x copy 9 T T pop * T greedy? x x x eql > ¬ -10 inc -5 * 9 * dec 5 *"
# 1658: "1 pop -6 eql eql neg T -10 1 T 1 x / T -7 * x T if / ungreedy -10 -9 -5 * 9 * dec 5 *"
# 1658: "-3 if pop ¬ x 5 F eql 5 4 x x x 9 -7 ≤ ∨ depth 4 -3 x -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 x greedy -10 ¬ x -8 F * greedy x x -1 T depth < 8 x swap -10 ungreedy ∨ -9 -5 * 9 * dec 5 *"
# 1658: "inc dec dec F ¬ x be 9 * x ∨ copy x inc swap T neg -8 greedy ∧ T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "x + x 3 x F be * * x ∨ copy inc x F pop depth 4 greedy? x -9 -10 pop -5 * 9 * dec 5 *"
# 1658: "be x 5 - 0 ¬ -9 * * 6 be -1 x x greedy? swap x x ≤ x ≥ ¬ -9 -5 * 9 * dec 5 *"
# 1658: "x -2 greedy? swap x greedy copy x x x x pop - copy 9 T ≥ -8 ungreedy pop x -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ ¬ x be 9 * F ∨ copy x ungreedy ≥ T T -3 swap x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x x x + / eql -8 4 x dec -10 T F T 9 < x > swap T x x -9 -5 * 9 * dec 5 *"
# 1658: "8 copy - -3 + dec x x > x -5 3 0 x x * ≥ -8 ∧ x ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "if * 4 4 pop copy 3 copy 9 x x pop -10 x 3 * ≤ F eql 9 ungreedy -10 inc -5 * 9 * dec 5 *"
# 1658: "8 x -10 3 ≤ 5 9 F neg greedy? -5 - 9 / -7 ≤ ∨ depth 4 -3 x -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy F 6 x neg 2 ∧ x x x x -9 F -3 3 copy x T x x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x greedy copy -4 1 T -1 pop F 3 x x > 2 6 F F -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 T F < < 0 x T x x x x T x 1 swap 3 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * 4 if F x x -4 x * inc ∨ inc > * * depth swap inc x -10 inc -5 * 9 * dec 5 *"
# 1658: "copy x -6 + greedy? 3 greedy ¬ 9 swap swap < 5 ∨ 3 -6 2 T x dec copy -10 inc -5 * 9 * dec 5 *"
# 1658: "-7 inc * - T 3 - 5 T ≤ 3 F inc F x pop ≥ 4 greedy? x -9 -10 inc -5 * 9 * dec 5 *"
# 1658: "-8 -3 -1 4 dec F x copy x 8 ¬ pop x inc x x T 2 -9 -10 x 5 -9 -5 * 9 * dec 5 *"
# 1658: "x + dec 3 x F be pop - ungreedy -1 be x -2 F x 7 x x T ungreedy ≥ -9 -5 * 9 * dec 5 *"
# 3545: "≤ 4 T x 3 x be * x -8 ∨ copy x inc x T T 2 swap neg ungreedy -6 inc -5 * 8 * inc depth *"
# 7630: "x + greedy? swap if T copy F 1 x -1 > x greedy x T T 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 9338: "-3 inc inc -8 - dec pop T if x 3 3 inc greedy x 3 inc 2 swap -10 ungreedy -6 inc T * 8 * inc T *"
# 25186: "-3 inc x copy -5 * -8 < -4 x swap inc x inc 5 * * copy swap inc T -10 inc -5 * 9 * inc depth *"
# 36512: "x 4 T x copy x be * * copy x copy -1 T x < -5 x x ungreedy -3 -10 inc -5 7 9 * dec 5 *"
17111,43022,71
17112,43022,71
17113,43043,68
17114,43022,71
17115,43022,65
17116,43022,71
17117,42917,95
17118,72569,78
17119,42770,85
17120,21917,78
17121,67907,90
17122,84812,89
17123,21518,90
17124,42896,87
17125,99827,80
17126,33677,82
17127,43022,87
17128,39347,82
17129,1657,84
17130,42917,98
17131,1662,74
17132,43211,82
17133,43757,96
17134,70511,79
17135,43043,70
17136,1657,92
17137,43001,92
17138,71337,94
17139,9254,95
17140,42917,90
17141,11851,81
17142,43232,85
17143,1657,89
17144,1652,93
17145,43817,83
17146,39809,83
17147,43211,96
17148,11851,90
17149,26376,81
17150,24514,104
17151,21000000,81
17152,42980,71
17153,42917,91
17154,42812,91
17155,1658,78
17156,43118,79
17157,1658,93
17158,51443,87
17159,43022,80
17160,1078,75
17161,17696,95
17162,1658,85
17163,1657,92
17164,63511,92
17165,42917,71
17166,11851,80
17167,43757,91
17168,38801,99
17169,1658,74
17170,43127,68
17171,43022,85
17172,43022,88
17173,43022,99
17174,1658,94
17175,42917,86
17176,1662,85
17177,42917,86
17178,98276,104
17179,21917,86
17180,42875,82
17181,11851,91
17182,4423,87
17183,43022,93
17184,47936,82
17185,1657,76
17186,42917,90
17187,1657,81
17188,44695,89
17189,223657,88
17190,1658,86
17191,39662,88
17192,7630,76
17193,43547,81
17194,7630,80
17195,5222,92
17196,83090,95
17197,54361,84
17198,42833,88
17199,1658,78
17200,5033,92
17201,42287,87
17202,35357,74
17203,43022,94
17204,170303,87
17205,16667,92
17206,42833,78
17207,7630,89
17208,1657,87
17209,26117,83
17210,1657,95
17211,5555,83
17212,151949,89
17213,42077,78
17214,42917,82
17215,44072,78
17216,68117,75
17217,44695,86
17218,42350,77
17219,17696,91
17220,43118,79
17221,75327,82
17222,20293,90
17223,9254,82
17224,43127,86
17225,1652,100
17226,20293,95
17227,43579,87
17228,5033,86
17229,5033,84
17230,1652,83
17231,42875,96
17232,43022,86
17233,1657,83
17234,43043,81
17235,26117,85
17236,43022,84
17237,45374,85
17238,26831,92
17239,62027,84
17240,42917,99
17241,41132,89
17242,43127,94
17243,41321,93
17244,21000000,88
17245,11851,89
17246,84868,88
17247,43757,90
17248,1658,95
17249,1657,88
17250,32767,79
17251,13622,75
17252,42875,90
17253,5117,88
17254,1657,93
17255,126812,83
17256,1657,77
17257,42077,99
17258,53497,80
17259,250978,67
17260,805399,85
17261,45017,99
17262,42917,81
17263,43022,84
17264,5117,97
17265,28735,93
17266,48013,91
17267,68894,98
17268,63077,74
17269,1657,87
17270,43043,83
17271,43127,76
17272,11417,83
17273,3545,91
17274,21000000,89
17275,42854,75
17276,12269,87
17277,16541,82
17278,43127,72
17279,55608,89
17280,1658,101
17281,55307,94
17282,42182,81
17283,42770,88
17284,72317,96
17285,1657,91
17286,43098,80
17287,43022,86
17288,42917,86
17289,32956,97
17290,47950,94
17291,43022,91
17292,85652,79
17293,42917,92
17294,28385,101
17295,24757,94
17296,39329,102
17297,21917,87
17298,43127,69
17299,7630,83
17300,64589,83
17301,43022,92
17302,30107,78
17303,1657,87
17304,55608,77
17305,1657,90
17306,39067,83
17307,1658,78
17308,43757,84
17309,42392,79
17310,43022,78
17311,16072,89
17312,43770,86
17313,43022,90
17314,40838,102
17315,42896,88
17316,43022,89
17317,43184,94
17318,43127,79
17319,5222,71
17320,41972,89
17321,74417,88
17322,7504,85
17323,43442,90
17324,39662,90
17325,64127,93
17326,43022,91
17327,1658,76
17328,3545,92
17329,43022,80
17330,42917,88
17331,42917,75
17332,13475,83
17333,42854,89
17334,43022,84
17335,22862,95
17336,56319,75
17337,57653,89
17338,30926,81
17339,42917,88
17340,43022,91
17341,47117,86
17342,2366,89
17343,42833,95
17344,1657,74
17345,37877,82
17346,57588,79
17347,85232,79
17348,42854,105
17349,3545,92
17350,26117,87
17351,41972,90
17352,42917,91
17353,3545,80
17354,1658,83
17355,1658,103
17356,79625,93
17357,1657,92
17358,11851,85
17359,51212,92
17360,1658,95
17361,7630,85
17362,42938,83
17363,22127,88
17364,265154,78
17365,43023,77
17366,59910,87
17367,43022,86
17368,42917,95
17369,42917,97
17370,26117,89
17371,9254,96
17372,43127,77
17373,42917,93
17374,1657,94
17375,85232,101
17376,1657,86
17377,5033,92
17378,42917,86
17379,54572,95
17380,33677,81
17381,561778,79
17382,42917,83
17383,24514,101
17384,42812,98
17385,7588,93
17386,3545,87
17387,43298,65
17388,26117,91
17389,43022,87
17390,1657,83
17391,47579,92
17392,43106,99
17393,43337,91
17394,1657,88
17395,42896,83
17396,42917,90
17397,119672,87
17398,61733,93
17399,42917,100
17400,42875,84
17401,1657,90
17402,26726,85
17403,16660,78
17404,42980,80
17405,4157,85
17406,57318,81
17407,1673,84
17408,21000000,93
17409,3545,94
17410,1652,83
17411,49743,78
17412,43118,83
17413,1657,91
17414,1657,83
17415,42917,90
17416,5033,80
17417,88193,83
17418,51610,82
17419,1662,81
17420,96614,95
17421,43127,76
17422,43442,95
17423,43022,86
17424,43022,91
17425,42959,73
17426,43001,90
17427,44620,89
17428,42077,77
17429,78302,85
17430,47852,80
17431,42252,94
17432,40369,94
17433,21000000,97
17434,42980,94
17435,1658,79
17436,43203,93
17437,43190,88
17438,50764,78
17439,79877,87
17440,21000000,82
17441,42770,108
17442,58037,78
17443,2009,99
17444,43022,84
17445,43022,88
17446,9422,99
17447,11851,85
17448,43022,95
17449,43127,82
17450,40502,95
17451,32788,75
17452,1657,95
17453,42686,95
17454,41717,85
17455,1657,91
17456,42917,78
17457,955129,84
17458,47013,88
17459,39704,91
17460,86460,96
17461,47243,94
17462,1662,92
17463,46120,83
17464,42917,91
17465,40565,87
17466,9455,79
17467,40943,93
17468,47222,98
17469,43118,87
17470,41762,95
17471,37877,86
17472,13475,95
17473,43064,89
17474,11851,99
17475,1657,76
17476,26831,80
17477,42749,96
17478,43022,89
17479,20293,89
17480,40376,90
17481,1658,77
17482,43127,85
17483,43817,99
17484,52932,82
17485,43022,83
17486,178899,87
17487,42770,90
17488,42287,77
17489,47936,91
17490,30317,82
17491,44695,89
17492,51485,86
17493,1657,77
17494,85232,83
17495,17696,88
17496,30317,80
17497,2618,93
17498,1658,87
17499,42140,84
17500,7630,105
17501,80927,73
17502,24346,89
17503,42917,93
17504,42883,102
17505,21000000,80
17506,63917,87
17507,42959,74
17508,48797,79
17509,1662,69
17510,1652,87
17511,55878,88
17512,57653,96
17513,5033,85
17514,43022,88
17515,1663,81
# After 8600 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "inc dec dec copy inc x be 9 * copy F copy -1 T x < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 pop x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-9 x depth * ¬ x x T be eql -1 pop F x -1 x 4 x * -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 T depth < 8 x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy F 9 x -1 + 5 ∨ ∧ be T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "depth x 3 ∧ T T x < 9 eql -1 pop F T -1 F 4 ungreedy be x - -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 4 -1 T ¬ < -5 2 swap -10 7 -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "T + -1 x 5 F T * 9 x -3 pop inc x 3 -1 ≥ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy ¬ 9 x -1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg x > eql ¬ F pop 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 + greedy? -3 greedy ¬ 9 x -1 < 5 ∨ depth be T 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "T < depth * x x -7 - x 4 -2 F inc T greedy? F pop 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x inc x dec 5 F T < ¬ x -4 pop ¬ x -1 x 5 pop swap x neg -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ F ∨ ¬ 9 eql -1 be F T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "be copy F > - -3 F T 0 x x x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x dec x * greedy x x -1 T depth < 8 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1657: "-7 inc * > 0 T / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc T * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 T be * * x ∨ depth x ≤ x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x * / 4 pop copy 3 copy 9 greedy depth x + pop F x T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop eql dec ∧ T x ≤ T -1 x T pop 8 inc x x T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 x be * * x x depth T + x x + x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 x greedy * ¬ + 9 x * greedy x x -1 T depth < 8 x - -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 dec F x copy 9 x T pop inc x copy T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "-7 * * 4 T F x -10 if 8 5 pop x x dec T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "greedy 5 6 x neg 2 x x x ∧ pop -1 greedy? greedy? x T T depth 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x inc * x - -3 F ≤ T x x x -5 greedy? x T x x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "be copy F x x F / < 0 x T > greedy? dec x 6 x x 6 -10 ungreedy -6 inc greedy? * 8 * inc 5 *"
# 1657: "T + -1 ∨ 5 F T * 9 x -3 pop inc x 3 -1 ≥ copy greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 greedy dec -7 x copy 9 x T T > F copy ∨ F 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 greedy dec -7 x copy 9 x T T > x copy T x 2 swap -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "inc inc inc -8 - -3 F * < x inc x -5 -3 ∨ x 6 1 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-3 6 x copy -5 * -8 < -4 x swap inc inc x T -1 ≥ copy greedy? -10 T -6 inc T * 8 * inc 5 *"
# 1657: "-7 / ∧ 4 5 -3 x T be 8 5 pop be x copy T T dec x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "T < depth * x x neg - x 4 -2 F inc T greedy? greedy? T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 T be eql * x ∨ depth x ≤ x -3 T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-3 inc inc -8 - dec pop T if x 3 3 inc greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc ∨ x 5 eql T T x x 4 x be T F x 9 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 ∨ 5 F T * 9 x -1 pop -8 x inc x x -5 ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop -9 dec x greedy? T F T 0 x T x greedy? greedy? x pop T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc inc inc inc + F F x 0 x F x -5 neg > T T T x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc ¬ dec / F x copy 9 T depth x 6 pop F x copy -1 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "+ T greedy? dec pop 5 x be be F ∨ copy x -3 x -9 6 1 x -10 F -6 inc T * 8 * inc 5 *"
# 1657: "x + dec 3 x F be * * x ∨ copy x inc x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop -9 dec x greedy? F F T 0 x T x T 1 x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 x depth * x x x T be dec -1 pop F x -1 x 4 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x < F ¬ x -7 -6 depth x x x neg T x - x T x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "T T greedy? neg x F x F 9 3 7 copy x greedy T T T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 F F x + greedy? ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T T greedy? swap pop ∨ x be be x ∨ copy < -3 x < 6 1 x -10 F -6 inc T * 8 * inc 5 *"
# 1657: "greedy? swap pop -9 eql F 1 copy -6 > T x x x inc x if x swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "x x -1 9 pop F 3 T 0 x ≤ x greedy? be x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "F copy F -10 F -3 F - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ 4 T x 3 x be * * x ∨ copy x greedy x T T 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-3 x x copy -5 pop x F T * neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "inc dec dec F ¬ x be 9 * x ∨ copy x inc swap T neg -8 greedy ∧ T ≥ -9 -5 * 9 * dec 5 *"
# 1658: "x -2 greedy? swap x greedy copy x x x x pop - copy 9 T ≥ -8 ungreedy pop x -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < x 7 x -3 swap x x -10 inc -5 * 9 * dec 5 *"
# 1658: "x + greedy? ≥ if -6 copy F 1 x -1 > x 8 ∧ eql 8 T T pop x x -9 -5 * 9 * dec 5 *"
# 1658: "greedy dec dec copy inc depth greedy ¬ 0 eql 5 be F T F pop ∧ 4 greedy? x copy -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy ¬ x 8 0 ≤ 2 -4 -7 2 x x -1 T depth * 8 F swap pop ungreedy ∨ -9 -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x greedy copy -4 1 T -1 pop F 3 x x > 2 6 F F -10 inc -5 * 9 * dec 5 *"
# 1658: "inc dec dec ∧ inc F < < 0 x T x x x x T x / swap x 0 -10 inc -5 * 9 * dec 5 *"
# 1658: "be inc * x - -3 3 * * 6 be -1 x x greedy? swap x x ≤ x ≥ ¬ -9 -5 * 9 * dec 5 *"
# 1658: "/ - x 8 0 5 / -6 - x x 8 x T F * x T if / ungreedy -10 -9 -5 * 9 * dec 5 *"
# 1658: "greedy F 6 x < greedy? x x x x x -9 F -3 3 copy x T x x -9 -10 pop -5 * 9 * dec 5 *"
# 1662: "-7 * 9 x - - -3 / ≥ * F x be T F F 9 2 x -10 -10 -6 inc T * 8 * F 5 *"
# 2366: "≤ 4 T x 3 x be * x -8 ∨ copy x inc x T -7 2 swap neg ungreedy -6 inc -5 * F * inc depth *"
# 2618: "inc dec dec ∧ 6 dec x T if x 3 3 inc greedy x 3 inc 2 swap -10 ungreedy -6 be T * 8 * inc T *"
# 21518: "x 4 T x copy x be * -4 copy x copy -1 T x < -5 x x ungreedy -3 -10 inc * 7 9 * inc depth *"
# 26117: "pop dec dec -8 ¬ x be x * F ∨ copy x inc swap > greedy? -8 greedy ∧ T ≥ -9 -2 * 9 * dec 5 *"
# 42959: "-2 F 8 / -3 x x x 6 / inc * -10 / 2 + dec -6 inc x x * * - * 8 * inc pop *"
17516,43022,78
17517,43022,66
17518,42833,68
17519,42896,74
17520,43190,67
17521,1652,87
17522,79625,91
17523,42182,84
17524,29582,97
17525,1657,83
17526,1657,94
17527,57653,73
17528,40943,92
17529,1657,76
17530,26222,83
17531,1652,80
17532,32837,85
17533,83237,79
17534,1657,83
17535,1657,96
17536,42014,93
17537,53942,90
17538,5033,90
17539,70693,91
17540,42875,79
17541,13475,85
17542,21000000,83
17543,42854,104
17544,1658,80
17545,42812,84
17546,84917,90
17547,53795,85
17548,1657,88
17549,103250,90
17550,42917,83
17551,21000000,83
17552,43022,89
17553,42917,85
17554,1657,82
17555,1652,84
17556,7483,89
17557,95417,76
17558,42917,83
17559,90377,84
17560,1658,90
17561,1657,99
17562,51107,92
17563,43001,84
17564,12677,90
17565,42917,93
17566,42917,88
17567,21000000,88
17568,47117,87
17569,42875,88
17570,43658,88
17571,40369,103
17572,5033,87
17573,42392,83
17574,7630,92
17575,59717,78
17576,52367,96
17577,43022,90
17578,1652,87
17579,68012,102
17580,44695,92
17581,41510,96
17582,9254,81
17583,1657,97
17584,1657,74
17585,1657,87
17586,73802,78
17587,42749,84
17588,155597,109
17589,22862,76
17590,1657,108
17591,43022,86
17592,123830,99
17593,3545,82
17594,1652,86
17595,1657,82
17596,21000000,89
17597,42287,74
17598,52850,96
17599,58030,90
17600,42455,86
17601,43022,94
17602,42917,67
17603,1657,95
17604,43358,95
17605,1652,82
17606,5033,85
17607,1657,90
17608,15925,84
17609,43203,103
17610,43001,84
17611,43022,84
17612,7630,91
17613,43169,83
17614,9254,88
17615,43127,93
17616,53669,94
17617,42875,96
17618,47957,82
17619,42749,88
17620,42749,78
17621,27692,79
17622,47950,80
17623,7630,83
17624,49842,83
17625,42917,84
17626,1652,84
17627,16072,93
17628,42917,86
17629,42833,83
17630,42896,82
17631,43127,80
17632,5831,86
17633,50168,90
17634,32417,86
17635,7630,94
17636,32207,91
17637,42917,85
17638,57653,76
17639,21000000,86
17640,43022,91
17641,60116,84
17642,43022,89
17643,40376,84
17644,93317,89
17645,5033,87
17646,5033,108
17647,42917,83
17648,42917,75
17649,49301,87
17650,43022,85
17651,43118,94
17652,41972,75
17653,42917,83
17654,42980,96
17655,21000000,80
17656,69167,91
17657,1657,84
17658,38402,84
17659,13475,80
17660,51352,84
17661,64666,84
17662,48797,92
17663,35924,89
17664,44695,83
17665,42728,88
17666,36995,83
17667,20293,88
17668,49028,98
17669,43022,70
17670,43190,104
17671,3358,93
17672,7630,90
17673,67424,93
17674,53497,88
17675,38927,88
17676,43022,85
17677,42812,81
17678,1657,82
17679,49743,72
17680,43022,83
17681,11851,84
17682,42917,93
17683,2885,97
17684,43106,70
17685,47852,77
17686,72569,102
17687,43003,81
17688,42917,87
17689,42791,95
17690,37870,88
17691,93863,94
17692,1652,95
17693,42917,87
17694,42938,82
17695,42917,82
17696,43022,92
17697,17717,94
17698,1657,100
17699,1657,80
17700,7333,99
17701,44093,82
17702,47117,102
17703,43442,82
17704,39067,86
17705,42749,91
17706,42938,98
17707,21917,78
17708,43022,82
17709,1652,80
17710,41188,83
17711,107471,87
17712,56126,90
17713,1652,89
17714,43003,98
17715,42967,71
17716,44702,89
17717,43022,92
17718,43064,76
17719,1657,84
17720,43001,102
17721,85232,88
17722,47117,81
17723,42770,84
17724,40565,87
17725,4157,82
17726,38654,89
17727,327593,85
17728,55608,87
17729,42917,96
17730,42917,91
17731,43022,91
17732,43022,79
17733,17717,96
17734,42854,82
17735,27797,80
17736,73157,75
17737,42770,80
17738,17717,85
17739,42791,82
17740,42182,91
17741,42980,93
17742,43022,93
17743,7483,81
17744,51905,87
17745,47042,100
17746,47117,86
17747,42791,88
17748,3545,86
17749,805399,100
17750,43967,89
17751,34517,85
17752,7504,78
17753,42812,84
17754,43022,87
17755,22386,83
17756,42791,89
17757,9254,86
17758,42854,88
17759,43022,85
17760,47327,89
17761,5033,90
17762,24514,90
17763,1657,82
17764,1657,73
17765,44665,81
17766,43127,89
17767,43022,77
17768,42707,94
17769,3545,76
17770,43022,87
17771,5033,90
17772,43211,88
17773,40376,90
17774,20293,85
17775,3545,88
17776,42854,91
17777,1657,84
17778,78316,98
17779,34706,81
17780,1657,87
17781,53417,91
17782,43127,80
17783,4157,78
17784,59717,87
17785,25694,82
17786,9254,97
17787,43022,88
17788,42917,75
17789,47117,92
17790,21000000,77
17791,7630,87
17792,456778,82
17793,73073,101
17794,34790,78
17795,42917,87
17796,29855,99
17797,42833,83
17798,43757,83
17799,20279,106
17800,43232,82
17801,38507,83
17802,1657,83
17803,72569,92
17804,1652,96
17805,43022,108
17806,22022,89
17807,82467,87
17808,17626,82
17809,45542,93
17810,42946,92
17811,35357,100
17812,42917,84
17813,1657,84
17814,86450,83
17815,7630,87
17816,17759,85
17817,49787,93
17818,26180,97
17819,1657,92
17820,42917,83
17821,43022,88
17822,42833,74
17823,1662,93
17824,55608,85
17825,1652,100
17826,68222,79
17827,3545,88
17828,16072,90
17829,42917,95
17830,43043,83
17831,9989,99
17832,10087,83
17833,41321,87
17834,53669,85
17835,41188,82
17836,44408,110
17837,42707,92
17838,37877,79
17839,43022,84
17840,42770,77
17841,40376,96
17842,1658,77
17843,44282,91
17844,42833,84
17845,43211,84
17846,15974,92
17847,3545,90
17848,16072,80
17849,42812,84
17850,103628,90
17851,7630,89
17852,38801,79
17853,43022,89
17854,79163,92
17855,40754,92
17856,12656,80
17857,41846,90
17858,1657,99
17859,42917,96
17860,42602,85
17861,84917,90
17862,66451,78
17863,47602,100
17864,42917,83
17865,21000000,94
17866,21917,87
17867,42206,77
17868,43127,90
17869,1657,89
17870,42392,83
17871,42749,94
17872,1657,89
17873,1652,83
17874,9254,86
17875,42749,89
17876,43022,89
17877,43337,81
17878,42791,88
17879,1657,92
17880,43001,83
17881,11851,84
17882,178913,88
17883,17696,84
17884,44620,90
17885,22771,90
17886,5033,87
17887,7483,82
17888,1657,72
17889,43118,86
17890,70693,83
17891,16072,89
17892,56319,85
17893,13475,83
17894,42749,88
17895,42875,83
17896,43127,78
17897,79625,83
17898,24514,82
17899,1078,76
17900,39998,83
17901,805399,95
17902,5117,85
17903,110390,95
17904,47957,84
17905,48755,83
17906,58030,88
17907,35273,87
17908,11851,85
17909,43127,97
17910,3358,86
17911,43232,77
17912,58030,93
17913,17696,83
17914,5033,81
17915,28038,84
17916,1657,81
17917,37667,86
17918,13475,89
17919,21000000,93
17920,1657,80
# After 8800 updates
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ < x ≤ x x x T if x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "3 dec dec ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 x x inc x T T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec copy inc x be 9 * copy F copy -1 T x < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 4 -1 T T < -5 2 swap -10 7 F ≤ -5 * 8 * inc depth *"
# 1652: "T < depth * x x -7 - x 4 -2 F inc T greedy? F pop 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ 4 T x 3 x be * * x ∨ copy x inc x T T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x F x be 5 x be * * x ∨ copy x inc x T x 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -10 + ¬ -3 greedy ¬ 9 eql -1 be 2 T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "be copy ≤ x x F T < ¬ x -4 -9 ¬ -2 -1 x 5 pop swap x neg -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-9 x depth * ¬ x x T be eql -1 pop F x -1 x 4 x * -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "be copy F > - -3 F T 0 x x x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "depth x 3 ∧ T T x < 9 eql -1 pop F T -1 F 4 ungreedy be x - -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 T depth < 8 x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "T + -1 x 5 F T * 9 x -3 pop inc x 3 -1 ≥ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql -1 be F T greedy? x 9 x 7 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x dec x * greedy x x -1 T depth < 8 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg x > eql ¬ F pop 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy F 9 x -1 + 5 ∨ ∧ be T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x -7 if ≤ 3 F inc 6 3 * x 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "x dec dec copy x depth -9 ¬ 0 eql 1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy ¬ 9 x -1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1657: "-7 inc ∨ x 5 eql T T x x 4 x be T F x 9 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "+ x T F x ¬ T * 9 ≤ x dec inc x ¬ T T 2 > -10 -10 -6 inc T * 8 * inc 5 *"
# 1657: "greedy dec -2 copy ≥ depth dec if 0 eql -3 pop inc x 3 -1 ≥ copy greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc inc inc inc + F F x 0 x F x -5 neg > T T T x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "-3 x x copy -5 pop x F T * neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 + -1 greedy dec -7 x F be 8 5 pop be x copy T T x x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "-7 -5 greedy * ¬ x dec x * 9 ≤ F greedy? be x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x + T 3 x F 7 x if F ∨ copy x inc x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc inc inc -8 - -3 F * < x inc x -5 -3 ∨ x 6 1 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x < F x x -7 -5 depth x x 0 F T x - x greedy? x -10 T -6 inc swap * 8 * inc 5 *"
# 1657: "greedy x -6 > x T 5 -6 -5 -9 x dec inc x swap T T 8 + -10 F -6 inc T * 8 * inc 5 *"
# 1657: "x F x be ¬ x be copy copy greedy depth x + pop F x T 2 x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "greedy 5 dec ungreedy ∧ T F T 0 x T x T 3 x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 eql F x < ≥ x T pop inc x copy T T 2 swap -10 ∨ -6 inc swap * 8 * inc 5 *"
# 1657: "greedy copy T x / F x copy 9 T x x 6 pop F x copy -1 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy? swap pop -9 eql F 1 copy -6 > T x x x inc x if x swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 T be * * x ∨ depth x ≤ x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x inc inc -8 -9 dec pop T if x 3 3 inc greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x F x be 5 < be -8 * x ≥ copy x inc x T x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "F copy F -10 F -3 F - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x inc * x - -3 F ≤ T x x x -5 greedy? x T x x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x < F x x -7 -5 depth x x pop neg T x - x T x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "x x 7 neg / T + 4 x x -10 7 x 5 F T swap 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 ∧ be 2 * x ∨ depth x ≤ x ≥ T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy 5 6 5 neg 2 x x x ∧ pop -1 greedy? greedy? x x T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T T greedy? swap pop ∨ x be be x ∨ copy < -3 x < 6 1 x -10 F -6 inc T * 8 * inc 5 *"
# 1657: "+ + T swap x x T * 9 ≤ x pop -8 x inc x x -5 ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "∧ -9 dec ungreedy greedy? T / T 0 x T - T 1 x T T x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 greedy dec -7 x copy 9 x T T > x copy T x 2 swap -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 x be * * x x depth T + x x + x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "+ T greedy? swap x greedy copy F neg x -5 x > F copy ∨ x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T T -4 x x F x x 9 3 7 8 x -3 x -9 6 inc > -10 -10 -6 inc T * 8 * inc 5 *"
# 1657: "-7 * * 4 T F x -10 if 8 5 pop x x dec T T 2 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "-9 x depth * x x x T be dec -1 pop F x -1 x 4 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T -3 < depth ¬ x ≤ T -1 x T pop 8 inc x -10 0 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 F F x + greedy? ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "x -2 greedy? swap x greedy copy x x x x pop - copy 9 T ≥ -8 ungreedy pop x -10 inc -5 * 9 * dec 5 *"
# 1658: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < x 7 x -3 swap x x -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy ¬ x 8 0 ≤ 2 -4 -7 2 x x -1 T depth * 8 F swap pop ungreedy ∨ -9 -5 * 9 * dec 5 *"
# 2366: "≤ 4 T x 3 x be * x -8 ∨ copy x inc x T -7 2 swap neg ungreedy -6 inc -5 * F * inc depth *"
# 2618: "inc dec dec ∧ 6 dec x T if x 3 3 inc greedy x 3 inc 2 swap -10 ungreedy -6 be T * 8 * inc T *"
# 3545: "x x pop x copy if be T -4 copy x copy -1 T T < -5 eql -6 T - -6 inc -5 * 8 * inc depth *"
# 3545: "≤ 4 T + ¬ -3 F ¬ 9 eql -1 x 2 T F x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 26117: "pop dec dec -8 ¬ x be x * F ∨ copy x inc swap > greedy? -8 greedy ∧ T ≥ -9 -2 * 9 * dec 5 *"
# 42707: "x dec dec copy -10 x be 9 * copy F copy -1 T x < -5 x swap -10 / x inc inc -1 6 -9 inc depth F"
# 42770: "/ x 3 4 / - inc -1 dec -5 F * -4 / T - -7 -7 x -1 2 0 x inc x x x inc depth *"
# 42833: "if * 4 swap 5 x ≤ x T 6 -1 pop F x -1 F 4 7 7 x -2 / x T -7 / swap x inc 9"
# 42917: "F F ¬ + 5 -3 greedy ¬ x x / -9 dec x - x / 1 7 / ∧ - x * 6 x greedy inc 5 *"
17921,43022,74
17922,43022,67
17923,43022,76
17924,42854,72
17925,43022,77
17926,47117,91
17927,43022,90
17928,42833,76
17929,21000000,74
17930,42707,90
17931,42980,93
17932,16072,96
17933,5117,72
17934,72569,81
17935,114317,88
17936,118517,87
17937,1657,80
17938,48503,90
17939,3545,88
17940,5117,100
17941,1657,89
17942,43232,85
17943,3697,72
17944,43022,76
17945,43526,88
17946,53442,84
17947,43022,77
17948,19502,79
17949,42917,78
17950,39242,92
17951,41657,87
17952,7483,90
17953,26117,84
17954,1657,72
17955,159911,86
17956,7630,93
17957,91588,97
17958,11851,85
17959,17696,93
17960,5033,90
17961,56319,77
17962,42284,74
17963,42833,81
17964,42854,94
17965,43442,101
17966,42917,89
17967,34552,88
17968,1657,87
17969,13517,84
17970,42917,75
17971,52932,88
17972,36197,96
17973,1652,87
17974,49609,91
17975,43757,75
17976,24311,82
17977,42770,87
17978,1652,92
17979,1657,95
17980,1657,81
17981,42917,87
17982,43127,73
17983,42914,77
17984,1657,85
17985,9254,103
17986,49315,80
17987,13475,87
17988,84854,85
17989,63511,76
17990,21000000,74
17991,39067,86
17992,57588,80
17993,42707,90
17994,21000000,72
17995,4157,84
17996,20293,92
17997,52094,83
17998,42728,85
17999,43022,80
18000,51212,86
18001,43022,100
18002,16072,84
18003,42917,74
18004,5033,86
18005,43579,87
18006,45122,90
18007,43022,95
18008,43127,85
18009,17696,83
18010,43022,89
18011,42497,77
18012,56882,79
18013,42287,73
18014,1658,96
18015,11851,99
18016,43022,76
18017,43022,92
18018,63112,87
18019,43022,89
18020,11851,93
18021,1657,82
18022,1652,94
18023,44408,93
18024,1657,78
18025,5033,84
18026,43127,82
18027,7504,82
18028,42287,90
18029,17696,97
18030,32767,85
18031,99470,95
18032,11851,107
18033,5338,87
18034,20293,98
18035,42812,88
18036,42917,81
18037,5033,88
18038,38717,87
18039,42623,84
18040,9254,78
18041,11851,81
18042,11851,87
18043,7630,91
18044,64589,78
18045,72275,85
18046,43022,88
18047,7630,102
18048,47117,82
18049,64590,93
18050,56319,83
18051,13475,81
18052,72317,78
18053,42497,80
18054,41132,98
18055,63511,81
18056,43022,90
18057,40523,79
18058,42917,83
18059,43118,87
18060,13475,91
18061,42728,91
18062,5033,91
18063,37037,79
18064,2450,84
18065,44282,84
18066,41867,91
18067,38717,89
18068,55307,83
18069,13475,97
18070,11851,85
18071,1657,80
18072,86429,89
18073,17696,90
18074,55488,96
18075,21000000,80
18076,68117,87
18077,20293,85
18078,42917,89
18079,45122,90
18080,1658,76
18081,1658,92
18082,7630,95
18083,47432,96
18084,1657,94
18085,47894,85
18086,4179,81
18087,41237,75
18088,38297,101
18089,43757,79
18090,63917,96
18091,43022,106
18092,62808,74
18093,67424,105
18094,3545,92
18095,33362,80
18096,73822,77
18097,28735,82
18098,19304,100
18099,1652,95
18100,5033,86
18101,5033,101
18102,44695,80
18103,42644,84
18104,42833,91
18105,55517,77
18106,16072,82
18107,63917,93
18108,43017,67
18109,379022,96
18110,20293,88
18111,1657,85
18112,1652,89
18113,43022,83
18114,13475,87
18115,1657,80
18116,1657,78
18117,49574,95
18118,1657,84
18119,24514,90
18120,43022,89
18121,41510,82
18122,42182,89
18123,43169,87
18124,43022,98
18125,1657,80
18126,43022,73
18127,42497,82
18128,5033,83
18129,42917,95
18130,43022,87
18131,59906,87
18132,1657,92
18133,42896,89
18134,21000000,89
18135,42497,74
18136,3545,86
18137,1657,77
18138,44695,76
18139,49743,82
18140,42602,94
18141,219583,88
18142,43337,94
18143,43232,82
18144,1652,99
18145,42770,94
18146,43022,95
18147,7483,91
18148,42854,91
18149,45668,85
18150,55307,90
18151,42182,82
18152,9254,97
18153,13475,93
18154,1657,82
18155,42077,72
18156,80034,93
18157,55608,81
18158,130687,85
18159,1657,82
18160,53669,92
18161,1657,78
18162,7483,89
18163,49743,91
18164,43127,73
18165,21000000,81
18166,13475,96
18167,11417,85
18168,57806,79
18169,44660,88
18170,86485,86
18171,42917,77
18172,40943,94
18173,43118,80
18174,42833,98
18175,81347,78
18176,68054,84
18177,42917,74
18178,1652,100
18179,21000000,78
18180,3545,95
18181,43232,81
18182,43022,82
18183,42917,95
18184,31129,97
18185,41447,84
18186,267657,73
18187,49262,79
18188,53669,87
18189,1657,77
18190,21917,84
18191,41188,97
18192,47117,88
18193,11177,79
18194,21917,88
18195,41993,93
18196,68117,93
18197,37877,91
18198,69167,78
18199,42917,77
18200,10259,100
18201,42917,93
18202,7630,83
18203,1657,82
18204,16072,84
18205,84045,88
18206,43022,88
18207,42917,87
18208,42917,83
18209,42497,86
18210,56126,79
18211,42077,75
18212,42875,86
18213,42791,77
18214,1652,95
18215,1662,83
18216,43022,74
18217,65513,92
18218,16072,102
18219,21000000,90
18220,143717,81
18221,44681,77
18222,41188,90
18223,42917,83
18224,42602,81
18225,42077,77
18226,1657,79
18227,42917,93
18228,63511,81
18229,7595,89
18230,42854,73
18231,11851,84
18232,1657,84
18233,4157,79
18234,9254,86
18235,43203,95
18236,42770,78
18237,26180,98
18238,43652,90
18239,43022,95
18240,7630,78
18241,1652,92
18242,43127,97
18243,9254,92
18244,1652,82
18245,30359,87
18246,42077,79
18247,49014,87
18248,1657,73
18249,1657,88
18250,68117,83
18251,43118,80
18252,47936,84
18253,16072,93
18254,43022,92
18255,1652,84
18256,27832,108
18257,43022,84
18258,43022,79
18259,17759,84
18260,42252,77
18261,43442,82
18262,43022,81
18263,21917,109
18264,37307,85
18265,49787,85
18266,37667,84
18267,7630,86
18268,3333799,91
18269,47936,85
18270,42812,71
18271,1658,90
18272,104622,89
18273,21000000,81
18274,40376,102
18275,47117,79
18276,11851,98
18277,42917,74
18278,49609,84
18279,45227,90
18280,59717,83
18281,79191,83
18282,1657,85
18283,42812,75
18284,49182,78
18285,76517,76
18286,1658,82
18287,7630,101
18288,56319,89
18289,16072,98
18290,3443,76
18291,22771,91
18292,39067,82
18293,58128,91
18294,32767,90
18295,42917,76
18296,55608,79
18297,42287,80
18298,1652,73
18299,41342,78
18300,43232,87
18301,42665,86
18302,13475,98
18303,40670,82
18304,1657,84
18305,3545,89
18306,42077,73
18307,17822,84
18308,52850,95
18309,7630,82
18310,9254,101
18311,9254,81
18312,51842,83
18313,42612,81
18314,1657,79
18315,1657,76
18316,43085,95
18317,13517,87
18318,1652,93
18319,9254,98
18320,1657,76
18321,21000000,84
18322,42770,88
18323,47888,83
18324,86429,84
18325,1652,82
# After 9000 updates
# 1078: "pop eql dec ∧ < x ≤ x x x T if x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "x F x be 5 x be * * x ∨ copy x inc x T x 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ F T 0 x x x -5 neg > F T 2 neg x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 -6 -4 T x neg x > eql ¬ F pop greedy? be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ swap x 1 x 4 x -1 T depth < -5 x swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql -1 ungreedy F T greedy? x x x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x T if ≤ 3 F inc 6 3 / F 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "be copy ≤ x x F T < ¬ x -4 -9 ¬ -2 -1 x 5 pop swap x neg -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy ¬ 9 x -1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * -4 0 5 / -6 - x x dec inc x 1 T T 2 > -10 ¬ -6 inc copy * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "x dec dec copy x depth -9 ¬ 0 eql 1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x inc copy F 1 8 2 pop x inc x x x 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x -10 x * x x x -1 T depth < inc x swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 T depth < 8 x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 x x inc x T T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "T < depth * x x -7 - x 4 -2 F inc T greedy? F pop 7 be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - -3 F T 0 x inc x -5 neg > T T 2 pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 4 -1 T T < -5 2 swap -10 7 F ≤ -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x -7 if ≤ 3 F inc 6 3 * x 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "F 5 dec ∧ T x ≥ -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x 3 ∧ T T F < 9 eql -1 pop F T 6 F 4 ungreedy be x - -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -10 + ¬ -3 greedy ¬ 9 eql -1 be 2 T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy F 9 x -1 + 5 ∨ ∧ be T 2 swap -10 -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "T -3 < depth ¬ x ≤ T -1 x T pop 8 - x -10 0 depth + -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec dec ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc x < F x x F -5 ≥ x ≥ 0 F T x - 3 x be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "T + -1 x 5 F T * 9 x -3 pop inc x 3 -1 ≥ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-9 x depth * ¬ x x T be eql -1 pop F x -1 x 4 x * -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ * T 4 x -1 F ungreedy x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc x copy x F x F T x neg copy swap eql x < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1657: "greedy x -10 + ¬ -3 -7 ¬ * > x 4 -3 -3 ∨ F 6 6 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x inc inc -8 -9 dec pop T if x 3 3 inc greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 x T x x F x copy 9 T x x swap pop F x x x x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 x be * * x x 4 T + x x + -5 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "-3 x x copy -5 pop x F T * neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc ∨ eql 5 eql T T x x 4 x be + F T 9 2 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc inc inc inc + F F x 0 x F x -5 neg > T T T x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "* T greedy? ∧ 6 ∧ be 2 * x ∨ T x ≤ x ≥ T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 T > 4 eql F x < * > x 4 -3 -3 ∨ be 6 5 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy dec -2 copy ≥ depth dec if 0 eql -3 pop inc x 3 -1 ≥ copy greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc * x 0 5 / -6 - / neg dec x x -1 x 4 x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x F x be 5 < be -8 * x ≥ copy x inc x T x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 greedy dec -7 x copy 9 x T T > x copy T x 2 swap -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "inc dec dec ∧ 6 T be * * x ∨ depth x ≤ x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 x T * ¬ x -10 > * x x x -1 5 F T x 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy? swap pop -9 eql F 1 copy -6 > T x x x inc x if x swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "F copy F -10 F -3 F - T ungreedy x copy x greedy x if T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 eql F x F -4 8 5 pop be x 9 x T T x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "x + T 3 x F 7 x if F ∨ copy x inc x -3 T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "+ T greedy? swap x greedy copy F neg x -5 x > F copy ∨ x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop eql dec ∧ < x pop x x x T if x inc x x x x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy 5 6 5 neg 2 x x x ∧ pop -1 greedy? greedy? x x T > greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc * x 0 x / -6 ≤ x neg dec F 6 x x 4 x swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "∨ x T F x x -9 9 * x ∨ copy be x copy T x T greedy -10 T -6 inc T * 8 * inc 5 *"
# 1657: "∨ x T F x x -9 9 x x ∨ * be x copy T x T greedy -10 T -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc -4 x x F F x 9 3 7 -2 F -3 x -9 6 inc > -10 -10 -6 inc T * 8 * inc 5 *"
# 1657: "F F ¬ + ∨ -3 greedy ¬ 9 -3 * copy 2 inc x x x x 6 -10 ungreedy -6 inc ∧ * 8 * inc 5 *"
# 1657: "+ + greedy? swap x greedy copy F 1 8 x pop x F x T - x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "F + greedy? F x x -7 -5 depth x x pop neg T x 3 x T x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 F F x + greedy? ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "copy x -6 x ≤ x - * 9 ≤ x pop -8 x inc ∧ x -5 greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy x -6 > x T 5 -6 -5 -9 x dec inc x swap T T 8 + -10 F -6 inc T * 8 * inc 5 *"
# 1657: "inc x 1 ∧ ¬ / ¬ * 9 ≤ -7 dec inc -6 ¬ T T 2 > -10 -10 -6 inc T * 8 * inc 5 *"
# 1658: "T + -1 8 5 F if * 9 x x pop - copy 9 T ≥ -8 ungreedy -7 x -10 inc -5 * 9 * dec 5 *"
# 1658: "greedy x -6 > x T 5 -6 -5 -9 ungreedy dec inc x swap 8 T -5 x x x -10 inc -5 * 9 * dec 5 *"
# 11851: "+ T greedy? x x greedy copy F neg x -5 x > F copy ∨ x x 0 -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 42284: "pop T 4 T 5 x ≤ x T 6 ¬ pop F x -1 F 4 7 7 x -2 x x T x / swap inc depth *"
# 42497: "x x T -3 -5 -2 -1 -1 inc -5 eql + x + inc + / -3 0 x * dec x inc 4 inc dec inc 5 *"
# 42497: "T T greedy? x -9 F x copy 9 -2 T pop copy x 3 + / -3 2 x * dec x inc 4 inc dec inc 5 *"
# 42497: "inc 7 dec ∧ 6 ∧ x / -1 -5 eql + x + inc + / -3 2 x * dec x inc 4 inc dec inc 5 *"
# 43022: "x -2 x inc / x dec inc * - -5 -10 x x + x dec x x -1 8 * -5 - inc inc - * x x"
# 43022: "pop x ∧ ∧ T x be x x F ∨ copy x depth + 8 x 9 dec 2 7 -9 + * x - + + inc x"
18326,43064,81
18327,42980,74
18328,42896,68
18329,43022,82
18330,43106,72
18331,42917,102
18332,5033,104
18333,1657,86
18334,42665,96
18335,43022,85
18336,42854,86
18337,54950,85
18338,42791,87
18339,13475,92
18340,41132,89
18341,43252,86
18342,43106,85
18343,39242,100
18344,32767,89
18345,43652,86
18346,42497,78
18347,42896,76
18348,42917,80
18349,42728,91
18350,44492,88
18351,21917,78
18352,49743,90
18353,42896,81
18354,52932,87
18355,42917,77
18356,43022,77
18357,45437,76
18358,42980,80
18359,57588,83
18360,21917,87
18361,32767,96
18362,42917,88
18363,21917,85
18364,42231,83
18365,5117,87
18366,42833,97
18367,43862,72
18368,11851,80
18369,42896,87
18370,3545,77
18371,7630,91
18372,49186,88
18373,21000000,87
18374,1657,79
18375,15883,86
18376,45038,90
18377,3545,106
18378,21000000,92
18379,57588,81
18380,1652,93
18381,47117,101
18382,43022,79
18383,7630,94
18384,1652,82
18385,76412,93
18386,7630,79
18387,42946,87
18388,41132,92
18389,11851,85
18390,43022,77
18391,21917,93
18392,24346,78
18393,5033,90
18394,42917,87
18395,43203,75
18396,1662,85
18397,81522,87
18398,52987,81
18399,42833,73
18400,7630,103
18401,42917,80
18402,24514,90
18403,42917,86
18404,43106,84
18405,57953,91
18406,42917,84
18407,42497,84
18408,56418,75
18409,52850,99
18410,21917,85
18411,43547,78
18412,47382,76
18413,36722,85
18414,42749,92
18415,4193,78
18416,42980,97
18417,85232,82
18418,42917,91
18419,99975,92
18420,42770,99
18421,42917,91
18422,43022,84
18423,44345,103
18424,43118,92
18425,44072,78
18426,9317,85
18427,42791,96
18428,7630,91
18429,1078,76
18430,43203,73
18431,51317,91
18432,3545,88
18433,5033,93
18434,21000000,92
18435,42749,82
18436,40490,86
18437,16490,99
18438,1657,88
18439,67571,85
18440,27713,92
18441,44723,89
18442,21917,87
18443,42917,82
18444,75292,80
18445,67907,89
18446,21917,81
18447,42917,81
18448,21000000,93
18449,42791,93
18450,1657,84
18451,51317,84
18452,21000000,96
18453,1652,79
18454,42917,80
18455,42917,83
18456,47117,76
18457,50393,94
18458,29414,93
18459,43022,81
18460,7630,81
18461,40712,94
18462,43022,78
18463,43022,89
18464,43022,86
18465,42917,72
18466,30317,87
18467,7630,89
18468,21889,90
18469,7630,89
18470,42812,88
18471,1652,93
18472,60961,93
18473,43064,91
18474,126812,80
18475,42770,76
18476,43001,86
18477,43022,76
18478,56882,82
18479,43022,76
18480,13475,95
18481,1652,83
18482,42875,87
18483,7630,89
18484,5033,97
18485,1657,80
18486,50834,86
18487,62027,82
18488,42252,80
18489,123410,93
18490,85232,74
18491,24178,83
18492,43547,73
18493,43118,82
18494,28095,85
18495,44611,88
18496,224357,89
18497,11851,90
18498,43127,91
18499,110012,93
18500,1657,92
18501,16072,86
18502,9254,83
18503,1657,72
18504,1652,84
18505,105917,79
18506,5033,86
18507,11578,88
18508,43442,93
18509,43190,90
18510,1657,78
18511,1657,84
18512,22771,84
18513,42854,98
18514,47117,85
18515,42917,83
18516,43568,81
18517,16072,87
18518,30317,85
18519,21000000,100
18520,41678,86
18521,42812,76
18522,28735,87
18523,43064,89
18524,47693,76
18525,110873,80
18526,17696,104
18527,66451,87
18528,41132,91
18529,43442,73
18530,68285,90
18531,42602,83
18532,43022,80
18533,17696,74
18534,119189,83
18535,42833,91
18536,49609,80
18537,259962,89
18538,40565,83
18539,1657,90
18540,11851,83
18541,43106,76
18542,126917,82
18543,57653,82
18544,43757,80
18545,43127,96
18546,16072,91
18547,5117,83
18548,80717,89
18549,1652,89
18550,53669,97
18551,42938,87
18552,3545,82
18553,42917,95
18554,43022,83
18555,42077,90
18556,7483,85
18557,17759,100
18558,39137,87
18559,47117,79
18560,42854,70
18561,3545,82
18562,5033,80
18563,4157,91
18564,51187,75
18565,21000000,89
18566,5117,76
18567,11851,80
18568,5033,80
18569,26831,76
18570,1657,79
18571,43064,89
18572,41321,94
18573,42917,85
18574,42728,84
18575,40670,91
18576,13475,82
18577,16072,91
18578,42917,96
18579,42896,83
18580,43127,81
18581,57653,86
18582,43169,89
18583,5033,81
18584,4970,95
18585,42077,89
18586,100135,86
18587,43118,85
18588,42252,91
18589,42917,78
18590,57295,86
18591,40376,87
18592,7630,92
18593,50834,84
18594,68117,83
18595,13475,94
18596,42728,77
18597,1657,85
18598,42917,81
18599,24346,84
18600,42980,106
18601,43127,77
18602,52850,88
18603,42791,88
18604,21917,97
18605,68117,79
18606,43904,93
18607,42392,88
18608,21917,81
18609,21917,81
18610,42854,111
18611,81011,88
18612,49743,98
18613,3545,83
18614,5117,79
18615,7378,76
18616,43001,106
18617,1652,90
18618,43022,84
18619,9254,100
18620,72317,85
18621,33026,92
18622,49301,80
18623,42812,101
18624,43127,82
18625,9254,83
18626,47957,86
18627,15015562,80
18628,42287,77
18629,1657,88
18630,5033,91
18631,43022,83
18632,51212,98
18633,42917,92
18634,42980,84
18635,40838,95
18636,52850,91
18637,34580,84
18638,43647,74
18639,42770,96
18640,21000000,80
18641,59423,78
18642,46277,81
18643,1657,91
18644,13475,100
18645,56319,86
18646,41510,86
18647,38801,87
18648,5831,93
18649,1657,88
18650,42812,101
18651,107277,93
18652,1657,87
18653,43022,87
18654,81011,85
18655,1657,87
18656,1652,89
18657,11851,93
18658,43022,96
18659,3545,88
18660,52932,83
18661,93947,90
18662,45023,95
18663,84917,79
18664,1657,91
18665,42833,88
18666,43022,92
18667,2534,92
18668,11851,86
18669,3545,99
18670,47117,89
18671,83237,82
18672,21000000,107
18673,42644,89
18674,11851,89
18675,1652,92
18676,43022,85
18677,57653,88
18678,17696,109
18679,44870,85
18680,153650,98
18681,1657,88
18682,76790,80
18683,43022,96
18684,21917,88
18685,47747,94
18686,39998,97
18687,5033,93
18688,5033,86
18689,1657,76
18690,14777,76
18691,24514,82
18692,30359,98
18693,21000000,80
18694,1652,95
18695,2534,90
18696,44492,86
18697,81312,94
18698,75481,83
18699,42602,107
18700,42182,72
18701,42707,80
18702,5033,84
18703,44681,97
18704,22022,83
18705,1657,80
18706,11578,76
18707,41174,84
18708,30397,76
18709,24346,96
18710,47117,82
18711,4214,82
18712,48759,87
18713,47117,93
18714,63112,91
18715,69167,83
18716,43022,92
18717,43203,90
18718,42896,96
18719,21917,92
18720,7630,85
18721,42812,90
18722,9254,87
18723,1652,93
18724,44404,78
18725,44387,82
18726,52850,73
18727,1657,87
18728,1657,79
18729,67424,90
18730,21000000,91
# After 9200 updates
# 1078: "pop eql dec ∧ / x ≤ x x x T if x inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ < x ≤ x x x T if x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "F F copy + 5 -3 greedy ¬ 9 ∨ -1 + 5 ∨ depth be T 2 T -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x + ∧ -1 T be * * x ∨ copy x inc ungreedy T x 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql -1 ungreedy F T greedy? x x x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "x x 3 ∧ T T F < 9 eql -1 pop F T 6 F 4 ungreedy be x - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 4 -1 T T < -5 2 swap -10 7 F ≤ -5 * 8 * inc depth *"
# 1652: "if * 4 swap -3 x swap x - 6 5 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * -4 0 5 / -6 - x x dec inc x 1 T T 2 > -10 ¬ -6 inc copy * 8 * inc depth *"
# 1652: "inc x < F x x F -5 ≥ x ≥ 0 F T x - 3 x be x - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x -10 x * x x x -1 T depth < inc x swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x dec dec copy x depth -9 ¬ 0 eql 1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy x x -1 T depth * x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec x ∧ 6 T be * * x ∨ copy x inc x T x 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec dec ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 1652: "T + -1 x 5 F T * 9 x -3 pop inc x 3 -1 ≥ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x T if ≤ 3 F inc 6 3 / F 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 x x inc x T T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "F 5 dec ∧ T x ≥ -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ T > x x greedy copy F neg x -6 x > 5 copy ∨ x x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 -6 -4 T x neg x > eql ¬ F pop greedy? be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "if x pop ∨ 4 ≥ F T 0 x x x -5 neg > F T 2 neg x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "be copy ≤ x x F T < ¬ x -4 -9 ¬ -2 -1 x 5 pop swap x neg -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x x -5 T 6 T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x inc copy F 1 8 2 pop x inc x x x 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -10 + ¬ -3 greedy ¬ 9 eql -1 be 2 T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "T < depth F x x -7 - x 4 -2 F inc > greedy? F pop 7 inc -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-9 x depth * ¬ x x T be eql -1 pop F x -1 x 4 x * -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "F F ¬ + 5 -3 greedy x 9 x -1 + 5 ∨ ∧ be T 2 swap -10 -2 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ * T 4 x -1 F ungreedy x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ ¬ x be 9 * x ∨ copy x inc swap T T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "T -3 < depth ¬ x ≤ T -1 x T pop 8 - x -10 0 depth + -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc x copy x F x F T x neg copy swap eql x < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - T F T 0 x inc x -5 neg > T x T pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 T depth < 8 x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec dec ∧ 6 - swap T 1 x 4 4 -1 T ¬ < x 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x -7 if ≤ 3 F inc 6 3 * x 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc * 4 swap 5 x T x - 6 -1 pop F x -1 ∨ 4 7 be 2 greedy -6 inc -5 * 8 * inc depth *"
# 1657: "inc dec dec ∧ 6 x be * * x x 4 T + x x + -5 swap -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "F + greedy? F x x -7 -5 depth x x pop neg T x 3 x T x -10 T -6 inc T * 8 * inc 5 *"
# 1657: "-8 T > 4 eql F x < * > x 4 -3 -3 ∨ be 6 5 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy x -10 + ¬ -3 -7 ¬ * > x 4 -3 -3 ∨ F 6 6 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-3 x x copy x T 5 -6 + -8 x dec inc x swap T T 8 + -10 F -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 eql > x F -4 8 5 pop 5 x 9 x if T greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 x greedy * ¬ x / x * x neg x -1 T depth dec T F x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 ¬ greedy -4 -8 5 / x * x ∨ T x dec be ≥ T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T inc x copy -5 -3 x F T x neg copy depth inc x x x ∧ 6 -10 ungreedy -6 inc ∧ * 8 * inc 5 *"
# 1657: "T inc * -4 0 F / -6 - x x dec inc x -7 T x T greedy -10 T -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc * x 0 x / -6 ≤ x neg dec F 6 x x 4 x swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "-7 inc * x 0 5 / -6 T x 7 x inc 9 ¬ T T > x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "-3 x x copy -5 pop x F T * neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 F F x + greedy? ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "/ ¬ F 8 0 ≤ 2 -4 -7 greedy x -3 -1 T depth * x x neg -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "+ T greedy? swap x greedy copy F neg x -5 x > F copy ∨ x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy? swap pop -9 eql F 1 copy -6 > T x x x inc x if x swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "∨ x T F x x -9 9 x x ∨ * be x copy T x T greedy -10 T -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc ∨ x 5 -7 inc * ≥ 7 -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 8 * inc 5 *"
# 1657: "-9 x T x x F x copy 9 T x x swap pop F x x x x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "-7 inc ∨ eql 5 eql T T x x 4 x be + F T 9 2 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy dec -2 copy ≥ depth dec if 0 eql -3 pop inc x 3 -1 ≥ copy greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T + -1 greedy dec -7 x copy 9 x T T > x copy T x 2 swap -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "pop x -6 x -8 x - * be ≤ x pop -8 swap inc ∧ x -5 greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x F x be 5 < be -8 * x ≥ copy x inc x T x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop eql dec ∧ < x pop x x x T if x inc x x x x 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc pop -9 eql F 1 copy -6 > T x x x inc x / x eql -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "inc inc x copy x F x F T x x copy swap eql x F T F x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 4193: "x F x 3 x F ≤ x if F ∨ pop -1 T depth < 8 x F -5 - -6 inc -5 * 8 * inc depth *"
# 5033: "greedy x 2 x ≤ ¬ x * T 4 x -1 ¬ ungreedy ¬ < x 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 7630: "x x x + + eql -8 0 x dec -10 7 x T greedy? be x x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 9317: "be x F - 0 ¬ x * x 6 be 2 T -10 x x greedy? x - -10 ungreedy -6 inc inc * 8 * inc 5 *"
# 21917: "F x be -3 -5 -2 -1 -1 inc -5 eql x -1 inc x ∨ -5 2 1 9 ungreedy -6 inc -5 * 8 * inc 5 *"
# 41510: "-6 -2 x inc / x dec inc * - -5 1 x x + x dec x x pop swap -1 inc -5 * 8 be inc depth *"
# 43064: "T T greedy? swap x F x copy 9 -2 T pop + x 3 T ≤ F swap be -10 -6 inc -5 inc x x pop dec -2"
18731,42896,72
18732,43022,74
18733,43022,67
18734,43022,69
18735,43085,67
18736,42875,92
18737,3545,99
18738,1657,91
18739,43064,88
18740,1657,89
18741,43043,87
18742,37772,91
18743,57653,75
18744,45536,87
18745,43022,91
18746,42917,89
18747,21000000,80
18748,1662,87
18749,43022,73
18750,7637,83
18751,42791,100
18752,40754,77
18753,123788,84
18754,21000000,86
18755,42644,79
18756,43022,90
18757,57653,82
18758,42917,81
18759,11851,84
18760,36092,83
18761,139538,89
18762,43085,66
18763,1652,75
18764,5033,97
18765,83216,80
18766,1657,88
18767,44252,78
18768,42896,87
18769,68219,78
18770,1078,75
18771,21000000,83
18772,16072,86
18773,40922,87
18774,1657,89
18775,115922,79
18776,42686,96
18777,43118,77
18778,51380,87
18779,42182,84
18780,76706,90
18781,21917,78
18782,40877,88
18783,17696,85
18784,42917,74
18785,42812,81
18786,42833,83
18787,3545,82
18788,43022,91
18789,43022,81
18790,42917,83
18791,25207,83
18792,5033,84
18793,32368,92
18794,21917,85
18795,33551,82
18796,9254,87
18797,34580,76
18798,49787,80
18799,42812,86
18800,5033,73
18801,43022,82
18802,21917,81
18803,42749,92
18804,45003,98
18805,1657,90
18806,77567,90
18807,186655,76
18808,63308,77
18809,1657,99
18810,43484,85
18811,43022,88
18812,5033,93
18813,44366,88
18814,42872,75
18815,38822,80
18816,1657,94
18817,54361,107
18818,93422,96
18819,43127,90
18820,22694,104
18821,78155,91
18822,42917,85
18823,49609,95
18824,9254,80
18825,5033,76
18826,43022,88
18827,21000000,97
18828,55927,78
18829,49284,79
18830,33320,86
18831,1652,84
18832,44340,84
18833,7630,88
18834,43631,89
18835,55608,80
18836,37772,90
18837,9254,78
18838,42896,88
18839,41447,86
18840,16072,74
18841,41132,89
18842,4157,77
18843,42392,86
18844,52850,88
18845,16072,82
18846,1657,85
18847,54488,95
18848,43547,101
18849,1657,93
18850,50393,93
18851,42812,73
18852,1657,81
18853,49787,92
18854,25207,88
18855,43203,85
18856,42833,98
18857,7630,94
18858,16072,87
18859,1078,84
18860,20293,88
18861,42917,95
18862,1652,86
18863,3545,87
18864,5033,92
18865,7630,82
18866,59906,87
18867,42791,88
18868,13517,91
18869,9317,86
18870,1652,93
18871,36470,82
18872,1657,81
18873,42917,81
18874,5033,92
18875,1662,90
18876,42749,89
18877,1078,75
18878,43127,73
18879,43022,75
18880,42854,101
18881,41342,91
18882,13475,93
18883,22491,73
18884,68089,87
18885,21917,90
18886,24514,81
18887,9254,94
18888,44198,107
18889,42917,82
18890,1657,77
18891,16072,99
18892,42812,92
18893,13223,85
18894,93170,75
18895,1652,89
18896,17710,86
18897,42854,95
18898,51317,91
18899,52322,91
18900,21000000,85
18901,42917,79
18902,43232,81
18903,1657,88
18904,1652,74
18905,9254,95
18906,66010,84
18907,14777,76
18908,27924,73
18909,43022,84
18910,42770,95
18911,3545,90
18912,42749,100
18913,35567,77
18914,43022,87
18915,42917,86
18916,43316,105
18917,47117,84
18918,3358,86
18919,42728,77
18920,91588,85
18921,42812,91
18922,45290,83
18923,42077,99
18924,42252,72
18925,21000000,83
18926,11851,84
18927,27062,95
18928,49053,78
18929,21000000,94
18930,44912,95
18931,44177,96
18932,16072,81
18933,21000000,87
18934,1652,91
18935,43022,79
18936,43022,85
18937,23870,80
18938,44660,79
18939,73073,98
18940,50477,76
18941,14777,81
18942,58030,78
18943,1662,92
18944,1657,90
18945,80717,96
18946,47020,74
18947,42917,90
18948,47117,92
18949,67424,91
18950,55517,81
18951,11851,100
18952,26271,70
18953,43022,92
18954,43022,85
18955,51610,79
18956,56319,93
18957,43568,91
18958,55517,86
18959,116977,91
18960,43022,84
18961,32690,83
18962,41699,114
18963,20909,84
18964,13475,86
18965,39830,86
18966,1657,84
18967,5033,96
18968,47117,94
18969,163814,91
18970,54488,85
18971,246302,84
18972,1652,80
18973,41083,78
18974,1652,93
18975,43022,90
18976,13769,86
18977,805399,78
18978,1652,97
18979,3545,88
18980,21000000,100
18981,43022,77
18982,28658,93
18983,43547,81
18984,55972,77
18985,38717,77
18986,44723,88
18987,1657,87
18988,44777,84
18989,42917,91
18990,43022,95
18991,42812,106
18992,42854,92
18993,56945,98
18994,60961,88
18995,17696,82
18996,31129,93
18997,40754,100
18998,43967,74
18999,42686,85
19000,1652,80
19001,49268,88
19002,43022,110
19003,80717,79
19004,42665,82
19005,38822,81
19006,43118,80
19007,60002,86
19008,13475,88
19009,31262,85
19010,16072,88
19011,43022,78
19012,42917,96
19013,43022,74
19014,91238,80
19015,11851,93
19016,9254,99
19017,88991,92
19018,43022,75
19019,43003,99
19020,1652,85
19021,3545,78
19022,11851,79
19023,21000000,88
19024,43022,89
19025,42917,80
19026,21917,93
19027,69062,92
19028,43547,81
19029,42854,81
19030,57653,87
19031,1657,87
19032,1657,78
19033,1652,95
19034,3545,91
19035,44620,99
19036,46214,89
19037,1657,81
19038,1652,97
19039,43022,81
19040,49378,92
19041,43022,75
19042,47582,104
19043,1663,77
19044,53669,83
19045,63511,80
19046,133952,80
19047,1657,85
19048,42707,104
19049,1657,86
19050,42917,95
19051,34601,82
19052,5033,89
19053,3545,87
19054,42728,76
19055,3545,89
19056,41552,87
19057,27832,88
19058,48818,93
19059,13475,88
19060,36512,87
19061,43022,90
19062,43077,98
19063,37877,78
19064,38738,85
19065,1652,86
19066,43579,97
19067,3545,88
19068,40369,88
19069,5033,89
19070,9254,79
19071,11851,94
19072,9254,82
19073,43022,89
19074,42077,94
19075,64309,90
19076,9254,80
19077,219107,93
19078,43001,82
19079,43085,88
19080,3545,83
19081,42917,81
19082,11851,85
19083,21917,82
19084,1657,82
19085,39032,85
19086,42791,101
19087,1657,100
19088,43064,81
19089,29372,91
19090,43085,75
19091,47852,75
19092,57917,77
19093,61670,79
19094,37667,97
19095,42770,82
19096,63511,80
19097,69167,102
19098,11851,93
19099,16772,93
19100,42854,91
19101,9254,85
19102,1657,77
19103,42647,82
19104,42917,86
19105,1657,80
19106,42749,75
19107,42329,86
19108,20594,87
19109,5117,76
19110,43022,89
19111,26831,93
19112,42791,81
19113,21917,81
19114,43862,86
19115,19546,74
19116,52157,84
19117,51902,78
19118,5033,91
19119,1652,87
19120,3358,88
19121,5033,91
19122,42917,79
19123,42812,80
19124,34412,81
19125,59717,81
19126,7630,79
19127,7588,84
19128,60914,77
19129,43232,87
19130,40376,99
19131,42791,96
19132,7630,78
19133,5117,80
19134,43118,90
19135,39872,86
# After 9400 updates
# 1078: "T T x swap x F x copy 3 F T -10 + x T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ < x ≤ x x x T if x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ + 5 -3 greedy x 9 x -1 + 5 ∨ if 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ / x ≤ x x x T if x inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "-7 inc * -4 0 5 / -6 - x x dec inc x 1 T T 2 > -10 ¬ -6 inc copy * 8 * inc depth *"
# 1652: "-8 -3 -1 4 eql F x copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "/ dec dec x greedy? F x < 9 eql -1 pop F x -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 -6 -4 T x ∨ x > eql dec F pop greedy? 5 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "x x x * + eql -8 0 x dec -10 x ungreedy T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc x copy x F x F T x neg copy swap eql x < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql -1 ungreedy F T greedy? x x x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 4 -1 T T < -5 2 swap -10 7 F ≤ -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec x ∧ 6 T be * * x ∨ copy x inc x T x 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc * 4 swap 5 x T x - 6 -1 pop F x -1 ∨ 4 7 be 2 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 - x x dec inc x swap T T 2 swap -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec dec ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x swap dec pop x inc eql x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "x -3 x 0 dec x / x x -3 x -9 / 0 x + x - be x - -6 inc -5 * 8 * inc depth *"
# 1652: "+ T > x x greedy copy F neg x -6 x > 5 copy ∨ x x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T < depth F x x -7 - x 4 -2 F inc > greedy? F pop 7 inc -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 x x inc x T T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x inc copy F 1 8 2 pop x inc x x x 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x T if ≤ 3 F inc 6 3 / F 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "x dec dec copy x depth -9 ¬ 0 eql 1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -10 + ¬ -3 greedy ¬ 9 eql -1 be 2 T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - T F T 0 x inc x -5 neg > T x T pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy x x -1 T depth * x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be copy ≤ x x F T < ¬ x -4 -9 ¬ -2 -1 x 5 pop swap x neg -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-9 x depth * ¬ x x T be eql -1 pop F x -1 x 4 x * -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T -3 < depth ¬ x ≤ T -1 x T pop 8 - x -10 0 depth + -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "F 5 dec ∧ T x ≥ -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ * T 4 x -1 F ungreedy x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x -1 x 5 F T * 9 eql + pop F T 6 -3 4 ungreedy swap x < -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "T 5 x be 5 < be -8 * x ≤ * swap x copy T x x x -10 7 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "F F copy + 5 -3 greedy ¬ 9 ∨ -1 + 5 ∨ depth be T 2 T -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x 3 ∧ T T F < - eql 3 pop F T 6 -3 4 ungreedy swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc x < F x 8 F -5 ≥ x ≥ 0 F T x - 3 -1 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x -10 x * x x x -1 T depth < inc x swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x -7 5 / -7 - x x dec inc x swap ∧ T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 -10 T greedy? x -7 -5 ≤ 3 < inc 6 3 * x 1 swap F -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql swap 0 F T greedy? x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap -3 x swap x - 6 5 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "x x + ∧ -1 T be * * x ∨ copy x inc ungreedy T x 2 swap F ungreedy -6 inc -5 * 8 * inc depth *"
# 1657: "pop eql dec ∧ / x ≤ x x x x pop neg T x 3 x T x -10 ∨ -6 inc be * 8 * inc 5 *"
# 1657: "-7 inc * x 0 x / -6 ≤ x neg dec F 6 x x 4 x swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "/ T x 8 0 F / -6 - x x dec inc x -7 T depth - greedy -10 T -6 inc T * 8 * inc 5 *"
# 1657: "greedy x -6 x ≤ ¬ - * T 4 T 4 x x inc x if + swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "greedy? swap pop -9 eql / 2 -4 -7 T x copy -1 T depth * x x neg -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 4 eql > x F -4 8 5 pop 5 x 9 x if T greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 x 7 * neg 7 x inc < depth x 4 T + x x + > swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x x copy -5 pop copy 4 neg x -5 x > inc copy ∨ x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-1 x F x x -3 -7 ∧ * 2 x 4 -3 -3 pop F 6 6 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "∨ x T F x x -9 9 x x ∨ * be x copy T x T greedy -10 T -6 inc T * 8 * inc 5 *"
# 1657: "T inc x copy -5 -3 x F T x neg copy depth inc x x x ∧ 6 -10 ungreedy -6 inc ∧ * 8 * inc 5 *"
# 1657: "-8 T > 4 eql F x < * > x 4 -3 -3 ∨ be 6 5 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "inc inc inc -8 inc T F if 0 eql -3 pop inc x T -1 ≥ copy greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x inc * greedy dec -7 x copy 9 swap T T > x copy T x 2 F -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "-9 x T x x F x copy 9 T x x swap pop F x x x x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "T < depth F x x -7 T x -8 depth dec inc neg swap T T 8 + -10 F -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc ∨ eql 5 eql T T x x 4 x be + F T 9 2 6 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc ∨ x 5 -7 inc * ≥ 7 -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 8 * inc 5 *"
# 1657: "pop x -6 x -8 x - * be ≤ x pop -8 swap inc ∧ x -5 greedy -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x x copy -5 pop x F T * neg copy x eql ¬ < x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 ¬ greedy -4 -8 5 / x * x ∨ T x dec be ≥ T 2 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T x depth * x x -7 - x 4 x F -8 F F x + greedy? ≥ -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-3 x pop ¬ ¬ x dec x * x x ∧ x x depth < T > x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 4157: "pop x x 8 0 swap / -8 - x x dec -5 neg x F T F x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 5033: "-7 + / -4 -4 -2 x x ∨ + 4 -6 x T ¬ < x 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 5117: "F x eql -3 -5 -2 -1 -1 pop -5 < pop F 7 -1 F T 7 be ≥ -9 -10 if -5 * 8 * inc 5 *"
# 9254: "F + -6 x greedy ¬ ∨ ¬ 9 eql + 0 F T inc x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 9317: "be x F - 0 ¬ x * x 6 be 2 T -10 x x greedy? x - -10 ungreedy -6 inc inc * 8 * inc 5 *"
# 16072: "T + -1 x 5 F T * -9 F -5 1 x x + x 0 x x -10 - -6 inc -5 * 8 * inc depth *"
# 27924: "pop eql dec x / x ≤ / ∨ 2 -6 T -10 - x x 5 3 x x x x neg -5 * 9 * dec x *"
19136,42938,68
19137,43022,69
19138,42833,73
19139,43190,71
19140,43043,71
19141,43022,76
19142,43098,92
19143,74872,89
19144,43022,94
19145,43232,87
19146,41993,103
19147,42917,74
19148,50393,82
19149,43043,92
19150,1652,80
19151,43841,77
19152,16072,84
19153,42938,81
19154,42833,70
19155,12649,80
19156,43022,81
19157,42917,89
19158,83643,69
19159,42812,85
19160,42812,91
19161,50005,86
19162,22127,87
19163,1657,93
19164,43022,81
19165,1652,85
19166,40376,90
19167,295022,87
19168,43022,82
19169,43022,88
19170,41762,91
19171,9254,90
19172,40964,95
19173,1657,81
19174,1652,102
19175,53102,86
19176,21917,88
19177,101612,79
19178,40754,120
19179,56319,101
19180,42812,86
19181,4157,73
19182,43003,96
19183,11851,78
19184,1657,99
19185,42791,93
19186,42917,75
19187,5033,88
19188,16072,78
19189,1657,83
19190,41972,89
19191,17626,76
19192,19502,85
19193,2019,87
19194,42887,79
19195,7630,84
19196,1652,96
19197,1657,92
19198,16088,82
19199,26271,82
19200,42770,103
19201,1662,83
19202,40376,88
19203,63917,78
19204,1657,88
19205,11578,93
19206,42770,80
19207,42077,81
19208,42833,89
19209,9422,91
19210,7630,90
19211,43118,90
19212,29414,90
19213,159910,82
19214,43967,88
19215,25422,77
19216,43022,72
19217,43022,89
19218,11851,90
19219,64589,93
19220,1657,99
19221,43118,97
19222,43022,85
19223,40943,109
19224,42833,85
19225,85232,99
19226,45332,83
19227,21000000,98
19228,44198,84
19229,42833,100
19230,21917,83
19231,13475,84
19232,43043,71
19233,42812,101
19234,42833,88
19235,40517,96
19236,44030,74
19237,42917,86
19238,42854,77
19239,1652,85
19240,10514,86
19241,24626,81
19242,43579,84
19243,40670,87
19244,37856,100
19245,130109,93
19246,42749,89
19247,42812,85
19248,43232,96
19249,42770,88
19250,42266,79
19251,47602,92
19252,68348,86
19253,46907,78
19254,7630,85
19255,1078,74
19256,43064,91
19257,43022,91
19258,43647,85
19259,1657,76
19260,1657,80
19261,46147,73
19262,43118,102
19263,42077,74
19264,1657,85
19265,1652,77
19266,42833,70
19267,17612,83
19268,13475,80
19269,4157,81
19270,101717,79
19271,21000000,88
19272,1652,105
19273,31157,71
19274,43064,84
19275,79856,80
19276,11074,71
19277,1658,85
19278,43022,96
19279,76578,69
19280,21000000,97
19281,21917,94
19282,1657,75
19283,43022,82
19284,21000000,82
19285,44198,91
19286,40187,90
19287,1657,99
19288,25473,99
19289,41258,97
19290,42812,85
19291,7588,83
19292,42686,97
19293,64590,86
19294,24388,99
19295,44695,81
19296,1078,89
19297,90092,80
19298,1652,95
19299,42938,90
19300,43022,91
19301,50477,83
19302,43072,83
19303,21000000,74
19304,47117,95
19305,134720,89
19306,43203,82
19307,43022,85
19308,21000000,87
19309,34454,96
19310,41321,90
19311,41132,92
19312,42854,77
19313,66175,66
19314,42917,75
19315,47117,85
19316,39593,100
19317,3545,81
19318,42252,83
19319,42812,95
19320,11851,81
19321,41699,109
19322,28658,86
19323,44620,98
19324,9254,85
19325,1078,78
19326,44702,95
19327,49574,90
19328,43022,78
19329,5117,89
19330,43022,81
19331,44870,84
19332,1652,91
19333,7630,73
19334,43967,95
19335,1078,80
19336,9254,91
19337,207368,81
19338,42812,96
19339,9254,78
19340,5033,79
19341,1657,94
19342,16072,85
19343,46277,75
19344,31157,71
19345,7630,87
19346,32788,96
19347,13676,104
19348,42140,81
19349,58898,100
19350,7630,97
19351,108088,77
19352,79625,113
19353,43022,88
19354,42917,90
19355,88193,91
19356,44282,77
19357,82978,89
19358,43127,83
19359,16072,83
19360,40397,94
19361,36862,83
19362,3545,86
19363,41053,80
19364,1657,83
19365,55293,76
19366,42917,81
19367,42812,84
19368,38801,91
19369,21000000,97
19370,42971,80
19371,42749,78
19372,5831,88
19373,42329,86
19374,5033,100
19375,17717,74
19376,21000000,78
19377,71337,84
19378,42917,92
19379,21000000,83
19380,43274,83
19381,42728,90
19382,13475,85
19383,21000000,83
19384,43127,73
19385,5033,95
19386,46613,101
19387,43022,88
19388,17696,94
19389,105770,89
19390,5222,92
19391,57273,83
19392,21000000,85
19393,63443,73
19394,83216,95
19395,43022,82
19396,35217,72
19397,37772,90
19398,3545,102
19399,43022,83
19400,47852,75
19401,144431,91
19402,30359,88
19403,42959,73
19404,42686,86
19405,28742,90
19406,40250,88
19407,40838,82
19408,16072,84
19409,57588,92
19410,1652,87
19411,51212,103
19412,3545,86
19413,100541,102
19414,42917,84
19415,5033,84
19416,56319,85
19417,2534,92
19418,53669,83
19419,42854,106
19420,143507,75
19421,16072,94
19422,42791,82
19423,54782,76
19424,41174,88
19425,44597,101
19426,43098,88
19427,48755,89
19428,21917,82
19429,41510,89
19430,277173,86
19431,42728,89
19432,43154,80
19433,51212,94
19434,42812,86
19435,21000000,78
19436,47192,75
19437,89894,88
19438,21000000,80
19439,5033,84
19440,44639,102
19441,1652,90
19442,51485,89
19443,1652,82
19444,23654,89
19445,1652,97
19446,43022,86
19447,42987,71
19448,34517,83
19449,42791,91
19450,64147,84
19451,1657,92
19452,42917,95
19453,43022,74
19454,5033,97
19455,20293,95
19456,48062,86
19457,125336,90
19458,9317,94
19459,11851,86
19460,26337,71
19461,17710,83
19462,44620,83
19463,25937,92
19464,42182,97
19465,24514,74
19466,26831,77
19467,1652,81
19468,105770,82
19469,7483,81
19470,46648,70
19471,42917,98
19472,39998,73
19473,17150,92
19474,20293,75
19475,3545,90
19476,44620,94
19477,14777,80
19478,14131,79
19479,32739,93
19480,1078,85
19481,1657,87
19482,5033,95
19483,19502,79
19484,1657,79
19485,51982,93
19486,9254,94
19487,51674,87
19488,12677,84
19489,1657,78
19490,42917,81
19491,61271,84
19492,42917,92
19493,34985,91
19494,19502,78
19495,43022,90
19496,74872,95
19497,43022,86
19498,47117,82
19499,43127,81
19500,45955,90
19501,55193,71
19502,1652,87
19503,4157,79
19504,43148,71
19505,21000000,84
19506,1662,85
19507,45415,87
19508,66752,91
19509,58338,85
19510,73822,88
19511,7630,82
19512,54121,94
19513,42749,87
19514,13475,99
19515,11578,75
19516,69825,82
19517,5033,103
19518,42833,86
19519,42686,83
19520,64127,102
19521,7630,86
19522,47054,77
19523,81697,87
19524,21000000,89
19525,43127,75
19526,2534,84
19527,48988,83
19528,1657,88
19529,43022,86
19530,42896,84
19531,5033,83
19532,189917,74
19533,42791,85
19534,39557,83
19535,4157,78
19536,47117,76
19537,21917,80
19538,49609,81
19539,43127,88
19540,56294,82
# After 9600 updates
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ + 5 -3 greedy x 9 x -1 + 5 ∨ if 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql T ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ / x ≤ x x x T if x inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ < x ≤ x x x T if x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql depth x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + greedy? x x greedy copy x 9 x -1 + 5 x pop 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ + greedy? swap < x ≤ x x x 3 if F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T T x swap x F x copy 3 F T -10 + x T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "ungreedy 3 ¬ x greedy? T x < x eql -1 x 5 x pop 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + -1 x T F T * -9 F -5 greedy? inc x 3 * T F x ≥ ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc x < F x 8 F -5 ≥ x ≥ 0 F T x - 3 -1 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x swap dec pop x inc eql x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "-5 inc * x -7 5 / -7 - -2 x dec inc x swap ∧ F 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 x x inc x T T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql swap 0 F T greedy? x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc greedy? eql 5 eql T T T x x copy swap eql ¬ < pop 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x T if ≤ 3 F inc 6 3 / F 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * -4 0 5 / -6 - x x dec inc x 1 T T 2 > -10 ¬ -6 inc copy * 8 * inc depth *"
# 1652: "-7 inc 2 eql 5 eql T T T x x copy swap eql ¬ < 8 2 F T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "T < depth F x x -7 - x 4 -2 F inc > greedy? F pop 7 inc -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "T x 1 4 pop F 3 7 9 x F pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "/ - x 8 0 5 / -6 inc x x dec inc 7 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "F 5 dec ∧ T x ≥ -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -10 + ¬ -3 greedy ¬ 9 eql -1 be 2 T greedy? x 4 x be -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap 5 x T x - 6 -1 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "x x 3 ∧ T T F < - eql 3 pop F T 6 -3 4 ungreedy swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "inc * 4 swap 5 x T x - 6 -1 pop F x -1 ∨ 4 7 be 2 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x x dec pop x inc eql x greedy? 2 swap -10 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ dec dec x greedy? F x < 9 eql -1 pop F x -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ * T 4 x -1 F ungreedy x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x -7 5 / -7 - x x dec inc x swap ∧ T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc x copy x F x F T x neg copy swap eql x < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql -1 ungreedy F T greedy? x x x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec x ∧ 6 T be * * x ∨ copy x inc x T x 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - T F T 0 x inc x -5 neg > T x T pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T -3 < depth ¬ x ≤ T -1 x T pop 8 - x -10 0 depth + -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 4 -1 T T < -5 2 swap -10 7 F ≤ -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy T F - -5 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x -10 x * x x x -1 T depth < inc x swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ T > x x greedy copy F neg x -6 x > 5 copy ∨ x x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 F eql F T copy 9 x T pop inc x 3 * ≤ F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x * + eql -8 0 x dec -10 x ungreedy T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x dec dec copy x depth -9 ¬ 0 eql 1 + 5 ∨ depth be T 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "if * 4 -10 T greedy? x -7 -5 ≤ 3 < inc 6 3 * x 1 swap F -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 swap -3 x swap x - 6 5 pop F x -1 F 4 7 be -8 - -6 inc -5 * 8 * inc depth *"
# 1652: "be copy -1 T 5 -2 T greedy? 9 eql + pop F T 6 -3 4 ungreedy swap x < -6 inc -5 * 8 * inc depth *"
# 1652: "x -3 x 0 dec x / x x -3 x -9 / 0 x + x - be x - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * * 6 be -1 T -10 x x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy ∨ x F T depth copy x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec dec ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 1657: "-8 T > 4 eql F x < * > x 4 -3 -3 ∨ be 6 5 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc ∨ x 5 -7 inc * ≥ 4 pop x inc neg x T T 1 + -10 F -6 inc T * 8 * inc 5 *"
# 1657: "x inc * greedy dec -7 -3 x 9 swap x T > > eql x x x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-9 x 7 * neg 7 x inc < depth x 4 T + x x + > swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "/ dec dec x greedy? F x < -1 eql -1 pop F x copy T 2 2 F -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "greedy x -6 x ≤ ¬ ∨ ¬ 9 0 -1 ungreedy F T greedy? x if x 7 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-1 x F x x -3 -7 ∧ * 2 x 4 -3 -3 pop F 6 6 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy x -6 x ≤ ¬ - * T 4 T 4 x x inc x if + swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "-4 T ≥ swap F ≤ F 7 x x x pop neg T x 3 x T x -10 ∨ -6 inc be * 8 * inc 5 *"
# 1657: "x inc * greedy dec -7 x 6 9 swap T * > x copy T x 2 F -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "greedy copy T -10 T x - * x ≤ x pop -8 swap inc ∧ x -5 x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "inc inc inc -8 inc T F if 0 eql -3 pop inc x T -1 ≥ copy greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 F eql 8 T copy 9 x T F inc 6 + -5 x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "T 0 depth F x x -9 9 x x T * be x copy T x T greedy -10 T -6 inc F * 8 * inc 5 *"
# 1657: "T inc x copy -5 -3 x F T x neg copy depth inc x x x ∧ 6 -10 ungreedy -6 inc ∧ * 8 * inc 5 *"
# 1657: "∧ T greedy? swap x x -7 T x -8 eql x inc neg x T T 1 + -10 F -6 inc T * 8 * inc 5 *"
# 1657: "greedy? swap pop -9 eql / 2 -4 -7 T x copy -1 T depth * x x neg -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-7 inc * x 0 x / -6 ≤ x neg dec F 6 x x 4 x swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 2019: "x eql greedy * ¬ x dec x -3 greedy x T -1 F T x -8 x 7 -10 / -6 -4 -5 * 8 * inc depth *"
# 2534: "inc inc x copy x F x F - x neg copy swap < x < -4 x * -10 - -6 ungreedy -5 * 8 * inc depth *"
# 4157: "-7 T x swap x F be copy 3 F T depth + x T x 1 -5 T ≥ -9 -10 if -5 * 9 * dec 5 *"
# 4157: "F x eql x -5 -2 -1 -1 pop -5 x pop F 7 -1 F T 7 be ≥ -9 -10 F -5 * 9 * dec 5 *"
# 5033: "-8 T > pop eql F x < if > x 4 -3 -3 ∨ be 6 5 x -10 ungreedy -6 inc -5 * 8 * inc 9 *"
# 13475: "x inc * inc x F 3 7 9 x F pop inc x / * neg F swap > -10 -6 inc -5 * 8 * inc depth *"
# 25422: "pop eql dec -3 / - ≤ / ∨ 2 -6 T -10 - x x 5 3 x x x x neg ≥ * 9 * inc depth *"
19541,43022,72
19542,43022,71
19543,43002,71
19544,43022,71
19545,43022,73
19546,42728,93
19547,2885,85
19548,49323,99
19549,43022,92
19550,9254,91
19551,42917,74
19552,9254,95
19553,43064,91
19554,11851,78
19555,46592,84
19556,144431,84
19557,68117,75
19558,42917,98
19559,36778,88
19560,5033,101
19561,21000000,86
19562,42917,80
19563,9254,91
19564,50393,84
19565,45290,98
19566,5033,98
19567,40502,100
19568,56399,79
19569,56319,96
19570,42917,96
19571,3545,96
19572,5033,96
19573,21000000,93
19574,43022,76
19575,43022,85
19576,16072,84
19577,43022,85
19578,50393,86
19579,21917,84
19580,42791,93
19581,1657,102
19582,38297,86
19583,9254,80
19584,11851,85
19585,43022,94
19586,51212,76
19587,43022,91
19588,42182,87
19589,124481,88
19590,20293,87
19591,43002,69
19592,21000000,95
19593,41510,87
19594,43022,86
19595,63511,92
19596,13475,90
19597,26509,94
19598,13475,92
19599,42854,92
19600,43127,81
19601,1652,95
19602,20309,81
19603,43118,101
19604,43022,84
19605,9254,85
19606,66451,85
19607,42917,89
19608,28735,81
19609,21000000,93
19610,5033,90
19611,42518,89
19612,42917,91
19613,43127,83
19614,1883,83
19615,11851,91
19616,21917,88
19617,7630,89
19618,5033,86
19619,42854,86
19620,51844,70
19621,49637,74
19622,55853,80
19623,34538,82
19624,1078,77
19625,11312,84
19626,5033,106
19627,42077,86
19628,9254,81
19629,11851,97
19630,9254,88
19631,40754,80
19632,51302,81
19633,43022,86
19634,40376,95
19635,43118,81
19636,3545,87
19637,11851,99
19638,11851,85
19639,21000000,90
19640,42896,85
19641,4157,76
19642,42938,96
19643,70490,83
19644,21917,84
19645,43118,89
19646,41699,106
19647,387212,89
19648,13676,88
19649,43022,87
19650,1652,84
19651,9254,102
19652,43127,73
19653,69734,79
19654,43442,82
19655,46550,90
19656,45760,91
19657,1652,89
19658,13475,86
19659,11851,89
19660,1657,78
19661,11851,82
19662,35273,98
19663,1657,85
19664,26159,92
19665,70511,88
19666,43400,81
19667,43022,77
19668,51251,94
19669,43127,101
19670,26264,94
19671,1652,97
19672,52187,86
19673,24514,91
19674,43022,83
19675,42791,84
19676,1078,78
19677,9254,93
19678,9254,91
19679,1658,86
19680,31829,88
19681,1652,84
19682,40754,86
19683,50406,91
19684,32690,83
19685,17696,85
19686,42028,72
19687,1658,76
19688,21000000,101
19689,1657,88
19690,43022,83
19691,43022,97
19692,28511,74
19693,43030,92
19694,46974,100
19695,43022,81
19696,44259,86
19697,21917,100
19698,43022,77
19699,64309,91
19700,43162,75
19701,43778,88
19702,3545,87
19703,43022,84
19704,21000000,83
19705,5117,76
19706,1078,74
19707,1657,87
19708,66395,80
19709,41342,97
19710,42791,101
19711,11851,81
19712,28735,86
19713,1657,90
19714,1657,91
19715,141029,95
19716,21490,98
19717,1657,89
19718,1657,93
19719,41111,81
19720,46348,82
19721,13475,100
19722,1662,95
19723,21000000,77
19724,42917,89
19725,42476,84
19726,42749,89
19727,76517,83
19728,43127,73
19729,25123,87
19730,42098,91
19731,43022,95
19732,43337,98
19733,42875,85
19734,44912,81
19735,52031,89
19736,7630,84
19737,40754,100
19738,30317,86
19739,22757,92
19740,9422,77
19741,58667,81
19742,43022,82
19743,60347,83
19744,47117,94
19745,40187,94
19746,1662,100
19747,42946,89
19748,7630,88
19749,41006,91
19750,42917,79
19751,55374,90
19752,78197,84
19753,13475,91
19754,46886,89
19755,121457,87
19756,25958,85
19757,9254,88
19758,4157,84
19759,805399,88
19760,43001,100
19761,1652,84
19762,42896,86
19763,106512,86
19764,43106,84
19765,101584,90
19766,68012,83
19767,4157,82
19768,9254,78
19769,57363,80
19770,42917,78
19771,43098,90
19772,42812,73
19773,53228,91
19774,42917,89
19775,42812,89
19776,42938,71
19777,1662,80
19778,42854,87
19779,42749,88
19780,5033,92
19781,42917,86
19782,3545,93
19783,44702,92
19784,5033,87
19785,16072,83
19786,43022,84
19787,7630,80
19788,5033,85
19789,17696,89
19790,9317,86
19791,1657,76
19792,40376,93
19793,90083,80
19794,60961,101
19795,21000000,72
19796,1652,95
19797,43064,89
19798,42854,115
19799,49848,82
19800,64127,81
19801,52602,86
19802,9254,74
19803,43127,96
19804,32893,90
19805,51317,90
19806,43022,97
19807,9254,90
19808,1652,92
19809,7630,83
19810,21917,87
19811,16072,100
19812,1657,93
19813,42875,81
19814,3545,84
19815,4157,104
19816,32956,85
19817,42917,85
19818,43022,80
19819,56126,79
19820,5033,98
19821,7483,80
19822,42875,109
19823,1657,97
19824,43442,78
19825,42497,78
19826,36596,84
19827,71652,85
19828,452774,95
19829,1078,76
19830,1658,85
19831,72132,83
19832,43547,94
19833,7504,90
19834,43022,76
19835,52143,78
19836,41912,88
19837,53942,90
19838,42917,81
19839,19670,80
19840,43022,77
19841,14483,84
19842,25997,87
19843,22127,87
19844,42560,86
19845,55617,81
19846,1657,88
19847,41699,89
19848,21000000,88
19849,40187,93
19850,59910,83
19851,3545,93
19852,1652,81
19853,43232,77
19854,42686,82
19855,7637,83
19856,1652,82
19857,47243,87
19858,36722,91
19859,5222,91
19860,43022,83
19861,43127,84
19862,62027,76
19863,4328,92
19864,59910,81
19865,42707,82
19866,44282,85
19867,49721,93
19868,43022,79
19869,93317,89
19870,63511,90
19871,5033,86
19872,26838,91
19873,5033,90
19874,42182,87
19875,42917,73
19876,43022,82
19877,43022,87
19878,2492,93
19879,43022,88
19880,1657,91
19881,47117,88
19882,41846,88
19883,44942,83
19884,43022,82
19885,4778,77
19886,69006,74
19887,42917,74
19888,9254,80
19889,93772,91
19890,122717,85
19891,4157,76
19892,43211,82
19893,43067,75
19894,24514,86
19895,63917,90
19896,42350,99
19897,42938,101
19898,11851,88
19899,42959,95
19900,7630,88
19901,5033,91
19902,43022,90
19903,51338,86
19904,41678,93
19905,4157,82
19906,21952,81
19907,19502,91
19908,43022,85
19909,42917,85
19910,42833,88
19911,42812,90
19912,45962,79
19913,43127,85
19914,21000000,77
19915,27010,79
19916,43022,78
19917,13622,95
19918,1652,84
19919,21000000,103
19920,3545,87
19921,43022,91
19922,38696,86
19923,37786,93
19924,43022,100
19925,3545,85
19926,43098,77
19927,49743,80
19928,122038,90
19929,9590,79
19930,42817,88
19931,43022,93
19932,42830,81
19933,22127,71
19934,42917,85
19935,58030,93
19936,21000000,89
19937,43085,102
19938,49787,78
19939,43184,90
19940,43579,89
19941,7630,83
19942,3545,84
19943,42854,88
19944,13475,80
19945,226417,82
# After 9800 updates
# 1078: "pop eql T ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T T x swap x F x copy 3 F T -10 + x T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ / x ≤ x x x T if x inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F ≤ F 7 x x x pop neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T -3 greedy? swap < x ≤ x x x T ∨ F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ + 5 -3 greedy x 9 x -1 + 5 ∨ if 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "ungreedy 3 ¬ x greedy? T x < x eql -1 x 5 x pop 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ + greedy? swap < x ≤ x x x 3 if F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + greedy? x x greedy copy x 9 x -1 + 5 x pop 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql depth x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ < x ≤ x x x T if x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* ungreedy -8 ∨ x F x < -8 1 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 4 -1 T T < -5 2 swap -10 7 F ≤ -5 * 8 * inc depth *"
# 1652: "F 5 dec ∧ T x ≥ -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "T < x F x x -7 - x 4 -2 F inc x + * x F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * ≥ 7 be x neg -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql swap 0 F T greedy? x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy * ¬ ≥ + T T x x copy swap eql ¬ < x 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec dec ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 2 -10 * 7 -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "be * 4 -10 T greedy? x -7 -5 ≤ 3 < inc 6 3 * x 1 F + -10 -6 inc -5 * 8 * inc depth *"
# 1652: "neg + x swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "+ T > x x greedy copy F neg x -6 x > 5 copy ∨ x x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x -7 5 / -7 - x x dec inc x swap ∧ T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec x ∧ 6 T be * * x ∨ copy x inc x T x 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 copy -5 -3 -2 F T x neg copy swap eql ¬ < pop 2 -7 -10 -5 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x T if ≤ 3 F inc 6 3 / F 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if * F swap -3 x swap x - 6 T pop F x -1 F 4 7 be 5 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x -10 x * x x x -1 T depth < inc x swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy -5 -3 x F T x neg copy swap eql ¬ < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x x x * + eql -8 0 x dec -10 x ungreedy T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc 2 eql 5 eql T T T x x copy swap eql ¬ < 8 2 F T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc * 4 swap 5 x T x - 6 -1 pop F x -1 ∨ 4 7 be 2 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + -1 x T F T * -9 F -5 greedy? inc x 3 * T F x ≥ ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ dec dec x greedy? F x < 9 eql -1 pop F x -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 F eql F T copy 9 x T pop inc x 3 * ≤ F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x F x x ≥ x be * * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + ≥ eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ -8 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x x 3 ∧ T T F < - eql 3 pop F T 6 -3 4 ungreedy swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-5 inc * x -7 5 / -7 - -2 x dec inc x swap ∧ F 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy ∨ x F T depth copy x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc x copy x F x F T x neg copy swap eql x < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc x < F x 8 F -5 ≥ x ≥ 0 F T x - 3 -1 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * T ¬ x dec F ungreedy 1 x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 -10 T greedy? x -7 -5 ≤ 3 < inc 6 3 * x 1 swap F -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - T F T 0 x inc x -5 neg > T x T pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-10 9 dec 2 inc x be x * 0 6 inc inc x T -1 ≥ 2 swap T / -6 inc -5 * 8 * inc depth *"
# 1652: "T + greedy? < x greedy T x * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * -4 0 5 / -6 - x x dec inc x 1 T T 2 > -10 ¬ -6 inc copy * 8 * inc depth *"
# 1652: "+ + greedy? swap x x copy F neg 8 -1 x x inc x T T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "x -3 x 0 dec x / x x -3 x -9 / 0 x + x - be x - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "T x 1 4 pop F 3 7 9 x F pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x x dec pop x inc eql x greedy? 2 swap -10 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql -1 ungreedy F T greedy? x x x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1657: "x dec dec copy -5 depth -9 ¬ 0 -7 1 + 5 ∨ depth be T 2 swap -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "inc dec -7 ∧ F x ∨ F T x neg copy depth inc x x -2 ∧ 6 -10 ungreedy -6 inc ∧ * 8 * inc 5 *"
# 1657: "if * 4 -10 T greedy? x -7 -5 greedy? 3 < inc 6 3 T x 2 ∧ -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "greedy x -6 x ≤ ¬ ∨ ¬ 9 0 -1 ungreedy F T greedy? x if x 7 -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 x greedy -1 ≥ pop greedy? -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-8 -3 -1 F eql 8 T copy 9 x T F inc 6 + -5 x 2 swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy x -6 x ≤ ¬ - * T 4 T 4 x x inc x if + swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "x 3 x x 8 ∨ 9 * ≥ 4 pop x inc neg x T T depth + -10 F -6 inc T * 8 * inc 5 *"
# 1657: "T 0 depth F x x -9 9 x x T * be x copy T x T greedy -10 T -6 inc F * 8 * inc 5 *"
# 1657: "/ dec dec x 7 F ungreedy < 9 x -1 pop F x -1 F x -5 x -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "inc inc inc -8 - T x T 0 x x 4 T + x T inc > swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop dec dec x greedy? T x -9 - 2 -10 dec F T -1 F 4 T x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "F inc * ¬ dec -7 -3 x if swap x T > > eql x x x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "greedy copy T -10 T x x 5 T > x 4 -3 -3 ∨ be 6 ungreedy x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "x 3 x x 8 ∨ -1 * x ∨ 9 pop x inc F F 6 6 x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1658: "+ + greedy? swap x greedy copy F / F x 0 x 7 0 4 -8 -5 5 ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1662: "pop eql dec -3 / - < * x ∨ 9 x x inc F F 6 6 x -10 ungreedy -6 inc T * 8 * T 5 *"
# 1662: "-7 ungreedy -8 ∨ 4 ≥ swap x x x dec pop x inc eql x greedy? 2 x -10 greedy -6 inc -5 * 8 * F depth *"
# 1883: "greedy x -6 x / ¬ ∨ ¬ 9 eql -1 F F T greedy? x x x 7 eql -9 -10 if -5 * 9 * dec 5 *"
# 4157: "T T x swap x F x x T 3 -8 copy swap 3 x < greedy x x * -8 copy inc T * 8 * inc 5 *"
# 5033: "-8 T > pop eql F x < if > x 4 -3 -3 ∨ be 6 5 x -10 ungreedy -6 inc -5 * 8 * inc 9 *"
# 9590: "x 5 x x * x dec x inc 1 F x < 3 -8 x x x x -10 ungreedy -6 inc -5 * 8 * dec 8 *"
# 20293: "x 5 x x * x dec x inc x dec x inc 3 -8 x x x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 43022: "inc inc inc x - x x T 0 x 6 inc * x T -1 ≥ 2 swap -10 / -6 inc -5 * F T inc / x"
19946,43043,71
19947,43022,66
19948,43001,74
19949,43022,74
19950,43022,74
19951,1652,91
19952,42917,83
19953,1078,71
19954,43022,84
19955,38801,90
19956,49710,88
19957,19978,77
19958,42917,93
19959,54488,85
19960,1657,82
19961,43118,90
19962,42791,98
19963,40754,90
19964,3545,104
19965,1658,77
19966,42749,81
19967,43043,70
19968,57588,107
19969,13475,103
19970,1657,89
19971,1078,78
19972,40292,104
19973,26271,79
19974,7483,95
19975,20293,76
19976,43022,93
19977,52892,88
19978,43127,102
19979,42917,85
19980,1658,72
19981,21000000,106
19982,11851,93
19983,90377,82
19984,22736,92
19985,43127,78
19986,7630,91
19987,53669,90
19988,52031,83
19989,192479,81
19990,43022,87
19991,55338,75
19992,43127,85
19993,40369,100
19994,21000000,89
19995,1652,89
19996,42791,92
19997,64590,91
19998,40754,84
19999,93317,98
20000,57903,79
20001,43022,72
20002,43022,83
20003,41321,88
20004,43504,83
20005,45017,77
20006,3545,96
20007,43442,82
20008,4022,74
20009,51632,74
20010,43022,70
20011,3358,89
20012,54488,89
20013,43022,77
20014,1658,76
20015,5033,91
20016,43043,98
20017,4157,82
20018,42182,73
20019,65513,90
20020,52932,91
20021,5033,91
20022,7630,87
20023,74284,92
20024,22127,82
20025,54866,100
20026,38717,81
20027,1652,93
20028,42917,99
20029,20962,85
20030,25736,82
20031,43316,83
20032,47957,91
20033,805399,86
20034,49787,95
20035,52031,93
20036,13475,95
20037,9254,96
20038,3545,92
20039,1657,88
20040,27167,90
20041,48062,90
20042,7483,88
20043,9590,79
20044,1078,75
20045,17696,93
20046,67424,70
20047,1078,74
20048,55473,97
20049,4157,94
20050,1657,78
20051,42707,83
20052,51905,89
20053,21917,91
20054,85127,89
20055,19502,81
20056,35222,83
20057,3358,83
20058,3545,95
20059,1652,82
20060,43022,70
20061,11851,86
20062,1078,72
20063,1657,92
20064,56319,82
20065,73073,83
20066,7595,100
20067,42854,94
20068,1657,77
20069,42770,97
20070,1657,88
20071,43043,76
20072,83006,86
20073,43127,90
20074,1657,80
20075,43022,88
20076,47117,90
20077,1078,76
20078,3545,82
20079,7630,93
20080,52987,87
20081,21917,79
20082,98413,93
20083,42917,84
20084,20293,84
20085,42074,78
20086,47852,85
20087,43022,85
20088,43022,92
20089,35399,83
20090,23108,82
20091,21000000,83
20092,41132,107
20093,5033,83
20094,21000000,81
20095,1657,90
20096,43043,78
20097,13475,98
20098,5033,87
20099,1657,90
20100,85232,77
20101,26831,72
20102,43043,86
20103,47957,73
20104,44072,88
20105,7483,84
20106,46348,98
20107,9254,91
20108,43022,78
20109,44942,80
20110,42764,76
20111,54317,74
20112,43001,77
20113,370412,80
20114,118412,103
20115,17696,100
20116,43001,79
20117,43022,94
20118,56203,81
20119,21000000,74
20120,43022,76
20121,3545,100
20122,43022,89
20123,9758,80
20124,42602,75
20125,42602,85
20126,43022,93
20127,42917,85
20128,11851,96
20129,43022,84
20130,21000000,89
20131,43118,94
20132,4157,78
20133,60677,75
20134,32956,81
20135,40292,85
20136,40700,89
20137,42791,102
20138,44177,72
20139,1657,86
20140,42770,80
20141,39935,82
20142,43022,78
20143,43579,86
20144,135191,98
20145,34853,81
20146,71477,86
20147,55923,90
20148,50393,89
20149,59612,113
20150,42812,89
20151,3545,91
20152,1658,76
20153,1652,91
20154,42182,81
20155,42182,81
20156,43022,77
20157,20825,84
20158,4157,83
20159,33169,93
20160,19502,91
20161,7630,88
20162,43043,76
20163,43022,86
20164,43022,88
20165,1657,89
20166,5033,80
20167,9254,83
20168,44156,83
20169,70511,86
20170,197792,87
20171,24903,82
20172,1078,75
20173,79478,94
20174,43022,76
20175,2885,91
20176,41188,87
20177,39172,77
20178,43022,84
20179,5033,90
20180,26838,81
20181,49609,90
20182,21000000,73
20183,40522,79
20184,1652,78
20185,4157,91
20186,2840,84
20187,5033,90
20188,43127,78
20189,9254,89
20190,3545,93
20191,21000000,77
20192,3545,86
20193,2132,78
20194,9254,87
20195,38024,87
20196,59927,94
20197,154502,80
20198,24514,81
20199,22127,84
20200,10535,83
20201,43127,76
20202,42917,85
20203,51527,79
20204,43211,80
20205,7630,87
20206,9254,93
20207,51212,96
20208,2366,84
20209,5033,94
20210,17710,87
20211,1657,92
20212,43337,92
20213,1657,89
20214,41678,87
20215,43127,93
20216,42946,77
20217,42077,100
20218,28735,82
20219,1657,93
20220,38108,86
20221,42812,88
20222,42854,80
20223,87002,75
20224,5033,96
20225,11851,93
20226,20293,83
20227,5033,92
20228,40943,88
20229,5033,88
20230,64590,91
20231,43967,95
20232,40754,96
20233,59612,79
20234,19502,78
20235,17696,79
20236,43127,73
20237,44942,71
20238,43127,108
20239,19502,84
20240,32767,78
20241,3545,103
20242,9254,92
20243,4157,92
20244,21000000,88
20245,4157,87
20246,21000000,74
20247,41657,92
20248,43232,75
20249,76172,79
20250,37852,98
20251,47726,83
20252,1657,87
20253,38717,85
20254,1658,73
20255,2132,86
20256,46172,90
20257,7630,93
20258,43022,105
20259,55541,82
20260,44030,76
20261,4157,82
20262,1078,82
20263,22771,94
20264,16072,90
20265,76874,92
20266,43127,81
20267,51212,88
20268,19691,89
20269,47950,92
20270,3545,76
20271,4157,78
20272,3397,79
20273,40250,88
20274,16072,85
20275,5222,84
20276,3545,94
20277,2357,82
20278,42812,79
20279,43043,94
20280,42872,73
20281,41384,86
20282,38059,94
20283,45955,95
20284,4157,76
20285,59388,85
20286,43232,98
20287,43022,79
20288,42946,91
20289,43022,77
20290,61241,104
20291,43022,97
20292,42287,77
20293,42875,99
20294,93212,76
20295,43022,93
20296,43022,75
20297,1657,92
20298,9254,81
20299,41258,86
20300,5033,95
20301,1078,75
20302,21000000,79
20303,55338,74
20304,43127,86
20305,56319,75
20306,5033,88
20307,19502,86
20308,42242,75
20309,70090,82
20310,12530,76
20311,4157,80
20312,63812,80
20313,43022,90
20314,168770,94
20315,22022,68
20316,41188,96
20317,1672,75
20318,49182,85
20319,3545,96
20320,57903,79
20321,63511,101
20322,72037,71
20323,51485,82
20324,69734,77
20325,11851,88
20326,59910,91
20327,42812,97
20328,43232,89
20329,41398,85
20330,42917,79
20331,42770,98
20332,43022,85
20333,7378,87
20334,5033,80
20335,51317,73
20336,48076,92
20337,26563,80
20338,54782,98
20339,43022,78
20340,42077,71
20341,43172,74
20342,42896,80
20343,5033,87
20344,9254,93
20345,43022,75
20346,42917,89
20347,1657,89
20348,47602,83
20349,43127,73
20350,4157,77
# After 10000 updates
# 1078: "T -3 greedy? swap < x ≤ x x x T ∨ F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ / x ≤ x x x T if x inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop x ∧ ∧ T x -5 7 x x x pop neg T x 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ ¬ x x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ < x ≤ x x x T if x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T ¬ swap x ≤ 7 -4 -7 ∧ T -10 + if T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* ungreedy -8 ∨ x F x < -8 1 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T T x swap x F x copy 3 F T -10 + x T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ + 5 -3 greedy x 9 x -1 + 5 ∨ if 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql T ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T -10 1 4 pop F 3 7 9 x F pop x inc - x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + greedy? x x greedy copy x 9 x -1 + 5 x pop 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be * 4 * T greedy? x -7 -5 ≤ 3 ¬ ∧ T 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ + greedy? swap < x ≤ x x x 3 if F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql depth x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x F ¬ + 5 -3 greedy ≥ 5 x -1 + 5 ∨ if 7 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * x x -2 -1 4 -9 -4 8 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "≤ x dec ∧ -2 -1 4 * -4 8 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F ≤ F 7 x x x pop neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "ungreedy 3 ¬ x greedy? T x < x eql -1 x 5 x pop 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "≤ x dec ∧ -2 -1 4 * -4 8 x x 6 x T -1 ≥ 2 swap T / -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec greedy? ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 < -10 F ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy ≥ x be * x x ∨ copy x inc x T 9 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql swap 0 F T greedy? x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy * ¬ ≥ + T T x x copy swap eql ¬ < x 2 swap T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T + greedy? < x greedy T x * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc 2 eql 5 eql T T T x x copy swap eql ¬ < 8 2 F T ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? ungreedy x greedy copy F 1 8 -1 pop x inc x x T 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * ≥ 7 be x neg -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 copy -5 -3 -2 F T x neg copy swap eql ¬ < pop 2 -7 -10 -5 -6 inc -5 * 8 * inc depth *"
# 1652: "/ dec dec x greedy? F x < 9 eql -1 pop F x -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "inc * 4 swap 5 x T x - 6 -1 pop F x -1 ∨ 4 7 be 2 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x x ¬ ∨ ¬ 9 0 -1 if F T greedy? x if x 7 -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 F eql F T copy 9 x T pop inc x 3 * ≤ F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc inc -8 - T F T 0 x inc x -5 neg > T x T pop x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc x < F x 8 F -5 ≥ x ≥ 0 F T x - 3 -1 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy ∨ x F T depth copy x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "-7 inc * x -7 5 / -7 - x x dec inc x swap ∧ T 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc x copy x F x F T x neg copy swap eql x < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x * + eql -8 0 x dec -10 x ungreedy T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "neg + x swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec x ∧ 6 T be * * x ∨ copy x inc x T x 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + -1 x T F T * -9 F -5 greedy? inc x 3 * T F x ≥ ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x x dec pop x inc eql x greedy? 2 swap -10 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x x 3 ∧ T T F < - eql 3 pop F T 6 -3 4 ungreedy swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc pop ∨ 4 ≥ swap x 1 x 4 x -1 T x < -5 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 inc pop ∨ 4 ≥ swap x 1 x 4 4 -1 T T < -5 2 swap -10 7 F ≤ -5 * 8 * inc depth *"
# 1652: "x x x + / eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "if * F swap -3 x swap x - 6 T pop F x -1 F 4 7 be 5 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 x greedy * ¬ x -10 x * x x x -1 T depth < inc x swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x T if ≤ 3 F inc 6 3 / F 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x pop copy F neg 8 -1 T x inc x 3 T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * T ¬ x dec F ungreedy 1 x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ T > x x greedy copy F neg x -6 x > 5 copy ∨ x x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x -3 x 0 dec x / x x -3 x -9 / 0 x + x - be x - -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x greedy? T x < 9 eql -1 pop F T -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-5 inc * x -7 5 / -7 - -2 x dec inc x swap ∧ F 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + ≥ eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ -8 -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x * x x x - x 4 -2 F 9 x + * x F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql -1 ungreedy F T greedy? x x x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 -10 T greedy? x -7 -5 ≤ 3 < inc 6 3 * x 1 swap F -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * -4 0 5 / -6 - x x dec inc x 1 T T 2 > -10 ¬ -6 inc copy * 8 * inc depth *"
# 1657: "greedy copy T -10 T x x 5 if ≤ 3 F inc -5 3 * x x swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "∨ eql -10 * ¬ x dec x -3 greedy x x -1 F T x ≤ + swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "-5 9 * x -7 5 / -7 - -2 x dec inc x swap T inc F swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "pop + greedy? 1 x greedy copy F ≥ 4 pop x inc neg x T T depth + -10 F -6 inc T * 8 * inc 5 *"
# 1657: "≤ inc x copy -5 -3 2 F T greedy? greedy < inc 6 3 T x 2 ∧ -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "-10 9 dec 2 inc x -9 9 x x 6 * be x copy T x T greedy -10 ¬ -6 inc F * 8 * inc 5 *"
# 1657: "x dec dec copy -5 depth -9 ¬ 0 -7 1 + 5 ∨ depth be T 2 swap -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "F inc * ¬ dec -7 -3 x if swap x T > > eql x x x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "if * 4 -10 T greedy? x -7 -5 ≤ 3 < inc T 3 * * x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "pop F dec ∧ copy x ≤ x x x T if x inc be x T -5 x ≥ > -10 if -5 * 8 * inc 5 *"
# 1657: "T x 1 4 pop F 3 7 9 x T copy depth inc ungreedy x -2 ∧ F -10 ungreedy -6 inc ∧ * 8 * inc 5 *"
# 1657: "-3 inc x * x x x copy 9 x T F neg 6 x -5 x 2 swap -10 ungreedy -6 inc -10 * 8 * inc 5 *"
# 1672: "T T x be dec F x copy 3 F T -10 + x T x 1 -5 9 ≥ -9 -10 if -5 * 9 * inc 5 *"
# 2132: "x + greedy? -9 x greedy copy F 1 8 -1 pop x inc 3 + x 1 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 3545: "swap -8 * 4 6 x swap x be x greedy? 4 -1 T ¬ < -5 < -10 F ungreedy -6 inc -5 * 8 * inc depth *"
# 17696: "pop F dec ∧ copy x ≤ F 3 x neg copy swap eql x < pop 2 swap -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 26831: "-7 inc pop ∨ 4 ≤ swap x 1 x x x -1 T x / T 1 x - x x inc T * 8 * inc 5 *"
# 43022: "T + greedy? 9 x x T x neg x ∨ copy swap x 6 x x x T x / inc + x x x x -6 ¬ x"
# 43022: "T -8 x x * x * be x x * 8 x - -10 -5 9 3 inc dec -5 -4 x 2 + + inc 7 / 0"
20351,43106,67
20352,43142,69
20353,42896,75
20354,43043,73
20355,43022,74
20356,50012,75
20357,68219,80
20358,3545,90
20359,43127,74
20360,42770,81
20361,1658,88
20362,4157,97
20363,43493,81
20364,28658,85
20365,42770,92
20366,38591,86
20367,4157,75
20368,17717,87
20369,21000000,85
20370,42812,82
20371,22127,86
20372,47117,89
20373,55531,87
20374,11867,89
20375,3482,76
20376,3932,71
20377,51212,89
20378,9254,92
20379,7630,92
20380,43031,76
20381,38627,76
20382,43190,94
20383,42749,88
20384,43202,83
20385,42392,93
20386,2658,91
20387,25207,75
20388,4157,76
20389,43022,74
20390,3545,83
20391,43043,78
20392,73822,82
20393,42749,100
20394,43022,93
20395,43022,79
20396,42917,79
20397,42962,81
20398,42917,83
20399,46974,84
20400,47212,79
20401,13475,97
20402,11851,85
20403,42791,87
20404,21000000,79
20405,26117,95
20406,42602,70
20407,43106,85
20408,1078,71
20409,4157,74
20410,67509,86
20411,43127,75
20412,21000000,84
20413,43001,76
20414,21917,89
20415,49609,91
20416,38717,85
20417,41762,97
20418,43067,84
20419,68012,83
20420,5327,75
20421,11851,74
20422,11851,85
20423,47243,89
20424,43127,72
20425,19505,87
20426,42816,98
20427,2357,80
20428,9212,89
20429,42770,87
20430,43242,94
20431,41867,77
20432,17696,94
20433,42917,91
20434,43127,79
20435,40369,92
20436,43127,75
20437,21000000,87
20438,43022,68
20439,43138,101
20440,42938,73
20441,43127,71
20442,35357,91
20443,43022,72
20444,43022,84
20445,59910,88
20446,1078,77
20447,16072,83
20448,1078,69
20449,37092,75
20450,42917,74
20451,24346,84
20452,1652,84
20453,116711,81
20454,42749,90
20455,41188,80
20456,5033,89
20457,9254,82
20458,28658,92
20459,52031,87
20460,24514,81
20461,42896,77
20462,17717,88
20463,60147,81
20464,1652,98
20465,9254,83
20466,43022,76
20467,43022,70
20468,43127,101
20469,1078,75
20470,43022,75
20471,3545,83
20472,39067,73
20473,35755,94
20474,43022,88
20475,13475,90
20476,11851,88
20477,43022,77
20478,33677,73
20479,62797,70
20480,42749,90
20481,43043,70
20482,42770,90
20483,56319,78
20484,42728,88
20485,21000000,92
20486,47117,87
20487,7630,97
20488,42770,92
20489,26298,86
20490,42938,81
20491,32767,84
20492,43732,80
20493,35180,75
20494,43022,76
20495,64547,89
20496,1657,88
20497,43022,92
20498,544711,85
20499,51002,77
20500,9254,84
20501,42728,80
20502,5033,92
20503,47117,80
20504,2450,82
20505,19502,81
20506,43022,80
20507,50393,95
20508,42854,86
20509,10259,85
20510,7378,83
20511,118370,85
20512,7630,91
20513,43106,94
20514,1652,92
20515,11851,83
20516,43022,88
20517,17297,82
20518,68852,84
20519,17318,89
20520,43022,79
20521,26138,88
20522,61286,75
20523,38843,94
20524,42797,74
20525,47957,80
20526,90083,87
20527,42812,84
20528,1657,86
20529,43022,87
20530,42665,76
20531,1662,77
20532,43967,77
20533,1078,81
20534,42917,84
20535,42917,69
20536,3545,76
20537,42896,79
20538,47852,79
20539,42917,71
20540,5033,86
20541,40369,105
20542,19502,89
20543,29773,99
20544,61397,81
20545,44156,87
20546,52932,77
20547,43190,84
20548,105794,75
20549,43862,78
20550,59612,94
20551,7630,95
20552,7630,96
20553,40943,86
20554,1078,72
20555,5033,90
20556,85877,79
20557,4157,74
20558,42791,80
20559,47852,72
20560,1657,81
20561,42812,97
20562,119672,71
20563,4157,78
20564,9947,82
20565,2450,81
20566,79625,85
20567,5033,95
20568,1078,83
20569,37310,79
20570,1652,90
20571,1078,78
20572,12043602,84
20573,56319,78
20574,40376,100
20575,1657,93
20576,5033,85
20577,46776,83
20578,42917,89
20579,40670,89
20580,51288,90
20581,5033,88
20582,42917,93
20583,15925,89
20584,42917,85
20585,43382,77
20586,1652,89
20587,40978,91
20588,53252,83
20589,43148,77
20590,43568,100
20591,805399,93
20592,60221,100
20593,43022,85
20594,1657,81
20595,1167,80
20596,355974,93
20597,57588,83
20598,21000000,97
20599,42665,85
20600,16072,89
20601,1652,86
20602,1657,83
20603,52850,96
20604,43127,86
20605,322584,84
20606,42914,83
20607,1078,71
20608,43579,89
20609,44072,90
20610,1652,81
20611,28952,74
20612,1652,91
20613,21000000,89
20614,1657,83
20615,17858,75
20616,1167,72
20617,55518,90
20618,46052,75
20619,55338,79
20620,43127,77
20621,1473,71
20622,78155,87
20623,1658,82
20624,7630,92
20625,42833,91
20626,1652,100
20627,24346,84
20628,1652,87
20629,43652,72
20630,52932,79
20631,13475,87
20632,36862,85
20633,55608,92
20634,56294,83
20635,16072,82
20636,43118,96
20637,38402,84
20638,43022,85
20639,3545,89
20640,32767,89
20641,30548,81
20642,43022,81
20643,57653,91
20644,42077,83
20645,42182,79
20646,1078,87
20647,25487,76
20648,1652,82
20649,45668,84
20650,42770,84
20651,42182,90
20652,5033,76
20653,42791,77
20654,56882,86
20655,30359,79
20656,5033,104
20657,9254,81
20658,53497,76
20659,44282,99
20660,52598,93
20661,40522,73
20662,14131,74
20663,19502,95
20664,42875,106
20665,54361,93
20666,21000000,79
20667,55338,74
20668,1652,79
20669,43190,88
20670,40522,78
20671,43085,81
20672,1037,79
20673,5033,85
20674,1167,90
20675,43022,86
20676,44030,82
20677,1652,75
20678,36696,81
20679,43078,77
20680,38548,83
20681,44177,89
20682,31318,84
20683,14083,84
20684,4157,77
20685,42917,70
20686,41839,83
20687,42875,83
20688,51288,84
20689,43627,76
20690,42917,94
20691,40675,83
20692,12649,82
20693,43118,80
20694,1657,89
20695,1657,78
20696,47852,82
20697,43106,81
20698,1078,77
20699,1658,80
20700,48685,87
20701,44845,86
20702,43127,74
20703,50687,77
20704,3545,94
20705,4157,72
20706,9254,87
20707,63377,78
20708,41237,76
20709,15974,94
20710,43022,84
20711,13928,81
20712,42917,71
20713,13522,77
20714,11851,91
20715,44492,81
20716,43022,80
20717,9422,81
20718,1658,85
20719,16072,93
20720,3545,92
20721,42707,79
20722,43127,88
20723,1652,90
20724,46052,79
20725,7630,87
20726,1078,80
20727,43022,97
20728,80654,79
20729,42917,78
20730,1652,88
20731,21000000,74
20732,42728,86
20733,31450,83
20734,57903,77
20735,48167,79
20736,19000034,83
20737,9317,72
20738,43118,70
20739,43022,81
20740,116711,81
20741,42980,87
20742,41061,74
20743,36032,81
20744,55307,87
20745,13808,74
20746,41846,81
20747,7630,85
20748,43022,80
20749,21000000,75
20750,43127,75
20751,42917,79
20752,21560,84
20753,1078,75
20754,1078,74
20755,44845,77
# After 10200 updates
# 1037: "< inc inc -8 ¬ ¬ ≤ x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T ¬ swap x ≤ 7 -4 x x T ¬ if inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop x ∧ ∧ T x -5 7 x x x pop neg T x 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T T x swap x F x copy 3 F T -10 + x T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 x 0 F x ≤ 7 x x T if F inc x x F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc dec x + 6 T be * * x ∨ copy x x x T x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc 0 x -7 5 / -7 + T < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ x x * + eql -8 x x x T if pop inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap x x inc T if x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* ungreedy -8 ∨ x F x < -8 1 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "≤ neg -8 ∨ x F x < -8 1 < ¬ x / 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T ¬ swap x ≤ 7 -4 -7 ∧ T -10 + if T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ + greedy? swap < x ≤ x x x 3 if F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 T x * greedy -5 x 9 neg -1 + 5 x pop 4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * x x -2 -1 4 -9 -4 8 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T -10 1 if ¬ T x x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T -3 greedy? swap < x ≤ x x x T ∨ F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T > x x greedy copy F 9 x 5 x > 5 copy ∨ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ < x ≤ x x x T if x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql depth x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F ≤ F 7 x x x pop neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ + 5 -3 greedy x 9 x -1 + 5 ∨ if 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be * 4 * T greedy? x -7 -5 ≤ 3 ¬ ∧ T 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + greedy? x * greedy -5 x 9 F -1 + 5 x pop 4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ ¬ x x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 F -7 ∧ T -10 + if T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "ungreedy 3 ¬ x greedy? T x < x eql -1 x 5 x pop 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ / x ≤ x x x T if x inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql T ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x F ¬ + 5 2 F ≥ 5 x -1 + 5 ∨ if < 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "+ + greedy? swap x greedy copy F copy -7 3 F x -5 -8 4 + -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "3 -1 3 2 inc x 3 5 T -7 3 F x -5 0 4 + -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "greedy copy T -10 T x x 5 if -7 3 F x -5 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "-3 inc x * x x x - x 4 -2 F 9 x + * x F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 F eql F T copy F eql T pop inc x 3 * ≤ F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql neg x x x T 7 x 1 F T swap be T ≤ - -6 inc -5 * 8 * inc depth *"
# 1652: "inc inc x copy x F x F T x neg copy swap eql F < pop 2 swap F ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x T if ≤ 3 F inc 6 3 / F 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x x ¬ ∨ ¬ 9 0 -1 if F T greedy? x if x 7 -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 T greedy? x -7 -5 ≤ x < ungreedy < greedy? 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec greedy? ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 < -10 F ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ x dec ∧ -2 -1 4 * -4 8 x x 6 x T -1 ≥ 2 swap T / -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * x 0 5 / -6 - x x dec inc x ¬ T T 2 > -10 -10 -6 inc copy * 8 * inc depth *"
# 1652: "T + greedy? < x greedy T x * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x x T x < 9 eql -1 pop F T -1 F 4 0 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "inc x < F x 8 ∨ ¬ 9 eql swap 0 F T greedy? x -8 greedy 7 x / -6 inc -5 * 8 * inc depth *"
# 1652: "neg + x swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "/ dec dec x greedy? F x < 9 eql -1 pop F x -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "T T greedy? swap x F x copy 9 -2 T pop + x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc ∨ x depth F inc * F T -4 pop x x 0 4 swap -5 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy x ¬ pop copy F neg swap -1 T x inc x 3 T 7 -5 x - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql -1 ungreedy F T greedy? x x x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * T ¬ x dec F ungreedy 1 x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * ≥ 7 be x neg -6 inc -5 * 8 * inc depth *"
# 1652: "-5 inc * x -7 5 / -7 - -2 x dec inc x swap ∧ F 2 swap -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy F x be x * 0 6 inc inc x ¬ 2 ≥ 2 swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql swap 0 F T greedy? x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x greedy copy F neg 9 -5 x greedy < -5 T be -1 x -10 x -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x pop copy F neg 8 -1 T x inc x 3 T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "inc x x neg / eql + 4 5 x -10 7 x x F T swap -1 swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "copy F ¬ + 5 2 depth ≥ 5 x -1 7 x 1 F T swap be * ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 copy -5 -3 -2 F T x neg copy swap eql ¬ < pop 2 -7 -10 -5 -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + ≥ eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ -8 -6 inc -5 * 8 * inc depth *"
# 1652: "swap x 3 ∧ -3 T F < - eql 3 pop F T 6 T 4 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy ∨ x F T depth copy x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if * F swap -3 x swap x - 6 T pop F x -1 F 4 7 be 5 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x x dec pop x inc eql x greedy? 2 swap -10 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc 0 x -7 5 / -7 + T < ¬ ∧ F 0 x 7 -5 x ≥ x -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * -4 0 5 / -6 - x x dec inc x 1 T T 2 > -10 ¬ -6 inc copy * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + -1 x T F T * -9 F -5 greedy? inc x 3 * T F x ≥ ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy ≥ x be * x x ∨ copy x inc x T 9 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 F eql F T copy 9 x T pop inc x 3 * ≤ F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1657: "-10 9 dec 2 inc x -9 9 x x 6 * be x copy T x T greedy -10 ¬ -6 inc F * 8 * inc 5 *"
# 1657: "greedy x -6 x x ¬ ∨ ¬ 9 0 x T F T greedy? x if depth 7 -10 ungreedy -6 inc swap * 8 * inc 5 *"
# 1657: "2 * 4 copy -7 5 x -7 - -2 x dec inc x swap T x F swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 1657: "∨ eql -10 * ¬ x dec x -3 greedy x x -1 F T x ≤ + swap -10 ungreedy -6 inc be * 8 * inc 5 *"
# 1657: "if * 4 -10 T greedy? x -7 T ≤ 3 < x T 3 * * x swap -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "≤ inc x copy -5 -3 2 F T greedy? greedy < inc 6 3 T x 2 ∧ -10 F -6 inc swap * 8 * inc 5 *"
# 1657: "T -10 1 4 pop F -9 * T ¬ -4 ∧ eql T eql x x x x -10 ungreedy -6 inc T * 8 * inc 5 *"
# 1657: "-5 9 * x -5 -3 -2 F T x pop F inc ≤ x T ¬ depth + -10 F -6 inc T * 8 * inc 5 *"
# 2357: "inc / 6 -1 greedy x -9 4 x -4 0 x -5 / ≥ T inc inc - ≥ ∧ -10 if -5 * 9 * dec 5 *"
# 3545: "swap -8 * 4 6 x swap x be x greedy? 4 -1 T ¬ < -5 < -10 F ungreedy -6 inc -5 * 8 * inc depth *"
# 3545: "T -8 x x * x * 1 6 x * 8 x - -10 -5 greedy 3 inc dec -8 -6 inc -5 * 8 * inc depth *"
# 26831: "-7 inc pop ∨ 4 ≤ swap x 1 x x x -1 T x / T 1 x - x x inc T * 8 * inc 5 *"
# 43022: "≤ + greedy? 9 x x 9 x neg x ∨ copy swap x 6 x x x T x / inc + x x x x -6 ¬ x"
20756,43022,71
20757,43022,75
20758,43022,71
20759,43230,73
20760,43043,75
20761,17696,95
20762,4157,79
20763,43127,77
20764,122102,74
20765,5033,95
20766,43274,94
20767,64309,86
20768,5033,98
20769,43589,91
20770,43022,88
20771,43138,84
20772,52341,89
20773,38402,81
20774,21000000,78
20775,7630,99
20776,51212,86
20777,51212,95
20778,7595,94
20779,1078,74
20780,1232,78
20781,43022,73
20782,4157,72
20783,13475,85
20784,63511,92
20785,1658,84
20786,42452,71
20787,43064,83
20788,1658,76
20789,43127,78
20790,21000000,82
20791,1078,78
20792,42518,73
20793,3545,89
20794,42812,97
20795,47852,82
20796,43118,77
20797,47222,94
20798,3358,79
20799,7630,92
20800,1657,88
20801,133988,79
20802,21000000,66
20803,21000000,74
20804,13475,79
20805,4157,77
20806,47192,76
20807,43022,75
20808,42812,68
20809,43022,72
20810,42497,73
20811,1078,74
20812,43022,75
20813,589022,80
20814,1658,79
20815,71477,71
20816,7630,91
20817,19000034,76
20818,22319,91
20819,42749,88
20820,58100,83
20821,52892,85
20822,64127,86
20823,170538,76
20824,47852,84
20825,43022,94
20826,11243,77
20827,43022,86
20828,37012,84
20829,11851,93
20830,21000000,88
20831,263576,72
20832,4157,76
20833,54933,83
20834,43022,73
20835,43043,71
20836,10052,73
20837,49637,70
20838,42077,85
20839,17696,80
20840,49053,92
20841,11851,81
20842,43211,72
20843,28357,89
20844,43022,86
20845,21000000,87
20846,63110,84
20847,57932,85
20848,9254,80
20849,40099,82
20850,3545,89
20851,42791,85
20852,7630,83
20853,16072,93
20854,42812,83
20855,47950,79
20856,43022,87
20857,21000000,94
20858,5033,81
20859,37012,81
20860,3545,83
20861,43022,97
20862,7378,89
20863,43118,80
20864,42812,77
20865,1652,86
20866,41132,101
20867,19502,87
20868,21000000,85
20869,21000000,85
20870,4157,76
20871,22127,82
20872,76958,79
20873,7630,83
20874,3545,91
20875,41636,91
20876,56319,83
20877,3545,80
20878,43127,85
20879,97097,90
20880,1078,80
20881,11851,96
20882,1658,78
20883,800615,75
20884,43043,82
20885,17696,82
20886,3545,78
20887,52031,93
20888,16072,80
20889,46907,80
20890,43022,77
20891,21000000,76
20892,159902,76
20893,1078,74
20894,42707,93
20895,79184,79
20896,43022,72
20897,30317,93
20898,54614,82
20899,43022,78
20900,1673,85
20901,9254,84
20902,1078,73
20903,43022,80
20904,21000000,87
20905,42602,99
20906,59883,76
20907,43043,84
20908,71337,91
20909,42896,83
20910,42812,75
20911,42854,81
20912,1078,74
20913,7630,94
20914,1078,77
20915,43022,81
20916,43064,84
20917,42938,86
20918,39746,94
20919,4157,77
20920,43022,78
20921,3545,85
20922,42791,93
20923,51776,86
20924,71477,72
20925,42917,79
20926,74578,93
20927,47698,78
20928,52850,87
20929,43022,88
20930,53252,74
20931,5033,96
20932,42917,72
20933,42980,76
20934,13475,93
20935,223133,72
20936,9254,94
20937,93170,83
20938,38633,92
20939,47243,82
20940,3545,92
20941,43211,83
20942,57588,95
20943,43022,78
20944,59906,92
20945,43043,93
20946,7588,95
20947,52787,96
20948,47852,82
20949,43337,79
20950,4157,71
20951,47243,72
20952,21000000,89
20953,40369,78
20954,52577,76
20955,43288,86
20956,79625,85
20957,1078,87
20958,148952,69
20959,43022,75
20960,124802,85
20961,42938,81
20962,1078,78
20963,43022,98
20964,32746,77
20965,43127,75
20966,183748,87
20967,44695,81
20968,1078,86
20969,47852,81
20970,37016,83
20971,21000000,96
20972,1078,75
20973,4157,71
20974,4157,78
20975,5033,89
20976,5033952,88
20977,21000000,86
20978,123410,80
20979,14672,74
20980,65634,82
20981,42917,90
20982,1658,76
20983,59928,87
20984,72275,80
20985,13475,88
20986,13440,81
20987,44340,74
20988,42749,79
20989,55338,72
20990,1078,88
20991,45710,92
20992,3545,85
20993,13475,90
20994,58030,94
20995,43022,87
20996,43022,91
20997,13475,99
20998,44072,88
20999,39095,98
21000,76790,73
21001,21000000,97
21002,32956,84
21003,4157,93
21004,42182,90
21005,43127,79
21006,20293,79
21007,62027,71
21008,34622,76
21009,43062,86
21010,43148,86
21011,62646,86
21012,287152,77
21013,45038,89
21014,17822,88
21015,43043,86
21016,42707,79
21017,17207,95
21018,42644,88
21019,4157,76
21020,1652,86
21021,4157,80
21022,8848,90
21023,60018,74
21024,43232,84
21025,20309,82
21026,39809,95
21027,13808,75
21028,43127,77
21029,43022,79
21030,41417,70
21031,32767,86
21032,53857,91
21033,33677,94
21034,43067,77
21035,1078,76
21036,43127,86
21037,41510,81
21038,42077,92
21039,41839,78
21040,1658,77
21041,41117,73
21042,1078,79
21043,16072,90
21044,43127,75
21045,4157,81
21046,3248,87
21047,56378,88
21048,28735,91
21049,4737,79
21050,35764,76
21051,7630,91
21052,1078,75
21053,43127,78
21054,42854,83
21055,11851,96
21056,43652,76
21057,1078,80
21058,43031,77
21059,30702,92
21060,1078,89
21061,12593,82
21062,42014,86
21063,43757,71
21064,42980,85
21065,52283,77
21066,17626,86
21067,3482,75
21068,5033,78
21069,42875,72
21070,1078,75
21071,43622,81
21072,19502,75
21073,42812,78
21074,34772,87
21075,99827,73
21076,13475,93
21077,16072,75
21078,43022,85
21079,1663,77
21080,33418,74
21081,1078,77
21082,43190,77
21083,1078,81
21084,42896,86
21085,43127,78
21086,47852,71
21087,47698,83
21088,43022,85
21089,42812,85
21090,42182,78
21091,22127,87
21092,34226,81
21093,42875,90
21094,42812,84
21095,42917,77
21096,1078,73
21097,39674,88
21098,64127,89
21099,9254,81
21100,43022,74
21101,43022,81
21102,1658,84
21103,43127,91
21104,52322,82
21105,33409,80
21106,1078,76
21107,42833,81
21108,113330,87
21109,42812,78
21110,42812,79
21111,43022,86
21112,47852,78
21113,21000000,79
21114,25865,76
21115,53497,74
21116,43442,71
21117,5033,84
21118,39277,77
21119,41102,76
21120,47192,79
21121,1078,79
21122,42917,77
21123,54488,81
21124,43043,85
21125,1658,84
21126,43022,74
21127,36932,86
21128,1658,74
21129,4157,69
21130,3545,89
21131,43041,84
21132,41447,79
21133,43022,75
21134,61944,78
21135,3545,82
21136,26726,87
21137,4157,80
21138,43022,75
21139,9254,91
21140,42182,81
21141,43862,82
21142,1078,74
21143,8392,84
21144,43232,77
21145,3688,77
21146,52577,74
21147,43022,101
21148,1232,77
21149,4157,96
21150,11578,89
21151,43127,81
21152,42728,85
21153,1658,78
21154,34268,76
21155,110999,82
21156,43022,83
21157,11851,86
21158,14651,101
21159,1167,89
21160,34622,79
# After 10400 updates
# 1037: "< inc inc -8 ¬ ¬ ≤ x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ + greedy? swap < x ≤ x x x 3 if F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ ¬ x x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc * x 0 5 / -6 ≤ x 5 dec x x ¬ x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ + 5 -3 greedy x 9 x -1 + 5 ∨ if 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc dec x + 6 T be * * x ∨ copy x x x T x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ be -7 eql + 4 5 x -10 7 F x * x swap -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec ∧ / x ≤ x x x T if x inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F ≤ F 7 x x x pop neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 x 0 F x ≤ 7 x x T if F inc x x F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 F -7 F T depth + greedy? T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc 0 x -7 5 / -7 + T < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ x x * + eql -8 x x x T if pop inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql T ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T -10 1 if ¬ T x x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 greedy? swap < x ≤ x x x dec 4 -1 T ¬ 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -1 -8 ¬ ¬ ≤ x T depth neg depth -1 F -9 + x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 x x 6 * greedy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc inc 0 x -7 5 / -4 + T < ¬ ∧ x 0 -2 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x -2 F inc * 9 T -4 1 x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy eql T ∧ eql x ≤ x x x T if F inc x x -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * x x -2 -1 4 -9 -4 8 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x F ¬ + 5 2 F ≥ 5 x -1 + 5 ∨ if < 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql depth x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql -8 x x x F if pop inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap x x inc T if x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be * 4 * T greedy? x -7 -5 T x pop x x x 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * neg x dec x -3 greedy x T -1 F -9 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql 5 ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F copy F 7 -7 ∧ T -10 + x 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T dec x 1 F copy F -8 1 < ¬ x / ¬ ∨ 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T > x x greedy copy F 9 x 5 x > 5 copy ∨ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -3 x 0 F x ≤ 7 x x T if -1 inc -2 x F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap -8 * 4 6 * swap x * x dec 4 -1 T ¬ < T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop x ∧ ∧ T x -5 7 x x x pop neg T x 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg -1 3 2 inc x 3 5 T -7 3 3 T -5 0 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 T x * greedy -5 x 9 neg -1 + 5 x pop 4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T T x swap x F x copy 3 F T -10 + x T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy x swap x F T x neg eql swap eql T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x -5 7 x x x pop neg x 8 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* ungreedy -8 ∨ x F x < -8 1 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T dec x x F copy F 9 x x x > 5 copy ∨ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + greedy? x * greedy -5 x 9 F -1 + 5 x pop 4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 F -7 ∧ T -10 + if T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "greedy copy T -10 T x x 5 if -7 3 F x -5 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "+ + greedy? swap x greedy copy F copy -7 3 F x -5 -8 4 + -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1232: "+ + greedy? swap T x x 5 if -7 3 x x -5 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * F 5 *"
# 1652: "swap x 3 ∧ -3 T F < - eql 3 pop F T 6 T 4 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * F swap -3 x swap x - 6 T pop F x -1 F 4 7 be 5 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc x < F x 8 ∨ ¬ 9 eql swap 0 F T greedy? x -8 greedy 7 x / -6 inc -5 * 8 * inc depth *"
# 1652: "≤ x dec ∧ -2 -1 4 * -4 8 x x 6 x T -1 ≥ 2 swap T / -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T x x 5 if ≤ 3 F inc 6 3 * x F swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "copy F ¬ + 5 2 depth ≥ 5 x -1 7 x 1 F T swap be * ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec greedy? ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 < -10 F ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-7 eql greedy x ¬ pop copy F neg swap -1 T x inc x 3 T 7 -5 x - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql swap 0 F T greedy? x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-3 x pop ¬ ¬ x dec x * greedy x x x T depth < 8 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * T ¬ x dec F ungreedy 1 x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T + greedy? < x greedy T x * x ∨ copy x inc x T T 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x pop copy F neg 8 -1 T x inc x 3 T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1652: "greedy copy T -10 T greedy? x T if ≤ 3 F inc 6 3 / F 1 swap pop -10 -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 T greedy? x -7 -5 ≤ x < ungreedy < greedy? 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x x dec pop x inc eql x greedy? 2 swap -10 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql neg x x x T 7 x 1 F T swap be T ≤ - -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy F x be x * 0 6 inc inc x ¬ 2 ≥ 2 swap -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x * x x x - x 4 -2 F 9 x + * x F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + ≥ eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ -8 -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy ∨ x F T depth copy x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ dec dec x greedy? F x < 9 eql -1 pop F x -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy ≥ x be * x x ∨ copy x inc x T 9 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ -10 9 -7 greedy -2 x -1 x depth * ≥ 7 be x neg -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc * -4 0 5 / -6 - x x dec inc x 1 T T 2 > -10 ¬ -6 inc copy * 8 * inc depth *"
# 1652: "-7 inc ∨ x depth F inc * F T -4 pop x x 0 4 swap -5 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x x T x < 9 eql -1 pop F T -1 F 4 0 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 copy -5 -3 -2 F T x neg copy swap eql ¬ < pop 2 -7 -10 -5 -6 inc -5 * 8 * inc depth *"
# 1652: "pop x ∧ ∧ T x 2 -4 -7 greedy x x -1 F depth < 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 F eql F T copy 9 x T pop inc x 3 * ≤ F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "neg + x swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x x ¬ ∨ ¬ 9 0 -1 if F T greedy? x if x 7 -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "+ + -1 x T F T * -9 F -5 greedy? inc x 3 * T F x ≥ ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "x x x neg / eql + 4 x x -10 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 1657: "2 * 4 copy -7 5 x -7 - -2 x dec inc x swap T x F swap -10 ungreedy -6 inc F * 8 * inc 5 *"
# 2357: "inc / 6 -1 greedy x -9 4 x -4 0 x -5 / ≥ T inc inc - ≥ ∧ -10 if -5 * 9 * dec 5 *"
# 3545: "≤ + greedy? 9 x x F x pop x x T -5 T x * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 3545: "+ 8 dec x x F copy F inc x T x > - -10 -5 greedy 3 inc dec -8 -6 inc -5 * 8 * inc depth *"
# 4157: "8 x + -1 -7 5 / -7 + T < ¬ ∧ x 0 4 7 -5 x pop -9 -10 if -5 * 9 * dec 5 *"
# 9254: "-7 inc pop ∨ 4 ≤ x x 1 x - 7 x 1 F T swap be swap ≤ x -6 inc -5 * 8 * inc depth *"
# 42812: "swap x ≥ T 2 ≤ F 7 -7 greedy -2 x -1 x depth ∨ x -5 x ≥ -9 -10 x 4 * 9 * 2 5 *"
# 42917: "-7 inc pop ∨ 4 be swap x F 1 < ¬ ∧ x 0 2 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 copy"
21161,42980,70
21162,43022,77
21163,43043,68
21164,43022,64
21165,43022,67
21166,42938,80
21167,43022,79
21168,25778,72
21169,9254,95
21170,38252,79
21171,57363,83
21172,33002,77
21173,43052,78
21174,84044,76
21175,19502,86
21176,1883,86
21177,45962,74
21178,7630,91
21179,13475,90
21180,43022,96
21181,41510,80
21182,30359,84
21183,9422,87
21184,7630,78
21185,43022,77
21186,62246,81
21187,22127,81
21188,11851,83
21189,1658,76
21190,10003003,71
21191,92309,81
21192,42980,72
21193,4157,71
21194,7630,85
21195,37646,98
21196,4157,85
21197,43127,75
21198,56440,86
21199,43078,74
21200,1658,74
21201,36974,79
21202,1078,79
21203,43127,81
21204,43001,81
21205,42833,91
21206,42833,75
21207,43022,75
21208,43043,75
21209,24514,85
21210,43127,69
21211,4157,72
21212,4342,70
21213,43022,66
21214,54950,81
21215,21000000,76
21216,43001,83
21217,42287,90
21218,43232,78
21219,43904,82
21220,46974,88
21221,4157,69
21222,1652,91
21223,42812,70
21224,63112,88
21225,45962,89
21226,15014707,72
21227,37147,75
21228,42872,86
21229,4157,91
21230,1078,86
21231,43064,74
21232,4157,72
21233,3683,72
21234,21917,81
21235,3738,82
21236,42182,73
21237,42077,73
21238,43022,90
21239,43643,77
21240,43897,85
21241,1078,78
21242,43022,70
21243,25188,77
21244,24227,81
21245,73822,84
21246,42146,78
21247,1078,79
21248,56319,88
21249,42812,82
21250,3983,91
21251,4157,79
21252,42770,89
21253,31052,84
21254,42917,81
21255,1078,77
21256,42182,84
21257,21000000,77
21258,3545,80
21259,56319,86
21260,5033,85
21261,1078,82
21262,71643,79
21263,42077,94
21264,4157,70
21265,44845,75
21266,90062,77
21267,42854,86
21268,3545,80
21269,1658,72
21270,42875,78
21271,45794,87
21272,88352,71
21273,29477,81
21274,43022,86
21275,19502,78
21276,43022,95
21277,4157,84
21278,57903,82
21279,11851,102
21280,19013040,84
21281,47054,85
21282,43022,69
21283,43043,70
21284,43127,73
21285,92783,84
21286,3707,76
21287,1658,72
21288,4157,86
21289,40712,97
21290,43106,83
21291,65236,88
21292,56189,83
21293,67424,91
21294,47852,80
21295,24514,77
21296,1078,72
21297,1652,82
21298,32690,81
21299,1658,71
21300,55338,77
21301,43127,83
21302,43862,95
21303,126812,88
21304,36694,85
21305,40565,91
21306,57008,88
21307,24346,93
21308,43127,74
21309,52932,80
21310,43022,77
21311,38402,76
21312,42938,80
21313,42350,83
21314,43022,76
21315,3392998,86
21316,5033,90
21317,57946,92
21318,21917,87
21319,41839,76
21320,43127,82
21321,6623,82
21322,5033,93
21323,42917,80
21324,3683,74
21325,2885,76
21326,35298,74
21327,71407,99
21328,110054,80
21329,57363,79
21330,40522,75
21331,47177,77
21332,7630,92
21333,3545,96
21334,41867,83
21335,43001,78
21336,32312,77
21337,13475,107
21338,43022,88
21339,7630,77
21340,4157,78
21341,43022,70
21342,42686,90
21343,41342,93
21344,42252,79
21345,42182,91
21346,43031,69
21347,151127,80
21348,1078,71
21349,21000000,79
21350,43106,83
21351,47243,91
21352,43022,72
21353,42812,78
21354,43232,71
21355,47238,76
21356,42854,85
21357,43043,90
21358,71359,87
21359,60961,85
21360,57363,84
21361,81011,75
21362,42749,96
21363,43022,79
21364,1078,78
21365,26138,83
21366,14787,77
21367,42980,73
21368,43022,79
21369,43022,80
21370,21000000,93
21371,11851,84
21372,10147,72
21373,1078,78
21374,43022,90
21375,43589,82
21376,4157,75
21377,40522,82
21378,56961,77
21379,19502,86
21380,43127,71
21381,21000000,72
21382,47852,86
21383,1078,80
21384,41132,78
21385,43022,79
21386,1658,73
21387,43022,87
21388,43022,78
21389,43127,86
21390,42770,87
21391,72569,84
21392,9422,117
21393,11851,85
21394,43817,76
21395,7882,81
21396,40522,71
21397,1078,75
21398,43316,91
21399,26138,91
21400,35133,74
21401,1078,81
21402,1652,92
21403,1652,91
21404,16072,88
21405,13475,87
21406,11851,90
21407,3545,82
21408,4157,73
21409,42098,88
21410,1658,80
21411,43022,85
21412,43022,78
21413,22127,81
21414,41846,91
21415,110999,89
21416,4782,73
21417,43127,78
21418,127456,84
21419,22022,85
21420,21000000,83
21421,43022,85
21422,52031,89
21423,1652,93
21424,43022,71
21425,43127,88
21426,44623,80
21427,49442,81
21428,1078,80
21429,9254,87
21430,7630,99
21431,44620,80
21432,49523,80
21433,13475,72
21434,1078,85
21435,42917,73
21436,5327,78
21437,14083,77
21438,42875,81
21439,43022,63
21440,1078,84
21441,53497,71
21442,130562,78
21443,42917,89
21444,42833,90
21445,45042,75
21446,43127,76
21447,69825,90
21448,1078,75
21449,3545,86
21450,17696,86
21451,1232,81
21452,85652,87
21453,21000000,69
21454,1078,80
21455,1232,77
21456,43127,81
21457,42872,81
21458,52932,80
21459,42287,76
21460,44051,93
21461,3545,102
21462,15020614,83
21463,43022,82
21464,1658,72
21465,42917,90
21466,98231,90
21467,1658,72
21468,42182,84
21469,43184,98
21470,108080,71
21471,1078,72
21472,59928,82
21473,1078,82
21474,1658,78
21475,10052,73
21476,1078,80
21477,4778,85
21478,8408,72
21479,1078,86
21480,55338,80
21481,1078,87
21482,11851,89
21483,47852,74
21484,53277,75
21485,1658,80
21486,41846,87
21487,4157,89
21488,9254,81
21489,1658,79
21490,43022,89
21491,43232,84
21492,89343,83
21493,19502,85
21494,43022,80
21495,43022,87
21496,47852,81
21497,42854,75
21498,52577,103
21499,29806,84
21500,83688,77
21501,9002,92
21502,3932,68
21503,4157,85
21504,42938,80
21505,9086,91
21506,1078,74
21507,10862,83
21508,47852,81
21509,15104257,72
21510,38402,71
21511,42182,85
21512,1078,81
21513,48020,95
21514,1078,84
21515,1658,73
21516,68348,88
21517,43022,79
21518,678,80
21519,21908,74
21520,4157,84
21521,42917,74
21522,43127,72
21523,43127,81
21524,19502,83
21525,55531,82
21526,4157,78
21527,43232,88
21528,44660,87
21529,4157,78
21530,42770,94
21531,43127,81
21532,29926,81
21533,43022,76
21534,63014,93
21535,19502,79
21536,1078,80
21537,21000000,79
21538,4157,75
21539,43967,80
21540,42686,91
21541,3545,77
21542,14777,91
21543,40369,93
21544,1658,85
21545,56319,87
21546,42875,88
21547,42959,71
21548,42833,85
21549,41622,80
21550,47310,74
21551,43127,79
21552,48584,84
21553,42917,81
21554,49323,87
21555,21000000,77
21556,17696,93
21557,4157,85
21558,1078,77
21559,1078,72
21560,38402,83
21561,16072,78
21562,46585,80
21563,43127,74
21564,4157,69
21565,43022,78
# After 10600 updates
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "< inc inc -8 ¬ ¬ ≤ x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T > x x greedy copy F 9 x 5 x > 5 copy ∨ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "if + greedy? swap < x greedy? x if x 3 if F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be * 4 * T greedy? x -7 -5 T x pop x x x 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy x swap x F T x neg T swap -5 0 ∨ T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F copy F 7 -7 ∧ T -10 + x 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T -10 1 if x T x -6 T depth neg x 5 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 x x x 0 neg x x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F -5 F 7 x x x 0 neg x x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 inc x * x x x - if F -2 F 9 inc + * x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 greedy? swap < x ≤ x x x dec 4 -1 T ¬ 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql T ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x + -10 < x x T x * x ∨ if F 2 dec x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T T x swap x F x copy 3 F T -10 + x T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql -8 x x -9 F if -1 inc -2 -7 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ + greedy? swap < x ≤ x x x 3 if F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T dec x 1 F copy F x inc T if x ungreedy neg x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc 0 x -7 5 / -7 + T < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x -2 F inc * 9 ≥ greedy 1 x x 0 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "¬ + greedy? swap < ¬ ≤ x x x x x neg T x 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 T x * greedy -5 x 9 neg -1 + 5 x pop 4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 x x 6 * greedy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 F -7 F T depth + greedy? T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * neg x dec x -3 greedy x T -1 F -9 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x -5 7 x x x pop neg x 8 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop x ∧ ∧ T x 2 eql -7 greedy x 9 -1 F depth < 8 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -7 x 1 x ≤ x x x dec 4 -1 T T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ be -7 eql + 4 5 x -10 7 F x * x swap -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ x dec x -3 greedy x x -1 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql -8 x x x F if pop inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy copy T -10 x be x x T -4 < ¬ F inc x copy T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -1 -8 ¬ ¬ ≤ x T depth neg depth -1 F -9 + x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql 5 ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-10 x dec copy T x be x * 0 6 inc inc -6 ¬ 2 + -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x F ¬ + 5 2 F ≥ 5 x -1 + 5 ∨ if < 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ + 5 -3 greedy x 9 x -1 + 5 ∨ if 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T + greedy? swap x F x < if -4 < ¬ ∧ x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 x x x / neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc dec x + 6 T be * * x ∨ copy x x x T x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql dec dec / x ≤ T x x copy pop x x x 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -7 swap 1 x ≤ x x x dec 4 -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg -1 3 2 inc x 3 5 T -7 3 3 T -5 0 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ¬ ¬ x x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x -2 F inc * 9 T -4 1 x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 F -7 ∧ T -10 + if T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x * greedy x copy 3 F T -10 x x T copy 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * x x -2 -1 4 -9 -4 8 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc * x 0 5 / -6 ≤ x 5 dec x x ¬ x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 x -7 x / neg T if x -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc pop + 4 be swap F F 1 < ¬ 5 ∨ if x 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x neg / eql neg x 9 x 5 x > 5 x + x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "1 copy T -10 T greedy? x T if ≤ F T -1 F -9 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 x greedy? 4 -1 x x -2 ¬ -7 dec x 5 -5 0 4 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap x x inc T if x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T dec x x F copy F 9 x x x > 5 copy ∨ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ x x * + eql -8 x x x T if pop inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "greedy copy T -10 T x x 5 if -7 3 F x -5 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1232: "+ + greedy? swap T x x 5 if -7 3 x x -5 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * F 5 *"
# 1652: "-7 eql greedy x ¬ pop copy F neg swap -1 T x inc x 3 T 7 -5 x - -6 inc -5 * 8 * inc depth *"
# 1652: "x x x + ≥ eql -8 4 x dec -10 7 x 1 F T swap be swap ≤ -8 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x x dec pop x inc eql x greedy? 2 swap -10 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "copy F ¬ + 5 2 depth ≥ 5 x -1 7 x 1 F T swap be * ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy ≥ x be * x x ∨ copy x inc x T 9 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "≤ x dec ∧ -2 -1 4 * -4 8 x x 6 x T -1 ≥ 2 swap T / -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 ≥ greedy? x x -5 ≤ x < ungreedy < x 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "if * F swap -3 x swap x - 6 T pop F x -1 F 4 7 be 5 - -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 F eql F T copy 9 x T pop inc x 3 * ≤ F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 T greedy? x -7 -5 ≤ x < ungreedy < greedy? 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "/ dec dec x greedy? F x < 9 eql -1 pop F x -1 F 4 7 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec greedy? ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 < -10 F ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x x ¬ ∨ ¬ 9 0 -1 if F T greedy? x if T -8 -10 ungreedy -6 inc -5 * 8 * inc neg *"
# 1652: "swap -6 ≥ T 2 ≤ F 7 -7 greedy -2 x -1 x + * x F x swap ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "swap x 3 ∧ -3 T F < - eql 3 pop F T 6 T 4 x swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ -10 9 -7 greedy -2 x -1 x depth * ≥ 7 be x neg -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x x T x < 9 eql -1 pop F T -1 F 4 0 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy ∨ x F T depth copy x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql swap 0 F T greedy? x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc ∨ x depth F inc * F T -4 pop x x 0 4 swap -5 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "neg + x swap x greedy copy F neg 9 1 x greedy < -5 T swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * T ¬ x dec F ungreedy 1 x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 copy -5 -3 -2 F T x neg copy swap eql ¬ < pop 2 -7 -10 -5 -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x pop copy F neg 8 -1 T x inc x 3 T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "x x -1 4 pop F 3 copy 9 x T pop inc x 3 * ≤ F swap > -10 -6 inc -5 * 8 * inc depth *"
# 1652: "pop eql dec ∧ T x ≤ T x x T pop x inc x x T 2 swap -10 T -6 inc -5 * 8 * inc depth *"
# 1658: "3 dec greedy? ∧ 6 ≥ swap 4 1 x 4 4 -1 x 0 4 7 -5 F pop -9 3 if -5 * 9 * dec 5 *"
# 3545: "x T be x 1 ≤ x x -3 x - 0 x eql copy < pop 2 -7 -10 -5 -6 inc -5 * 8 * inc depth *"
# 3545: "+ 8 dec x x F copy F inc x T x > - -10 -5 greedy 3 inc dec -8 -6 inc -5 * 8 * inc depth *"
# 3545: "pop x dec x x T x < 9 F ≥ pop F T -1 F 4 0 be x - -6 inc -5 * 8 * inc depth *"
# 3932: "+ x * -5 ≤ x + x x * 4 ¬ + ¬ -9 x 1 x / ≥ -9 -10 if -5 * 9 * dec 5 *"
# 4157: "inc x < - 0 5 / -6 ≤ x 4 ¬ F -5 x x 1 x x ≥ x -10 if -5 * 9 * dec 5 *"
# 42812: "-1 x 4 / - x x - x x -2 F 9 x + * x F x pop ungreedy -6 / -5 * 8 x inc depth *"
# 42833: "greedy copy T -10 T x x 5 if ≥ / x 9 x + > eql F x pop ungreedy -6 / dec * 8 x inc depth *"
21566,43028,69
21567,42302,69
21568,43043,75
21569,43022,72
21570,43022,73
21571,63511,75
21572,57993,88
21573,4157,78
21574,20000283,74
21575,18571,80
21576,46907,77
21577,43022,87
21578,62027,79
21579,52031,84
21580,43022,85
21581,5033,86
21582,55338,79
21583,44534,82
21584,2450,84
21585,1658,76
21586,43022,82
21587,43022,74
21588,43043,72
21589,52322,84
21590,42938,91
21591,42917,87
21592,1078,85
21593,42854,89
21594,90377,78
21595,7630,84
21596,57363,74
21597,19502,85
21598,46326,90
21599,47327,89
21600,42704,79
21601,5033,89
21602,5033,98
21603,42182,74
21604,43022,73
21605,51443,87
21606,43022,78
21607,58030,91
21608,43967,74
21609,38297,70
21610,1078,87
21611,44072,79
21612,76083,83
21613,43946,75
21614,43070,99
21615,3545,80
21616,9254,95
21617,42896,80
21618,1078,76
21619,42935,89
21620,1078,75
21621,33772,77
21622,42302,74
21623,42938,85
21624,47852,76
21625,43022,83
21626,42182,77
21627,37877,87
21628,1078,73
21629,1078,82
21630,43022,76
21631,5033,77
21632,10052,78
21633,20272,80
21634,57363,88
21635,49743,88
21636,42917,80
21637,1658,65
21638,43127,81
21639,3482,69
21640,47852,87
21641,42770,69
21642,41132,84
21643,7630,80
21644,42749,87
21645,1658,82
21646,64590,78
21647,43579,93
21648,11578,79
21649,14777,86
21650,85232,92
21651,21917,88
21652,42572,77
21653,42182,77
21654,40522,74
21655,65402,73
21656,9050780,71
21657,60662,83
21658,53252,81
21659,42917,90
21660,12698,81
21661,4157,75
21662,4157,85
21663,4157,74
21664,10043098,83
21665,43127,77
21666,43022,82
21667,27308,81
21668,87872,84
21669,38801,96
21670,45752,88
21671,1658,81
21672,44618,78
21673,43841,77
21674,43029,84
21675,40607,84
21676,43031,86
21677,42182,76
21678,46974,87
21679,44210,78
21680,42707,87
21681,106127,70
21682,41041,80
21683,43022,67
21684,4157,79
21685,34517,80
21686,1167,75
21687,19502,91
21688,39527,84
21689,43067,77
21690,42917,75
21691,42287,80
21692,1078,83
21693,1078,83
21694,39347,78
21695,1652,86
21696,43127,73
21697,55338,73
21698,43022,70
21699,1658,73
21700,47747,75
21701,42917,75
21702,43022,77
21703,90377,75
21704,55293,76
21705,42182,70
21706,43032,73
21707,3545,83
21708,43127,90
21709,43127,86
21710,1078,72
21711,87605,81
21712,4157,89
21713,3545,102
21714,42917,78
21715,55338,77
21716,87917,77
21717,1078,87
21718,43031,89
21719,42917,72
21720,40467,71
21721,1078,72
21722,43817,91
21723,82052,73
21724,43463,83
21725,43190,79
21726,43022,80
21727,43028,76
21728,52577,79
21729,42896,69
21730,3614824,79
21731,44942,78
21732,1658,70
21733,13720,80
21734,4157,85
21735,42896,76
21736,48797,85
21737,56945,88
21738,1658,81
21739,71477,85
21740,48755,90
21741,42917,79
21742,50647,93
21743,1078,86
21744,44072,87
21745,43022,94
21746,4157,91
21747,58877,82
21748,1652,94
21749,36377,75
21750,43442,87
21751,1658,69
21752,2357,71
21753,1078,80
21754,42980,75
21755,14777,84
21756,58628,86
21757,42182,75
21758,59910,74
21759,45955,92
21760,18256,86
21761,43127,73
21762,42896,74
21763,57397,76
21764,1658,75
21765,72569,88
21766,45655,79
21767,43022,86
21768,1167,72
21769,4157,86
21770,57903,79
21771,43022,78
21772,4157,74
21773,1078,74
21774,1078,70
21775,1078,82
21776,4157,81
21777,43148,80
21778,42287,74
21779,41288,79
21780,56627,76
21781,15014722,77
21782,1078,71
21783,42182,79
21784,1078,80
21785,47852,90
21786,47852,75
21787,7630,79
21788,9254,103
21789,42917,77
21790,43022,77
21791,3545,88
21792,4157,78
21793,62027,81
21794,7630,81
21795,43127,74
21796,1078,77
21797,1662,101
21798,51268,82
21799,43757,76
21800,43127,71
21801,52802,79
21802,43127,78
21803,19502,90
21804,59208,78
21805,40754,73
21806,42697,79
21807,42392,77
21808,5033,90
21809,44072,77
21810,34622,82
21811,12418,86
21812,73262,85
21813,21917,90
21814,43388,84
21815,40383,86
21816,43127,83
21817,42035,77
21818,49877,79
21819,1078,81
21820,11851,84
21821,36512,72
21822,1078,78
21823,20293,78
21824,1658,78
21825,114888,81
21826,44177,75
21827,5033,87
21828,1658,79
21829,64301,75
21830,43127,78
21831,1078,80
21832,1078,80
21833,4157,82
21834,42182,72
21835,32561,86
21836,47852,82
21837,43022,80
21838,104588,79
21839,1078,81
21840,43997,71
21841,7693,80
21842,3683,78
21843,3545,86
21844,2132,85
21845,45955,82
21846,42992,79
21847,43211,87
21848,1242,89
21849,42917,85
21850,4133,70
21851,89222,84
21852,43022,76
21853,47177,83
21854,47193,81
21855,1658,83
21856,241253,86
21857,43127,75
21858,1658,88
21859,19502,86
21860,67424,82
21861,42182,74
21862,42182,73
21863,44282,76
21864,43022,88
21865,1658,76
21866,70577,75
21867,43022,84
21868,40376,81
21869,21917,77
21870,41294,89
21871,61838,79
21872,42182,80
21873,1652,94
21874,42917,90
21875,1078,79
21876,1658,86
21877,1078,84
21878,1078,85
21879,1078,79
21880,1078,73
21881,55966,81
21882,22022,93
21883,70511,85
21884,21000000,74
21885,1078,86
21886,35567,78
21887,4157,83
21888,1652,98
21889,1078,82
21890,43022,87
21891,43043,88
21892,1078,83
21893,43022,74
21894,1078,82
21895,43022,78
21896,21000000,81
21897,1078,82
21898,42875,86
21899,47364,77
21900,1658,72
21901,21000000,84
21902,43127,72
21903,43022,78
21904,44845,69
21905,40522,86
21906,58353,75
21907,5033,85
21908,55338,79
21909,43022,104
21910,42917,77
21911,42917,77
21912,1078,83
21913,43127,83
21914,42890,88
21915,39077,88
21916,42707,84
21917,6926,76
21918,1078,83
21919,47852,98
21920,102581,84
21921,43022,91
21922,43232,92
21923,42722,89
21924,57718,94
21925,43127,82
21926,1078,74
21927,42875,76
21928,1078,72
21929,1078,79
21930,4157,74
21931,1078,78
21932,43043,77
21933,42812,100
21934,43022,87
21935,1663,76
21936,21000000,80
21937,77252,73
21938,4157,83
21939,43022,86
21940,198833,73
21941,1658,81
21942,44845,76
21943,64590,90
21944,4157,80
21945,57903,77
21946,1078,83
21947,1078,79
21948,4157,81
21949,43127,78
21950,45415,83
21951,47957,79
21952,1078,91
21953,41923,90
21954,43043,81
21955,42770,81
21956,1078,72
21957,42182,80
21958,1652,98
21959,43127,75
21960,40522,78
21961,32767,80
21962,42980,69
21963,42917,85
21964,43652,70
21965,43652,73
21966,19004090,74
21967,43022,87
21968,39927,88
21969,81011,83
21970,9254,91
# After 10800 updates
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "< inc inc -8 ¬ ¬ ≤ x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 x x 6 * greedy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x -2 F inc * 9 T -4 1 x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T dec x x F copy F 9 x x x > 5 copy ∨ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 F -7 ∧ T -10 + if T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be depth 4 * T greedy? x -7 -5 x x pop x x x -9 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 inc x * x x x - if F -2 F 9 inc + * x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc dec x + 6 T be * * x ∨ copy x x x T x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x x ¬ 7 x x / depth x x -1 F T depth -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x F 7 x x x x > F copy ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql T ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 greedy? swap < x ≤ x x x dec 4 -1 T ¬ 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 x greedy? 4 -1 x x -2 ¬ -7 dec x 5 -5 0 4 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "2 * 6 < x x 7 x * x ∨ if F 2 dec x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "1 copy T -10 T greedy? x T if ≤ F T -1 F -9 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x * greedy x copy 3 F T -10 x x T copy 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ be -7 eql + 4 5 x -10 7 F x * x swap -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 T x * greedy -5 x 9 neg -1 + 5 x pop 4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "if + greedy? swap < x greedy? x x x 3 2 F -2 x -10 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy copy T depth T x x depth -7 ≥ greedy 1 inc x 0 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x neg / eql neg x 9 x 5 x > 5 x + x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 T x * greedy -5 x 9 neg F + 5 x dec -4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 -1 x -7 eql neg ∧ -10 T depth 8 T inc -4 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T -10 1 x x T x -6 T depth neg > greedy F T be T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x -5 7 x x x pop neg x 8 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * neg x dec x -3 greedy x T -1 F -9 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x greedy 7 x -2 x pop neg x T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "¬ T greedy? swap < ¬ ≤ T swap x x x neg T x 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x x x be x x T -4 < ¬ F inc x copy T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy x swap x F T -10 neg T swap x 0 ∨ T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 x x x / neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F copy F 7 -7 ∧ T -10 + x 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -7 swap 1 x ≤ x x x dec 4 -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap x x inc T if x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop - 5 ∧ < x T x T x T pop F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 F -7 F T depth + greedy? T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop T T ∧ < x ≤ x x x T if - inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 ≥ x x 0 neg ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -7 x 1 x ≤ x x x dec 4 -1 T T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 copy T x * greedy -5 x -10 neg - + 5 x pop 4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop x ∧ ∧ T x 2 eql -7 greedy x 9 -1 F depth < 8 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -7 x 1 neg ≤ x x x x -8 -1 T T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy x ¬ pop copy 9 9 ∨ -1 + x eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T -10 1 if x T x -6 T depth neg x 5 F -1 + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy copy T -10 T x x 8 x inc T > x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "2 * 6 < x x 7 T -10 T F 8 pop F -4 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x -2 F inc * 9 ≥ greedy 1 x x 0 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ T > x x greedy copy F 9 x 5 x > 5 copy ∨ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 -7 x 4 x T x 5 x -9 + T ∨ if < 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * x x -2 -1 4 -9 -4 8 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap F < ungreedy F ∨ F dec x x T > 5 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg -1 3 2 inc x 3 5 T -7 3 3 T -5 0 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc pop + 4 be swap F F 1 < ¬ 5 ∨ if x 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ x 5 -3 greedy T x -3 dec pop x x x ¬ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy x F x F T ∧ neg T swap -5 0 ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql -8 x x -9 F if -1 inc -2 -7 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ x x * + eql -8 x x x T if pop inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql neg x -10 x F if pop inc -4 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -1 -8 ¬ ¬ ≤ x T depth neg depth -1 F -9 + x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql -8 x x x F if pop inc x x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-1 x 4 / - depth F -6 x 1 -2 x greedy x F + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ + greedy? swap < x ≤ x x x 3 if F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * -6 x F ≤ F 7 x -7 x x neg T pop x -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 F * x + 5 / -6 ≤ x 5 dec x x ¬ dec T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "greedy copy T -10 T x x 5 if -7 3 F x -5 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "x x x + ≥ eql -8 T x dec x F x F 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "+ + x swap T x x eql if -7 3 x x -5 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "swap -6 ≥ T 2 ≤ F 7 -7 greedy -2 x -1 x + * x F x swap ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy ∨ x F T depth copy x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 T greedy? x -7 -5 ≤ x < ungreedy < greedy? 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 ungreedy -8 ∨ 4 ≥ swap x x x dec pop x inc eql x greedy? 2 swap -10 greedy -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec dec ∧ inc x ∨ 9 * x x copy x x swap T T 2 swap inc -10 -6 inc -5 * 8 * inc depth *"
# 1652: "greedy x -6 x ≤ ¬ ∨ ¬ 9 eql swap 0 F T greedy? x -8 x 7 -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy ≥ x be * x x ∨ copy x inc x T 9 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "swap neg ≥ T F copy 7 F -7 F -4 depth x greedy? T x 1 -5 -8 -10 ungreedy -6 inc -5 * 8 * inc neg *"
# 1652: "if * 4 copy -5 -3 -2 F T x neg copy swap eql ¬ < pop 2 -7 -10 -5 -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ 2 -4 -7 greedy x x -1 T depth * 8 T swap pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy * x copy x swap x F T -10 neg x inc < -5 T swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "copy F ¬ + 5 2 depth ≥ 5 x -1 7 x 1 F T swap be * ≤ x -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x x T x < 9 eql -1 pop F T -1 F 4 0 be x - -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc ∨ x depth F inc 3 9 ≥ greedy 1 x x 0 4 ≥ 2 swap T ≤ -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc ∨ x depth F inc * F T -4 pop x x 0 4 swap -5 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "+ + greedy? swap x pop copy F neg 8 -1 T x inc x 3 T 7 -5 * - -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * T ¬ x dec F ungreedy 1 x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 ≥ greedy? x x -5 ≤ x < ungreedy < x 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "-8 -3 -1 F eql F T copy 9 x T pop inc x 3 * ≤ F x pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "-10 x dec copy inc x be x * 0 6 inc inc x T -1 ≥ 2 swap -10 / -6 inc -5 * 8 * inc depth *"
# 1652: "3 dec greedy? ∧ 6 ≥ swap x 1 x 4 4 -1 T ¬ < -5 < -10 F ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "/ ¬ x 8 0 ≤ -10 9 -7 greedy -2 x -1 x depth * ≥ 7 be x neg -6 inc -5 * 8 * inc depth *"
# 2450: "greedy x -6 x x ¬ ≥ ¬ 9 0 -1 if F T greedy? F 4 0 be x - -6 inc -4 * 8 * inc depth *"
# 4157: "greedy 4 -6 x x ¬ ≥ ¬ greedy F F F 9 inc + * x -5 copy ≥ copy -10 if -5 * 9 * dec 5 *"
# 4157: "inc x < - 0 5 / -6 ≤ x 4 ¬ F -5 x x 1 x x ≥ x -10 if -5 * 9 * dec 5 *"
# 42182: "pop inc dec ∧ x T x < 9 eql -1 if F T -1 F 4 0 be x - x if -5 * 9 + dec 5 *"
# 42182: "-8 x - 1 inc * / inc 7 / -1 0 x - -6 x x x 7 x dec -10 if -5 * 9 copy dec 5 *"
# 42917: "greedy x -6 x x ¬ ∨ ¬ 9 x 5 x > 5 copy ∨ x -5 x ≥ -9 -10 if T * 9 * dec eql F"
21971,43148,70
21972,42959,69
21973,42917,64
21974,43022,70
21975,43232,75
21976,4157,84
21977,34268,82
21978,42917,74
21979,43127,85
21980,34538,86
21981,1078,90
21982,4157,80
21983,43022,80
21984,42875,80
21985,43127,75
21986,16760,73
21987,6772,77
21988,43022,85
21989,10052,85
21990,43127,84
21991,63848,77
21992,44845,79
21993,21000000,74
21994,43232,73
21995,42917,71
21996,61944,79
21997,43547,87
21998,44845,71
21999,1078,72
22000,43127,82
22001,1078,81
22002,121457,94
22003,1078,79
22004,1078,83
22005,1652,79
22006,55105,79
22007,4157,91
22008,43127,79
22009,43922,83
22010,42896,84
22011,19000034,80
22012,47852,88
22013,15631,85
22014,42959,66
22015,1078,75
22016,80927,79
22017,11108,72
22018,42938,86
22019,47852,80
22020,43022,69
22021,43022,77
22022,4157,71
22023,1078,76
22024,42587,68
22025,4157,80
22026,52031,92
22027,3683,79
22028,44665,94
22029,42917,72
22030,41636,83
22031,7630,90
22032,1167,78
22033,1078,83
22034,41102,76
22035,2333,77
22036,131912,81
22037,37016,98
22038,4778,79
22039,22937,82
22040,4157,77
22041,43127,74
22042,38402,77
22043,40522,87
22044,1078,85
22045,34268,79
22046,42917,79
22047,1078,80
22048,43442,76
22049,1078,89
22050,60137,73
22051,1078,80
22052,1658,85
22053,43022,80
22054,43169,78
22055,4252,75
22056,1078,81
22057,43022,95
22058,45017,87
22059,43118,89
22060,62797,76
22061,43127,75
22062,43022,82
22063,7630,90
22064,3545,86
22065,1663,77
22066,42182,71
22067,43148,77
22068,57678,77
22069,1078,79
22070,42917,87
22071,11851,86
22072,43127,77
22073,42917,73
22074,43232,78
22075,1078,89
22076,42476,79
22077,55966,83
22078,1658,81
22079,43022,81
22080,1658,80
22081,1078,77
22082,1078,79
22083,42182,76
22084,1658,80
22085,42791,76
22086,1078,77
22087,1652,92
22088,4157,79
22089,725312,73
22090,47852,74
22091,34413,81
22092,4157,84
22093,43015,88
22094,16072,85
22095,1037,85
22096,47272,92
22097,1078,80
22098,50687,80
22099,53497,72
22100,47852,75
22101,43127,86
22102,26988,77
22103,34223,83
22104,4157,85
22105,57903,73
22106,40817,95
22107,41972,99
22108,109025,79
22109,130562,81
22110,44072,71
22111,21077,89
22112,57903,82
22113,42182,84
22114,21000000,108
22115,37016,92
22116,315081,73
22117,55908,80
22118,48797,79
22119,26942,75
22120,1078,93
22121,1658,71
22122,43127,90
22123,43127,76
22124,4157,80
22125,97593,73
22126,43022,78
22127,45017,85
22128,43127,80
22129,130562,80
22130,19502,80
22131,42917,75
22132,43022,81
22133,44845,75
22134,1078,77
22135,23698,80
22136,46648,79
22137,1658,91
22138,42182,73
22139,18752,78
22140,35848,79
22141,7595,93
22142,123410,91
22143,47177,75
22144,13517,81
22145,43757,82
22146,43022,72
22147,1078,76
22148,21000000,79
22149,4157,87
22150,1078,85
22151,42527,79
22152,47277,84
22153,35273,89
22154,43022,71
22155,43022,78
22156,1072094,84
22157,51002,80
22158,47852,96
22159,47852,85
22160,52493,75
22161,43127,83
22162,3683,77
22163,44072,82
22164,1078,87
22165,1078,76
22166,130772,75
22167,50218,79
22168,37247,83
22169,43127,70
22170,639679,73
22171,40522,77
22172,126812,93
22173,42833,89
22174,1078,82
22175,69932,72
22176,43022,79
22177,42182,96
22178,1078,82
22179,1078,80
22180,59388,79
22181,1078,74
22182,1078,82
22183,1078,85
22184,1078,86
22185,47852,81
22186,3545,93
22187,42917,77
22188,42238,97
22189,44942,83
22190,43127,80
22191,1658,77
22192,43232,78
22193,42917,71
22194,37877,73
22195,42917,72
22196,1133,80
22197,66752,74
22198,85652,75
22199,29497,77
22200,21000000,92
22201,1658,77
22202,43547,85
22203,43127,69
22204,3683,75
22205,42182,76
22206,43127,78
22207,42077,80
22208,42959,83
22209,30359,79
22210,1078,81
22211,42182,69
22212,43022,92
22213,45493,91
22214,17696,92
22215,4252,95
22216,43127,85
22217,1078,76
22218,44072,88
22219,1658,81
22220,21000000,81
22221,54022,82
22222,43532,80
22223,49742,76
22224,59388,74
22225,1078,76
22226,43022,80
22227,43022,76
22228,62027,77
22229,5033,82
22230,1078,86
22231,75527,83
22232,42287,70
22233,1658,79
22234,62628,88
22235,43127,83
22236,77777,72
22237,42182,89
22238,42392,73
22239,848,82
22240,42917,70
22241,86792,73
22242,247868,92
22243,1078,91
22244,39277,76
22245,42917,82
22246,43897,84
22247,2885,76
22248,40522,82
22249,43022,78
22250,43127,75
22251,42917,81
22252,43127,81
22253,4342,77
22254,42812,78
22255,40187,79
22256,43127,83
22257,57397,83
22258,21000000,84
22259,43127,71
22260,1078,80
22261,42452,80
22262,4157,86
22263,18256,83
22264,179270,85
22265,43127,81
22266,41923,82
22267,43085,83
22268,1078,85
22269,43841,89
22270,14777,79
22271,52850,76
22272,4157,85
22273,21000000,85
22274,1658,83
22275,43579,99
22276,1078,83
22277,4157,79
22278,42182,78
22279,42182,82
22280,1078,73
22281,19000034,77
22282,57363,71
22283,43442,80
22284,19000034,73
22285,47852,86
22286,4157,80
22287,3397,80
22288,61472,77
22289,1078,87
22290,1658,69
22291,43022,76
22292,43127,81
22293,3583,84
22294,42182,80
22295,1658,82
22296,47852,80
22297,4157,91
22298,47192,82
22299,43022,74
22300,29627,80
22301,25958,71
22302,4157,79
22303,43127,73
22304,1078,81
22305,46502,78
22306,43022,93
22307,1078,77
22308,43127,80
22309,21000000,70
22310,4778,81
22311,1078,78
22312,42047,74
22313,43106,75
22314,1078,77
22315,4157,96
22316,19502,92
22317,42182,84
22318,43988,78
22319,43022,85
22320,43022,78
22321,1078,89
22322,42647,74
22323,4157,77
22324,21000000,76
22325,1078,81
22326,1663,85
22327,42602,70
22328,21000000,73
22329,1658,84
22330,43022,83
22331,1658,75
22332,42182,78
22333,1658,94
22334,24608,84
22335,53361,84
22336,19502,79
22337,42806,94
22338,1658,76
22339,43118,69
22340,41132,81
22341,43127,92
22342,4157,81
22343,21000000,85
22344,1078,80
22345,1663,81
22346,42917,82
22347,47852,98
22348,13877,80
22349,47852,78
22350,4157,83
22351,21000000,85
22352,1658,75
22353,1078,77
22354,1652,81
22355,4157,81
22356,53497,73
22357,43967,88
22358,1078,80
22359,18752,80
22360,43022,85
22361,43127,85
22362,4157,78
22363,24514,86
22364,40754,83
22365,4157,77
22366,1078,82
22367,42854,75
22368,4157,86
22369,1078,79
22370,42764,86
22371,43022,91
22372,1078,79
22373,48797,89
22374,1133,79
22375,4157,77
# After 11000 updates
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 inc * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "greedy -8 T -6 * greedy -5 x 9 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "< inc inc -8 ¬ ¬ ≤ x T depth neg x -1 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 -7 x 1 x T x ≥ x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x -5 7 x x x pop neg x 8 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * + eql -8 -7 x x T if pop inc x -8 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x F 7 x x x x > F copy ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 F -7 ∧ T -10 + if T x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x ≤ x x x dec T -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy copy T depth T x x depth -7 ≥ greedy 1 inc x 0 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 x x 6 * greedy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x -2 F inc * 9 T -4 1 x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * x x -2 -1 4 -9 -4 8 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop T T ∧ < x ≤ x x x T if - inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -6 7 T 2 ≤ F 7 -10 greedy -2 x -1 T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* -10 1 ∨ 4 ≥ swap x x x dec -3 1 inc eql x - -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * x eql -8 -7 x T T if pop inc x -8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop eql T ∧ < x ≤ x x x T if F inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-2 dec x + 6 T be * eql x ∨ copy x x x -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap neg ≥ T F copy x F T ∧ neg T swap 4 0 ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x ≤ x x x dec ≤ -1 T copy ∨ if -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -5 x 3 x x x x x x -8 pop x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-1 x 4 / - depth F -6 x 1 -2 x greedy x F + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql neg x -10 x F if pop inc -4 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ x 5 -3 greedy T x -3 dec pop x x x ¬ x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg -1 3 2 inc x 3 5 T -7 3 3 T -5 0 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x -7 x eql ¬ * 9 x -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "¬ T greedy? swap < ¬ ≤ T swap x x x neg T x 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc ∨ x -2 F inc * 9 ≥ greedy F x x -3 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 x -6 * greedy -5 x 9 neg F 4 -1 T ¬ 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy x x copy x F x F T ∧ neg T swap T 0 ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x 8 7 + x x x > F x ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F copy F 7 -7 + T -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap x x inc T if x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-4 x greedy? 4 -1 x x -2 ¬ -7 dec x 5 -5 0 T T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T -10 neg x dec x -3 greedy x x -1 F + x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop dec ∧ ∧ T x 2 eql -7 greedy F 9 -1 F depth greedy 8 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 -10 -7 F T > + greedy? T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -1 -8 ¬ ¬ ≤ x T depth neg depth -1 F -9 + x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop - 5 ∧ < x T x T x T pop F -2 x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql -8 x x -9 F if -1 inc -2 -7 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 be x x T -4 < ¬ x inc copy copy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 T x * if x F T ∧ ungreedy T swap -5 0 ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x -2 -1 4 pop -4 8 x x 6 x T x F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x x ¬ 7 x x / depth x x -1 F T depth -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 ∧ x -7 eql -8 x x x F if pop inc be x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap F < ungreedy F ∨ F dec x x T > 5 F T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy -3 F x x 9 neg -9 + 5 be dec -4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 inc x * x x x - if -5 -2 F 9 inc + * -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x neg x x 7 T -10 T copy 8 pop F -4 x -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 ungreedy + ∨ 4 ≥ swap x x x dec -3 1 inc eql x greedy? -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy copy T -10 T x x 8 x inc T > x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql greedy * ungreedy x dec x 2 greedy x T -1 F -10 -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 F * x + 5 / -6 ≤ x 5 dec x x ¬ dec T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x * greedy x copy 3 F T -10 x x T copy 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * -6 x F ≤ F 7 x -7 x x neg T pop x -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql neg x -10 x F if pop inc -4 depth F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x x x 1 x x * x ∨ if F x dec x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop x ∧ ∧ T x 2 eql -7 greedy x 9 -1 F depth < 8 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "+ dec dec x x F copy T 9 x < ¬ x inc copy copy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 x -6 * ∨ -5 x 9 neg x 4 -1 T x 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "4 copy T x * / -5 -9 -10 neg - + - x pop swap greedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 ≥ x x 0 neg ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 x x x / neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x ≥ T F copy F 7 -7 ∧ T -10 + x 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 inc x * x x x - if F -2 F 9 inc + * x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x greedy 7 x -2 x pop neg x T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc x x 5 be x x T -4 < ¬ x inc copy copy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 ∨ pop ∨ 4 ≥ swap x x inc T x -6 inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy? F ¬ + 5 2 depth * 9 be greedy 1 1 x 0 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "1 copy T -10 T greedy? x T if ≤ F T -1 F -9 x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "1 copy -4 -10 T greedy? x T if ≤ greedy? T -1 F -9 x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc dec F x 6 be swap F F 1 < ¬ 5 ∨ if x 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 -1 x -7 eql neg ∧ -10 T depth 8 T inc -4 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -7 swap 1 x ≤ x x x dec 4 -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T -10 T -8 x 8 x inc T > x inc 6 eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "dec x -7 x 1 x ≤ x x / dec 4 neg T T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 8 x * greedy -5 greedy 9 neg -1 + 5 x pop * T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be depth 4 * T greedy? x -7 -5 x x pop x x x -9 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "+ + x swap T x x eql if -7 3 x x -5 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1167: "x x x + ≥ eql -8 T x dec x F x F 0 4 7 -4 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1652: "inc dec F x 6 be swap F F 1 < ¬ x ∨ if x 7 -5 x -1 -9 -6 inc -5 * 8 * inc depth *"
# 1652: "swap depth * 4 T F x -10 if 8 5 pop -1 T depth < F x -6 T - -6 inc -5 * 8 * inc depth *"
# 1652: "be x 5 - 0 ¬ -9 * T ¬ x dec F ungreedy 1 x + x x -10 ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 T greedy? x -7 -5 ≤ x < ungreedy < greedy? 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 ≥ greedy? x x -5 ≤ x < ungreedy < x 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "if * 4 copy -5 -3 -2 F T x neg copy swap eql ¬ < pop 2 -7 -10 -5 -6 inc -5 * 8 * inc depth *"
# 1652: "-7 inc ∨ x depth F inc 3 9 ≥ greedy 1 x x 0 4 ≥ 2 swap T ≤ -6 inc -5 * 8 * inc depth *"
# 1652: "-3 inc x copy ≥ x be * x x ∨ copy x inc x T 9 2 swap x ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "greedy * x copy x swap x F T -10 neg x inc < -5 T swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "T x < depth ¬ x -7 - * x x T -5 T 3 * ≤ F swap x -10 -6 inc -5 * 8 * inc depth *"
# 1652: "8 T ≥ swap x ≤ F -4 -7 greedy ∨ x F T depth copy x x neg pop ungreedy -6 inc -5 * 8 * inc depth *"
# 1652: "pop dec dec x x T x < 9 eql -1 pop F T -1 F 4 0 be x - -6 inc -5 * 8 * inc depth *"
# 1658: "-7 inc ∨ x / F inc 3 9 ≥ greedy x > 5 x -9 7 -5 T ≥ -9 T if -5 * 9 * dec 5 *"
# 4157: "greedy 4 -9 x x ¬ ≥ greedy greedy if F F 9 inc + * x -5 copy ≥ copy -10 if -5 * 9 * dec 5 *"
# 4157: "x * swap inc dec / x * x x * swap x x 0 4 7 -5 x T -9 -10 if -5 * 9 * dec 5 *"
# 42917: "x + x x x inc * x x inc 2 + x x + x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 T"
22376,40712,65
22377,43022,70
22378,43022,69
22379,42854,71
22380,43022,73
22381,27949,85
22382,43127,80
22383,1078,78
22384,4157,75
22385,80252,73
22386,42917,80
22387,42257,86
22388,45167,90
22389,28952,93
22390,43127,79
22391,1658,81
22392,2582,88
22393,43232,82
22394,55338,80
22395,1078,92
22396,1658,78
22397,3683,73
22398,52577,94
22399,43043,90
22400,5327,79
22401,40522,77
22402,47192,72
22403,43127,89
22404,1078,89
22405,43022,80
22406,43022,91
22407,1078,78
22408,1658,85
22409,1078,81
22410,43022,83
22411,51127,78
22412,4157,76
22413,4157,72
22414,1078,89
22415,42182,82
22416,43148,84
22417,39977,76
22418,1078,82
22419,37772,72
22420,43022,76
22421,1078,72
22422,40522,79
22423,43022,83
22424,43547,68
22425,43652,75
22426,67975,87
22427,43337,96
22428,57903,84
22429,39746,88
22430,3707,86
22431,1078,82
22432,78038,74
22433,43568,90
22434,57302,72
22435,1078,84
22436,57903,84
22437,17123,78
22438,4157,81
22439,4157,83
22440,63511,81
22441,43652,84
22442,4157,78
22443,43022,80
22444,43217,77
22445,1078,81
22446,1078,73
22447,1336,79
22448,42917,71
22449,1078,82
22450,47852,78
22451,42917,88
22452,1078,70
22453,53927,68
22454,43022,73
22455,77672,74
22456,43697,71
22457,37016,102
22458,43862,82
22459,62027,77
22460,4737,79
22461,43967,78
22462,43022,82
22463,42077,84
22464,1037,80
22465,4157,76
22466,1078,82
22467,47027,91
22468,51632,89
22469,43190,87
22470,21000000,92
22471,40712,74
22472,52242,75
22473,1658,79
22474,42854,77
22475,1078,92
22476,42938,81
22477,3683,80
22478,146923,86
22479,1133,72
22480,2213,85
22481,47852,91
22482,42917,77
22483,43022,97
22484,42182,83
22485,1078,77
22486,42917,91
22487,4778,76
22488,42182,85
22489,49930,92
22490,21917,92
22491,42959,85
22492,42182,85
22493,1078,85
22494,21000000,80
22495,10590,85
22496,19502,91
22497,42182,89
22498,109648,81
22499,4157,74
22500,34268,82
22501,1078,78
22502,42182,83
22503,1658,70
22504,43127,85
22505,4157,80
22506,1078,87
22507,52506,88
22508,43022,83
22509,42854,74
22510,4157,78
22511,43442,82
22512,42602,74
22513,1078,88
22514,43127,80
22515,42392,84
22516,4157,95
22517,44177,84
22518,43022,77
22519,3683,75
22520,43127,81
22521,43232,81
22522,47807,77
22523,43127,84
22524,4252,78
22525,1078,89
22526,2357,83
22527,43127,84
22528,43127,83
22529,43022,70
22530,1078,86
22531,216377,69
22532,43022,74
22533,1078,77
22534,68219,91
22535,91217,83
22536,4157,81
22537,43022,78
22538,18721,85
22539,4573,83
22540,43022,76
22541,38252,85
22542,4157,89
22543,43127,80
22544,42971,77
22545,8006,83
22546,43127,76
22547,43022,76
22548,43127,81
22549,1078,75
22550,43022,73
22551,42497,83
22552,77647,85
22553,51902,77
22554,1078,88
22555,4737,76
22556,848,81
22557,42917,85
22558,42707,73
22559,43169,76
22560,44845,84
22561,43022,80
22562,3932,83
22563,42917,79
22564,76083,73
22565,42917,87
22566,42854,79
22567,43022,90
22568,1078,82
22569,74627,92
22570,4157,74
22571,42182,79
22572,42917,76
22573,1078,75
22574,42497,76
22575,45962,73
22576,3257,74
22577,1078,78
22578,43211,74
22579,43127,75
22580,43127,71
22581,42434,76
22582,72377,92
22583,38252,95
22584,42182,83
22585,118727,94
22586,1078,78
22587,43022,82
22588,42917,86
22589,60836,79
22590,14007411,73
22591,54797,81
22592,1078,76
22593,38402,81
22594,109688,82
22595,4157,76
22596,1078,78
22597,1078,80
22598,42917,73
22599,42497,88
22600,4157,79
22601,42182,93
22602,7630,93
22603,77672,77
22604,1658,74
22605,52307,73
22606,54888,79
22607,47747,75
22608,42252,81
22609,51902,82
22610,1078,72
22611,1078,82
22612,46367,74
22613,46235,91
22614,42182,87
22615,42700,77
22616,43127,88
22617,1078,87
22618,4157,77
22619,1078,86
22620,43817,76
22621,1078,80
22622,59928,88
22623,1078,75
22624,42833,80
22625,21000000,76
22626,43022,73
22627,42182,82
22628,57363,73
22629,4157,80
22630,42797,80
22631,43127,74
22632,43022,91
22633,43127,76
22634,48797,83
22635,848,81
22636,1078,81
22637,47852,82
22638,1078,81
22639,76412,79
22640,1133,85
22641,44102,81
22642,4157,83
22643,3683,79
22644,1078,85
22645,43127,82
22646,1037,76
22647,76202,83
22648,43127,82
22649,38458,99
22650,43127,74
22651,63377,86
22652,43127,78
22653,1242,79
22654,34268,82
22655,15625898,91
22656,19502,79
22657,40163,74
22658,40522,83
22659,1078,70
22660,43022,73
22661,1658,76
22662,1078,82
22663,127868,89
22664,57903,80
22665,41510,80
22666,42182,80
22667,77136,80
22668,21000000,86
22669,1078,89
22670,40712,84
22671,43337,86
22672,1652,81
22673,22778,75
22674,29139,82
22675,1078,85
22676,43022,73
22677,57903,80
22678,43022,88
22679,43127,91
22680,43022,76
22681,4157,92
22682,55338,80
22683,43022,85
22684,43022,76
22685,43022,78
22686,43442,74
22687,43127,78
22688,1078,80
22689,4157,79
22690,1658,77
22691,43217,77
22692,43127,79
22693,48587,77
22694,1037,78
22695,58652,82
22696,4157,81
22697,43022,85
22698,1078,82
22699,37142,77
22700,1078,86
22701,1078,74
22702,35327,79
22703,8408,74
22704,1078,88
22705,43022,77
22706,20293,86
22707,1658,80
22708,1078,81
22709,43862,75
22710,61208,81
22711,1078,75
22712,4157,78
22713,1147,87
22714,23023,83
22715,1303,72
22716,55338,80
22717,3683,76
22718,48797,83
22719,57363,81
22720,42182,78
22721,1658,78
22722,51227,85
22723,1658,86
22724,4737,74
22725,1907,68
22726,1078,87
22727,1037,76
22728,136682,84
22729,4157,85
22730,42917,81
22731,87002,81
22732,90377,87
22733,43127,91
22734,1078,81
22735,20962,80
22736,43169,80
22737,43232,78
22738,1078,75
22739,61208,77
22740,55338,83
22741,1133,80
22742,58218,83
22743,3545,94
22744,1078,81
22745,1078,70
22746,43127,83
22747,1628,84
22748,49637,83
22749,43022,73
22750,42287,85
22751,55293,74
22752,18000626,75
22753,43022,76
22754,43022,102
22755,4252,72
22756,1658,84
22757,43127,82
22758,1078,79
22759,67247,90
22760,42917,85
22761,54093,73
22762,44817,79
22763,44942,75
22764,44177,89
22765,35824,82
22766,1078,81
22767,4157,70
22768,848,80
22769,3443,80
22770,4157,76
22771,43442,75
22772,38548,74
22773,57903,76
22774,5327,83
22775,11108,87
22776,42182,76
22777,43127,73
22778,4133,77
22779,1078,86
22780,1082,81
# After 11200 updates
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x - 1 inc * / x x / 2 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 inc * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 x * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 F * x + 5 / -6 ≤ / x x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "greedy -8 T -6 * greedy -5 x 9 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "dec x x ≤ if T F x 9 neg -1 -7 5 x pop 4 - -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x x if T be x 9 neg -1 -7 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T be x 9 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-7 inc ∨ x -2 F inc * 9 ungreedy T 1 x x 0 4 7 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x inc * 9 ≥ x greedy? x x x 4 dec -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T x neg x dec x -3 greedy F x -1 + + x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -5 x 3 x x x x x x -8 pop x inc x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy? F ¬ + 5 2 depth * 9 be greedy 1 1 x 0 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x x 6 4 T -4 8 x x 6 x T x F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be F 5 - 0 F inc * 9 ≥ greedy greedy? x x -3 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T -10 T -8 x 8 x inc T > x inc 6 eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy -4 -10 T x x greedy T 9 -6 + T x -9 + F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy ≥ x copy -3 F x x * neg -9 + 5 be F -4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < -4 F x 8 greedy F greedy ∧ T T F ∨ - T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x -2 F inc * 9 T -4 1 x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x ≤ x x x dec T -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 x -6 * -3 - x 9 neg -1 -3 5 x copy ∨ F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy copy T depth T x x depth -7 ≥ * 1 inc 4 T -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x ≤ x -7 eql -8 x x x F if pop dec be x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 -7 x 1 x T x ≥ x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 -10 -7 F T > + greedy? T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x -7 x eql ¬ * 9 x -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -1 -8 ¬ ¬ ≤ x T depth neg depth -1 F -9 + x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 F * x + 5 / -6 ≤ / x x 5 eql pop x inc -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * -6 x F ≤ F 7 x -7 x x neg T pop x -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ x x - 0 x T x 3 F T -10 -9 -2 -4 ≤ 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 x x 6 * greedy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap x x inc T if x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 8 x * greedy -5 greedy 9 neg -1 + 5 x pop * T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap F 4 ungreedy greedy ∨ F -10 -7 F T x + greedy? T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 ≥ x x 0 neg ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F neg x T F copy 7 F < 4 neg T swap 4 0 ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 -1 x -7 eql neg ∧ -10 T depth 8 T inc -4 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? F 7 -10 x F T > + greedy? T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 -10 -7 F dec greedy? -1 T T 8 T -5 x ≥ - -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy -3 F x x 9 neg -9 + 5 be dec -4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x * greedy x copy 3 F T -10 x x T copy 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap neg ≥ T F copy x F T ∧ neg T swap 4 0 ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x ≥ T F copy x ≥ -7 + T -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql dec * x eql -8 -7 x T x if 1 x -8 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F F ¬ x 5 -3 greedy T x -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ -9 -2 x inc * 9 T -4 1 x x 0 F 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc ∨ x -2 F inc * 9 ≥ greedy F x x -3 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x greedy F x ungreedy 7 + x x x > F x ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-1 x 4 / - depth F -6 x 1 -2 x greedy x F + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy ungreedy F x x 9 neg -9 + 5 be ≤ -4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc 3 * F 4 F F < x -7 -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* -10 1 ∨ 4 ≥ swap x x x dec -3 1 inc eql x - -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "depth x x T F copy 7 F x 4 neg T swap 4 ∧ ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x ≤ F x ungreedy 7 + x x x > F -9 x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 inc x * x x x - if -5 -2 F 9 inc + * -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "0 -3 -1 x -7 eql neg x 9 neg x 4 -1 if x 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < -4 F x F greedy x x x x > greedy copy ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop T T ∧ T x ≤ ∨ x x F 4 -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∨ T greedy? swap < ¬ ≤ x swap x x x neg T - 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc x x 5 be x x T -4 < ¬ x inc copy copy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap depth * 4 T F x 8 if 8 5 pop copy T T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy * if ¬ x T ∧ ungreedy T swap -5 0 ∨ < -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-4 x greedy? 4 -1 x x -2 ¬ -7 dec x 5 -5 0 T T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * x x -2 -1 4 -9 -4 8 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql neg x -10 x F if pop inc -4 depth F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x greedy 7 x -2 x pop neg x T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "4 copy T x * / -5 -9 -10 neg - + - x pop swap greedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc be 7 T 2 ≤ 1 7 -10 greedy -2 x x x x -9 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "T x x - x x ≤ x x inc T > ungreedy inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy x x copy x F x F T ∧ neg T swap T 0 ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 T -6 * -3 -5 x 9 neg -1 + 5 x copy ∨ F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x dec ∧ ∧ T x 2 eql -7 greedy F 9 -1 F depth 1 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x x ¬ 7 x x / x x inc -1 F T depth -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T -10 neg x dec x -3 greedy x x -1 F + x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 ∨ pop ∨ 4 ≥ swap x x inc T x -6 inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 4 ∨ x 5 F ≥ x T -4 < ¬ x inc copy copy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 swap ungreedy - x -10 T F x T + x x -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 3 -7 x eql ¬ * 9 greedy? -1 + 5 eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 x x x / neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth depth ∧ greedy ∨ F -10 -7 F ∧ x + greedy? T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x neg x x 7 T -10 T copy 8 pop F -4 x -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x -5 7 x x < pop x x 8 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? x 7 -10 x F x > + greedy? T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x 8 7 + x x x > F x ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql -8 x x -9 F if -1 inc -2 -7 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc dec F x 6 be swap F F 1 < ¬ 5 ∨ if x 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1133: "-3 inc x * x x x - if -5 -2 F 9 ≥ -10 x T -5 x ≥ -9 -10 if -5 * 9 * ungreedy 5 *"
# 1652: "if * F -10 T greedy? x -7 -5 ≤ x < ungreedy < greedy? 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "if * F -10 ≥ greedy? x x -5 ≤ x < ungreedy < x 8 swap -1 -9 -10 - -6 inc -5 * 8 * inc depth *"
# 1652: "inc dec F x 6 be swap F F 1 < ¬ x ∨ if x 7 -5 x -1 -9 -6 inc -5 * 8 * inc depth *"
# 1658: "be F 5 - 0 F inc * x dec greedy greedy? x x -3 4 F -5 x / -9 -10 if -5 * 9 * dec 5 *"
# 4157: "-4 -8 x inc dec / x * x x * greedy T x 0 4 7 -5 x T -9 -10 if -5 * 9 * dec 5 *"
# 4157: "x / + -6 6 be depth * 9 be -8 1 1 x 0 4 F -5 x be greedy? -10 if -5 * 9 * dec 5 *"
# 42854: "pop dec dec x x T x < 9 eql -1 pop F T 4 F dec -3 be x - -6 if -5 F 9 * dec 5 8"
# 43022: "-1 neg ≥ T F copy 7 F x 4 neg x swap 4 0 ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * - x x"
# 43022: "∨ T > swap < ¬ ≤ x swap x x x neg T - 8 x -5 * -2 -9 -10 if 5 x x x * x x"
22781,43022,69
22782,42252,73
22783,43022,66
22784,43190,65
22785,42959,70
22786,8927,75
22787,82127,75
22788,1907,77
22789,43106,85
22790,1658,77
22791,59657,81
22792,1078,81
22793,55338,82
22794,76202,80
22795,20272,87
22796,1078,78
22797,21000000,83
22798,1658,80
22799,44942,81
22800,42833,83
22801,1078,78
22802,43022,78
22803,47852,83
22804,71477,76
22805,43127,79
22806,43022,79
22807,43232,89
22808,43022,75
22809,79427,73
22810,46907,71
22811,4778,76
22812,42182,85
22813,44072,88
22814,40522,72
22815,1658,91
22816,848,82
22817,1078,83
22818,23644,95
22819,47852,81
22820,42707,78
22821,41153,80
22822,57974,79
22823,59388,73
22824,848,72
22825,42002,80
22826,43148,74
22827,72857,81
22828,4157,73
22829,43022,87
22830,42182,78
22831,64147,73
22832,34028,83
22833,61862,72
22834,43022,79
22835,52202,78
22836,48797,86
22837,42917,84
22838,43127,75
22839,1038,75
22840,43127,81
22841,47537,82
22842,33593,89
22843,42938,79
22844,42959,77
22845,43377,76
22846,43127,80
22847,43127,80
22848,42959,79
22849,1658,83
22850,42182,79
22851,47777,86
22852,1078,82
22853,38147,94
22854,43022,80
22855,52577,80
22856,37877,84
22857,42917,79
22858,47852,79
22859,34072,95
22860,56627,82
22861,1078,78
22862,4157,86
22863,43127,76
22864,42917,85
22865,123142,74
22866,1658,77
22867,15032738,90
22868,61944,85
22869,848,84
22870,55338,72
22871,1078,81
22872,43022,65
22873,639,83
22874,43022,76
22875,4157,71
22876,33002,85
22877,43190,65
22878,2213,78
22879,42917,80
22880,43022,83
22881,4157,82
22882,964,89
22883,43862,84
22884,4157,86
22885,42902,80
22886,24227,88
22887,1078,80
22888,41923,85
22889,4157,82
22890,1757,82
22891,43652,82
22892,43022,77
22893,43382,76
22894,43022,78
22895,43652,70
22896,49922,79
22897,43022,78
22898,67502,76
22899,42854,83
22900,2807,83
22901,43022,90
22902,28952,81
22903,42980,96
22904,82127,86
22905,42917,81
22906,42182,79
22907,42938,77
22908,38252,83
22909,43127,72
22910,14777,77
22911,128177,70
22912,41283,69
22913,39752,82
22914,1133,75
22915,1082,87
22916,39092,79
22917,1658,85
22918,53497,83
22919,57903,85
22920,67268,76
22921,47852,89
22922,55277,76
22923,57903,86
22924,41237,79
22925,1078,92
22926,1300,87
22927,42182,78
22928,1658,84
22929,62027,71
22930,1078,72
22931,43127,84
22932,43127,78
22933,1658,86
22934,3683,83
22935,4157,98
22936,4157,77
22937,34622,82
22938,43022,84
22939,34772,79
22940,1078,79
22941,43022,80
22942,42854,75
22943,48797,79
22944,90377,75
22945,43897,80
22946,43422,85
22947,42917,82
22948,41732,95
22949,19000034,78
22950,42673,82
22951,1078,86
22952,42917,77
22953,55338,83
22954,4157,90
22955,1078,79
22956,35628,73
22957,1078,89
22958,1738,80
22959,47852,89
22960,3707,78
22961,43022,82
22962,4157,85
22963,4157,83
22964,21000000,84
22965,42917,77
22966,43127,77
22967,17858,72
22968,1658,80
22969,1078,78
22970,71141,79
22971,59928,78
22972,1078,73
22973,1192,71
22974,4157,87
22975,43127,80
22976,1078,98
22977,1078,89
22978,3017,85
22979,1658,68
22980,43022,83
22981,1078,75
22982,1433,76
22983,41527,76
22984,1078,83
22985,3614824,80
22986,4157,75
22987,1078,73
22988,16001435,80
22989,43022,71
22990,42917,85
22991,1078,81
22992,43043,91
22993,43337,78
22994,78333,78
22995,43085,79
22996,4737,82
22997,4157,87
22998,4157,77
22999,42926,83
23000,42707,81
23001,43127,85
23002,43127,75
23003,57903,91
23004,1133,74
23005,43148,85
23006,6377,80
23007,42854,91
23008,1658,91
23009,43022,74
23010,1078,79
23011,59928,94
23012,1078,79
23013,1658,81
23014,47852,86
23015,23108,82
23016,119672,71
23017,15000288,84
23018,4157,83
23019,39347,87
23020,4157,88
23021,1078,76
23022,20558,82
23023,39428,75
23024,4157,92
23025,90377,77
23026,43022,75
23027,7967,93
23028,52577,70
23029,2452,77
23030,43022,71
23031,43127,79
23032,55190,78
23033,42854,73
23034,43127,87
23035,1078,79
23036,46019,86
23037,42602,87
23038,43337,78
23039,57397,75
23040,42917,72
23041,42182,88
23042,57302,88
23043,53136,85
23044,55338,82
23045,2807,78
23046,42854,80
23047,43022,73
23048,42854,82
23049,49742,80
23050,101399,86
23051,1300,85
23052,34286,91
23053,16897,73
23054,42252,75
23055,42917,76
23056,1658,78
23057,42917,94
23058,57903,78
23059,43022,96
23060,1133,86
23061,16863,86
23062,43127,82
23063,1078,88
23064,15000982,89
23065,1078,77
23066,43022,72
23067,1078,75
23068,43022,84
23069,42497,89
23070,1300,84
23071,43012,82
23072,42077,75
23073,443092,76
23074,43022,79
23075,42854,81
23076,1078,84
23077,1078,79
23078,4157,82
23079,43127,75
23080,4157,77
23081,1658,85
23082,43127,85
23083,41237,79
23084,41923,73
23085,47852,76
23086,1324,78
23087,59208,81
23088,44942,75
23089,4157,92
23090,43028,84
23091,182633,80
23092,1658,82
23093,42958,73
23094,1078,77
23095,1433,89
23096,1658,77
23097,43022,71
23098,4157,79
23099,43022,75
23100,85652,82
23101,226182,77
23102,25514,89
23103,94157,80
23104,43217,84
23105,1078,84
23106,4157,88
23107,43247,77
23108,2807,78
23109,84077,83
23110,1078,84
23111,1078,80
23112,43022,81
23113,4157,83
23114,1078,82
23115,848,88
23116,43127,76
23117,65463,78
23118,12543,69
23119,42959,84
23120,47852,77
23121,1433,73
23122,4157,75
23123,1133,91
23124,4157,70
23125,97802,82
23126,42917,74
23127,1078,86
23128,90377,82
23129,43757,78
23130,43127,71
23131,44522,96
23132,1078,76
23133,36092,84
23134,42252,76
23135,55878,74
23136,55338,83
23137,4778,85
23138,1078,74
23139,4157,79
23140,1663,71
23141,42917,83
23142,57903,75
23143,43862,76
23144,42047,74
23145,15006878,81
23146,43213,81
23147,1078,79
23148,4157,74
23149,10067793,72
23150,43022,86
23151,43022,72
23152,21000000,85
23153,74627,75
23154,1133,72
23155,85652,81
23156,12307,88
23157,42002,80
23158,22938,78
23159,1133,87
23160,1663,72
23161,41294,74
23162,42182,83
23163,42252,75
23164,1078,83
23165,77747,67
23166,1078,81
23167,43802,72
23168,43127,81
23169,38252,82
23170,103637,86
23171,41172,81
23172,18000083,83
23173,42182,85
23174,42182,82
23175,1078,79
23176,54730,90
23177,50552,85
23178,1078,89
23179,59928,78
23180,43001,79
23181,43127,79
23182,57363,73
23183,1658,85
23184,42917,75
23185,43022,94
# After 11400 updates
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F -2 ¬ x greedy -3 greedy x x -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x - 1 inc * / x x / 2 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x T -10 greedy? x dec ≥ -3 -3 dec -7 x F + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 F * x + 5 / -6 ≤ / x x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x copy T -10 greedy? x dec x -3 -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 x * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-3 inc x * x x x - if -5 x F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 inc * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "F T -3 swap greedy? ≤ 7 -10 -7 F dec greedy? -1 T F pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "greedy -8 T -6 * greedy -5 x 9 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "dec x x ≤ if T F x 9 neg -1 -7 5 x pop 4 - -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T be x 9 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x x if T be x 9 neg -1 -7 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-7 inc ∨ x -2 F inc * 9 ungreedy T 1 x x 0 4 7 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x copy -4 -10 1 x T x * x ∨ x + 1 pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1078: "0 -3 -1 x -7 eql neg x 9 neg x 4 -1 if x 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc 3 * F 4 F F < x -7 -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 swap ungreedy x x -10 T F x T + x x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < -4 F x 8 greedy F greedy ∧ T T F ∨ - T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 if ungreedy - x -10 ≤ F x x > F -9 -1 copy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x ≤ x x x dec T -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x ≤ x -7 eql -8 x x x F if pop dec be x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x T 2 ≤ 1 7 -10 * -2 x > - -6 -1 greedy? -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -7 x 1 x x x ≥ 5 ∨ > ungreedy inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "9 x - 1 x eql ¬ * 9 greedy? ungreedy + ¬ eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F T -3 4 greedy? x 7 -10 x F dec -9 T T F 0 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x ≤ x x depth dec T x T T ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "4 copy T x * / -5 -9 -10 neg - + - x pop swap greedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x inc * 9 ≥ x greedy? x x x 4 dec -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 depth x 4 T neg x 8 if 8 5 pop copy T T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap x x inc T if x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x * greedy x copy 3 F x + copy T T x ≤ -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "depth x x T F copy 7 F x 4 neg T swap 4 ∧ ∨ -2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x -7 x eql ¬ * 9 x -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x x x x depth F T x T T ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-1 x 4 / - depth F -6 x 1 -2 x greedy x F + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy ungreedy F x x 9 neg -9 + 5 be ≤ -4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 -10 -7 F T > + greedy? T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x 8 7 + x x x > F x ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T swap greedy? x dec x swap x 6 x neg T 1 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy -3 F x x 9 neg -9 + 5 be dec -4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "9 x - 1 x eql ¬ * 9 greedy? -1 + ¬ eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? F 7 -10 x F T > + greedy? T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql dec * x eql -8 -7 x T x if 1 x -8 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-4 x greedy? 4 -1 x x -2 ¬ -7 dec x 5 -5 0 T T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy F x * ≤ > * 9 be greedy 1 1 x 0 4 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 inc ∨ x 5 F inc * 9 T -4 pop x x 0 4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 8 x * greedy -5 greedy 9 neg -1 + 5 x pop * T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x - 1 x eql ¬ * 9 greedy? -1 + F eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql x x - x x 7 x x inc T > x inc copy copy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 -1 x -7 eql neg ∧ -10 T depth 8 T inc -4 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ x x - 0 x T x 3 F T -10 -9 -2 -4 ≤ 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T x neg x dec x -3 greedy F x -1 + + x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 x x 6 * greedy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x x ¬ 7 x x / x x inc -1 F T depth -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* -10 1 ∨ 4 ≥ swap x x x dec -3 1 inc eql x - -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap depth * 4 T F x 8 if 8 5 pop copy T T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 ≥ x x 0 neg ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x greedy F x ungreedy 7 + x x x > F x ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x greedy 7 x x x 3 neg x T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x greedy 7 x x x 3 dec x T + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc ∨ x -2 F inc * 9 ≥ greedy F x x -3 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F -1 x neg -9 + 5 be F -4 T dec x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy * if ¬ x T ∧ ungreedy T swap -5 0 ∨ < -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy? F ¬ + 5 2 depth * 9 be greedy 1 1 x 0 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T -10 T -8 x 8 x inc T > x inc 6 eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * -6 x F ≤ F 7 x -7 x x neg T pop x -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 x if F -3 - x 9 neg -1 -3 5 x copy 2 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "7 inc x copy ungreedy F T x 9 6 -9 T 5 F ≤ -4 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap F 4 ungreedy greedy ∨ F -10 -7 F T x copy F T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy ¬ 9 ∨ -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∨ T > swap < ¬ 6 x swap T x x neg x 0 T T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x dec ∧ ∧ T x 2 eql -7 greedy F 9 -1 F depth 1 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql -8 x x -9 F if -1 inc -2 -7 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 T -6 * -3 -5 ¬ 9 neg -1 + 5 x copy ∨ depth -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap -2 x neg x x 6 T -10 F copy 8 2 F -4 x 0 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 F * x + 5 / -6 ≤ / x x 5 eql pop x inc -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * x x -2 -1 x -9 -4 -7 x x 6 F T x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x ≤ F x ungreedy 7 + x x x > F -9 x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 greedy x 6 * copy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy ≥ x copy -3 F x x if x F / neg T x 3 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 T -6 * -3 -5 x 9 neg -1 + 5 x copy ∨ F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 swap ungreedy - x -10 T F x T + x x -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x -5 7 x x < pop x x 8 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? x -5 -10 x -3 x > + greedy? T eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -8 8 x be -3 x -7 9 neg -1 -3 5 x 7 ∨ F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 -3 -1 x -7 eql neg x -10 x F if pop inc -4 depth F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc dec F x 6 be swap F F 1 < ¬ 5 ∨ if x 7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -1 -8 ¬ ¬ ≤ x T depth neg depth -1 F -9 + x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x ≥ T F copy x ≥ -7 + T -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "> depth * 4 T < x 8 if 8 5 pop copy T T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1133: "inc dec F x 6 be T F F T < ¬ 5 ∨ if x 7 -5 x ≥ -9 -10 if -5 * 9 * be 5 *"
# 1433: "-2 dec x 0 x T x - if x x F 9 be x * 1 -10 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 4157: "7 inc 1 copy x copy 7 F x 4 neg x ungreedy inc neg eql 1 depth x ≥ be -10 F -5 * 9 * dec 5 *"
# 4157: "x / + -6 6 be depth * 9 be -8 1 1 x 0 4 F -5 x be greedy? -10 if -5 * 9 * dec 5 *"
# 33002: "8 / x + inc x / 7 -10 greedy -2 / x x T -9 7 -5 x ≥ -9 -10 if -5 * ungreedy * dec 5 *"
# 42182: "7 x - 1 x eql ¬ * 9 greedy? ungreedy + ¬ eql x x x -5 ≥ ≥ -9 ∧ if -5 * 9 copy dec 5 *"
# 42854: "greedy pop x ≤ x x ungreedy 7 + x x x > F -9 x x -5 x ≥ -9 -10 if F * 9 * dec T 8"
23186,43022,70
23187,43211,71
23188,43022,68
23189,43209,68
23190,43043,74
23191,66733,73
23192,4157,87
23193,43967,73
23194,42911,95
23195,1300,82
23196,37202,79
23197,1658,83
23198,55277,85
23199,4157,75
23200,43148,78
23201,43022,89
23202,1658,81
23203,42182,76
23204,678,92
23205,36512,84
23206,1907,75
23207,47852,78
23208,43127,73
23209,43022,77
23210,30977,86
23211,1037,86
23212,43127,91
23213,1078,75
23214,1133,89
23215,18752,76
23216,1658,73
23217,52577,91
23218,43127,91
23219,53497,82
23220,42182,85
23221,10048147,80
23222,848,84
23223,43022,78
23224,1037,79
23225,43022,81
23226,1078,90
23227,1078,80
23228,4157,85
23229,47192,80
23230,24103,75
23231,42833,77
23232,127883,92
23233,1078,82
23234,4157,85
23235,43022,76
23236,44387,68
23237,42287,75
23238,43127,71
23239,4157,85
23240,3683,75
23241,4157,87
23242,4157,82
23243,55158,76
23244,47272,73
23245,1682,74
23246,42917,84
23247,43127,72
23248,122102,79
23249,15026632,71
23250,964,83
23251,1078,77
23252,397932,87
23253,42077,79
23254,42182,78
23255,3443,81
23256,47852,88
23257,42182,84
23258,1078,75
23259,43043,74
23260,38252,89
23261,66752,89
23262,37743,73
23263,42854,76
23264,44072,89
23265,32882,75
23266,1078,77
23267,57903,75
23268,37202,94
23269,1078,84
23270,20000057,72
23271,49667,84
23272,42707,82
23273,4157,76
23274,43127,78
23275,38402,80
23276,53628,90
23277,43022,79
23278,39277,89
23279,1133,80
23280,43817,80
23281,45962,90
23282,1078,77
23283,3443,74
23284,4157,83
23285,90377,78
23286,848,82
23287,5978,72
23288,1078,87
23289,1078,71
23290,43232,81
23291,33677,90
23292,1078,85
23293,48722,87
23294,42896,81
23295,54962,81
23296,41132,88
23297,42917,77
23298,97242,81
23299,1078,92
23300,55297,74
23301,52451,90
23302,43022,73
23303,3032,84
23304,2583,76
23305,64788,82
23306,42917,78
23307,1078,84
23308,1078,82
23309,82127,72
23310,1658,73
23311,33992,78
23312,42077,89
23313,1078,78
23314,40522,79
23315,1078,86
23316,47852,79
23317,60388,85
23318,37202,78
23319,59478,86
23320,1037,80
23321,55297,90
23322,1336,76
23323,37177,87
23324,50996,84
23325,42182,89
23326,43022,76
23327,43127,85
23328,28196,81
23329,1078,77
23330,1078,82
23331,43127,74
23332,43127,84
23333,42980,79
23334,1037,77
23335,57903,80
23336,43127,81
23337,47072,74
23338,33572,85
23339,43232,76
23340,1078,71
23341,48722,91
23342,1078,82
23343,42077,87
23344,42707,82
23345,73397,82
23346,37202,73
23347,1078,90
23348,46802,83
23349,1658,77
23350,42077,89
23351,87842,82
23352,1038,80
23353,1078,85
23354,34622,79
23355,43022,77
23356,1658,82
23357,39788,72
23358,11844,86
23359,43127,75
23360,114916,87
23361,3614824,83
23362,1078,75
23363,43022,70
23364,43043,81
23365,1078,90
23366,43043,81
23367,41982,81
23368,43007,85
23369,21000000,82
23370,1658,74
23371,1078,82
23372,1078,82
23373,47852,84
23374,30288,80
23375,1078,78
23376,47852,88
23377,41433,78
23378,43127,82
23379,42812,70
23380,43022,76
23381,43127,77
23382,61208,84
23383,43062,70
23384,41447,74
23385,1658,90
23386,16718,84
23387,4778,78
23388,42182,85
23389,14043477,81
23390,130607,93
23391,43022,73
23392,43022,76
23393,4157,78
23394,13000768,89
23395,41283,79
23396,4157,83
23397,94427,88
23398,16863,80
23399,236542,77
23400,26810,88
23401,4157,79
23402,1658,81
23403,42077,94
23404,38402,78
23405,85448,79
23406,4737,78
23407,112247,74
23408,1103,83
23409,26822,86
23410,3443,70
23411,43022,82
23412,41132,73
23413,42667,78
23414,43547,87
23415,1658,83
23416,43106,96
23417,43022,90
23418,4157,85
23419,25694,75
23420,4157,78
23421,848,81
23422,1078,91
23423,1078,82
23424,1078,78
23425,73502,92
23426,42182,78
23427,4157,80
23428,40522,74
23429,21000000,90
23430,43022,86
23431,37457,72
23432,42917,75
23433,57502,82
23434,1658,88
23435,14083,85
23436,43022,86
23437,67247,72
23438,45458,99
23439,43106,88
23440,1078,78
23441,42812,82
23442,62377,71
23443,3563,76
23444,4157,87
23445,1108,81
23446,91877,92
23447,44727,90
23448,1078,76
23449,1133,87
23450,43022,76
23451,3443,80
23452,4157,82
23453,50412,96
23454,19502,71
23455,3443,79
23456,44845,83
23457,4398,92
23458,43127,68
23459,43022,78
23460,21000000,72
23461,1078,83
23462,43127,82
23463,1508,79
23464,43022,76
23465,8848,80
23466,1078,84
23467,43022,88
23468,4157,77
23469,37352,70
23470,34538,89
23471,1133,73
23472,4157,86
23473,43127,80
23474,4157,80
23475,41867,95
23476,43127,79
23477,1037,95
23478,1336,78
23479,44942,79
23480,37457,71
23481,34373,80
23482,110490,81
23483,1078,87
23484,4157,88
23485,848,80
23486,50647,84
23487,4157,77
23488,21000000,93
23489,42917,76
23490,1658,82
23491,42896,82
23492,34622,80
23493,848,71
23494,43001,79
23495,62972,83
23496,43022,85
23497,42217,83
23498,25172,92
23499,24157,87
23500,55398,80
23501,43064,89
23502,40238,91
23503,80927,82
23504,27737,86
23505,43022,76
23506,4157,87
23507,72377,78
23508,1078,78
23509,38252,84
23510,42182,95
23511,43001,75
23512,21000000,84
23513,1907,77
23514,25920,69
23515,2807,75
23516,42182,75
23517,42917,79
23518,3683,75
23519,1078,81
23520,59388,84
23521,21000000,79
23522,28952,78
23523,1662,82
23524,21000000,78
23525,90692,76
23526,42182,88
23527,43022,78
23528,1078,82
23529,42350,86
23530,21000000,83
23531,49022,100
23532,57903,81
23533,43022,70
23534,42077,92
23535,1907,83
23536,57903,83
23537,43022,84
23538,2132,91
23539,4157,87
23540,43127,74
23541,1078,75
23542,43211,85
23543,43022,73
23544,43022,71
23545,41912,85
23546,1658,79
23547,58123,88
23548,35142,71
23549,848,85
23550,3637,76
23551,39347,76
23552,1078,84
23553,4157,81
23554,4157,83
23555,1658,79
23556,848,80
23557,1078,88
23558,42182,93
23559,4157,87
23560,43547,83
23561,1078,75
23562,1037,74
23563,4157,83
23564,3443,78
23565,1078,84
23566,999,87
23567,1078,76
23568,50647,71
23569,3443,78
23570,1324,89
23571,43152,87
23572,43547,75
23573,1078,78
23574,47852,81
23575,55398,73
23576,4157,81
23577,51857,84
23578,38147,81
23579,42917,80
23580,41762,81
23581,37457,79
23582,2132,95
23583,1037,76
23584,999,85
23585,80927,78
23586,34373,76
23587,42182,75
23588,1658,78
23589,3443,88
23590,4157,86
# After 11600 updates
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 T -6 0 -2 neg eql 9 neg x / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy / -1 -5 -7 eql neg x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 ungreedy * / x 7 / ∨ x 5 3 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F -2 ¬ x greedy -3 greedy x x -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 inc * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 x * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x - 1 inc * / x x / 2 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc copy ≥ copy x - if -5 greedy F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-3 inc x * x x x - if -5 x F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 F * x + 5 / -6 ≤ / x x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x copy T -10 greedy? x dec x -3 -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x T -10 greedy? x dec ≥ -3 -3 dec -7 x F + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "∧ x x greedy 0 -3 greedy? x 3 F T -10 -9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "∨ T x swap < ¬ 6 x swap T x x 5 swap 1 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "F T -3 swap greedy? ≤ 7 -10 -7 F dec greedy? -1 T F pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 999: "8 T -7 swap greedy? F 7 -8 x F T > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 999: "be / x x inc x + T -10 greedy -2 1 x x 0 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "-2 dec x x if T be x 9 neg -1 -7 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-7 inc ∨ x -2 F inc * 9 ungreedy T 1 x x 0 4 7 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "dec x x ≤ if T F x 9 neg -1 -7 5 x pop 4 - -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy -8 T -6 * greedy -5 x 9 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T be x 9 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T be swap * neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x copy T swap greedy? x -5 ∧ -6 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x 1 -3 + ≥ x x x 9 swap -5 8 5 x pop 4 F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy inc x 2 -3 x x x 9 F -9 + pop greedy? pop neg ungreedy -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x copy -4 -10 1 x T x * x ∨ x + 1 pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1078: "-9 greedy -1 x 5 2 depth * 9 be greedy -9 1 x 0 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql x x - x T 7 inc 7 inc T > x inc copy copy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x -5 7 x x < pop x x 8 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x * greedy x copy 3 F x + copy T T x ≤ -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "0 -3 -1 x -7 eql neg x 9 neg x 4 -1 if x 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap depth -1 x -7 eql -8 x x x F if -1 inc -2 < F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy x x * ≤ > * 9 be greedy 1 1 -5 0 4 2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "9 x - 1 x eql ¬ * 9 greedy? ungreedy + ¬ eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x 8 7 + x x x > F x ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x neg T -10 greedy? x dec x -3 -3 x -3 1 - eql x - -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy F x * ≤ > * 9 be greedy 1 1 x 0 4 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap x x inc T if x inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "4 copy greedy x * / 4 -9 inc neg - + - x pop swap greedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc -10 x - 0 -2 x x x depth dec T x T T -1 copy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 8 x * T -5 greedy 9 x -1 + 5 -10 pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 swap ungreedy - x -10 T F x T + x x -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap -2 x neg x x 6 T -10 F copy 8 2 F -4 x 0 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy T x neg x dec x -3 greedy F x -1 + + x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 swap ungreedy x x -10 T F x T + x x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy / -1 x ungreedy eql neg x 9 x 6 * copy if x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 x greedy? x -5 -10 x -3 x if x greedy? T eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 x x F -3 - x 9 neg x T + x x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -7 x 1 x x x ≥ 5 ∨ > ungreedy inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x ≤ x x x dec T -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x inc * 9 ≥ x greedy? x x x 4 dec -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-9 dec x -6 x T / -6 ≤ / x x 5 eql pop x inc -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x x ¬ 7 x x / x x inc -1 F T depth -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x - 1 x eql ¬ greedy? 9 greedy? -1 + F x ¬ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < -4 F x 8 greedy F greedy ∧ T T F ∨ - T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 ≥ x x 0 neg ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "* * -6 x F ≤ F 7 x -7 x x neg T pop x -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "4 depth be inc neg x dec 4 -3 greedy F x -1 + + x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F -1 x neg -9 + 5 be F -4 T dec x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc ∨ x -2 F inc * 9 ≥ greedy F x x -3 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x greedy 7 x x x 3 neg x T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 x x 6 * greedy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -1 x F eql neg x 3 x F ∨ 0 inc 7 ∨ < -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy T 9 ∨ -5 8 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F T -3 4 greedy? x 7 -10 x F dec -9 T T F 0 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x -7 x eql ¬ * 9 x -1 + 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "2 / x -3 / x x dec dec x < x inc x -4 5 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x ≤ x -7 eql -8 x x 6 F if pop dec be 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-1 x 4 / - depth F -6 x 1 -2 x greedy x F + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "9 x - 1 x eql ¬ * 9 greedy? -1 + ¬ eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc 3 * F 4 F F < x -7 -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 depth x - 0 -2 x T x depth dec T x T copy -1 copy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 if ungreedy - x -10 ≤ F x -1 > T T ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap -2 x ¬ x x 6 T 2 F copy 8 2 F -4 x 0 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x T -10 greedy? x -10 7 ≥ x x 0 -7 ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-1 x 4 / - depth F -6 x 1 -2 x neg x - + T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 8 x * pop -5 greedy 9 x -1 + 5 x pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -1 x -7 eql neg x 3 x F if 0 inc -4 depth F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "depth T neg T F copy 7 F x 4 neg + swap x ∧ -1 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x T 2 ≤ 1 7 -10 * -2 x > - -6 -1 greedy? -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "7 x 7 ¬ 5 -3 greedy T 9 ∨ -5 8 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 swap greedy? ≤ 7 -10 -7 F T > + greedy? T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap depth * 4 T F x 8 if 8 5 pop copy T T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -2 T greedy? greedy -3 greedy x x be dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x dec ∧ ∧ T x 2 eql -7 greedy F 9 -1 F depth 1 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x ≤ F x ungreedy 7 + x x x > F -9 x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 greedy x 6 * copy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 eql dec * x eql -8 -7 x T x if 1 x -8 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 T -6 * -3 -5 x 9 neg -1 + 5 x copy ∨ F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x x x x depth F T x T T ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1324: "-7 F 7 x + 5 4 -6 greedy? / x x -8 swap pop swap ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1658: "greedy -7 x 7 ¬ 7 x x / x x inc -1 F T depth -7 -5 -4 ≥ -9 -10 if -5 * 9 * dec 5 *"
# 4157: "neg neg x swap 5 greedy -9 9 x dec 6 * greedy if T x x x x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 37457: "x x inc + x / x dec -9 x 0 - / 6 / F F -5 * ≥ -9 -10 -7 x 6 9 * dec 5 *"
# 42812: "x greedy -3 x ungreedy - x -10 ≤ F x -1 > T T x * -5 x ≥ -6 - x -4 eql x 3 dec 5 *"
# 43022: "-7 F F x + 5 / -6 x / x x 5 eql pop neg ≤ -5 x + x -10 if -5 * 8 * -3 + x"
23591,43022,70
23592,43022,79
23593,43022,73
23594,43022,74
23595,43169,69
23596,43127,84
23597,42182,78
23598,42067,80
23599,40832,81
23600,3683,85
23601,6772,82
23602,848,79
23603,57993,89
23604,43442,89
23605,39197,79
23606,1147,74
23607,1078,84
23608,47852,85
23609,47852,86
23610,1078,74
23611,35147,88
23612,102662,75
23613,2132,81
23614,42448,73
23615,2265,90
23616,30397,93
23617,1078,77
23618,1078,87
23619,1324,77
23620,1658,89
23621,1078,74
23622,1078,90
23623,42667,73
23624,69284,77
23625,47747,84
23626,42917,78
23627,1078,86
23628,99570,80
23629,23627,79
23630,47852,90
23631,44292,81
23632,1078,92
23633,60738,90
23634,81872,73
23635,43022,81
23636,42677,82
23637,46192,84
23638,1037,96
23639,43967,80
23640,60772,77
23641,48722,83
23642,1037,97
23643,4157,80
23644,52442,73
23645,42917,73
23646,4737,75
23647,445862,71
23648,34268,87
23649,53252,82
23650,4157,78
23651,35764,82
23652,44072,91
23653,47977,75
23654,21882,75
23655,43022,74
23656,1037,76
23657,42252,74
23658,29194,79
23659,21000000,80
23660,43022,73
23661,43622,70
23662,1658,82
23663,1078,85
23664,62377,94
23665,1658,85
23666,1078,84
23667,43127,78
23668,43022,79
23669,4157,83
23670,86597,71
23671,43757,91
23672,1658,83
23673,43022,82
23674,42938,87
23675,59388,80
23676,1078,82
23677,1037,73
23678,4157,76
23679,43127,79
23680,45828,89
23681,1078,84
23682,43127,81
23683,43169,75
23684,43022,76
23685,16802,85
23686,85547,97
23687,47747,87
23688,1658,79
23689,43022,90
23690,1078,82
23691,87677,93
23692,55297,96
23693,47852,81
23694,55338,76
23695,57302,95
23696,466875,82
23697,21000000,72
23698,1078,92
23699,42287,82
23700,37457,80
23701,34228,75
23702,42917,86
23703,43967,83
23704,39948,88
23705,47852,86
23706,848,82
23707,1048,90
23708,43022,83
23709,55338,79
23710,43022,76
23711,1078,79
23712,53497,76
23713,4157,80
23714,41588,92
23715,55338,95
23716,44072,83
23717,4778,86
23718,1078,78
23719,42182,78
23720,28217,77
23721,2820,76
23722,48722,79
23723,1658,86
23724,89027,85
23725,42182,89
23726,123617,82
23727,21000000,84
23728,848,82
23729,383991,71
23730,1078,79
23731,44942,78
23732,34418,95
23733,1037,87
23734,1078,78
23735,61413,80
23736,45962,88
23737,1078,80
23738,71538,74
23739,60587,75
23740,38297,70
23741,41627,85
23742,43232,75
23743,4157,76
23744,1078,96
23745,2213,94
23746,43127,83
23747,61944,79
23748,43022,78
23749,1078,86
23750,848,88
23751,55248,82
23752,43162,86
23753,1037,90
23754,43022,84
23755,42917,84
23756,1078,78
23757,42182,80
23758,41132,88
23759,1133,74
23760,1037,79
23761,43127,83
23762,1663,89
23763,137873,75
23764,37877,85
23765,4133,78
23766,142892,83
23767,1078,98
23768,42644,81
23769,43064,86
23770,35848,80
23771,73873,78
23772,4157,90
23773,45962,77
23774,34313,87
23775,1133,79
23776,29897,77
23777,43967,74
23778,4157,74
23779,43022,81
23780,1078,78
23781,21000000,82
23782,21000000,85
23783,44177,83
23784,38623,73
23785,3683,86
23786,43022,78
23787,43127,86
23788,1037,71
23789,1037,79
23790,15010658,95
23791,16172,77
23792,42917,84
23793,37097,84
23794,41317,85
23795,1078,83
23796,43847,77
23797,1037,90
23798,55878,76
23799,72397,87
23800,39277,78
23801,42917,86
23802,47852,78
23803,4157,82
23804,47852,91
23805,42917,83
23806,1037,83
23807,86792,79
23808,43127,74
23809,4157,79
23810,1115,88
23811,43022,71
23812,4157,79
23813,16724,95
23814,40522,86
23815,1078,77
23816,109277,78
23817,38156,77
23818,1457,76
23819,4252,79
23820,50896,81
23821,3443,81
23822,964,81
23823,43085,84
23824,4157,88
23825,1037,82
23826,3443,72
23827,43817,82
23828,42287,76
23829,71372,77
23830,20000283,78
23831,53497,78
23832,55788,86
23833,1037,86
23834,3443,86
23835,3443,73
23836,1658,78
23837,59928,80
23838,57993,77
23839,1658,81
23840,24002,80
23841,43337,77
23842,4157,76
23843,43112,76
23844,43047,83
23845,848,79
23846,41972,78
23847,44411,88
23848,1967,83
23849,43127,79
23850,43211,83
23851,43022,79
23852,4157,85
23853,42002,72
23854,43022,75
23855,1658,85
23856,24343,80
23857,47852,82
23858,999,89
23859,42917,80
23860,42902,80
23861,468272,74
23862,848,83
23863,3443,77
23864,20272,80
23865,62027,81
23866,34622,75
23867,678,85
23868,38252,90
23869,1658,71
23870,3443,84
23871,47012,80
23872,43022,83
23873,43127,84
23874,127928,80
23875,37877,87
23876,19004050,73
23877,42647,82
23878,42917,83
23879,4098,89
23880,1078,91
23881,41762,72
23882,1658,86
23883,37457,82
23884,1078,87
23885,1658,80
23886,59958,80
23887,85652,80
23888,1078,74
23889,40522,91
23890,183748,82
23891,94157,94
23892,43547,86
23893,1078,77
23894,1078,76
23895,41381,88
23896,43127,86
23897,1663,82
23898,3443,84
23899,4157,88
23900,47852,84
23901,42077,84
23902,42917,85
23903,85652,84
23904,1078,76
23905,1037,74
23906,42917,86
23907,43043,76
23908,1078,80
23909,4133,78
23910,16010015,73
23911,1078,79
23912,1658,81
23913,40522,77
23914,42896,86
23915,43064,80
23916,1699,91
23917,1078,85
23918,3443,77
23919,87017,83
23920,4157,87
23921,23258,76
23922,4157,89
23923,21000000,86
23924,37202,76
23925,16033515,98
23926,43127,94
23927,47852,86
23928,1078,77
23929,43627,86
23930,52577,84
23931,38402,86
23932,398252,75
23933,1662,85
23934,1133,78
23935,42917,78
23936,128072,90
23937,42287,77
23938,43127,87
23939,115748,80
23940,21000000,82
23941,61208,79
23942,43022,80
23943,285508,79
23944,42971,86
23945,42077,78
23946,1078,78
23947,1324,78
23948,3443,78
23949,43211,81
23950,929,92
23951,43022,68
23952,72422,83
23953,43667,93
23954,40522,87
23955,36827,82
23956,43127,82
23957,21602,80
23958,4157,95
23959,43022,84
23960,1038,73
23961,53497,86
23962,33772,84
23963,42602,90
23964,44072,79
23965,42896,77
23966,1078,76
23967,45402,82
23968,4157,80
23969,3443,67
23970,13522,75
23971,43127,87
23972,24135,86
23973,44102,78
23974,32381,80
23975,1078,75
23976,44513,85
23977,1133,87
23978,43127,88
23979,467747,83
23980,43022,72
23981,41762,82
23982,108173,81
23983,47852,82
23984,4157,88
23985,43127,86
23986,43274,85
23987,1078,75
23988,1658,76
23989,42182,91
23990,1324,73
23991,34313,72
23992,21000000,78
23993,43022,89
23994,4157,87
23995,43172,82
# After 11800 updates
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 x * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 T -6 0 -2 neg eql 9 neg x / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc copy ≥ copy x - if -5 greedy F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 inc * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 F -6 * ≤ 7 -10 -7 F T -10 -9 x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T T -3 swap greedy? ≤ 7 -10 -7 F T -10 -9 F x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy / -1 -5 -7 eql neg x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 ungreedy * / x 7 / ∨ x 5 3 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 F -4 x T 5 / -6 ≤ / -5 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x copy T -10 greedy? x dec x -3 -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F -2 ¬ x greedy -3 greedy x x -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-3 copy T -10 greedy? x 1 x -3 -3 dec + x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x T -10 greedy? x dec ≥ -3 -3 dec -7 x F + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-9 eql -1 x 5 2 depth * 9 be dec -7 x be + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy inc 5 swap x -2 7 -8 x F T > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x - 1 inc * / x x / 2 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "∧ x x greedy 0 -3 greedy? x 3 F T -10 -9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 929: "greedy depth be inc neg < dec ∨ 7 / ∨ 2 5 T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "depth -9 neg T F copy x F x 4 neg + swap x ∧ -1 T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "∨ T x swap < ¬ 6 x swap T x x 5 swap 1 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "F T -3 swap greedy? ≤ 7 -10 -7 F dec greedy? -1 T F pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 999: "be / x x inc x + T -10 greedy -2 1 x x 0 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "dec x x ≤ if T F x 9 neg -1 -7 5 x pop 4 - -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x copy T swap greedy? -9 -5 ∧ -6 neg -1 x F x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql -1 x ≥ x x x ≥ x -5 8 5 x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x x be swap * neg -1 F 5 3 pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "∧ x ∨ 2 greedy? -10 x x 9 F -9 + -2 pop pop neg ungreedy -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x x if T be x 9 neg -1 -7 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy inc x 2 -3 x x x 9 F -9 + pop greedy? pop neg ungreedy -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x copy T swap greedy? x -5 ∧ -6 neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T be swap * neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-1 x 4 / x depth F neg x 1 x x greedy x F + ungreedy -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x x if T be x 9 neg 1 ungreedy 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql -1 x ≥ x x x 9 x -5 8 5 x pop -10 F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "* x ∨ 2 greedy? -10 x x 9 T -9 + -2 pop pop neg ungreedy -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "0 x x + x T be T 9 neg -1 x 5 < ≤ 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "F T inc 4 greedy? pop 7 -10 x F dec -9 T T F 0 0 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-7 inc ∨ x -2 F inc * 9 ungreedy T 1 x x 0 4 7 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x x inc + x / x 4 + x F inc x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "x copy -4 -10 1 x T x * x ∨ x + 1 pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1078: "greedy + T x * greedy x copy 3 F x + copy T T x ≤ -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x neg x x 6 T -10 F -6 8 dec F -4 x 0 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "9 x - 1 x eql ¬ * 9 greedy? ungreedy + ¬ eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 swap ungreedy x x -10 T F x T + x x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x x ¬ 7 x x / x x inc -1 F T depth -7 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth be ∧ T x greedy 7 x x x 3 neg x T 8 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x -7 x eql ∧ F 9 x x + 5 x pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 0 x * T -5 < 9 x -1 -2 5 -10 pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F pop x x if T be x 9 x -6 if -1 inc -2 < F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "7 T inc F ≥ ∧ x - if -5 greedy F 9 be 4 * -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy / -1 x ungreedy eql neg x 9 x 6 * copy if x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x 8 7 + x x x > F x ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 8 x * pop -5 greedy 9 x -1 + 5 x pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "0 -3 -1 x -7 eql neg x 9 neg x 4 -1 if x 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x F x + - x -10 ≤ F ungreedy if < F x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x 7 ¬ 5 -3 greedy T 9 ∨ -5 8 5 eql x x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-6 x T -10 greedy? x dec -5 -3 -3 dec -7 x F + ungreedy 0 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x ≤ x x x dec T -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 x greedy? x -5 -10 x -3 x if x greedy? T eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -1 x F eql neg x 7 * F ∨ 0 inc 7 ∨ < -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 x -2 F inc 7 9 ≥ pop F x pop - 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x T -7 x 1 -2 x T x depth dec T x if -6 -1 -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop greedy? 4 * swap ungreedy x 9 T if x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-1 x 4 T x ≤ > * 9 be greedy 1 -6 -5 0 x 2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ≤ 4 ≥ neg dec dec x < x inc x -1 5 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -7 x ≤ F x ungreedy 7 + x x x > F -9 x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x - 1 x 1 ¬ x 9 greedy? -1 + F x ¬ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < -4 F x 8 greedy F greedy ∧ T T F ∨ - T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -7 x 1 x x x ≥ 5 ∨ > ungreedy inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc 3 * F 4 F F < x -7 -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "neg neg x swap 5 greedy -9 9 x x 6 * greedy if T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 swap ungreedy - x -10 T F x T + x x -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x dec x -6 2 T / -6 T F x x 5 eql pop x inc -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "4 copy greedy x * / 4 -9 inc neg - + - x pop swap greedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-2 dec x + x T be x dec -10 -1 + T x pop 4 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 x swap x greedy -9 copy x x 6 * greedy / T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F 7 ≥ x x 0 neg ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc -10 x - 0 -2 x x x depth dec T x T T -1 copy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 x ≥ - x -10 ≤ F ungreedy -1 < F x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 8 x * T / -6 ≤ swap x ungreedy greedy swap pop swap ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -5 -1 x * T -5 greedy 9 x -1 + 5 T pop x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x dec x copy 2 T / -6 T F x x 5 eql x / inc -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap depth * 4 T F x 8 if 8 5 pop copy T T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -2 T greedy? greedy -3 greedy x x be dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x dec ∧ ∧ T x 2 eql -7 greedy F 9 -1 F depth 1 x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F -1 x neg -9 + 5 be F -4 T dec x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F depth x - 0 -2 x x -3 -3 x -3 1 - eql x - -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 x x F -3 - x 9 neg x T + x x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 8 x * pop -5 greedy 9 x -1 pop 5 x pop / T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ∨ 4 ≥ swap ungreedy x 9 T if x + neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 -6 * x copy 5 / -6 ≤ 2 x x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "> x - 1 inc * / x x / + x inc x greedy 7 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1658: "greedy -7 x 7 ¬ 7 x x / x x inc -1 F T depth -7 -5 -4 ≥ -9 -10 if -5 * 9 * dec 5 *"
# 4157: "swap neg x swap 5 greedy -9 x greedy? dec 6 * greedy if T -5 x x x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 21882: "3 0 inc -2 x * / x 1 -6 -5 x inc + pop F T -5 x ≥ -9 -2 if -7 * 9 * dec 5 *"
# 42896: "greedy + x x * greedy - x 9 neg x T + x x ungreedy > x x ≥ -9 -10 ∨ -5 * 9 * dec 5 inc"
23996,43064,70
23997,43022,73
23998,43127,72
23999,42982,72
24000,43190,74
24001,43127,91
24002,43022,75
24003,43022,87
24004,42182,75
24005,43127,82
24006,42182,78
24007,55522,79
24008,1078,75
24009,1078,73
24010,4157,82
24011,21000000,73
24012,1658,91
24013,43022,84
24014,1662,78
24015,39497,82
24016,848,79
24017,55282,78
24018,60772,74
24019,56763,83
24020,2513,73
24021,13522,81
24022,38598,84
24023,39697,96
24024,848,86
24025,71522,90
24026,21000000,83
24027,42896,85
24028,848,75
24029,49088,87
24030,1078,74
24031,41972,75
24032,42182,99
24033,45182,89
24034,14083,85
24035,43127,78
24036,1658,77
24037,993,93
24038,11108,88
24039,51902,75
24040,43967,74
24041,42287,87
24042,37227,74
24043,3932,84
24044,1078,88
24045,57302,75
24046,4087,72
24047,1078,72
24048,32473,84
24049,1133,77
24050,1037,91
24051,848,82
24052,1324,81
24053,43022,77
24054,19502,96
24055,43127,94
24056,1300,83
24057,67103,80
24058,4157,89
24059,32788,79
24060,1078,88
24061,848,75
24062,42182,83
24063,1324,76
24064,41060,84
24065,1038,79
24066,1133,79
24067,51632,79
24068,41972,84
24069,42917,84
24070,43064,69
24071,1037,72
24072,55398,78
24073,86707,81
24074,45557,81
24075,1078,82
24076,42917,75
24077,43232,72
24078,21000000,78
24079,51857,81
24080,43022,86
24081,848,84
24082,1078,79
24083,38417,90
24084,44845,85
24085,43022,87
24086,43022,86
24087,42917,93
24088,44072,81
24089,4398,84
24090,43127,92
24091,43127,76
24092,57678,79
24093,43190,78
24094,38402,74
24095,42917,86
24096,99827,89
24097,2357,80
24098,42252,81
24099,1037,82
24100,1037,79
24101,66752,88
24102,43022,81
24103,43127,90
24104,43352,81
24105,41923,79
24106,42982,74
24107,42917,105
24108,27949,94
24109,42917,93
24110,28477,75
24111,4257,83
24112,43022,71
24113,49742,78
24114,37147,83
24115,15013417,95
24116,43022,84
24117,91627,87
24118,43022,70
24119,1473,87
24120,3807,82
24121,964,89
24122,43397,86
24123,37097,84
24124,43007,74
24125,43127,77
24126,21000000,102
24127,42497,77
24128,2213,81
24129,449167,73
24130,29897,80
24131,1324,83
24132,57397,84
24133,43127,82
24134,43127,79
24135,42917,86
24136,43547,79
24137,37727,75
24138,43127,84
24139,3358,87
24140,42182,83
24141,148112,84
24142,43127,82
24143,1658,81
24144,8848,91
24145,848,80
24146,52262,96
24147,42887,82
24148,3683,82
24149,34206,77
24150,848,75
24151,38402,74
24152,57723,76
24153,4157,76
24154,43127,86
24155,43085,81
24156,1192,85
24157,4157,82
24158,4157,92
24159,1738,95
24160,52307,78
24161,42028,88
24162,2807,71
24163,42917,91
24164,1658,81
24165,78086,86
24166,1078,78
24167,42917,77
24168,15000288,86
24169,42917,73
24170,43652,77
24171,47427,73
24172,1078,83
24173,40522,76
24174,42077,86
24175,2213,86
24176,43022,75
24177,848,75
24178,507,84
24179,1038,80
24180,43127,71
24181,85652,80
24182,42522,75
24183,2357,79
24184,43547,83
24185,47852,86
24186,42917,84
24187,1078,81
24188,678,99
24189,47747,86
24190,47852,86
24191,85652,89
24192,1658,79
24193,43652,91
24194,104935,80
24195,63322,80
24196,72377,86
24197,46802,82
24198,3525,83
24199,42917,76
24200,43127,76
24201,43967,81
24202,4157,89
24203,1658,88
24204,37202,88
24205,1078,77
24206,76202,74
24207,41381,86
24208,43127,70
24209,39752,82
24210,43022,83
24211,44582,75
24212,42917,85
24213,57903,83
24214,848,80
24215,3443,77
24216,61208,80
24217,1702,79
24218,26018,87
24219,1078,82
24220,44942,80
24221,42917,87
24222,41132,87
24223,47327,81
24224,43022,75
24225,848,87
24226,1037,78
24227,1658,78
24228,43127,73
24229,49742,82
24230,34313,90
24231,37202,89
24232,16508,77
24233,1133,87
24234,47852,74
24235,47982,77
24236,1078,81
24237,47192,84
24238,4228,85
24239,48722,76
24240,3443,85
24241,35567,79
24242,3443,74
24243,55338,87
24244,1133,74
24245,43547,81
24246,25977,86
24247,38277,89
24248,4228,85
24249,4157,72
24250,43022,89
24251,35832,89
24252,40712,76
24253,4398,86
24254,72422,76
24255,21000000,90
24256,1078,89
24257,29944,73
24258,4157,76
24259,42812,78
24260,43022,74
24261,34622,73
24262,4157,88
24263,25982,76
24264,43022,82
24265,1078,80
24266,43127,80
24267,2008,83
24268,34622,86
24269,53522,79
24270,44942,76
24271,42917,89
24272,4157,76
24273,21000000,85
24274,44747,77
24275,1037,75
24276,8138,85
24277,42917,79
24278,46802,81
24279,53124,103
24280,62493,83
24281,1658,78
24282,43022,90
24283,43148,77
24284,46802,81
24285,30397,85
24286,2213,87
24287,1658,91
24288,41897,90
24289,43127,80
24290,42497,86
24291,15000288,72
24292,12887,86
24293,19000570,89
24294,3593,81
24295,2213,78
24296,848,78
24297,43127,81
24298,43022,79
24299,58142,78
24300,3683,88
24301,1082,73
24302,848,79
24303,1226,80
24304,42182,85
24305,42497,86
24306,3443,86
24307,58128,89
24308,42875,71
24309,76388,89
24310,43127,73
24311,1658,78
24312,40522,75
24313,53627,91
24314,54798,84
24315,42182,81
24316,43127,78
24317,37698,79
24318,4157,83
24319,42977,83
24320,42917,85
24321,19208,77
24322,42806,81
24323,34199,78
24324,47827,89
24325,43337,90
24326,42577,76
24327,42959,74
24328,21000000,77
24329,42497,71
24330,10052,79
24331,3032,81
24332,40522,76
24333,4157,84
24334,1658,90
24335,42917,80
24336,42317,77
24337,4157,74
24338,1078,76
24339,4157,77
24340,1662,88
24341,41552,79
24342,43085,77
24343,1037,83
24344,1037,75
24345,28196,72
24346,5327,89
24347,36377,75
24348,43127,77
24349,1658,92
24350,127862,84
24351,42917,86
24352,3443,74
24353,40522,86
24354,21000000,67
24355,1078,87
24356,4157,75
24357,53042,82
24358,1672,78
24359,47972,71
24360,1730,87
24361,43022,94
24362,848,73
24363,21000000,78
24364,21000000,84
24365,43022,88
24366,47117,75
24367,45546,88
24368,27073,82
24369,15001478,77
24370,21000000,78
24371,144567,79
24372,4157,92
24373,43022,80
24374,42917,87
24375,110117,76
24376,19442,84
24377,1037,76
24378,43232,82
24379,1658,88
24380,12084,71
24381,4157,74
24382,42917,73
24383,59828,77
24384,42392,83
24385,9523,81
24386,34271,78
24387,43022,75
24388,848,72
24389,1078,76
24390,113807,90
24391,22183,79
24392,42917,83
24393,1173,82
24394,1037,85
24395,1037,70
24396,43022,81
24397,43085,83
24398,43022,77
24399,43127,81
24400,837,73
# After 12000 updates
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 837: "x eql -9 + ≥ x ∨ x 9 x -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "F depth ¬ x greedy -3 x x x -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x -6 -1 * inc < x -3 6 x x -7 x 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T depth be inc neg x dec ∨ 7 / ∨ 2 5 T pop -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x T -6 0 -2 neg eql 9 neg x / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop -8 T -6 0 -2 neg 4 9 neg x / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc copy ≥ copy x - if -5 greedy F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x copy T -10 greedy? x dec x -3 -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 T -6 0 -2 neg eql 9 neg x / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 inc * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 ungreedy * / x 7 / ∨ x 5 3 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-9 eql -1 x 5 2 depth * 9 be dec -7 x be + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x T -10 greedy? x 1 5 -3 -3 dec + x F x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 T x -1 T inc < x -3 6 x x -7 x 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 1 ungreedy -3 greedy? x 3 F T x -9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy inc 5 swap x -2 7 -8 x F T > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy / -1 -5 -7 eql neg x depth neg x / * T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy neg T -6 0 -2 neg eql 9 neg greedy? ∧ x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F depth ¬ x greedy x x x x -3 dec F 9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x T -10 greedy? x dec ≥ -3 -3 dec -7 x F + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 F -6 * ≤ 7 -10 -7 F T -10 -9 x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 F -4 x T 5 / -6 ≤ / -5 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy / -1 -5 -7 eql neg x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 x * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x inc ∨ -6 -2 F inc * 9 ungreedy T 1 9 - x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x dec x copy x T / -6 T F x x 5 -2 x -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x - 1 inc * / x x / 2 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc F ≥ x dec > -3 -3 dec -7 x F F * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "∧ T -3 swap greedy? x 7 -10 -7 F dec greedy? -1 T F pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "depth -9 neg T F copy x F x 4 neg + swap x ∧ -1 T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "∨ T x swap < ¬ 6 x swap T x x 5 swap 1 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 993: "greedy inc be 2 -3 x -1 x 9 F -9 + ∧ greedy? pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 999: "be / x x inc x + T -10 greedy -2 1 x x 0 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "∧ x ∨ 2 greedy? T x T 9 neg -1 x x < ≤ 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-8 x - 1 greedy? -10 x x 9 T -9 ∧ -2 pop pop neg -6 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x greedy -3 ∧ ungreedy - inc -10 T neg -1 neg 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql -1 x ≥ x x x ≥ x -5 8 5 x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "0 x x + x T pop T 9 neg -1 x 5 < ≤ 4 / -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "dec x x ≤ if T F x 9 neg -1 -7 5 x pop 4 - -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x copy T swap greedy? -9 -5 ∧ -6 neg -1 x F x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec F + x x be x x neg 1 ungreedy 5 x pop F T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "be ≥ x x if T be swap * neg - F x 3 x x ≥ -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-1 x 4 / x depth F neg x 1 x x greedy x F + ungreedy -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-8 x - 1 x T be T 9 x -1 x 5 < x ¬ T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "F T inc 4 greedy? pop 7 -10 x F dec -9 T T F 0 0 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T be swap * neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x copy T swap greedy? x x ∧ -6 T -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x x -7 x F x T x ≥ 5 ∨ > ungreedy inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "greedy 8 x neg x x 6 T -10 F x inc x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "x x inc + x / x 4 + x F inc x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "x copy -4 -10 1 x T x * x ∨ x + 1 pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1078: "greedy inc 5 swap x -2 x -8 x F T > + 6 pop 3 ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "9 x x 1 greedy eql ¬ * 9 greedy? ungreedy + ¬ eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x -7 x eql ∧ F 9 x x + 5 x pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-6 x T -10 greedy? x dec -5 -3 -3 dec -7 x F + ungreedy 0 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 8 x * T / -6 ≤ swap x ungreedy greedy swap pop swap ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 x -2 F inc 7 9 ≥ pop F x pop - 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 0 x * T -5 < 9 x -1 -2 5 -10 pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 x greedy? x -5 -10 x -3 x if -6 inc T F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap depth * 4 T F x 8 if 8 5 pop copy T T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -3 x swap x greedy -9 copy x x 6 * greedy / T x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -5 -1 x * T -5 greedy 9 x -1 + 5 T pop x T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x < ungreedy F x 8 7 + x x x > F x ∨ * -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop greedy? 4 * swap ungreedy x 9 T if x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F pop x x if T be x 9 x -6 if -1 inc -2 < F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be / x x inc x x T -10 F -2 1 x x 0 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -5 x x * T -5 greedy 9 x x + 5 T pop x 2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc 3 * F 4 F F < x -7 -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x F x + - x -10 ≤ F ungreedy if < F x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 x ≥ - x -10 ≤ F ungreedy -1 < F x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "0 -3 -1 x -7 eql neg x 9 neg x 4 -1 if x 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop -8 T -6 0 -2 neg 4 x neg x / x ungreedy T x F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap neg F swap 5 greedy inc 7 9 ≥ pop F x pop - -9 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -3 -1 x F eql neg x 7 * F ∨ 0 inc 7 ∨ < -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "/ x 0 1 < * / x 7 / ∨ x 5 x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "> x - 1 inc * / -8 x x x 3 neg x T 8 2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 inc pop ≤ 4 ≥ neg dec dec x < x inc x -1 5 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x T -7 x 1 -2 x T x depth dec T x if -6 -1 -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy + T x * greedy x copy 3 F x + copy T T x ≤ -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be dec x copy F ¬ F 7 > x x 0 neg ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 swap ungreedy x x -10 T F x T + x x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x - 1 x 1 ¬ x 9 greedy? -1 + F x ¬ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc -10 x - 0 -2 x x x depth dec T x T T -1 copy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap x x ungreedy F ≤ F -1 x neg -9 + 5 be F -4 T dec x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T 8 x * pop -5 greedy 9 x -1 + 5 x pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "0 -3 -1 x -7 eql neg F F neg x 4 -1 if pop swap greedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc x x - 0 x ≤ x x x dec T -1 T T 8 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1658: "8 7 0 7 ¬ ¬ x x / x x inc -1 F T depth -7 -5 -4 ≥ -9 swap if -5 * 9 * dec 5 *"
# 1662: "x x T -10 greedy? x dec ≥ -3 -3 x -7 x -5 + ungreedy -5 -5 x ≥ -9 swap if -5 * 9 * + 5 *"
# 2213: "9 x x 1 x * / x 7 copy x * 5 inc pop neg ungreedy -5 x greedy? -9 -10 if -5 * 9 * + 5 *"
# 2807: "-7 - neg 7 ¬ ¬ x x / x x F x pop - 4 F F x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 4157: "depth -9 neg x inc / x T -10 F F 1 x -5 0 neg -5 -5 1 ≥ -10 -10 if -5 * 9 * dec 5 *"
# 21882: "3 0 inc -2 x * / x 1 -6 -5 x inc + pop F T -5 x ≥ -9 -2 if -7 * 9 * dec 5 *"
# 40522: "-2 dec x + -7 2 depth * 9 be dec x 5 x pop < ungreedy -5 x ≥ x -10 if -5 * 9 * dec 5 *"
24401,42959,73
24402,43148,69
24403,42896,71
24404,43085,70
24405,42938,77
24406,57883,71
24407,21000000,88
24408,1078,91
24409,42287,75
24410,1765,86
24411,1658,82
24412,1918,81
24413,964,85
24414,44072,73
24415,43121,95
24416,37822,84
24417,30053,73
24418,848,85
24419,42917,88
24420,1037,78
24421,1037,83
24422,43022,85
24423,43064,81
24424,43022,79
24425,4398,84
24426,4157,86
24427,43862,79
24428,22967,75
24429,43547,82
24430,848,76
24431,43061,78
24432,55398,84
24433,38402,78
24434,4157,88
24435,42077,94
24436,50647,81
24437,43148,78
24438,21882,75
24439,21000000,79
24440,41381,79
24441,3443,70
24442,1324,80
24443,1658,84
24444,48692,84
24445,43022,85
24446,1995,70
24447,43085,81
24448,43022,78
24449,55338,75
24450,9177,88
24451,43127,72
24452,50647,75
24453,1037,79
24454,42602,91
24455,43022,79
24456,22938,80
24457,16895,83
24458,3683,78
24459,15000288,82
24460,43862,82
24461,1658,85
24462,57993,77
24463,21000000,80
24464,2213,85
24465,36952,90
24466,43211,86
24467,2363,71
24468,43442,85
24469,848,78
24470,1037,85
24471,38402,82
24472,42902,84
24473,43022,77
24474,43547,81
24475,1078,74
24476,1078,80
24477,43022,69
24478,174021,69
24479,2213,92
24480,37307,83
24481,66197,93
24482,42896,72
24483,43148,70
24484,848,79
24485,25610,83
24486,35413,90
24487,43172,84
24488,128634,70
24489,1658,82
24490,42896,82
24491,42287,79
24492,7217,84
24493,4157,75
24494,42707,79
24495,64169,81
24496,43442,84
24497,48722,80
24498,43967,82
24499,57273,74
24500,40763,83
24501,1078,80
24502,81203,79
24503,3443,100
24504,43127,83
24505,1078,79
24506,848,79
24507,43757,82
24508,1078,85
24509,4283,94
24510,14777,87
24511,43211,89
24512,964,89
24513,1658,84
24514,43211,101
24515,1078,78
24516,42722,82
24517,53497,81
24518,34517,86
24519,55248,83
24520,4252,84
24521,20082,80
24522,11844,92
24523,37202,79
24524,40522,77
24525,57363,73
24526,43022,73
24527,42959,99
24528,90377,84
24529,47852,79
24530,2892,72
24531,1078,84
24532,1078,77
24533,4157,71
24534,43151,78
24535,1078,84
24536,848,77
24537,848,81
24538,44072,70
24539,43967,84
24540,52442,75
24541,1037,78
24542,6762,81
24543,53717,100
24544,42332,79
24545,90272,82
24546,993,88
24547,1117,92
24548,43022,88
24549,43127,76
24550,19208,73
24551,1078,81
24552,1658,78
24553,34271,82
24554,42938,73
24555,1037,78
24556,42822,83
24557,42392,75
24558,1242,87
24559,4157,85
24560,1038,79
24561,1513,86
24562,16011615,88
24563,678,84
24564,43022,73
24565,71477,81
24566,26117,81
24567,848,84
24568,1662,74
24569,29053,75
24570,3443,73
24571,1078,85
24572,3443,91
24573,22032,76
24574,59388,87
24575,1663,80
24576,1078,100
24577,42722,93
24578,42959,94
24579,28754,95
24580,3443,75
24581,4157,87
24582,9947,93
24583,848,75
24584,43022,78
24585,43127,79
24586,16017020,98
24587,223118,92
24588,1324,77
24589,2596,81
24590,41852,85
24591,91322,101
24592,1078,98
24593,1662,77
24594,43064,83
24595,15158,97
24596,1037,97
24597,44632,88
24598,43022,80
24599,15000288,76
24600,50687,74
24601,2783,82
24602,47193,79
24603,54377,79
24604,2783,74
24605,4157,77
24606,44845,88
24607,60419,72
24608,43169,90
24609,1078,82
24610,44747,81
24611,3443,76
24612,85652,86
24613,1133,76
24614,42917,89
24615,4157,81
24616,43022,72
24617,43064,87
24618,43022,74
24619,42707,92
24620,43127,89
24621,43547,84
24622,43127,81
24623,4398,83
24624,27022,87
24625,44977,86
24626,44972,78
24627,20447,96
24628,1133,81
24629,44477,78
24630,678,79
24631,45217,83
24632,42896,80
24633,57903,83
24634,848,79
24635,41432,81
24636,40712,83
24637,43232,88
24638,43190,86
24639,8002899,81
24640,54325,89
24641,1148,76
24642,32381,79
24643,70022,85
24644,40522,81
24645,119378,80
24646,43337,78
24647,1078,81
24648,1324,82
24649,4157,74
24650,1078,97
24651,42875,74
24652,7168,81
24653,48722,89
24654,1128,81
24655,52307,83
24656,37202,85
24657,21000000,78
24658,45072,83
24659,88016,85
24660,43022,75
24661,34373,77
24662,964,82
24663,3097,74
24664,2213,76
24665,39138,81
24666,42917,87
24667,964,89
24668,3443,83
24669,46998,77
24670,1658,79
24671,42812,89
24672,10052,89
24673,14273,93
24674,42182,85
24675,42917,81
24676,42182,74
24677,37202,85
24678,43127,91
24679,42917,74
24680,42917,82
24681,1662,85
24682,43022,73
24683,42602,91
24684,21000000,84
24685,57363,82
24686,42917,77
24687,43022,78
24688,48797,85
24689,41942,94
24690,61944,87
24691,42833,82
24692,124802,75
24693,2213,93
24694,41982,85
24695,43072,78
24696,42287,79
24697,1454,85
24698,43022,91
24699,1658,79
24700,1078,92
24701,1232,76
24702,43022,77
24703,1757,91
24704,42182,84
24705,21000000,81
24706,53607,76
24707,1078,85
24708,48722,84
24709,1078,85
24710,4157,77
24711,43263,89
24712,848,77
24713,4157,84
24714,19292,81
24715,42182,89
24716,848,81
24717,45593,81
24718,91877,88
24719,43127,79
24720,48692,69
24721,2213,78
24722,43022,74
24723,59208,90
24724,31787,78
24725,3688,82
24726,1078,76
24727,1037,81
24728,43127,86
24729,48797,79
24730,43127,82
24731,1705,84
24732,43442,88
24733,26642,84
24734,43127,83
24735,1078,75
24736,57903,79
24737,44617,91
24738,41972,78
24739,21000000,73
24740,17137,86
24741,1037,84
24742,15000288,77
24743,1078,80
24744,57363,73
24745,43043,76
24746,43127,83
24747,3443,72
24748,71267,75
24749,59928,79
24750,37698,74
24751,38822,73
24752,54967,80
24753,42092,86
24754,1083,78
24755,848,87
24756,19397,73
24757,848,79
24758,2363,70
24759,34268,84
24760,42917,81
24761,848,73
24762,43232,82
24763,37412,86
24764,1037,77
24765,38792,77
24766,50200,75
24767,42917,88
24768,47852,80
24769,42917,88
24770,1037,84
24771,43022,76
24772,20447,96
24773,4157,89
24774,2213,84
24775,43085,74
24776,1078,81
24777,21000000,78
24778,43127,83
24779,1037,95
24780,62804,79
24781,1078,84
24782,62746,74
24783,1078,87
24784,3783,79
24785,4157,87
24786,42938,92
24787,57092,71
24788,1037,82
24789,42077,81
24790,658,89
24791,43127,78
24792,42077,101
24793,3807,79
24794,48722,76
24795,1658,81
24796,40522,74
24797,42959,76
24798,4157,79
24799,1078,73
24800,43127,74
24801,4157,82
24802,42917,81
24803,1133,76
24804,1663,73
24805,47852,96
# After 12200 updates
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be swap T / -9 x x T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 837: "x eql -9 + ≥ x ∨ x 9 x -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "x copy 2 -10 7 -3 x x 4 -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 F -6 * ≤ 7 -10 -7 F T -10 -9 x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop -8 T -6 0 -2 neg 4 9 neg x / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x -6 -1 * inc < x -3 6 x x -7 x 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 1 ungreedy -3 greedy? x 3 F T x -9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x copy 5 -10 greedy? x dec x -3 -3 dec -7 x 1 + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy neg T -6 0 -2 neg eql 9 neg greedy? ∧ x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x T -10 greedy? x 1 5 -3 -3 dec + x F x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-9 eql -1 x 5 2 depth * 9 be dec -7 x be + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F depth ¬ x greedy -3 x x x -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy / -1 -5 -7 eql neg x depth neg x / * T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 x swap x greedy -9 copy x x x T x T 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "∧ x ∨ 2 greedy? T x T 9 neg -1 T x > T 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ eql x x depth neg inc / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc F ≥ x dec > -3 -3 dec -7 x F F * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F depth ¬ x greedy x x x x -3 dec F 9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy x T -6 0 -2 neg eql 4 x x / 2 T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "5 x - 1 inc * / -8 x F -1 1 x -5 0 neg -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 ungreedy * / x 7 / ∨ x 5 3 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 x * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x T -10 greedy? x dec ≥ -3 -3 dec -7 x F + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x - 1 inc * / x x / 2 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x copy F ≤ if x dec x -3 -3 dec -7 F -8 + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x 5 swap x -2 7 -8 x F F > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc copy ≥ copy x - if -5 greedy F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 F -4 x T 5 / -6 ≤ / -5 x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 1 ungreedy ∨ greedy? x swap F T x x neg -6 -1 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 T -6 0 -2 neg eql 9 neg x / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T depth ungreedy inc neg x dec ∨ 7 / ∨ T 5 T pop -5 T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x dec x copy x T / -6 T F x x 5 -2 x -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x copy T -10 greedy? x dec x -3 -3 dec -7 x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x inc be x / x -10 x -3 -10 if -6 inc copy F T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -9 neg F inc / -4 T -10 F F 1 x -5 0 neg -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 x swap x greedy -9 copy x x x T x T < x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 inc * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy / -1 -5 -7 eql neg x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "-1 x inc -10 greedy? x 1 5 -3 -3 dec + x x 0 dec ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "swap x x ungreedy F ≤ F -1 x neg -9 + + x pop -1 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "∧ T -3 swap greedy? x 7 -10 -7 F dec greedy? -1 T F pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 993: "greedy inc be 2 -3 x -1 x 9 F -9 + ∧ greedy? pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 999: "be / x x inc x + T -10 greedy -2 1 x x 0 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "-2 dec F + x x be x x neg 1 ungreedy 5 x pop F T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T be swap * neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "dec x T swap greedy? x -7 ∧ -6 T -1 1 5 x neg 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-8 x - 1 greedy? -10 x x 9 T -9 ∧ -2 pop pop neg -6 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "F T ¬ x greedy -3 x x x -3 dec + -4 < ≤ 4 / -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x inc F + 3 4 -2 -3 x 3 depth dec x * + -4 ≥ -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy / -1 x -7 eql neg x depth x x / * T ≥ 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-8 x - 1 greedy? -10 x x 9 T -9 ∧ < pop pop < T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-6 T inc 4 greedy? pop 7 -10 x F dec -9 inc T F 0 0 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-8 x - 1 x T be T 9 x -1 x 5 < x ¬ T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy -7 x ungreedy x > F neg x greedy? x x neg x F + ungreedy -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-1 x 4 / x depth F neg x 1 x x greedy x F + ungreedy -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "eql x T swap 5 -9 -5 ∧ greedy neg -1 x F x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "ungreedy depth ungreedy inc neg x x ∨ + * ∨ T copy T pop -5 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql -1 x ≥ x x x ≥ x -5 8 5 x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x x inc + x / x 4 + x F inc x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "greedy 8 x neg x x 6 T -10 F x inc x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "x x -7 x F x T x ≥ 5 ∨ > ungreedy inc neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1078: "-2 x -6 -1 copy inc < * -4 greedy? ungreedy + swap F x greedy? x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 x ≥ - x -10 ≤ F ungreedy -1 < F x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc 3 * F be F F < x -7 -10 greedy? 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 x -2 F inc 7 9 ≥ pop F x pop - 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x -5 x x * T -5 greedy 9 x x + 5 T pop x 2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc 3 * F 4 F F < x -7 -10 -8 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop -8 T -6 0 -2 neg 4 x neg x / x ungreedy T x F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x depth ungreedy inc neg x dec ∨ 7 / < T 5 T 6 -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-7 x F x + - x -10 ≤ F ungreedy if < F x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be dec x copy F 3 F 7 > x x x ≤ ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "9 x x 1 greedy eql ¬ * 9 greedy? ungreedy + ¬ eql x x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -9 T ungreedy * / x 7 / ∨ x 5 3 pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc -10 x - 0 -2 x x x depth dec T x T T -1 copy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x ungreedy x -7 x eql ∧ F 9 x x + 5 x pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F pop x x if T be x 9 x -6 if -1 inc -2 < F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x T F 0 -6 neg x 9 T x x x ≥ x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x T F 0 neg neg x 9 T -10 x x x -1 5 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x copy 5 -10 x x dec x < x dec -7 x 1 ≤ ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x / -1 -5 -7 eql neg x depth neg x / * T x x -5 F x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x T F 0 -6 neg eql 9 T x / x x x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be dec x copy F ¬ F 7 > x x 0 neg ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-9 inc -5 swap x -2 x -8 x F T > + 6 pop 3 ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be / x x inc x x T -10 F -2 1 x x 0 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy -8 T 9 -9 -2 neg eql + neg x / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "swap depth * 4 T F x ≤ if 8 5 pop x -1 T x -3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x T -10 greedy? x dec ≥ -7 -3 dec -7 x pop + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1995: "+ -1 - 5 -4 3 + eql x x x x x -10 x 6 + x - - -9 -10 if -5 * 9 * + 5 *"
# 2213: "be swap x copy neg x -6 x 3 ≥ T * 5 inc pop neg ungreedy -5 x greedy? -9 -8 if -5 * 9 * + 5 *"
# 2213: "-7 -3 5 -10 greedy? ≤ dec x -3 -3 dec -7 x 1 + * inc -5 x ∧ -9 -10 if -5 * 9 * + 5 *"
# 2363: "be / x x inc x x F -10 F -2 x x x - 4 F F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 21882: "3 0 inc -2 x * / x 1 -6 -5 x inc + pop F T -5 x ≥ -9 -2 if -7 * 9 * dec 5 *"
# 40522: "x inc F + 3 4 -2 -3 x 3 x dec x x pop < ungreedy -5 x ≥ x -10 if -5 * 9 * dec 5 *"
24806,43001,67
24807,43022,69
24808,43022,73
24809,43022,68
24810,43022,70
24811,43547,85
24812,1078,91
24813,22183,79
24814,2213,71
24815,848,77
24816,42917,88
24817,43127,77
24818,42602,83
24819,3443,80
24820,43022,89
24821,873,88
24822,1078,90
24823,2213,81
24824,3443,86
24825,57363,78
24826,43022,80
24827,796,86
24828,48727,78
24829,4157,78
24830,33418,76
24831,1078,81
24832,29897,77
24833,43022,81
24834,848,80
24835,60717,84
24836,41172,74
24837,41342,73
24838,1078,91
24839,43022,82
24840,43127,76
24841,848,74
24842,48171,86
24843,1078,74
24844,44522,77
24845,54933,71
24846,43001,70
24847,19922,80
24848,33677,73
24849,55297,76
24850,3443,72
24851,848,86
24852,1658,82
24853,40522,77
24854,43085,86
24855,41381,79
24856,3443,69
24857,14777,73
24858,43547,80
24859,43127,78
24860,42917,90
24861,96047,98
24862,4157,83
24863,848,73
24864,1038,90
24865,43667,80
24866,13522,81
24867,43127,77
24868,75977,86
24869,6603,83
24870,43547,73
24871,1757,95
24872,1757,72
24873,3443,84
24874,3807,71
24875,1473,87
24876,1078,76
24877,43190,73
24878,42854,90
24879,33602,87
24880,43442,72
24881,63793,87
24882,3443,74
24883,43022,79
24884,38607,78
24885,40522,74
24886,3443,82
24887,21000000,71
24888,3598,87
24889,42938,85
24890,78109,78
24891,796,77
24892,25290,76
24893,1037,83
24894,43022,76
24895,43548,90
24896,1658,89
24897,43022,93
24898,1658,73
24899,12582,79
24900,848,79
24901,50647,82
24902,43022,73
24903,2213,88
24904,848,77
24905,43022,74
24906,1918,86
24907,15000288,85
24908,1037,83
24909,44157,87
24910,848,68
24911,15003247,77
24912,42272,82
24913,848,74
24914,43085,87
24915,21000000,78
24916,963,83
24917,55473,91
24918,848,73
24919,43652,70
24920,43148,76
24921,19397,82
24922,44072,77
24923,52877,76
24924,43022,74
24925,44072,80
24926,4737,84
24927,29042,76
24928,12374,76
24929,11820,88
24930,67502,81
24931,532,79
24932,37743,89
24933,46648,82
24934,43022,77
24935,678,82
24936,41657,85
24937,34517,76
24938,42980,84
24939,43022,75
24940,6382,74
24941,21000000,78
24942,36827,70
24943,798,90
24944,848,79
24945,10997,77
24946,53717,81
24947,42917,80
24948,38147,75
24949,44882,78
24950,43022,86
24951,4157,81
24952,42182,80
24953,1473,89
24954,22499,80
24955,1454,93
24956,49742,80
24957,11298,86
24958,31066,84
24959,37097,84
24960,51902,94
24961,1281,84
24962,848,74
24963,42602,83
24964,57363,77
24965,1078,73
24966,43127,83
24967,1078,86
24968,44072,75
24969,1117,84
24970,829,75
24971,44942,88
24972,113870,89
24973,1658,84
24974,36827,94
24975,15000288,88
24976,873,86
24977,56627,79
24978,43047,77
24979,43547,77
24980,17102,87
24981,43022,71
24982,28895,95
24983,42077,84
24984,47238,76
24985,24732,74
24986,4157,78
24987,1078,88
24988,43022,93
24989,1687,85
24990,42077,78
24991,21000000,88
24992,3433,87
24993,59208,81
24994,43022,89
24995,43127,86
24996,40522,78
24997,1037,82
24998,43022,83
24999,4157,79
25000,90377,99
25001,21000000,93
25002,86597,78
25003,1078,77
25004,1078,82
25005,1037,87
25006,507,83
25007,52302,91
25008,848,74
25009,42882,72
25010,43022,88
25011,42812,71
25012,848,80
25013,22002,80
25014,848,79
25015,52052,72
25016,7058,84
25017,39347,91
25018,43127,80
25019,1688,77
25020,1037,79
25021,149678,93
25022,42392,82
25023,1117417,81
25024,42452,94
25025,42962,79
25026,1883,86
25027,2038247,83
25028,42917,90
25029,43022,77
25030,507,80
25031,2213,80
25032,873,80
25033,37007,83
25034,1662,81
25035,45402,81
25036,52242,81
25037,35731,69
25038,43190,72
25039,57363,81
25040,1983,75
25041,54648,91
25042,23627,70
25043,43022,77
25044,42917,83
25045,54438,76
25046,1078,72
25047,20855,75
25048,43022,73
25049,3443,82
25050,30417,79
25051,34196,79
25052,848,78
25053,848,79
25054,57993,79
25055,98992,92
25056,3443,93
25057,1658,77
25058,1324,69
25059,76048,77
25060,47268,91
25061,21000000,76
25062,42887,93
25063,1658,85
25064,37307,90
25065,1765,78
25066,46739,82
25067,12173,80
25068,848,73
25069,1662,74
25070,796,83
25071,41132,96
25072,64127,88
25073,4157,86
25074,13922,76
25075,37332,90
25076,8494,79
25077,42602,85
25078,1343,78
25079,55023,77
25080,70347,87
25081,47868,75
25082,23627,76
25083,19187,82
25084,27474,74
25085,848,95
25086,3443,93
25087,59388,72
25088,42707,87
25089,3807,70
25090,1037,72
25091,38252,89
25092,1324,85
25093,43022,81
25094,1918,83
25095,43407,69
25096,3683,80
25097,55398,79
25098,43022,98
25099,9882,73
25100,3487999,85
25101,104237,69
25102,85652,82
25103,848,74
25104,1173,89
25105,1519,82
25106,226962,88
25107,848,79
25108,3443,80
25109,118454,86
25110,105228,82
25111,15000350,84
25112,1078,77
25113,43001,73
25114,41898,72
25115,46777,79
25116,28952,80
25117,32215,67
25118,1078,83
25119,1133,73
25120,678,91
25121,13897,79
25122,46697,87
25123,43085,90
25124,226437,76
25125,42917,83
25126,42812,86
25127,1133,84
25128,1324,79
25129,43127,76
25130,1324,78
25131,16547,80
25132,21000000,93
25133,1037,80
25134,1128,76
25135,43022,83
25136,4398,76
25137,43547,76
25138,1038,75
25139,43022,80
25140,2218,82
25141,1078,90
25142,45092,86
25143,26146,73
25144,72617,82
25145,43547,76
25146,30632,92
25147,1324,79
25148,848,83
25149,38463,71
25150,41990,79
25151,3313,90
25152,42917,87
25153,43022,94
25154,848,75
25155,1658,85
25156,26947,73
25157,1078,85
25158,3443,80
25159,42938,84
25160,41972,80
25161,47852,77
25162,43190,82
25163,35987,76
25164,95547,84
25165,42869,82
25166,34208,80
25167,42497,83
25168,42077,103
25169,4157,82
25170,1133,79
25171,119672,82
25172,63592,79
25173,2213,91
25174,81947,83
25175,42917,78
25176,43022,76
25177,43127,81
25178,39788,90
25179,42875,83
25180,43022,74
25181,43337,84
25182,814,87
25183,61817,79
25184,848,84
25185,1078,79
25186,100772,79
25187,36932,90
25188,38252,79
25189,43022,83
25190,8362,81
25191,37352,88
25192,796,84
25193,42917,77
25194,42077,81
25195,1078,78
25196,43127,88
25197,72917,74
25198,678,83
25199,43547,92
25200,35237,77
25201,42832,78
25202,42857,87
25203,44252,87
25204,42812,90
25205,848,73
25206,3683,79
25207,21000000,88
25208,41381,76
25209,1048,90
25210,47327,87
# After 12400 updates
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be swap T / -9 x x T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 T / -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x x x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "be ≥ -1 x if T be 1 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 ungreedy -3 greedy? x 3 F be x -9 -5 0 - swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ T -3 swap greedy? x ≤ -10 F F dec greedy? -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 814: "x copy 5 -10 T x F 7 ¬ -3 dec -7 T eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-8 x - 1 inc * / x 7 / -6 x 5 F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 837: "x eql -9 + ≥ x ∨ x 9 x -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ eql x x depth neg inc / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ eql x x 1 F F be F neg -6 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 9 T F ≥ x 2 > -3 -3 x / 2 T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 1 ungreedy -3 greedy? x 3 F T x -9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc F ≥ x dec > -3 -3 dec -7 x F F * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc copy ≥ copy x - if -5 greedy F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 ungreedy * / x 7 / ∨ x 5 3 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 x * / x 7 / ∨ x 5 swap pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F depth ¬ x greedy x x x x -3 dec F 9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "∧ x ∨ 2 greedy? T x T 9 neg -1 T x > T 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x ¬ swap x * -9 copy x x x T x T greedy x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -8 T -2 0 -2 neg 4 9 neg x / x T T if -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop -8 T F 0 / neg 4 9 neg ¬ / x x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 F -4 x T 5 x x x -3 dec F 9 F + dec -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 T -6 0 -2 neg eql 9 neg > / T T x 5 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 T x 0 -2 neg eql 9 neg + / x T T F -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 F -6 * ≤ 7 neg -5 x T -10 -9 x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy neg T -6 0 -2 neg eql 9 neg greedy? ∧ x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x -6 -1 * inc < x -3 6 x x -7 x 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x 5 swap x -2 7 -8 x F F > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x eql -9 F T ungreedy neg eql 9 x x + x x + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x inc be x / x -10 x -3 -10 if -6 inc copy F T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop < T F 0 -2 -8 -8 9 neg ¬ / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T depth ungreedy inc neg x dec ∨ 7 / ∨ T 5 T pop -5 T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 1 ungreedy -3 greedy? x 3 F -6 x -9 -8 ∨ * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop -8 T F 0 -2 neg 4 9 neg ¬ / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-9 eql -1 x 5 2 depth * 9 be dec -7 x be + x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ eql x x swap F T be T neg -6 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x T -10 greedy? x dec ≥ -3 -3 dec -7 x F + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc -10 x x dec x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x dec x copy x T / -6 T F x x 5 -2 x -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "5 x - 1 inc * / -8 x F -1 1 x -5 0 neg -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x 4 / greedy -3 -5 x x x x x + T + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 x swap x greedy -9 copy x x x T x T 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x inc -10 greedy? x dec ≤ -3 -3 dec greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 873: "greedy < x x if ungreedy be x 9 -4 -6 if -2 inc -2 < ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "7 T inc copy ≥ ∨ x - x -5 greedy F 9 be x < / -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-6 T inc 4 inc pop 7 -10 x F dec be inc -8 F 0 0 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-3 / -10 x inc x + T -10 greedy ¬ 1 x F + * -7 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T be swap * neg -1 + 5 x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "dec x T swap greedy? x -7 ∧ -6 T -1 1 5 x neg 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "eql x T swap 5 -9 -5 ∧ greedy neg -1 x F x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql -1 x ≥ x x x ≥ x -5 8 5 x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "/ -1 0 1 ungreedy 5 greedy? x x F T ∧ < < pop < T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "ungreedy depth ungreedy inc neg x x ∨ + * ∨ T copy T pop -5 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec F + x x be x x neg 1 ungreedy 5 x pop F T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy / -1 x -7 eql neg x depth x x / * T ≥ 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "6 -7 x ungreedy x > F 0 x greedy? x x neg x F + x -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-6 T inc 4 greedy? pop 7 -10 x F dec -9 inc T F 0 0 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "5 x if 1 inc * x -8 x x -1 x 5 < x ¬ T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-8 x - 1 greedy? -10 x x 9 T -9 ∧ -2 pop pop neg -6 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x x inc + x / x 4 + x F x x ≤ neg greedy? 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "greedy 8 x neg x x 6 T -10 F x inc x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1078: "7 x * F ≥ x dec > -3 -3 dec -7 x F F * F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "inc -10 x - 0 -2 x x x depth dec T x T T -1 copy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ -4 -3 swap greedy? x ≤ -10 F F dec x -1 -5 x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ T -3 swap ungreedy x 7 swap -7 F dec greedy? -1 T ≥ < x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "8 T -3 6 -2 F inc 7 9 ≥ pop F x -10 F ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F copy 5 - x x dec x < x dec -7 T pop - 4 F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x T F -3 -6 -5 greedy 9 x x + 5 T F x 2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 * -10 x inc x + T T greedy ¬ 1 x x if < 6 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x pop x copy x T / -6 T dec x x 5 -2 x -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x depth ungreedy inc neg x dec ∨ 7 / < T 5 T 6 -5 T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy inc x copy -3 -2 x x 9 neg -9 + pop F F 3 ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 x ≥ - x -10 ≤ F ungreedy -1 < F x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "greedy if -1 -5 -7 eql neg x depth neg x / * T x x -5 F x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-2 x -6 -1 copy inc < * -4 greedy? ungreedy + swap F x greedy? x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x T F 0 -6 neg x 9 T x x x ≥ x ungreedy > -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x x -9 T ungreedy * / x 7 / ∨ x 5 3 pop F T -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "3 < x x if ungreedy be x 3 -4 -6 if -2 inc -2 < x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "eql inc 3 * F be F F < x -7 -10 greedy? 9 8 x 1 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "pop -8 T -6 0 -2 neg 4 x neg x / x ungreedy T x F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "be dec x copy F 3 F 7 > x x x ≤ ≤ ≥ x x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1983: "> x x x inc x x F -10 F -2 x x greedy? - ≥ F F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 2213: "pop -8 x -6 0 -2 neg 4 x neg x * 5 inc pop neg ungreedy x T greedy? -9 -8 if -5 * 9 * + 5 *"
# 2213: "x inc x copy -3 1 dec pop -3 -3 dec -7 x 0 + * inc T x ∧ -9 -10 if -5 * 9 * + 5 *"
# 2218: "x inc -5 / x -10 x if x x x x + x pop neg ungreedy x x inc -9 -1 if -5 * 9 * + 5 *"
# 6382: "x x 2 -10 7 -3 x x pop -3 dec * x F + x -5 -5 if ≥ x -10 if -5 * 9 * + 4 *"
# 38463: "8 dec -3 3 -2 F inc x 9 ≥ dec * x F + x -5 -5 x ≥ -9 + if ∨ * 9 * + 5 *"
25211,43022,71
25212,42252,69
25213,43232,77
25214,43085,77
25215,43022,68
25216,42077,79
25217,55698,74
25218,42182,77
25219,61767,72
25220,1765,69
25221,42252,84
25222,35042,85
25223,14795,75
25224,22547,78
25225,4157,84
25226,4398,76
25227,43232,79
25228,41657,83
25229,38792,81
25230,848,83
25231,42917,76
25232,42602,75
25233,2213,90
25234,43127,77
25235,848,81
25236,40213,77
25237,3358,71
25238,43022,76
25239,43022,73
25240,57363,82
25241,938,72
25242,3443,84
25243,45447,87
25244,867,86
25245,42917,81
25246,43022,87
25247,42917,94
25248,43022,84
25249,4413,80
25250,43547,79
25251,848,92
25252,848,75
25253,41447,85
25254,42696,85
25255,1078,84
25256,1083,77
25257,59388,94
25258,45437,77
25259,1662,74
25260,42077,81
25261,3807,78
25262,1878,76
25263,4127,92
25264,20937,92
25265,33677,99
25266,1454,93
25267,57723,71
25268,26617,83
25269,44057,74
25270,848,95
25271,44927,88
25272,43127,81
25273,43127,84
25274,43547,75
25275,43022,68
25276,77672,70
25277,1336,90
25278,170233,80
25279,19502,75
25280,55098,76
25281,21000000,82
25282,49217,84
25283,43022,89
25284,33938,78
25285,3443,86
25286,15000603,74
25287,42077,88
25288,43127,81
25289,42028,74
25290,3443,89
25291,69419,90
25292,55297,85
25293,47118,79
25294,79577,88
25295,43022,86
25296,40582,78
25297,2213,69
25298,43022,80
25299,35327,82
25300,993,81
25301,51902,82
25302,43127,77
25303,21000000,88
25304,42077,71
25305,848,74
25306,21000000,80
25307,848,75
25308,43190,85
25309,1117,78
25310,42497,89
25311,43337,74
25312,1078,82
25313,39347,73
25314,39747,95
25315,37697,91
25316,1037,81
25317,3443,90
25318,1662,83
25319,836,81
25320,19082,89
25321,43757,75
25322,49742,80
25323,43022,76
25324,3443,74
25325,829,77
25326,2783,76
25327,829,70
25328,21000000,88
25329,44072,80
25330,42917,83
25331,848,73
25332,1037,83
25333,42959,91
25334,43127,84
25335,48722,83
25336,1078,78
25337,38792,89
25338,80927,85
25339,110117,73
25340,43085,87
25341,848,72
25342,798,91
25343,72317,72
25344,43022,74
25345,1658,75
25346,57993,73
25347,4350,78
25348,43022,77
25349,38822,80
25350,68327,77
25351,64967,88
25352,43022,79
25353,43547,82
25354,848,80
25355,1662,89
25356,2218,82
25357,848,80
25358,35567,78
25359,43022,98
25360,848,75
25361,43967,72
25362,4466,81
25363,5903,79
25364,42602,79
25365,46382,76
25366,1078,83
25367,80092,72
25368,1662,96
25369,42287,87
25370,1037,75
25371,3008,90
25372,1658,82
25373,1037,77
25374,1037,73
25375,4157,76
25376,43022,79
25377,42947,73
25378,17773,75
25379,51527,78
25380,43118,75
25381,848,75
25382,2743,77
25383,848,76
25384,1133,82
25385,43022,84
25386,7958,78
25387,848,86
25388,24913,83
25389,1078,74
25390,993,84
25391,48272,79
25392,44477,84
25393,43022,78
25394,44417,86
25395,42917,74
25396,1457,82
25397,1658,99
25398,21000000,82
25399,1343,82
25400,47852,88
25401,21000000,93
25402,48722,77
25403,40763,81
25404,1663,74
25405,61208,87
25406,42917,86
25407,45497,76
25408,43127,77
25409,42917,83
25410,4240,83
25411,1173,77
25412,41942,77
25413,796,75
25414,42977,91
25415,999,87
25416,43337,86
25417,1649,80
25418,848,77
25419,44642,74
25420,4157,74
25421,8186,78
25422,43022,84
25423,43127,76
25424,43022,77
25425,2213,87
25426,3443,77
25427,17533,72
25428,1037,83
25429,2213,79
25430,44072,82
25431,11000880,77
25432,43022,79
25433,3443,77
25434,42896,69
25435,13467,87
25436,796,83
25437,43022,78
25438,42896,70
25439,66752,86
25440,1955,74
25441,43967,84
25442,34187,83
25443,21000000,81
25444,48617,80
25445,42917,93
25446,42077,80
25447,44072,74
25448,43547,70
25449,1082,76
25450,848,74
25451,1324,79
25452,25697,72
25453,44017,77
25454,848,76
25455,4252,82
25456,41381,86
25457,42917,81
25458,40344,84
25459,55878,85
25460,43157,77
25461,42917,93
25462,4157,77
25463,43106,83
25464,43022,96
25465,43022,86
25466,42917,86
25467,21000000,80
25468,21000000,75
25469,3443,83
25470,42077,80
25471,91217,72
25472,1324,83
25473,48722,83
25474,1658,79
25475,43967,81
25476,43022,81
25477,43022,85
25478,829,72
25479,3698,83
25480,793,78
25481,873,85
25482,42917,80
25483,66752,73
25484,73322,91
25485,43022,80
25486,796,91
25487,41342,83
25488,43024,87
25489,51668,76
25490,15012892,81
25491,43127,72
25492,1133,75
25493,86697,86
25494,91217,73
25495,38822,79
25496,42917,83
25497,999,92
25498,61692,72
25499,45402,85
25500,15005812,85
25501,848,74
25502,71553,89
25503,42077,69
25504,43042,81
25505,21000000,82
25506,848,82
25507,4157,83
25508,6167,74
25509,8438,85
25510,48717,86
25511,21000000,83
25512,43022,83
25513,234692,72
25514,25322,73
25515,43022,86
25516,43106,75
25517,112322,77
25518,39662,76
25519,21000000,81
25520,1078,82
25521,43292,88
25522,1173,79
25523,42917,81
25524,48272,93
25525,1324,88
25526,55297,81
25527,1037,78
25528,27939,82
25529,46662,93
25530,42182,85
25531,76202,69
25532,1133,80
25533,44845,78
25534,40163,75
25535,9583,84
25536,4252,75
25537,43022,94
25538,1612,84
25539,43022,100
25540,44072,68
25541,1663,90
25542,1757,91
25543,56002,83
25544,47747,72
25545,2213,88
25546,86792,83
25547,57492,91
25548,43547,88
25549,848,87
25550,3443,94
25551,48772,82
25552,41972,67
25553,42707,72
25554,41657,80
25555,43022,86
25556,42182,85
25557,43022,80
25558,57318,87
25559,3443,84
25560,15000668,84
25561,43022,79
25562,42917,79
25563,1078,78
25564,3443,79
25565,28502,80
25566,54057,73
25567,36977,76
25568,43547,72
25569,837,77
25570,1078,83
25571,47002,78
25572,1078,88
25573,36092,78
25574,20342,73
25575,42917,84
25576,129332,81
25577,44770,73
25578,1519,86
25579,47747,93
25580,181253,87
25581,678,82
25582,42917,81
25583,53972,79
25584,41923,82
25585,43022,79
25586,43127,81
25587,1078,81
25588,3443,81
25589,42077,84
25590,57993,83
25591,120861,80
25592,57547,87
25593,44277,94
25594,25688,78
25595,43067,86
25596,73502,77
25597,55878,83
25598,42917,74
25599,1038,78
25600,3783,72
25601,848,79
25602,42972,78
25603,43547,77
25604,1324,91
25605,43022,74
25606,43997,98
25607,19397,85
25608,1078,93
25609,848,84
25610,48722,83
25611,1078,87
25612,20447,70
25613,43022,78
25614,1078,78
25615,4313,82
# After 12600 updates
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 T / -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be swap T / -9 x x T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy + x T x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x x x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x -3 x -6 0 -2 neg eql 9 neg > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "be ≥ -1 x if T be 1 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 ungreedy greedy greedy? x 3 F < eql -9 -5 0 - swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 -5 greedy -1 T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "F -8 T F 0 -2 -9 x 7 / ∨ x 5 swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ -3 -3 swap greedy? x ≤ -10 F F dec greedy? -1 F neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ T -3 swap greedy? x ≤ -10 F F dec greedy? -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 814: "x copy 5 -10 T x F 7 ¬ -3 dec -7 T eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "x x 0 -10 -6 if neg 0 -10 neg x / x T T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "5 x -2 F inc * x eql x T -1 x 5 < x ¬ -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-8 x - 1 inc * / x 7 / -6 x 5 F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "T / -10 x greedy? x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 F if -5 * 9 * + 5 *"
# 837: "x eql -9 + ≥ x ∨ x 9 x -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 837: "x eql ∧ + ≥ x ∨ x 9 x -5 8 greedy x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "T x - 1 inc x x swap x -3 dec F 9 F x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 be eql x x 1 F F be x neg -6 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 greedy x 0 -2 neg x 9 neg -7 -7 ungreedy be + x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc -10 x x dec x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x 4 2 x dec F T x 7 dec -3 / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x 4 / greedy -3 -5 x x x x x + T + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 1 ungreedy -3 greedy? x 3 F -6 x -9 -8 ∨ * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T depth ungreedy inc neg x dec ∨ 7 / ∨ T 5 T pop -5 T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 9 T F ≥ x 2 > -3 -3 x / 2 T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x 4 2 x dec F T x x -3 greedy? F pop F 0 neg -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 F -6 * ≤ 7 neg -5 x T -10 -9 x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x inc be x / x -10 x -3 -10 if -6 inc copy F T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop < T F 0 -2 -8 -8 9 neg ¬ / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc copy ≥ copy x - if -5 greedy F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x T F x copy x - if -5 greedy eql 9 be -10 * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ x 2 x swap F T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 x swap x greedy -9 copy x x x T x T 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x 0 1 ungreedy 8 / ∨ 7 / ∨ x 5 x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 ungreedy * / x 7 / ∨ x 5 3 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x inc x x / F 0 ∨ greedy? -9 x x inc pop -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop -8 T F 0 -2 neg 4 9 neg ¬ / x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop -8 T F 0 / neg 4 9 neg ¬ / x x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "≤ x greedy ∧ 0 -2 neg x 9 neg -7 -7 ungreedy be + x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x 5 swap x -2 7 -8 x F F > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / F -5 -4 x neg eql 9 x x inc x x inc * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x inc -10 greedy? x dec ≤ -3 -3 dec greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T T -1 ∨ ∧ eql x x depth neg -6 / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc -10 x x dec x 9 neg x / x T ≤ greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 1 ungreedy -3 greedy? x 3 F T x -9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "∧ x ∨ 2 greedy? T x T 9 neg -1 T x > T 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ eql x x swap F T be T neg -6 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x - -10 greedy? be dec ≥ -3 neg ¬ / x 2 T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy neg T -6 0 -2 neg eql 9 neg greedy? ∧ x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x -6 -1 * inc < x -3 6 x x -7 x 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x dec x copy x T / -6 T F x x 5 -2 x -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 F -4 x T 5 x x x -3 dec F 9 F + dec -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 867: "-2 dec F 6 x depth be x x neg 1 ungreedy 5 x pop F neg -5 x > -9 -10 if -5 * 9 * + 5 *"
# 873: "greedy < x x if ungreedy be x 9 -4 -6 if -2 inc -2 < ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "dec x T swap greedy? x -7 ∧ -6 T -1 1 5 x neg 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql x x ≥ x x x ≥ x -5 8 depth x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "/ -1 0 1 ungreedy 5 greedy? x x F T ∧ < < pop < T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-8 x - 1 greedy? -10 x x 9 T -9 ∧ -2 pop pop neg -6 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql -1 x ≥ x x x ≥ x -5 8 5 x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T x ≥ * neg -1 + x x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "neg T inc -10 depth x x ∨ + * ∨ T copy x pop -5 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-3 / -10 x inc x + T -10 greedy ¬ 1 x F + * -7 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "eql x T swap 5 -9 -5 ∧ greedy neg -1 x F x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy neg T -6 0 neg neg eql 9 neg ∨ + 5 x - 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy -7 x copy F ∨ x T x -5 copy F 9 be x < / -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-3 x F x inc x + T -10 greedy ¬ 1 x F + * -7 -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql -1 x ≥ x x x ≥ F 1 8 5 x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x x inc + x / x 4 + x F x x ≤ neg greedy? 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "x pop x be x / x 4 + x -10 x < ≤ neg greedy? 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "greedy 8 x neg x x 6 T -10 F x inc x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1078: "inc -10 x - 0 -2 x x x depth dec T x T T -1 copy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F / x x / x x dec dec x < x copy x pop neg 3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ T -3 swap ungreedy x 7 swap -7 F dec greedy? -1 T ≥ < x -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "7 T inc copy 0 copy x - -2 -5 greedy F 9 x x * -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x dec x copy x T / -6 T F x x 5 -2 x greedy? ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F -8 T F 0 -2 -9 -5 7 / ∨ x x swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-3 * -10 x inc x + T T greedy ¬ 1 x x if < 6 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ -4 -3 swap greedy? x ≤ -10 F F dec x -1 -5 x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "x greedy -3 x ≥ - x -10 ≤ F ungreedy -1 < F x x -5 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "-8 x T F -3 -6 -5 greedy 9 x x + 5 T F x 2 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "7 x * F ≥ x dec inc -3 T -8 -7 x F F * F -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1663: "pop -8 ∧ -6 0 ∨ neg 4 T neg x * 5 inc pop neg ungreedy x T greedy? -9 -8 if -5 * 9 * F 5 *"
# 2213: "x inc x copy -3 1 dec pop -3 -3 dec -7 x 0 + * inc T x ∧ -9 -10 if -5 * 9 * + 5 *"
# 3443: "neg T / -10 depth x x ∨ + * ∨ T copy x ∨ -5 T x -8 > -9 -10 if -5 * 9 * + 5 *"
# 4252: "-2 inc -2 + * -10 T + x + - inc -10 dec x 7 1 ≥ 6 x x -10 if -5 * 9 * T 5 *"
# 4466: "-8 x - 1 greedy? -10 x x 9 T -9 ∧ -2 pop pop neg if x x > T -10 if -5 * 9 * + 4 *"
25616,43032,70
25617,43022,68
25618,43022,78
25619,43022,67
25620,43022,71
25621,49742,89
25622,42917,82
25623,3443,76
25624,21000000,77
25625,42938,82
25626,1226,84
25627,66227,92
25628,50288,79
25629,37988,78
25630,15398,79
25631,1343,75
25632,2482,81
25633,42917,77
25634,1281,86
25635,4228,85
25636,43022,82
25637,38363,92
25638,87842,83
25639,3238,77
25640,42523,80
25641,43337,85
25642,829,77
25643,793,78
25644,42917,81
25645,57723,73
25646,42917,85
25647,4157,79
25648,12773,79
25649,43022,76
25650,51522,82
25651,43022,78
25652,848,75
25653,43022,75
25654,44072,71
25655,678,84
25656,42917,73
25657,2213,74
25658,1454,85
25659,19397,81
25660,848,76
25661,53335,83
25662,21000000,84
25663,55338,81
25664,15013129,97
25665,42497,85
25666,45402,87
25667,21000000,69
25668,42822,87
25669,829,78
25670,1658,87
25671,5747,71
25672,1918,93
25673,1649,80
25674,71297,74
25675,34283,84
25676,16000195,70
25677,3443,75
25678,1324,83
25679,4157,76
25680,3683,82
25681,73187,71
25682,21000000,83
25683,43862,89
25684,43022,79
25685,42917,85
25686,42917,73
25687,49967,72
25688,43022,84
25689,964,86
25690,42947,78
25691,4312,81
25692,32297,82
25693,1078,84
25694,43232,82
25695,1037,77
25696,57678,85
25697,62252,71
25698,2213,78
25699,314734,79
25700,3443,73
25701,38972,67
25702,43022,90
25703,48797,79
25704,33692,84
25705,43317,91
25706,1133,83
25707,43967,81
25708,3013,80
25709,42182,83
25710,1663,93
25711,57723,83
25712,57197,83
25713,1037,78
25714,48272,91
25715,48722,77
25716,42182,92
25717,41381,78
25718,4283,75
25719,43003,77
25720,44912,97
25721,43610,85
25722,44072,71
25723,78767,71
25724,1730,88
25725,43517,101
25726,2213,84
25727,21000000,79
25728,72431,90
25729,90272,79
25730,43022,82
25731,85547,86
25732,78167,79
25733,43022,76
25734,55773,75
25735,42788,86
25736,848,81
25737,44942,89
25738,1465,76
25739,1038,83
25740,1443,83
25741,848,84
25742,58247,81
25743,678,80
25744,42028,73
25745,43817,77
25746,2213,106
25747,38458,82
25748,1037,77
25749,69377,76
25750,1343,78
25751,3443,79
25752,46451,76
25753,43022,90
25754,44237,81
25755,38552,80
25756,43667,75
25757,47747,100
25758,1343,75
25759,6003155,78
25760,39767,81
25761,1730,76
25762,43106,91
25763,57363,94
25764,42875,73
25765,848,74
25766,42917,89
25767,16000385,73
25768,1658,79
25769,45447,97
25770,42812,81
25771,20457,83
25772,43022,79
25773,1343,76
25774,43127,71
25775,57723,81
25776,42077,78
25777,43022,69
25778,8533,83
25779,848,75
25780,829,76
25781,3637,84
25782,23949,84
25783,41132,95
25784,17343,81
25785,837,75
25786,45092,71
25787,1658,74
25788,4283,70
25789,1038,72
25790,1662,70
25791,54700,73
25792,1324,76
25793,33002,92
25794,848,84
25795,57768,76
25796,28196,82
25797,43022,82
25798,43232,76
25799,1078,88
25800,10997,88
25801,40163,76
25802,44857,92
25803,3698,70
25804,85547,92
25805,848,92
25806,3443,80
25807,796,84
25808,43022,76
25809,43022,91
25810,42917,71
25811,2213,75
25812,4157,78
25813,37202,82
25814,1133,103
25815,21000000,76
25816,848,92
25817,43022,84
25818,46228,90
25819,42854,86
25820,848,76
25821,43442,82
25822,46397,84
25823,4157,77
25824,43022,83
25825,45017,97
25826,1324,71
25827,837,78
25828,38147,84
25829,1037,77
25830,43022,99
25831,21000000,83
25832,20447,85
25833,42917,74
25834,1757,83
25835,1658,72
25836,1147,78
25837,40613,80
25838,42182,80
25839,796,90
25840,43912,76
25841,20532,77
25842,43022,74
25843,848,76
25844,43547,81
25845,45703,74
25846,40763,93
25847,37202,84
25848,2528,87
25849,1730,84
25850,1324,78
25851,81137,80
25852,32592,73
25853,1147,81
25854,1078,80
25855,55248,83
25856,848,72
25857,2793,92
25858,36302,71
25859,507,82
25860,42077,82
25861,1078,85
25862,2213,78
25863,41770,80
25864,40712,74
25865,43211,78
25866,42707,73
25867,43022,85
25868,45447,77
25869,37202,89
25870,1200,74
25871,21000000,79
25872,61338,81
25873,73322,81
25874,17342,75
25875,19292,81
25876,43211,79
25877,43022,67
25878,38792,90
25879,1336,82
25880,47012,81
25881,3967,79
25882,5978,78
25883,57363,83
25884,1658,72
25885,15000288,84
25886,1078,99
25887,43022,80
25888,35042,90
25889,42367,82
25890,43211,83
25891,2213,90
25892,40013,83
25893,873,73
25894,42991,73
25895,43022,84
25896,54798,82
25897,110306,78
25898,34313,84
25899,42917,77
25900,2263,86
25901,104492,77
25902,1226,80
25903,43022,74
25904,54242,91
25905,1658,93
25906,1658,77
25907,27318,85
25908,1117,89
25909,4398,78
25910,66647,90
25911,43127,77
25912,57678,77
25913,796,81
25914,38852,94
25915,42077,81
25916,44072,78
25917,43022,91
25918,43022,78
25919,2213,69
25920,1268,85
25921,42917,73
25922,51107,76
25923,17500,78
25924,43022,90
25925,7838,84
25926,32522,80
25927,1658,86
25928,3523864,75
25929,36827,91
25930,53522,70
25931,16987,80
25932,42147,96
25933,43085,94
25934,91817,81
25935,48722,72
25936,58247,93
25937,37202,92
25938,43022,84
25939,1848,87
25940,14417,80
25941,43064,84
25942,1078,74
25943,1699,82
25944,43022,70
25945,42917,76
25946,42767,85
25947,21000000,72
25948,1037,77
25949,43211,84
25950,42977,75
25951,4648,72
25952,21000000,92
25953,43022,77
25954,1757,72
25955,25018,77
25956,3443,76
25957,3637,87
25958,43022,75
25959,43842,87
25960,80672,82
25961,44072,95
25962,36289,76
25963,1673,75
25964,3443,77
25965,45402,78
25966,42602,99
25967,135313,79
25968,42917,79
25969,57547,89
25970,21000000,69
25971,42917,81
25972,43127,76
25973,793,79
25974,57543,86
25975,86597,79
25976,46782,72
25977,1078,78
25978,43022,73
25979,2213,77
25980,21859,84
25981,31093,93
25982,20002493,91
25983,43967,72
25984,41972,77
25985,43152,78
25986,43337,74
25987,848,69
25988,4157,77
25989,929,78
25990,3443,74
25991,848,86
25992,53042,74
25993,507,87
25994,42028,72
25995,48272,83
25996,848,84
25997,1717,84
25998,3443,85
25999,43022,75
26000,42077,70
26001,43007,90
26002,69272,84
26003,3967,92
26004,35042,74
26005,43127,78
26006,2213,78
26007,3783,94
26008,1662,82
26009,25858,70
26010,3033,88
26011,2618,85
26012,829,76
26013,1037,73
26014,1699,84
26015,60487,76
26016,837,75
26017,60032,81
26018,1454,83
26019,898,74
26020,42917,95
# After 12800 updates
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x x x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 T / -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T F 0 -2 neg 4 9 x ¬ inc x x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy + x T x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be swap T / -9 x x T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x < T F 0 -2 -8 -8 9 neg -8 / x x T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x -3 x -6 0 -2 neg eql 9 neg > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "∧ 1 -3 swap -7 x -3 -10 9 neg > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x -1 x -6 0 -2 neg eql 9 -2 > / -7 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "x x x -10 dec -10 x x 9 T -9 x -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 ungreedy greedy greedy? x 3 F < eql -9 -5 0 - swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-3 x F x inc x neg eql x pop depth + 5 -9 -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "F -8 T F 0 -2 -9 x 7 / ∨ x 5 swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "be ≥ -1 x if T be 1 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 -5 greedy -1 T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T inc x + T -10 greedy pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ T -3 swap greedy? x ≤ -10 F F dec greedy? -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 814: "x copy 5 -10 T x F 7 ¬ -3 dec -7 T eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "be ≥ -1 x dec -10 x x 9 F x x -1 pop x be -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "x x 0 -10 -6 if neg 0 -10 neg x / x T T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-8 x - 1 inc * / x 7 / -6 x 5 F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "5 x -2 F inc * x eql x T -1 x 5 < x ¬ -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "T / -10 x greedy? x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 F if -5 * 9 * + 5 *"
# 837: "inc -10 x - 0 -2 x x x depth 8 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 837: "pop / T F 0 -3 neg 4 9 0 -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 837: "x eql -9 + ≥ x ∨ x 9 x -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 837: "-3 8 x x / x x dec dec -3 dec / 5 x ¬ -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc be x T x -10 x -3 + if -6 inc F F T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x inc x x / F 0 ∨ greedy? -9 x x inc pop -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc copy ≥ copy x - if -5 greedy F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T x - -6 -1 x x swap x -3 dec F x F x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ x 2 x swap F T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T depth ungreedy inc neg x dec ∨ 7 / ∨ T 5 T pop -5 T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x -6 -1 * inc < x -3 6 x x -7 x 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x - 1 ungreedy * / x 7 / ∨ x 5 3 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 greedy x 0 -2 neg x 9 neg -7 -7 ungreedy be + x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ eql x x swap F T be T neg -6 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x - copy neg T x eql -2 -5 greedy F > x x depth -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x dec x copy x T / -6 T F x x 5 -2 x -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x inc -10 greedy? x dec ≤ -3 -3 dec greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x 4 2 x dec F T x 7 dec -3 / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x x / greedy -3 -5 depth F x dec greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 F -6 * ≤ 7 neg -5 x T -10 -9 x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x 5 ∧ x -2 7 -8 x F F > ungreedy be ¬ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc -10 x x dec x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy neg T -6 0 -2 neg eql 9 neg greedy? ∧ x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x - -10 greedy? be dec ≥ -3 neg ¬ / x 2 T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x T F x copy x - if -5 greedy eql 9 be -10 * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 x swap x greedy -9 copy x x x T x T 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x 5 swap x -2 7 -8 x F F > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 be eql T x 1 F F be x ∧ T 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 1 ungreedy -3 greedy? x 3 F T x -9 F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / F -5 -4 x neg eql 9 x x inc x x inc * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x inc x x F T -9 x -3 greedy? F pop F * neg -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x * 2 x ¬ x / + * T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 9 T F ≥ x 2 > -3 -3 x / 2 T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "be -1 0 1 ungreedy 5 greedy? x x -5 greedy -7 9 x x depth -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T x - 1 inc x x swap x -3 dec F 9 F x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc x x x dec x 9 x x / x T ≤ greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "pop 5 greedy F 0 -3 -9 4 9 0 -5 8 5 x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T T -1 ∨ ∧ eql x x depth neg -6 / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 867: "-2 dec F 6 x depth be x x neg 1 ungreedy 5 x pop F neg -5 x > -9 -10 if -5 * 9 * + 5 *"
# 873: "0 -7 / 9 x -2 7 -8 x x F > + x pop neg -4 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 873: "greedy < x x if ungreedy be x 9 -4 -6 if -2 inc -2 < ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 898: "F -2 x x greedy -3 ∧ x x x x > + x pop x ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "greedy neg T -6 0 neg neg eql 9 neg ∨ + 5 x - 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy -7 x copy F ∨ x T x -5 copy F 9 be x < / -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x < 5 -9 -5 ∧ x neg -1 x F x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 x x + x T x ≥ x neg -1 + x x pop 4 x -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql x x ≥ x x x ≥ x -5 8 depth x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql -1 x ≥ x x x ≥ F 1 8 5 x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-2 dec x + x T x ≥ * neg -1 + x x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy -7 -1 x T x x x ≥ x -5 8 F x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "T / -10 x inc x x ∨ + * ∨ T x x pop -5 T greedy x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x x inc + x / x 4 + x F x x ≤ neg greedy? 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "greedy 8 x neg x x 6 T -10 F x inc x ≤ neg eql 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1078: "F -8 T F 0 -2 -9 -5 7 / ∨ x x swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ -3 -3 swap greedy? x ≤ x copy F F greedy? -1 T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "∧ 1 F swap -7 x x -10 9 neg > x -6 -1 x ¬ -6 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1078: "F / x x / x x dec dec x < x copy x pop neg 3 -5 x ≥ -9 -10 if -5 * 9 * dec 5 *"
# 1343: "-1 x inc -10 x x dec -5 9 neg x x x x 6 * x -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1663: "x dec x copy x T / -6 T F inc x 5 -2 x neg ungreedy T greedy? greedy? -9 -8 if -5 * 9 * F 5 *"
# 2213: "x inc x copy -3 1 dec pop -3 -3 dec -7 x 0 + * inc T x ∧ -9 -10 if -5 * 9 * + 5 *"
# 3967: "-8 / x x / x x F dec x < x inc x -2 neg ungreedy x x ≥ -3 -10 if -5 * 9 * + 5 *"
# 3967: "-1 x 0 ∧ ungreedy greedy greedy? swap dec x < x ∨ x -2 neg -2 x x ≥ -3 -10 if -5 * 9 * + 5 *"
# 4466: "-8 x - 1 greedy? -10 x x 9 T -9 ∧ -2 pop pop neg if x x > T -10 if -5 * 9 * + 4 *"
26021,42854,71
26022,43022,67
26023,43169,77
26024,42854,71
26025,43022,79
26026,2213,72
26027,42854,75
26028,55788,80
26029,57363,81
26030,51917,80
26031,1848,87
26032,16000247,71
26033,19502,91
26034,43127,84
26035,43190,77
26036,44072,73
26037,1658,86
26038,45622,87
26039,41942,99
26040,43862,84
26041,48722,80
26042,47327,85
26043,21000000,79
26044,848,73
26045,43022,68
26046,1705,79
26047,41552,83
26048,37202,82
26049,46327,89
26050,43022,72
26051,55297,86
26052,2213,83
26053,105750,81
26054,55968,81
26055,1569,79
26056,21000000,76
26057,43547,84
26058,43022,80
26059,21000000,77
26060,43022,88
26061,42938,84
26062,21000000,79
26063,17822,77
26064,152927,77
26065,848,74
26066,42854,72
26067,48677,74
26068,43022,84
26069,54407,82
26070,55248,87
26071,52017,100
26072,848,91
26073,48542,81
26074,43022,75
26075,48722,72
26076,21000000,91
26077,38038,89
26078,43022,84
26079,44072,80
26080,3443,84
26081,678,86
26082,848,84
26083,63322,75
26084,1037,90
26085,1173,75
26086,1556,72
26087,43022,77
26088,829,80
26089,43022,77
26090,36877,73
26091,43022,73
26092,22032,78
26093,43247,79
26094,829,72
26095,848,78
26096,43022,77
26097,43022,80
26098,42077,80
26099,507,80
26100,42917,74
26101,801,91
26102,54513,70
26103,43127,72
26104,43022,84
26105,3443,86
26106,48302,71
26107,41153,79
26108,1757,77
26109,1757,76
26110,43547,75
26111,3443,82
26112,125687,77
26113,44072,92
26114,1748,99
26115,44567,81
26116,848,80
26117,57363,88
26118,2193,86
26119,2213,74
26120,31982,81
26121,43022,80
26122,848,79
26123,43022,82
26124,3443,75
26125,5002208,88
26126,42896,83
26127,54798,77
26128,37877,80
26129,3358,80
26130,47747,78
26131,39658,79
26132,43022,85
26133,43169,91
26134,21000000,92
26135,42854,73
26136,57678,78
26137,38033,82
26138,42965,80
26139,69317,81
26140,43547,75
26141,3443,75
26142,42854,92
26143,50533,69
26144,42392,92
26145,77147,76
26146,43022,88
26147,42917,80
26148,3443,84
26149,793,86
26150,898,75
26151,40763,71
26152,2783,72
26153,43022,79
26154,3443,84
26155,43757,79
26156,42182,74
26157,1124,85
26158,51163,81
26159,89747,84
26160,41942,85
26161,50897,75
26162,42797,97
26163,2623,79
26164,2828,89
26165,793,86
26166,45142,77
26167,15013147,94
26168,848,74
26169,36827,79
26170,33572,83
26171,43022,84
26172,1037,73
26173,678,78
26174,21000000,74
26175,38297,86
26176,27272,86
26177,1324,84
26178,43169,80
26179,42077,79
26180,848,80
26181,43232,87
26182,47747,85
26183,86942,84
26184,42875,76
26185,43097,84
26186,3443,80
26187,41237,95
26188,15000288,82
26189,42917,87
26190,678,87
26191,3443,76
26192,38297,100
26193,42854,92
26194,47797,76
26195,43547,82
26196,89327,76
26197,1037,84
26198,3443,92
26199,848,75
26200,43802,81
26201,2943,83
26202,52577,88
26203,43022,79
26204,48722,81
26205,42077,90
26206,42917,72
26207,43757,77
26208,56508,77
26209,73967,77
26210,43127,81
26211,42917,84
26212,4398,79
26213,21000000,87
26214,41839,79
26215,3274,90
26216,43022,78
26217,15722,74
26218,848,76
26219,796,89
26220,43022,85
26221,796,81
26222,8848,93
26223,4398,78
26224,44072,77
26225,42077,76
26226,44522,87
26227,4398,80
26228,1662,71
26229,49217,72
26230,223517,82
26231,35643,96
26232,2213,86
26233,2213,97
26234,3443,79
26235,1653,73
26236,42833,82
26237,29897,79
26238,51107,72
26239,3443,77
26240,1443,82
26241,3443,73
26242,848,78
26243,3443,86
26244,8957,85
26245,678,70
26246,43022,87
26247,47217,82
26248,999,87
26249,43547,82
26250,42917,91
26251,1658,73
26252,46593,81
26253,57293,86
26254,3807,76
26255,42652,76
26256,678,82
26257,38987,78
26258,1757,82
26259,43022,77
26260,34517,92
26261,3443,82
26262,43211,85
26263,58297,92
26264,90272,83
26265,81507,70
26266,21000000,76
26267,42322,74
26268,42812,81
26269,55908,79
26270,2213,78
26271,303858,92
26272,3443,98
26273,3783,86
26274,42980,85
26275,43022,85
26276,3443,81
26277,43997,81
26278,65702,93
26279,92792,84
26280,721,82
26281,3443,74
26282,3032,83
26283,42077,79
26284,62867,86
26285,47777,83
26286,793,74
26287,43022,79
26288,42896,76
26289,15512,71
26290,56053,71
26291,43069,98
26292,678,85
26293,42962,83
26294,29447,77
26295,42392,92
26296,38147,94
26297,37457,98
26298,2743,84
26299,41867,89
26300,43022,92
26301,19000080,89
26302,57318,89
26303,21000000,77
26304,39788,73
26305,1082,76
26306,43043,92
26307,848,78
26308,829,72
26309,62718,78
26310,59297,80
26311,36493,79
26312,48722,77
26313,83931,76
26314,43067,85
26315,21000000,85
26316,43022,84
26317,2783,80
26318,39242,94
26319,36718,71
26320,1083,72
26321,43022,88
26322,793,76
26323,20447,82
26324,44072,88
26325,19397,75
26326,21000000,91
26327,42707,88
26328,678,84
26329,1037,88
26330,21000000,88
26331,44072,85
26332,29442,81
26333,26973,85
26334,85652,79
26335,1493,74
26336,43022,84
26337,4157,75
26338,42988,81
26339,678,88
26340,54753,87
26341,39347,80
26342,55698,87
26343,848,82
26344,1663,85
26345,43022,75
26346,42917,86
26347,89957,82
26348,43127,75
26349,42077,90
26350,793,79
26351,837,77
26352,42077,90
26353,44342,73
26354,678,88
26355,42077,74
26356,43064,83
26357,42896,102
26358,40763,72
26359,90272,76
26360,25022,74
26361,2949,97
26362,3443,82
26363,42077,75
26364,1037,75
26365,1078,78
26366,42896,84
26367,43022,90
26368,43547,82
26369,848,72
26370,1117,96
26371,10472,79
26372,1078,79
26373,43022,79
26374,2763,73
26375,38347,81
26376,77147,71
26377,43022,80
26378,43547,92
26379,41132,85
26380,42077,74
26381,21000000,82
26382,43547,73
26383,45557,75
26384,43547,87
26385,42917,77
26386,1527,77
26387,1082,84
26388,15010426,80
26389,44072,74
26390,42947,88
26391,42452,84
26392,97568,75
26393,43992,74
26394,48272,91
26395,4062,84
26396,21000000,76
26397,3443,75
26398,1324,75
26399,44072,81
26400,43022,95
26401,42917,72
26402,1133,91
26403,43067,83
26404,17982,74
26405,29792,80
26406,55398,72
26407,6583,84
26408,42178,93
26409,43547,83
26410,44072,72
26411,867,82
26412,68918,80
26413,42917,82
26414,41447,85
26415,43022,92
26416,37307,83
26417,37352,103
26418,50162,82
26419,43007,72
26420,2208,85
26421,15000288,90
26422,1730,79
26423,47717,78
26424,118374,66
26425,2743,85
# After 13000 updates
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x x x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy + x T x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x x + x T x x * x ∨ x 5 if pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be swap T / -9 x x T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T x greedy -3 x < x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x 5 -10 greedy? x F 0 ¬ x x -10 + F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 0 ∧ neg greedy pop 3 dec x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x x + x T x x * x ∨ < 5 if pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T F 0 -2 neg 4 9 x ¬ inc x x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 x - 1 ungreedy * -6 x greedy? x x greedy + x x neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 be ∨ x -3 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 T / -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 721: "- * -2 / inc -10 -5 x greedy? x pop x + 2 pop neg -5 be x ≥ -9 ∧ if -5 * 9 * + 5 *"
# 793: "greedy 8 x neg x x 6 T -10 F x inc x ≤ F ungreedy swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x * x -6 0 F -8 eql 9 x swap / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "-2 x x -6 0 F -8 eql 9 8 > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x -1 x -6 0 -2 neg eql 9 -2 > / -7 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "inc -10 x -3 0 -2 x x x depth 8 8 eql x x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x -3 x -6 0 -2 neg eql 9 neg > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "∧ 1 -3 swap -7 x -3 -10 9 neg > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "F -8 T F 0 -2 -9 x 7 / ∨ x 5 swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 T 1 - F -4 x if inc pop x inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "be ≥ -1 x if T be 1 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 -5 greedy -1 T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 ungreedy greedy greedy? x 3 F < eql -9 -5 0 - swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "x x x -10 dec -10 x x 9 T -9 x -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T inc x + T -10 greedy pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ T -3 swap greedy? x ≤ -10 F F dec greedy? -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 801: "depth x 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop -8 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "5 x -2 F inc * x eql x T -1 x 5 < x ¬ -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "x x 0 -10 -6 if neg 0 -10 neg x / x T T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "be ≥ -1 x dec -10 x x 9 F x x -1 pop x be -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-8 x - 1 inc * / x 7 / -6 x 5 F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "7 9 T F ≥ if neg 0 -10 / x / * x T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-2 dec x < 5 neg -5 ∧ 7 / T x 5 F greedy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "T / -10 x greedy? x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 F if -5 * 9 * + 5 *"
# 837: "pop / T F 0 -3 neg 4 9 0 -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 837: "-3 8 x x / x x dec dec -3 dec / 5 x ¬ -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 837: "x eql -9 + ≥ x ∨ x 9 x -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "x dec x copy x T / -6 T F x x 5 -2 x -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "be ≥ F x 0 -2 neg x 9 neg -7 -7 ungreedy be T 1 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc -10 x x dec x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "7 T inc copy ≥ copy x - if -5 greedy F 9 be x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x 4 2 x dec F T x 7 dec -3 / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc be x T x -10 x -3 + if -6 inc F F T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x x / greedy -3 -5 depth F x dec greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x - -10 greedy? be dec ≥ -3 neg ¬ / x 2 T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T x - 1 inc x x swap x -3 dec F 9 F x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x inc x x F T -9 x -3 greedy? F pop F * neg -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc x x x dec x 9 x x / x T ≤ greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "/ -1 0 x ungreedy x greedy? x 3 -5 greedy -7 9 x x depth -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x 5 swap x -2 7 -8 x F F > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy -8 F -6 * ≤ 7 neg -5 x T -10 -9 x T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x inc -10 greedy? x dec ≤ -3 -3 dec greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x * 2 x ¬ x / + * T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy neg T -6 0 -2 neg eql 9 neg greedy? ∧ x T T x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x -6 -1 * inc < x -3 6 x x -7 x 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 dec F x x 1 dec x 9 x x / x ≤ eql greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 ∧ x 2 x swap F T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "> x 5 ∧ x neg 7 < x F F > ungreedy x ¬ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "be -1 0 1 ungreedy 5 greedy? x x -5 greedy -7 9 x x depth -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 x T F x copy x - if -5 greedy eql 9 be -10 * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F dec x copy x T -4 x swap F T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x - copy neg T x eql -2 -5 greedy F > x x depth -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 be eql T x 1 F F be x ∧ T 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 if x 1 x F x * x ∨ x 5 eql pop * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "* x x > dec x x 1 x * x / x T ≤ greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 x swap x greedy -9 copy x x x T x T 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 873: "0 -7 / 9 x -2 7 -8 x x F > + x pop neg -4 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 873: "greedy < x x if ungreedy be x 9 -4 -6 if -2 inc -2 < ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 898: "F -2 x x greedy -3 ∧ x x x x > + x pop x ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "-2 dec x + x T x ≥ * neg -1 + x x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "greedy -7 x copy F ∨ x T x -5 copy F 9 be x < / -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "-9 eql x x ≥ x x x ≥ x -5 8 depth x pop x F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x dec x copy be T / -6 x F x x 5 -2 x 7 F -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1037: "x -3 x T x greedy -9 copy x * ∨ T x x pop -5 ∧ greedy x > -9 -10 if -5 * 9 * dec 5 *"
# 1038: "x x inc + x / x 4 + x F x x ≤ neg greedy? 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1324: "-8 / x x / x dec ≤ -3 -3 dec greedy x x F ungreedy F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1569: "7 T inc copy ≥ copy x - if F T copy T F -6 < -5 -5 x x -9 -10 if -5 * 9 * + 5 *"
# 1730: "x ∨ - 1 F -10 x x 9 T greedy ∧ -2 pop pop neg if x x ≥ -9 -10 if -5 * 9 * + 5 *"
# 2213: "x inc x copy -3 1 dec pop -3 -3 dec -7 x 0 + * inc T x ∧ -9 -10 if -5 * 9 * + 5 *"
# 37307: "-8 - T 0 x copy x - x -5 greedy eql 9 be -10 * -5 -5 x ≥ -9 -10 if -5 * 9 dec + 5 *"
# 43022: "x x / x inc dec inc 7 inc dec * -4 -1 / -4 * -1 -5 x -10 x x x x inc x 4 -2 / x"
26426,42833,73
26427,43022,66
26428,42854,70
26429,43127,70
26430,42959,74
26431,38822,72
26432,2213,83
26433,4039750,86
26434,848,75
26435,76622,90
26436,2603,77
26437,678,101
26438,42917,96
26439,3443,80
26440,38822,76
26441,3443,79
26442,42980,85
26443,9002,83
26444,837,75
26445,721,85
26446,2518,82
26447,53567,78
26448,1718,78
26449,210903,75
26450,848,86
26451,1226,84
26452,40163,78
26453,678,89
26454,3443,87
26455,87333,85
26456,50162,76
26457,41552,73
26458,43997,83
26459,37202,89
26460,1688,88
26461,1082,73
26462,42917,76
26463,50278,82
26464,63753,82
26465,42182,79
26466,1117,89
26467,42701,87
26468,43547,78
26469,38822,80
26470,848,82
26471,43022,79
26472,37202,89
26473,43022,71
26474,33656,75
26475,21467,92
26476,33682,75
26477,35677,75
26478,2213,86
26479,492,79
26480,91217,79
26481,15013102,75
26482,61544,83
26483,41858,90
26484,1086,84
26485,43022,80
26486,2677,85
26487,43022,85
26488,37202,75
26489,15272,72
26490,3443,77
26491,3637,74
26492,796,75
26493,793,87
26494,2213,77
26495,848,80
26496,59568,74
26497,43022,75
26498,42833,88
26499,2213,86
26500,43547,81
26501,54438,80
26502,1567,87
26503,1454,91
26504,793,81
26505,57883,91
26506,38027,82
26507,48692,77
26508,42938,81
26509,43190,86
26510,42989,83
26511,42917,82
26512,3443,84
26513,43547,85
26514,42602,88
26515,52108,80
26516,13877,85
26517,42959,75
26518,34472,72
26519,829,76
26520,1441,78
26521,1324,74
26522,57293,88
26523,47567,88
26524,43022,80
26525,43022,76
26526,43190,91
26527,39412,81
26528,678,85
26529,42077,83
26530,2213,76
26531,48602,82
26532,3443,85
26533,43190,91
26534,1324,84
26535,2743,82
26536,43022,82
26537,42182,79
26538,898,82
26539,86777,76
26540,43022,67
26541,848,83
26542,48752,74
26543,2213,75
26544,89327,85
26545,48797,81
26546,43022,81
26547,45872,80
26548,39272,73
26549,45290,92
26550,43397,80
26551,41657,76
26552,48722,80
26553,42077,77
26554,1027,74
26555,3443,75
26556,3443,79
26557,43043,92
26558,1556,91
26559,3443,67
26560,42833,83
26561,11232,92
26562,913,81
26563,43022,82
26564,837,80
26565,10363,78
26566,43547,86
26567,3443,82
26568,1757,83
26569,1738,82
26570,42077,99
26571,43967,83
26572,678,89
26573,3548204,95
26574,42917,91
26575,1324,87
26576,21000000,92
26577,38242,82
26578,57293,87
26579,42077,82
26580,1117,80
26581,44072,79
26582,35987,80
26583,55398,90
26584,37202,72
26585,21000000,74
26586,3443,90
26587,28847,72
26588,42833,80
26589,76902,106
26590,53992,90
26591,42347,91
26592,34622,90
26593,44042,80
26594,48542,82
26595,43022,85
26596,848,74
26597,1730,87
26598,47342,95
26599,42077,85
26600,42077,71
26601,1442,74
26602,129017,88
26603,19932,78
26604,43547,91
26605,1359,70
26606,848,82
26607,43337,80
26608,42077,76
26609,43547,82
26610,64173,80
26611,21623,101
26612,41762,75
26613,3443,91
26614,43022,87
26615,51842,67
26616,43127,88
26617,796,90
26618,848,83
26619,2763,82
26620,1649,84
26621,43057,85
26622,55458,75
26623,43127,70
26624,42917,82
26625,43022,81
26626,43142,69
26627,42917,93
26628,42917,74
26629,42917,89
26630,848,87
26631,3443,83
26632,43022,73
26633,47027,71
26634,3443,81
26635,87917,73
26636,95348,81
26637,16000195,82
26638,3443,78
26639,48722,77
26640,97697,87
26641,21000000,69
26642,1034,70
26643,4087,73
26644,25540,83
26645,643,88
26646,43022,78
26647,45017,71
26648,43022,78
26649,43148,81
26650,43547,71
26651,43022,77
26652,42938,83
26653,3597,77
26654,42077,78
26655,52802,91
26656,47132,74
26657,1324,85
26658,41132,83
26659,38717,86
26660,42938,83
26661,10001073,83
26662,90797,80
26663,43022,82
26664,848,72
26665,42602,80
26666,5222,89
26667,1268,85
26668,42287,76
26669,48542,73
26670,48722,79
26671,4157,79
26672,42917,90
26673,42311,79
26674,43592,78
26675,2213,76
26676,42917,89
26677,3443,80
26678,42833,98
26679,43022,86
26680,42527,73
26681,43169,80
26682,46092,78
26683,47327,80
26684,21000000,79
26685,41455,76
26686,3443,85
26687,37397,86
26688,3443,78
26689,44072,80
26690,1740,81
26691,41762,81
26692,848,82
26693,43022,74
26694,43547,79
26695,848,80
26696,2213,74
26697,41702,85
26698,1663,68
26699,929,74
26700,848,85
26701,1715,84
26702,3637,87
26703,34601,74
26704,42077,73
26705,42077,81
26706,50533,80
26707,42077,79
26708,678,90
26709,1078,80
26710,1717,73
26711,2213,89
26712,5173,84
26713,3783,73
26714,1663,76
26715,43022,84
26716,15134602,83
26717,43610,94
26718,3443,81
26719,1133,76
26720,2213,74
26721,43022,73
26722,1082,72
26723,848,74
26724,37202,79
26725,54175,76
26726,43022,83
26727,41657,88
26728,42707,83
26729,1740,87
26730,43442,77
26731,43232,88
26732,45162,92
26733,43547,76
26734,42077,85
26735,43001,73
26736,86252,73
26737,67442,86
26738,42806,81
26739,47792,75
26740,43547,79
26741,15000288,88
26742,1757,82
26743,43297,79
26744,42917,80
26745,43022,73
26746,848,84
26747,837,71
26748,21000000,81
26749,4398,73
26750,39697,82
26751,39767,90
26752,4543,79
26753,42797,88
26754,35308,85
26755,43942,83
26756,3888,84
26757,41132,78
26758,21000000,84
26759,848,83
26760,45087,80
26761,1653,77
26762,1324,77
26763,4093,99
26764,45197,70
26765,1133,77
26766,49167,88
26767,41447,71
26768,42875,91
26769,21000000,91
26770,43022,76
26771,42077,71
26772,46082,85
26773,1662,85
26774,37517,93
26775,37202,83
26776,848,75
26777,43967,87
26778,39272,75
26779,678,87
26780,42917,77
26781,1848,73
26782,21000000,68
26783,43169,72
26784,3443,76
26785,42938,85
26786,3443,80
26787,21000000,72
26788,39897,76
26789,42917,82
26790,4222,82
26791,54798,76
26792,1133,85
26793,848,85
26794,3968,107
26795,1324,96
26796,46902,76
26797,796,75
26798,37202,75
26799,848,74
26800,1835,85
26801,43007,73
26802,1757,76
26803,721,78
26804,37952,90
26805,41762,73
26806,21000000,83
26807,42917,80
26808,43022,84
26809,43190,86
26810,3443,84
26811,3358,91
26812,67697,76
26813,42977,87
26814,40489,84
26815,1393,82
26816,52217,72
26817,42812,76
26818,3807,75
26819,55028,70
26820,21000000,87
26821,23128,84
26822,26117,83
26823,34397,74
26824,929,84
26825,67697,86
26826,3807,76
26827,52963,87
26828,34062,94
26829,54528,71
26830,19162,90
# After 13200 updates
# 507: "x inc -5 / x - x if x x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 T / -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x -3 ∧ ungreedy * / x 7 / ∨ x be copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x x + x T x x * x ∨ < 5 if pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be swap T / -9 x x T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x -10 greedy? x F 0 ¬ x -5 -9 ¬ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T x greedy -3 x < x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 5 x > greedy x x x x x x -10 -4 x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy neg T -6 0 -2 eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x x + x T x x * x ∨ x 5 if pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T F 0 -2 neg 4 9 x ¬ inc x x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy + x T x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 x - 1 ungreedy * -6 x greedy? x x greedy + x x neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "ungreedy -1 x x greedy -3 x x x x x -10 + x ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "depth inc x copy -3 x swap x 9 neg -9 depth pop x greedy neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x x x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 be ∨ x -3 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 721: "- * -2 / inc -10 -5 x greedy? x pop x + 2 pop neg -5 be x ≥ -9 ∧ if -5 * 9 * + 5 *"
# 793: "inc -10 x -3 0 -2 x x x depth 8 8 eql x x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x -1 x -6 0 -2 neg eql 9 -2 > / -7 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "greedy 8 x neg x x 6 T -10 F x inc x ≤ F ungreedy swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x -3 x -6 0 -2 neg eql 9 neg > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "greedy F -3 swap -7 x -3 x be 8 > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "-2 x x -6 0 F -8 eql 9 8 > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x * x -6 0 F -8 eql 9 x swap / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "x x x -10 dec -10 x x 9 T -9 x -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T inc x + T -10 greedy pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "F -8 T F 0 -2 -9 x 7 / ∨ x 5 swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 -5 greedy -1 T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "be ≥ -1 x if T be 1 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 ungreedy greedy greedy? x 3 F < eql -9 -5 0 - swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 x ungreedy pop > x 3 F greedy -7 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 T 1 < F -4 x if inc pop x be ∧ -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ T -3 swap greedy? x ≤ -10 F F dec greedy? -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "be ≥ -1 x dec -10 x x 9 F x x -1 pop x be -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "neg x - 1 inc * / x 7 pop -6 x 5 F F neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-2 dec x < 5 neg -5 ∧ 7 / T x 5 F greedy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "5 x -2 F inc * x eql x T -1 x 5 < x ¬ -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-8 x - 1 inc * / x 7 / -6 x 5 F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "7 9 T F ≥ if neg 0 -10 / x / * x T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "x x 0 -10 -6 if neg 0 -10 neg x / x T T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "T / -10 x greedy? x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 F if -5 * 9 * + 5 *"
# 837: "greedy 8 x neg if -2 neg x 9 x dec T 5 T ¬ -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 837: "pop / T F 0 -3 neg 4 9 0 -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 837: "T F -9 + ≥ x ∨ x 9 x -5 8 5 x -10 -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "-3 / x -10 greedy? x F 0 pop x -5 -9 depth F x neg -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "be ≥ F x 0 -2 neg x 9 neg -7 -7 ungreedy be T 1 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 be eql T x 1 F F be x ∧ T 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc -10 x x dec x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "5 x -2 F inc neg 7 < x T F -4 ungreedy copy ¬ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x x -1 * inc < eql -2 -5 greedy F > ∧ x depth -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x + inc copy ≥ 1 dec x 9 x x / x x eql greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc -9 x * x -10 x -3 + if -6 inc F greedy? T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x inc -10 greedy? x dec ≤ -3 -3 dec greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x * 2 x ¬ x / + * T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 x swap x greedy -9 copy x x x T x T 4 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -7 x copy F ∨ x T x -5 copy x x < ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 dec F x x 1 dec ∨ -3 5 ¬ / x 2 T inc -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 dec x < pop neg depth ∧ 7 / T x 5 F greedy neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x neg F x F eql -9 x -3 F x pop T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x 4 2 x dec F T x 7 dec -3 / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 dec x < pop neg - F 7 x T x 5 F greedy neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x inc x x F -4 -9 x -3 greedy? x pop T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 if x 1 x F x * x ∨ x 5 eql pop * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc be x T x -10 x -3 + if -6 inc F F T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "* x x > dec x x 1 x * x / x T ≤ greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "* x x > dec x x T x eql x x x T ≤ greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "< -8 T F 0 -2 neg 4 9 x ¬ inc x x pop ∨ -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T x - 1 inc x x swap x -3 dec F 9 F x * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F dec x copy x T -4 x swap F T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-8 eql T F x copy x -8 if -5 greedy eql 9 -7 -10 * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T x -1 F be eql T x 1 -2 F be x ∧ T 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "be -1 0 1 ungreedy 5 greedy? x x -5 greedy -7 9 x x depth -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 873: "0 -7 / 9 x -2 7 -8 x x F > + x pop neg -4 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 898: "F -2 x x greedy -3 ∧ x x x x > + x pop x ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1034: "dec x 0 -1 -5 / x x x - -6 / + * x 8 / -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1037: "-2 dec x + x T x ≥ * neg -1 + x x pop 4 T -5 x > -9 -10 if -5 * 9 * dec 5 *"
# 1663: "-2 dec F x inc -10 x ¬ 9 T greedy x -2 x 0 F if x x ≥ -9 ∨ if -5 * 9 * + 5 *"
# 2213: "x inc x copy -3 1 dec pop -3 -3 dec -7 x 0 + * inc T x ∧ -9 -10 if -5 * 9 * + 5 *"
# 3443: "+ x 7 copy x T / -6 T F x x 5 -2 x -5 ungreedy -5 x ∨ -9 -10 if -5 * 9 * + 5 *"
# 33656: "* x x > dec x x 1 x * x / x T ≤ greedy -5 inc -9 ≥ -9 -10 if -5 * 9 * + 5 +"
# 42527: "eql -7 7 / dec F -4 be 3 1 -1 + x x > - 8 -5 x ≥ -9 -10 if -5 * 9 ≥ + 5 *"
# 42917: "-1 x 4 x greedy -3 x x x x x -10 + x x T ungreedy -5 x ≥ -9 -10 if T * 9 + 9 5 F"
26831,43022,69
26832,43001,77
26833,43022,72
26834,42917,70
26835,43022,68
26836,42917,69
26837,2203,73
26838,678,82
26839,20912,87
26840,1883,84
26841,44642,76
26842,793,79
26843,44797,92
26844,43022,85
26845,49637,79
26846,36932,79
26847,64332,73
26848,1663,90
26849,51593,87
26850,50258,74
26851,42182,78
26852,1324,81
26853,829,74
26854,2213,90
26855,46525,71
26856,42917,81
26857,42077,78
26858,42077,72
26859,43190,87
26860,793,73
26861,43022,84
26862,50748,69
26863,43022,81
26864,87572,74
26865,316397,73
26866,41867,80
26867,43922,92
26868,40682,78
26869,91217,85
26870,43022,80
26871,77042,91
26872,507,83
26873,53018,79
26874,58442,86
26875,4983621,92
26876,67892,88
26877,42917,79
26878,59898,92
26879,678,87
26880,154808,80
26881,1324,79
26882,43001,94
26883,41842,71
26884,43547,90
26885,20000193,73
26886,3443,83
26887,17758,74
26888,42917,98
26889,52371,73
26890,848,81
26891,68960,78
26892,42977,75
26893,33536,71
26894,43547,88
26895,1657,74
26896,42028,81
26897,57633,91
26898,43127,84
26899,2343,78
26900,848,73
26901,44793,83
26902,3443,75
26903,21000000,84
26904,42077,79
26905,56998,85
26906,30842,85
26907,42917,84
26908,678,83
26909,25833,72
26910,37202,72
26911,43022,80
26912,1428,73
26913,1740,98
26914,42077,76
26915,33542,79
26916,41447,71
26917,1324,78
26918,42542,78
26919,14454,90
26920,42917,90
26921,3755,84
26922,1173,89
26923,43127,74
26924,42896,83
26925,3443,89
26926,42959,73
26927,42077,79
26928,34241,89
26929,793,74
26930,43967,77
26931,43022,75
26932,21000000,90
26933,42917,85
26934,43022,84
26935,848,77
26936,38252,86
26937,43022,85
26938,64967,75
26939,43547,79
26940,814,82
26941,829,79
26942,90797,79
26943,46697,88
26944,1133,85
26945,42077,78
26946,8008,71
26947,848,77
26948,41187,78
26949,32321,85
26950,43997,73
26951,1324,82
26952,58128,80
26953,43022,84
26954,43022,91
26955,21000000,75
26956,21000000,73
26957,43022,90
26958,43862,90
26959,41503,98
26960,91517,79
26961,39522,88
26962,43222,98
26963,15000343,83
26964,3043,85
26965,42917,74
26966,43232,76
26967,21000000,79
26968,43022,74
26969,42917,88
26970,42128,81
26971,57248,87
26972,43757,75
26973,34312,80
26974,53417,75
26975,43967,88
26976,1643,80
26977,43067,82
26978,1662,86
26979,2213,82
26980,59568,73
26981,43022,69
26982,43022,85
26983,3402273,80
26984,15000288,81
26985,1128,82
26986,6003455,74
26987,1117,86
26988,848,69
26989,3918,84
26990,21000000,80
26991,19000370,81
26992,42459,87
26993,39452,88
26994,1782,78
26995,42917,94
26996,1226,80
26997,40838,69
26998,19397,73
26999,43547,76
27000,3358,84
27001,848,79
27002,848,82
27003,42917,87
27004,46832,78
27005,42770,84
27006,848,79
27007,1289,89
27008,3443,79
27009,4332,80
27010,41657,87
27011,42790,81
27012,43022,80
27013,3807,70
27014,42392,80
27015,21000000,72
27016,1289,88
27017,78242,75
27018,3807,69
27019,43148,90
27020,1073,90
27021,40763,91
27022,43652,80
27023,43622,75
27024,43142,77
27025,38312,92
27026,1653,93
27027,80717,71
27028,34151,82
27029,40315,75
27030,37202,101
27031,39767,74
27032,1815,73
27033,43967,74
27034,44177,74
27035,848,80
27036,43022,87
27037,1983,83
27038,2213,77
27039,829,81
27040,21000000,79
27041,4002455,84
27042,848,72
27043,43547,75
27044,43022,69
27045,74672,89
27046,45192,95
27047,43547,77
27048,103832,71
27049,27986,76
27050,41327,73
27051,796,82
27052,55398,76
27053,34772,80
27054,44072,81
27055,44072,81
27056,48722,82
27057,21000000,82
27058,678,92
27059,1083,85
27060,35683,82
27061,41132,90
27062,1133,92
27063,42917,85
27064,42797,71
27065,58247,82
27066,43092,86
27067,43043,93
27068,678,84
27069,80717,75
27070,4398,83
27071,1730,76
27072,42896,88
27073,66647,86
27074,58226,79
27075,848,71
27076,821,85
27077,848,75
27078,41312,78
27079,51478,93
27080,3013,82
27081,1663,73
27082,848,75
27083,57363,73
27084,1730,86
27085,848,86
27086,1324,89
27087,35833,75
27088,33572,85
27089,43902,78
27090,55248,80
27091,43022,74
27092,3443,70
27093,3443,70
27094,1324,85
27095,42854,77
27096,12084,74
27097,42917,83
27098,63993,83
27099,1883,78
27100,27178,82
27101,3807,76
27102,3783,76
27103,42077,81
27104,848,73
27105,53042,88
27106,21000000,86
27107,721,77
27108,57723,74
27109,43022,74
27110,44072,69
27111,48272,86
27112,1662,83
27113,35972,73
27114,61467,75
27115,41762,84
27116,32321,88
27117,43098,74
27118,42917,83
27119,18358,84
27120,796,85
27121,25793,70
27122,1649,85
27123,1324,73
27124,43592,72
27125,73862,75
27126,57363,74
27127,66647,86
27128,829,74
27129,43022,74
27130,45162,88
27131,796,84
27132,55518,83
27133,1730,76
27134,34376,76
27135,848,77
27136,15011827,85
27137,848,78
27138,108722,79
27139,45437,81
27140,1303,83
27141,33761,87
27142,1038,85
27143,42917,83
27144,1336,77
27145,848,75
27146,1757,75
27147,2003363,82
27148,11909,94
27149,1652,82
27150,43022,77
27151,43022,77
27152,43442,79
27153,15722,74
27154,43547,81
27155,1204,82
27156,1738,80
27157,57723,80
27158,2138,85
27159,1757,75
27160,15000288,78
27161,796,87
27162,43022,83
27163,43292,83
27164,42917,85
27165,4398,88
27166,55283,80
27167,793,75
27168,42077,79
27169,1441,70
27170,59208,81
27171,42887,77
27172,793,73
27173,37202,82
27174,43232,81
27175,81872,82
27176,1657,91
27177,37877,80
27178,42392,90
27179,21000000,82
27180,43022,87
27181,1103,84
27182,136997,78
27183,1662,83
27184,1643,93
27185,24493,69
27186,5732,77
27187,2194,82
27188,1643,83
27189,21000000,84
27190,42917,73
27191,51632,90
27192,1133,84
27193,57363,70
27194,2213,77
27195,1712,69
27196,43022,78
27197,24242,75
27198,814,81
27199,507,76
27200,40541,83
27201,793,80
27202,42896,91
27203,848,72
27204,46622,82
27205,1324,71
27206,41552,77
27207,44072,82
27208,848,80
27209,1324,73
27210,42917,75
27211,2596,71
27212,42077,81
27213,1324,78
27214,17863,76
27215,43169,84
27216,837,74
27217,793,76
27218,3783,70
27219,3127,90
27220,19005040,72
27221,15722,75
27222,56538,83
27223,72537,82
27224,42896,88
27225,52987,81
27226,39342,107
27227,3783,94
27228,848,78
27229,678,72
27230,43862,87
27231,678,88
27232,44072,88
27233,1702,99
27234,848,73
27235,8567,89
# After 13400 updates
# 507: "-1 x 1 x greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -2 / inc -10 -5 x 9 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T x greedy -3 x < x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "* x T > dec x x 1 copy * x / x T x neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x -3 ∧ ungreedy * / x 7 / ∨ x be copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 T / -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x x + x T x x * x ∨ x 5 if pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy x greedy? -6 0 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 be ∨ x -3 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy ¬ -10 x x F 7 ¬ -3 dec -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "ungreedy -1 x x greedy -3 x x x x x -10 + x ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy -3 x greedy x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy neg T -6 0 -2 eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be swap T / -9 x x T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x x x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 x - 1 ungreedy * -6 x greedy? x x greedy + x x neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x -10 greedy? x F 0 ¬ x -5 -9 ¬ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 5 x > greedy x x x x x x -10 -4 x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "depth inc x copy -3 x swap x 9 neg -9 depth pop x greedy neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "* x T T ungreedy * be 7 T -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x x + x T x x * x ∨ < 5 if pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T F 0 -2 neg 4 9 x ¬ inc x x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 721: "- ∨ -2 / inc -10 -5 x x -9 pop x + 2 pop neg -5 be x ≥ -9 ∧ if -5 * 9 * + 5 *"
# 793: "pop / T F 0 -3 -8 > T x swap / 2 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x -1 x -6 0 -2 neg eql 9 -2 > / -7 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "greedy 8 x neg x x 6 T -10 F x inc x ≤ F ungreedy swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "greedy F -3 swap -7 x -3 x be 8 > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "/ -1 0 1 - F dec ¬ T x swap / 9 2 x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "/ x T T ungreedy * / x 7 be > / F dec x dec -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x * x -6 T F -8 ¬ T x swap / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x x T T ungreedy * / x x depth 8 8 eql x x ≥ -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "-2 x x x 0 F -8 eql dec 8 > / F dec x T -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 greedy - F inc x if < pop -10 -5 greedy x T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T inc x + T -10 greedy pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 x ungreedy pop > x 3 F greedy F x greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 T 1 < F -4 x if inc pop x be ∧ -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "7 9 - F ≥ if neg 0 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "be ≥ -1 x if T be 1 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 - F inc x if inc pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "F -8 T F 0 -2 -9 x 7 / ∨ x 5 swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 ungreedy greedy greedy? x 3 F < eql -9 -5 0 - swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "x x x -10 dec -10 x x 9 T -9 x -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ T -3 swap greedy? x ≤ -10 F F dec greedy? -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 821: "x -3 x swap x greedy x T < x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "be ≥ -1 x dec -10 x x 9 F x x -1 pop x be -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "x inc 2 copy -3 1 dec pop -3 -3 dec -7 x T T 1 -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "x x 0 -10 -6 if neg 0 -10 neg x / x T T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-2 dec x < 5 neg -5 ∧ 7 / T x 5 F greedy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "neg x - 1 inc * / x 7 pop -6 x 5 F F neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "-8 x - 1 inc * / x 7 / -6 x 5 F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "x * pop + F -1 x 0 -10 neg x / x T T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "T / -10 x greedy? x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 F if -5 * 9 * + 5 *"
# 837: "greedy 8 x neg if -2 neg x 9 x dec T 5 T ¬ -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "T x - x inc x x swap x -3 dec F 9 F x copy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 x inc -10 greedy? x dec ≤ -3 -3 dec greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x + inc copy ≥ 1 dec x 9 x x / x x eql greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "inc -4 x -3 0 -2 neg x x -3 ∨ greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "< -8 T F 0 -2 neg 4 9 x ¬ inc x x pop ∨ -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "5 x -2 F inc neg 7 < x F T be -3 x ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T 9 T F ≥ 4 dec x x greedy x ¬ x T -10 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x 4 2 x dec F T x 7 dec -3 / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "be 2 F x 0 -2 neg x 9 x -7 -7 ungreedy be 0 1 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc be x T x -10 x -3 + if -6 inc F F T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 9 T F ≥ x dec x x neg x ¬ x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F x - 1 inc * / x 7 5 ¬ / x -2 greedy? inc -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -7 x copy F ∨ x T x -5 copy x x < ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 if x 1 x F x * x ∨ x 5 eql pop * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 T x < pop neg depth ∧ 7 * x ¬ x T -6 greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "be dec x copy x T -4 x 8 F T be -3 neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T pop -10 x 3 dec x 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-3 / x x x copy x -8 if -5 F eql 9 -7 -10 * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -10 x inc x -4 T -10 greedy -2 ≤ x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F x T F 0 -2 -9 x 7 -8 ∨ x 5 swap ungreedy x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -1 -5 be eql T -4 1 F F x x ∧ T 3 -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x inc x -10 x T dec greedy? 9 neg x / x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 dec x < pop neg - F 7 x T x 5 F greedy neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x x -1 * inc < eql -2 -5 greedy F > ∧ x depth -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x * 2 x ¬ x / + * T be T neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1643: "x / 7 copy x T / -6 T F 2 x 5 -2 x -5 ungreedy -5 x eql -9 -10 if -5 * 9 * + 5 *"
# 1663: "x eql -2 / depth F -4 be 3 1 -1 - x 4 > - 8 -5 x x -9 T if -5 * 9 * F 5 *"
# 32321: "be ≥ ¬ pop 9 + -6 x greedy? x x T greedy? x pop neg -5 be pop ≥ -9 -10 if -5 * 9 + 9 T *"
# 33542: "F -8 x F x -2 -9 x 7 / ∨ x 5 swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 2 * + 5 *"
# 43022: "-3 / x x x copy x -8 if -5 F eql 9 -7 -10 * -5 -5 7 ≥ -9 -10 if x - 4 / x x T"
27236,43022,68
27237,42833,72
27238,43127,73
27239,43085,68
27240,43022,68
27241,43085,86
27242,42917,68
27243,678,85
27244,793,80
27245,848,80
27246,507,83
27247,42077,81
27248,43022,66
27249,3443,74
27250,43337,73
27251,35717,82
27252,42707,80
27253,34853,76
27254,43169,71
27255,43022,75
27256,507,83
27257,2213,87
27258,42392,76
27259,873,86
27260,40997,78
27261,47522,80
27262,678,97
27263,50162,81
27264,1391,81
27265,41294,72
27266,21000000,90
27267,42917,76
27268,42252,79
27269,43127,89
27270,2213,84
27271,48272,78
27272,4228,77
27273,50582,78
27274,43127,94
27275,71972,75
27276,86897,85
27277,21000000,85
27278,43127,97
27279,41732,79
27280,21000000,88
27281,40916,81
27282,3443,89
27283,45162,85
27284,56147,84
27285,1117,92
27286,37352,96
27287,678,82
27288,43052,79
27289,37202,79
27290,54152,83
27291,33572,73
27292,42896,85
27293,639,85
27294,43022,84
27295,42854,84
27296,42833,72
27297,43772,84
27298,1757,79
27299,122567,75
27300,58308,76
27301,9018860,88
27302,55738,80
27303,51797,84
27304,14123,76
27305,42077,81
27306,3443,81
27307,85547,91
27308,37202,83
27309,41957,76
27310,1758,76
27311,3443,81
27312,42707,77
27313,43127,83
27314,42047,93
27315,42182,87
27316,44907,83
27317,43547,85
27318,75197,75
27319,47537,74
27320,1663,77
27321,37202,81
27322,42077,77
27323,42257,86
27324,56147,89
27325,3882,76
27326,19517,91
27327,42392,79
27328,44072,87
27329,639,82
27330,56998,81
27331,848,77
27332,21000000,89
27333,42252,72
27334,105428,77
27335,678,80
27336,43411,98
27337,1702,83
27338,43922,89
27339,43997,101
27340,43022,83
27341,43022,80
27342,43127,83
27343,3443,91
27344,46337,71
27345,1324,92
27346,41597,81
27347,1358,85
27348,42117,78
27349,43022,86
27350,42437,78
27351,3443,80
27352,58247,73
27353,14567,78
27354,48092,87
27355,43022,77
27356,829,74
27357,1657,82
27358,597,82
27359,848,73
27360,3443,89
27361,31089,98
27362,78707,82
27363,1358,77
27364,507,78
27365,50748,77
27366,1974,77
27367,1133,94
27368,43187,75
27369,40613,90
27370,929,93
27371,43967,79
27372,71582,80
27373,43007,72
27374,42252,83
27375,43232,89
27376,2213,78
27377,41063,81
27378,2213,78
27379,1757,71
27380,21000000,79
27381,46753,83
27382,829,75
27383,55023,83
27384,34247,88
27385,42077,81
27386,43022,91
27387,40613,92
27388,67697,73
27389,31682,88
27390,12733,70
27391,42077,73
27392,21000000,72
27393,43547,88
27394,34622,76
27395,48722,85
27396,47747,78
27397,3443,88
27398,48692,85
27399,44072,86
27400,43022,96
27401,87542,80
27402,85967,77
27403,678,84
27404,3443,85
27405,48797,89
27406,42917,86
27407,3358,75
27408,24002,75
27409,678,86
27410,678,95
27411,15000288,80
27412,3443,80
27413,43022,82
27414,2213,76
27415,3443,68
27416,57723,86
27417,42077,90
27418,3443,82
27419,1324,81
27420,4252,81
27421,42182,90
27422,3443,83
27423,43064,79
27424,3443,83
27425,1289,88
27426,43169,82
27427,15011168,88
27428,86597,80
27429,1643,77
27430,1662,81
27431,44072,69
27432,35146,89
27433,1324,84
27434,3443,93
27435,678,100
27436,4235,86
27437,42497,86
27438,91217,83
27439,42938,83
27440,678,89
27441,44534,69
27442,43022,86
27443,81872,88
27444,43022,85
27445,5993,70
27446,25628,78
27447,678,82
27448,3443,88
27449,37667,82
27450,507,85
27451,90272,81
27452,22872,102
27453,1918,82
27454,848,76
27455,43022,81
27456,3443,86
27457,67548,80
27458,2213,79
27459,23108,76
27460,15000288,77
27461,639,83
27462,678,87
27463,42896,82
27464,829,71
27465,45752,82
27466,39812,83
27467,105092,70
27468,1649,85
27469,42252,83
27470,42407,75
27471,12412,75
27472,42917,84
27473,796,94
27474,47747,79
27475,43097,89
27476,34427,73
27477,90587,79
27478,42917,74
27479,3443,77
27480,796,81
27481,43862,68
27482,42833,80
27483,3443,75
27484,49217,82
27485,3443,83
27486,48797,74
27487,1074,101
27488,43542,73
27489,43022,77
27490,3443,80
27491,1454,87
27492,43022,98
27493,19397,78
27494,34622,76
27495,46007,99
27496,38717,95
27497,60639,78
27498,6033970,84
27499,48717,85
27500,43997,85
27501,1133,84
27502,66197,84
27503,2263,82
27504,127997,75
27505,48722,84
27506,43190,82
27507,41972,87
27508,1662,74
27509,58261,78
27510,1438,85
27511,678,81
27512,54798,75
27513,43085,76
27514,43081,85
27515,48692,76
27516,3443,90
27517,12544,83
27518,14492,82
27519,43862,90
27520,57363,75
27521,42252,83
27522,43022,83
27523,37352,76
27524,57723,85
27525,1730,92
27526,3443,77
27527,678,78
27528,3443,78
27529,41388,83
27530,507,88
27531,27384,74
27532,42827,87
27533,42833,79
27534,43076,80
27535,43547,88
27536,62972,85
27537,48722,80
27538,42077,84
27539,43022,74
27540,678,81
27541,3443,85
27542,29897,88
27543,15013402,93
27544,43547,70
27545,43442,75
27546,43098,83
27547,48392,90
27548,42917,98
27549,48722,74
27550,4398,74
27551,43022,84
27552,91643,81
27553,848,87
27554,42497,88
27555,1133,84
27556,848,81
27557,3443,83
27558,42875,84
27559,3443,86
27560,42252,92
27561,4753,72
27562,147917,81
27563,50162,85
27564,15015442,85
27565,41150,84
27566,83522,98
27567,43022,77
27568,678,88
27569,43022,81
27570,42617,79
27571,1324,76
27572,1687,75
27573,42077,79
27574,43022,79
27575,42077,104
27576,848,74
27577,44576,89
27578,639,86
27579,54647,80
27580,31612,82
27581,37860,82
27582,57293,90
27583,38147,77
27584,3443,80
27585,15012832,84
27586,48797,77
27587,48692,70
27588,55412,85
27589,848,83
27590,44072,78
27591,39452,80
27592,43547,78
27593,43697,74
27594,1663,80
27595,42917,84
27596,796,82
27597,36289,86
27598,37697,85
27599,723,95
27600,42047,88
27601,43052,83
27602,55998,84
27603,85547,73
27604,44072,86
27605,678,85
27606,43547,77
27607,43024,82
27608,56028,97
27609,90272,93
27610,44072,85
27611,43652,79
27612,38822,94
27613,15008228,87
27614,42602,80
27615,41447,83
27616,42497,88
27617,2213,73
27618,43022,88
27619,13148,79
27620,48722,97
27621,43837,81
27622,13448,79
27623,678,80
27624,57943,83
27625,22547,75
27626,85232,77
27627,1117,86
27628,1324,73
27629,44027,81
27630,3443,83
27631,3443,73
27632,86252,78
27633,100667,76
27634,55765,80
27635,48797,88
27636,47717,85
27637,74017,76
27638,42785,81
27639,678,89
27640,3393,78
# After 13600 updates
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -2 / inc -10 -5 x 9 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x * / greedy -3 x x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 ∨ -2 / inc -6 -5 x x -9 pop x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 x ∧ 1 inc * swap x 7 x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 T ∨ x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x -3 ∧ ungreedy * / < -2 F ∨ x be copy pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "* x T T ungreedy * x 7 T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "< depth x copy greedy -3 x x -7 x x ungreedy + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy x greedy? -6 0 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T F 0 -2 neg 4 9 x ¬ inc x x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 ≥ -3 ∧ ungreedy * / swap T x -9 x x T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x x + x T x x * x ∨ < 5 if pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -3 -7 x 1 x T x * x ∨ x 5 eql pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x x + x T x x * x ∨ x 5 if pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x -10 greedy? x F 0 ¬ x -5 -9 ¬ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 be ∨ x -3 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x 4 x T -3 3 x 9 depth 2 -7 x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy ¬ -10 x x F 7 ¬ -3 dec -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 T / -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 8 x neg 6 x 6 T -10 neg -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 x - 1 ungreedy * -6 x greedy? x x greedy + x x neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 F inc F -6 x x x x F x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy T x greedy x x x -10 + ≥ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "ungreedy -1 x x greedy -3 x x x x x -10 + x ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy -3 x greedy x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x -9 x 9 neg -9 depth pop x greedy neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 / depth F ∧ + 3 1 x depth x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F -1 0 swap x < x 4 < x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x x x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "swap 5 x > greedy x x x x x x -10 eql x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "swap x x > greedy x x inc x x x -10 eql x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x -1 x -10 x -5 > 7 ¬ -3 dec -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T x greedy -3 x < x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "inc * x -6 T F -8 ¬ T x dec -7 x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 723: "greedy 8 x neg 6 x 6 T -10 ungreedy -9 x dec F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "/ -1 0 1 - F dec ¬ T x swap / 9 2 x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "-2 x x x 0 F -8 eql dec 8 > / F dec x T -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "greedy F -3 swap -7 x -3 x be 8 > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "/ x T T ungreedy * / x 7 be > / F dec x dec -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "x x x -10 dec -10 x x 9 T -9 x -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 F x ungreedy pop > x 3 F greedy x x 2 -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 T 1 < F -4 x if inc pop x be ∧ -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 1 ungreedy greedy greedy? x 3 F < eql -9 -5 0 - swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T inc x + T -10 greedy pop -10 inc greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "7 9 - F ≥ if neg 0 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "be ≥ -1 x if T be 1 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 greedy - F inc x if < pop -10 -5 greedy x T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ * 0 1 - F inc x if inc pop eql 8 greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "F -8 T F 0 -2 -9 x 7 / ∨ x 5 swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T inc x + x if greedy pop -10 inc greedy greedy? x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ T -3 swap greedy? x ≤ -10 F F dec greedy? -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "neg x - 1 inc * / x 7 pop -6 x 5 F F neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "x inc 2 copy -3 1 dec pop -3 -3 dec -7 x T T 1 -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 829: "/ -1 0 + F -1 x -5 -10 neg x / x T T if -6 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "T / -10 x greedy? x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 F if -5 * 9 * + 5 *"
# 837: "greedy 8 x neg if -2 neg x 9 x dec T 5 T ¬ -10 F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 848: "inc -4 x -3 0 -2 neg x x -3 ∨ greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F x x x inc x x swap x -3 dec F 9 6 x copy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 T inc be x T x -10 x -3 + if -6 inc F F T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "< -8 T F 0 -2 neg 4 9 x ¬ inc x x pop ∨ -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T 9 T F ≥ 4 dec x x greedy x ¬ x T -10 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F x - 1 inc * / x 7 5 ¬ / x -2 greedy? inc -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x x x -10 dec -10 ungreedy x 7 ¬ -3 / * -5 ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 T x < pop neg depth ∧ 7 * x ¬ x T -6 greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -10 x inc x -4 T -10 greedy -2 ≤ x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x inc -5 / x - depth -1 x -3 x greedy x x + ungreedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -3 if x 1 x F x * x ∨ x 5 eql pop * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "5 x -2 F inc neg 7 < x F T be -3 x ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -7 ¬ copy F ∨ T T x -5 copy x x < ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-7 9 T F ≥ x dec x x neg x ¬ x T ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F dec x copy x T -4 x 8 F T be -3 neg ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-3 / x x x copy x -8 if -5 F eql 9 -7 -10 * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1117: "x eql -2 / depth F T + copy 1 x depth x F x neg ungreedy -5 9 ≥ -9 F if -5 * 9 * + 5 *"
# 1643: "x / 7 copy x T / -6 T F 2 x 5 -2 x -5 ungreedy -5 x eql -9 -10 if -5 * 9 * + 5 *"
# 3443: "pop x x x greedy + -6 x greedy? -9 x T + T neg pop T -5 x pop -9 -10 if -5 * 9 * + 5 *"
# 12733: "-3 / T F ≥ x dec x x neg x > x T ≤ x -5 -5 x ≥ -9 -10 ¬ -6 * 9 * + 5 *"
# 42833: "x x x / greedy -3 x x x x x x + x pop neg x -5 x ≥ -9 -10 if -5 * 9 * inc inc 9"
# 43022: "x * 6 -6 9 7 + - x x dec -5 - -10 / / x + x -9 x x -8 8 / -6 x x * x"
# 43022: "x 6 * / x -4 1 x -1 8 x 1 x inc + - x x + x -8 x dec x x x -10 / 0 x"
27641,43022,68
27642,43043,69
27643,43064,69
27644,43211,74
27645,43064,71
27646,42917,89
27647,44072,96
27648,43022,72
27649,48647,70
27650,507,80
27651,12530,79
27652,41363,83
27653,41417,86
27654,3688,79
27655,30992,90
27656,43142,77
27657,58443,74
27658,48272,80
27659,50530,78
27660,13048,70
27661,86597,75
27662,43547,87
27663,3443,93
27664,42977,90
27665,42077,86
27666,43242,90
27667,35372,85
27668,1128,86
27669,43547,84
27670,43022,84
27671,1108,77
27672,964,77
27673,1117,81
27674,26872,80
27675,36002,73
27676,43022,75
27677,42182,78
27678,3443,92
27679,848,72
27680,21000000,92
27681,3443,77
27682,42917,74
27683,2213,95
27684,469322,78
27685,41477,82
27686,21000000,77
27687,37202,98
27688,43022,95
27689,37307,70
27690,57883,84
27691,3807,72
27692,42959,78
27693,678,78
27694,42833,74
27695,43337,82
27696,51107,84
27697,13467,73
27698,9958,88
27699,1133,77
27700,57183,85
27701,45457,75
27702,43049,86
27703,67987,80
27704,42467,92
27705,4398,91
27706,3443,90
27707,43085,85
27708,963,80
27709,43022,84
27710,1324,86
27711,44072,81
27712,3688,80
27713,42917,75
27714,43022,86
27715,57138,68
27716,15000288,89
27717,1663,82
27718,57617,83
27719,40613,80
27720,1281,74
27721,3443,75
27722,43022,78
27723,678,80
27724,15000288,78
27725,18647,80
27726,873,89
27727,48722,81
27728,1324,85
27729,43862,82
27730,796,93
27731,43022,85
27732,43022,94
27733,82772,82
27734,67172,82
27735,43022,95
27736,43547,78
27737,678,86
27738,47282,88
27739,1324,76
27740,43064,68
27741,43022,79
27742,28970,86
27743,25278,69
27744,848,78
27745,38366,84
27746,43887,86
27747,52997,86
27748,55698,74
27749,19932,88
27750,43022,86
27751,12678,86
27752,848,82
27753,28626,83
27754,79541,81
27755,42917,82
27756,21000000,95
27757,43539,86
27758,43022,90
27759,1662,75
27760,45162,79
27761,1133,92
27762,21000000,87
27763,848,84
27764,41959,82
27765,43022,88
27766,43547,91
27767,21000000,70
27768,1673,88
27769,1454,100
27770,43022,73
27771,43211,79
27772,43022,87
27773,21000000,75
27774,1848,91
27775,43022,72
27776,42917,79
27777,47992,81
27778,40232,94
27779,1673,89
27780,1013,79
27781,42812,85
27782,21000000,73
27783,45622,94
27784,77672,80
27785,63692,94
27786,45887,76
27787,86252,87
27788,43043,76
27789,43022,83
27790,964,94
27791,59208,83
27792,4398,81
27793,44072,86
27794,4313,77
27795,678,91
27796,44492,77
27797,117602,95
27798,1192,78
27799,22850,83
27800,43022,80
27801,57183,80
27802,1918,92
27803,124892,81
27804,12409,82
27805,37202,81
27806,102410,91
27807,1108,83
27808,43022,91
27809,2213,85
27810,1662,79
27811,3443,72
27812,42977,79
27813,28328,89
27814,1148,87
27815,43022,77
27816,41503,105
27817,1133,80
27818,3536159,87
27819,48692,81
27820,999,73
27821,507,80
27822,2213,82
27823,43022,92
27824,3443,89
27825,848,84
27826,1653,83
27827,43547,90
27828,45402,85
27829,42287,89
27830,848,76
27831,42917,99
27832,62972,80
27833,43967,90
27834,66647,82
27835,1038,76
27836,87392,88
27837,1038,80
27838,41552,80
27839,42077,89
27840,1336,69
27841,43022,85
27842,38147,91
27843,48722,84
27844,43022,75
27845,43022,71
27846,43127,76
27847,26722,78
27848,41807,94
27849,76727,81
27850,4398,94
27851,639,81
27852,44072,85
27853,678,86
27854,2213,84
27855,44072,83
27856,876,81
27857,41867,74
27858,42347,82
27859,30567,82
27860,51093,76
27861,2222,81
27862,21000000,75
27863,1117,95
27864,43064,70
27865,34361,75
27866,507,86
27867,43217,81
27868,57318,76
27869,1324,84
27870,43547,86
27871,43022,87
27872,678,89
27873,1703,81
27874,42028,79
27875,1765,87
27876,1765,85
27877,42917,84
27878,507,90
27879,848,82
27880,10888,84
27881,21000000,76
27882,76877,80
27883,36827,102
27884,43022,84
27885,43022,77
27886,40742,71
27887,2213,74
27888,829,94
27889,44072,89
27890,40763,76
27891,678,79
27892,59208,78
27893,507,81
27894,1324,74
27895,34361,78
27896,43022,81
27897,43022,94
27898,42077,85
27899,14712,80
27900,43022,80
27901,43022,78
27902,36932,81
27903,60639,81
27904,45111,79
27905,639,74
27906,3443,85
27907,43547,83
27908,44072,78
27909,43442,86
27910,43022,86
27911,43022,68
27912,1117,83
27913,21000000,83
27914,678,88
27915,34217,80
27916,67502,96
27917,77672,87
27918,33287,83
27919,42932,81
27920,62867,85
27921,848,74
27922,1271522,74
27923,42854,67
27924,829,80
27925,507,85
27926,796,87
27927,48692,71
27928,43022,83
27929,3443,86
27930,53522,85
27931,43022,78
27932,56688,72
27933,796,76
27934,42854,69
27935,42917,76
27936,43211,86
27937,84497,91
27938,48827,86
27939,42917,76
27940,42854,80
27941,48722,69
27942,41867,80
27943,42917,90
27944,39362,78
27945,43547,69
27946,42077,73
27947,52322,83
27948,44072,87
27949,28442,86
27950,14941,84
27951,30542,93
27952,51527,75
27953,42917,82
27954,43547,87
27955,42902,79
27956,44302,84
27957,2218,74
27958,639,78
27959,47642,81
27960,50687,84
27961,678,87
27962,41063,87
27963,4283,76
27964,60148,95
27965,1740,79
27966,43022,65
27967,42854,88
27968,8078,83
27969,48722,75
27970,678,83
27971,42917,77
27972,48797,94
27973,848,91
27974,42497,76
27975,43022,70
27976,3443,85
27977,898,70
27978,25912,79
27979,12373,83
27980,106274,81
27981,42917,94
27982,45437,83
27983,3443,85
27984,5002208,87
27985,1662,73
27986,42077,89
27987,51527,79
27988,577,82
27989,639,83
27990,3443,76
27991,42077,85
27992,42854,84
27993,1353,83
27994,678,86
27995,43022,79
27996,43022,94
27997,848,74
27998,1738,91
27999,2213,75
28000,12084,76
28001,678,84
28002,678,77
28003,9002,73
28004,43652,91
28005,48497,78
28006,15000288,70
28007,1324,77
28008,2213,74
28009,3993,88
28010,43825,82
28011,54798,79
28012,57293,88
28013,21000000,82
28014,796,83
28015,37202,90
28016,17383,82
28017,1391,78
28018,639,89
28019,4043,91
28020,43547,92
28021,15037177,84
28022,1128,79
28023,42287,82
28024,3443,93
28025,1585,73
28026,48587,89
28027,43232,90
28028,41972,80
28029,43127,82
28030,43967,83
28031,1117,80
28032,48722,80
28033,52292,91
28034,15197,71
28035,1128,82
28036,46697,86
28037,43022,82
28038,36199,101
28039,796,87
28040,43022,86
28041,45978,76
28042,1324,75
28043,678,90
28044,4137,89
28045,43022,92
# After 13800 updates
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 ∨ -2 / inc -6 -5 x x inc pop x + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x * / greedy -3 x x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -2 / inc -10 -5 x 9 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 0 7 ungreedy depth x if x x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 x ∧ 1 inc * swap x 7 x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "* x T T ungreedy * x 7 T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 + F F x 7 T -3 9 -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 T ∨ x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "neg x - 1 inc * - x 7 pop -6 x 5 -10 x neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x -3 F ungreedy * / x x F ∨ x be x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "< depth x copy greedy -3 x x -7 x < be inc x pop neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x swap T x 9 x F T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 x / -9 x be x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T F 0 -2 neg 4 9 x ¬ inc x x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x 4 x T -3 3 x 9 depth 2 -7 x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x x x 9 neg -9 + pop x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "inc * x -6 T F -8 ¬ T x dec -7 x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x -10 greedy? x F 0 ¬ x -5 -9 ¬ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x neg x greedy swap x swap - x 9 x F T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy -3 x greedy x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop -8 T x greedy -3 x < x x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 / depth F ∧ + 3 1 x depth x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x -3 F ungreedy * -9 x x x x < + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 8 x neg 6 x 6 T -10 neg -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 F inc F -6 x x x x F x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "swap 5 x > greedy x x x x x x -10 eql x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x > x greedy T x greedy x be x -10 + greedy eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 7 x copy -3 x x x 9 -6 -9 + pop x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x x + x T x x * x ∨ < 5 if pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 be ∨ x -3 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 T / -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop x T x inc F -6 x x x T F x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x inc -5 2 F x x inc x x x -10 eql greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x -9 x 9 neg -9 depth pop x greedy neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 1 ungreedy * / x 7 / ∨ x 5 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy x greedy? -6 0 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F -1 0 swap x < x 4 < x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be depth -1 x if T be 1 x x if x be x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy ¬ -10 x x F 7 ¬ -3 dec -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy T x greedy x x x -10 + ≥ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 x - 1 ungreedy * -6 x greedy? x x greedy + x x neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 T inc x + 9 -10 greedy pop 7 x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "ungreedy -1 x x greedy -3 x x x x x -10 + x ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ * 0 + F -5 > 7 ¬ -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 723: "greedy 8 x neg 6 x 6 T -10 ungreedy -9 x dec F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "/ -1 0 1 - F dec ¬ T x swap / 9 2 x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "greedy F -3 swap -7 x -3 x be 8 > / F dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "/ x T T ungreedy * / x 7 be > / F dec x dec -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "x x x -10 dec -10 x x 9 T -9 x -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T -2 x + x if greedy pop -10 inc greedy x x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 T 1 < F -4 x if inc pop x be ∧ -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 0 greedy - F inc x if < pop -10 -5 greedy x T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ * 0 1 - F inc x if inc pop eql 8 greedy -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "x / ¬ -10 inc x + 0 if greedy pop -10 inc greedy greedy? x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "7 9 - F ≥ if neg 0 x / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "T ≥ -1 x if -9 be x 7 / ∨ x 5 swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ T -3 swap greedy? x ≤ -10 F F dec greedy? -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "T / -10 x greedy? x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 F if -5 * 9 * + 5 *"
# 848: "T / -10 x inc x -4 ∨ -10 x -2 ≤ x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F neg - greedy? inc * -9 x 9 greedy pop 7 x F x -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F x x x inc x x swap x -3 dec F 9 6 x copy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy 8 x neg 6 9 x x * x ∨ x -10 eql pop greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F x - 1 inc * / x 7 5 ¬ / x -2 greedy? inc -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F -2 ¬ F -4 4 dec x x greedy x 8 -3 T -10 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "< -8 T F 0 -2 neg 4 9 x ¬ inc x x pop ∨ -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "5 x -2 F inc neg 7 < x F T be -3 x ∨ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x -7 ¬ copy F ∨ T T x -5 copy x x < ≤ x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "x inc -5 x x - x if F ¬ F / -7 -5 -3 x eql -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 T x < pop neg depth ∧ 7 * x ¬ x T -6 greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1336: "x x x + x T -3 x * x ∨ < 5 if pop 7 T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1353: "-1 x -3 ∧ ungreedy * / < -2 x ∨ x be inc pop neg dec F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1662: "+ dec x 2 -3 -8 eql 1 x 8 ∧ 1 x inc + - x -5 x pop -9 -10 if -5 * 9 * + 5 *"
# 12733: "-3 / T F ≥ x dec x x neg x > x T ≤ x -5 -5 x ≥ -9 -10 ¬ -6 * 9 * + 5 *"
# 42497: "7 - dec x x - x 8 x x F ∨ + x pop neg ungreedy -5 x ≥ -9 T if -5 * 9 * 5 5 *"
# 42833: "x x x + x T x x * 4 ∨ < 5 if pop neg T -5 x ≥ if -10 if -5 * 9 * inc inc 9"
# 43022: "-2 / -10 T -2 x + x if greedy pop -10 inc greedy x F -9 * x ≥ -9 8 if -5 x F -10 ∨ 0 x"
28046,43022,68
28047,43043,73
28048,43022,68
28049,43106,76
28050,42875,71
28051,1765,82
28052,8001499,82
28053,43997,81
28054,796,79
28055,57827,71
28056,42497,78
28057,42875,86
28058,77147,79
28059,26133,80
28060,43547,83
28061,1117,87
28062,678,80
28063,57883,75
28064,43022,93
28065,1226,78
28066,77147,81
28067,40997,83
28068,40763,80
28069,75217,91
28070,20001998,74
28071,43022,73
28072,43022,84
28073,47027,80
28074,678,84
28075,42686,84
28076,2213,81
28077,42812,80
28078,1324,73
28079,1133,89
28080,43022,88
28081,2213,81
28082,13148,82
28083,43022,79
28084,1133,82
28085,43022,84
28086,43022,69
28087,10023232,82
28088,6272,78
28089,59208,70
28090,42287,84
28091,42077,68
28092,43043,86
28093,42497,88
28094,43547,77
28095,1324,87
28096,1324,88
28097,43022,87
28098,678,81
28099,451,84
28100,41972,74
28101,678,80
28102,43022,79
28103,63272,77
28104,1117,88
28105,42497,83
28106,15003247,84
28107,76097,78
28108,43022,82
28109,467432,89
28110,43232,85
28111,793,74
28112,43022,88
28113,85547,81
28114,6025495,79
28115,28217,85
28116,57857,85
28117,43001,77
28118,42833,90
28119,43022,82
28120,43127,76
28121,1649,74
28122,507,89
28123,43022,83
28124,1918,84
28125,3352,79
28126,41897,86
28127,17710,80
28128,1663,93
28129,28964,78
28130,678,86
28131,53492,80
28132,48422,79
28133,42980,78
28134,192338,94
28135,55158,88
28136,45017,79
28137,796,96
28138,21000000,89
28139,678,88
28140,2213,88
28141,2213,84
28142,1133,85
28143,678,80
28144,933,90
28145,793,96
28146,1848,80
28147,4347,90
28148,1148,82
28149,21000000,82
28150,678,81
28151,43022,83
28152,15047423,86
28153,40763,83
28154,42812,86
28155,231133,72
28156,43022,81
28157,44072,78
28158,37352,80
28159,507,86
28160,121916,70
28161,43003,75
28162,42833,88
28163,42917,81
28164,11009280,90
28165,47747,90
28166,671928,83
28167,43022,88
28168,37202,80
28169,42564,78
28170,26802,82
28171,876,84
28172,41132,86
28173,639,88
28174,54798,72
28175,42347,80
28176,44072,97
28177,42875,77
28178,44072,70
28179,42875,79
28180,3443,74
28181,4252,89
28182,43022,74
28183,43547,85
28184,1324,75
28185,42957,82
28186,65147,81
28187,42497,93
28188,1173,76
28189,678,77
28190,3443,93
28191,38867,89
28192,8039351,88
28193,52283,86
28194,678,78
28195,678,82
28196,54378,87
28197,43022,73
28198,528,79
28199,2213,85
28200,2213,75
28201,4252,88
28202,61712,82
28203,57520,76
28204,1258,91
28205,42833,88
28206,40763,78
28207,3443,91
28208,1663,78
28209,38846,93
28210,43022,83
28211,42077,80
28212,3443,76
28213,1662,83
28214,678,84
28215,42980,87
28216,16598,77
28217,37352,86
28218,43022,84
28219,1454,85
28220,3443,72
28221,62043,82
28222,796,91
28223,43022,84
28224,42707,88
28225,3443,83
28226,36274,85
28227,43967,87
28228,42833,81
28229,40688,85
28230,4252,82
28231,43232,86
28232,21000000,83
28233,44072,78
28234,21000000,85
28235,2213,83
28236,51797,74
28237,1867,78
28238,33433,74
28239,42812,76
28240,16859,83
28241,43400,85
28242,42602,77
28243,1173,79
28244,678,90
28245,41447,76
28246,42602,86
28247,1117,85
28248,70217,88
28249,44072,81
28250,1391,76
28251,42707,81
28252,43547,96
28253,48632,81
28254,3085,90
28255,108597,86
28256,34346,80
28257,43732,87
28258,678,82
28259,43547,85
28260,502,77
28261,1133,82
28262,57293,84
28263,43022,92
28264,43547,76
28265,1316,83
28266,43547,77
28267,43547,80
28268,1662,82
28269,3918,88
28270,3443,73
28271,4313,94
28272,42848,91
28273,42287,82
28274,55518,79
28275,42182,85
28276,1324,86
28277,3918,84
28278,3773,81
28279,34817,85
28280,42152,82
28281,994,90
28282,21000000,84
28283,43232,76
28284,1281,78
28285,22578,82
28286,42977,79
28287,42917,92
28288,21000000,86
28289,42523,80
28290,678,87
28291,21000000,88
28292,42392,90
28293,44072,85
28294,805,77
28295,44072,71
28296,47747,95
28297,42938,87
28298,43022,87
28299,21000000,94
28300,43067,85
28301,3443,79
28302,45092,87
28303,1730,86
28304,43022,87
28305,59208,91
28306,848,74
28307,42938,101
28308,1133,82
28309,12927,90
28310,3443,79
28311,1033,83
28312,39761,79
28313,3068,88
28314,57883,74
28315,43592,71
28316,15017557,93
28317,43322,82
28318,38867,83
28319,3443,80
28320,678,84
28321,41657,89
28322,12017412,91
28323,2887,84
28324,1133,76
28325,52517,82
28326,43022,94
28327,507,86
28328,1117,81
28329,1117,82
28330,42917,84
28331,21000000,73
28332,81872,80
28333,43106,76
28334,43022,78
28335,678,89
28336,3443,86
28337,3443,88
28338,3637,77
28339,47252,92
28340,678,81
28341,2263,80
28342,1918,82
28343,116483,79
28344,43517,81
28345,3443,83
28346,34171,75
28347,1117,97
28348,3443,83
28349,43022,87
28350,25172,80
28351,639,86
28352,84602,87
28353,4137,79
28354,42077,87
28355,2213,79
28356,3443,78
28357,33272,95
28358,24482,90
28359,21000000,83
28360,47978,89
28361,42077,82
28362,42077,84
28363,43022,90
28364,85952,94
28365,51797,84
28366,43022,93
28367,43022,86
28368,3466,84
28369,836,79
28370,42980,90
28371,43022,83
28372,40088,69
28373,4252,85
28374,50843,77
28375,678,82
28376,678,82
28377,1065,79
28378,3443,77
28379,80535,83
28380,53042,78
28381,43022,81
28382,42917,85
28383,21000000,92
28384,12307,72
28385,43127,84
28386,19517,87
28387,42077,82
28388,999,83
28389,43022,82
28390,798,81
28391,37577,81
28392,848,77
28393,36827,82
28394,43169,86
28395,3443,86
28396,1281,91
28397,678,84
28398,678,86
28399,42938,84
28400,639,75
28401,848,79
28402,50343,85
28403,1133,90
28404,43022,94
28405,15029137,87
28406,43232,90
28407,66197,79
28408,3918,81
28409,899,78
28410,3443,85
28411,2677,75
28412,796,94
28413,43862,80
28414,37202,78
28415,678,94
28416,1324,85
28417,43022,87
28418,1133,79
28419,1663,90
28420,43022,81
28421,42938,82
28422,1612,81
28423,43022,87
28424,42917,91
28425,43211,79
28426,829,85
28427,42497,77
28428,35897,83
28429,38647,89
28430,1281,83
28431,42872,84
28432,21000000,83
28433,2422,82
28434,43190,95
28435,793,74
28436,42875,89
28437,678,80
28438,55323,82
28439,1289,74
28440,199972,85
28441,66947,82
28442,1663,78
28443,57293,80
28444,42452,78
28445,51170,87
28446,68417,78
28447,54798,79
28448,32762,71
28449,51947,82
28450,35839,87
# After 14000 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 ∨ -2 / inc -6 -5 x x inc pop x + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql x / inc F T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "5 greedy -2 ∨ inc neg 7 x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -2 / inc -10 -5 x 9 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 0 7 ungreedy depth x if x x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 x ∧ 1 inc * swap x 7 x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x -3 F ungreedy * / x x F ∨ x be x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 + F F x 7 T -3 9 -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "< depth x copy greedy -3 x x -7 x < be inc x pop neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 / x x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 T ∨ x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "+ x T T F * x x T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "* x T T ungreedy * x 7 T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T ungreedy x / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x / ¬ -10 x x F 7 T -3 T -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x -10 greedy? x F 0 ¬ x -5 -9 ¬ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x -9 x 9 neg -9 depth pop x greedy neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 x pop x F 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop ≥ -1 x if T be T x -5 -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy -7 x ungreedy ungreedy * / x 7 / -9 x x inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ * 0 + F -5 > 7 ¬ -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 pop ungreedy * / x F be ∨ x -3 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x greedy -3 x swap T x 9 x F T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 T pop x F 9 -10 greedy pop 7 x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "inc * x -6 T F -8 ¬ T x dec -7 x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x inc -5 2 F x x inc x x x -10 eql greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop x T x x F -6 x greedy x T F x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy -3 x greedy x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F x greedy? T 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x 3 1 T depth x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F x - 1 inc neg / x 7 5 ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x x + x T x x * x ∨ < 5 if pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy T x greedy x x x -10 + ≥ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "ungreedy -1 x x greedy -3 x x x x x -10 + x ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 F inc F -6 x x x x F x be x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x - 1 ungreedy * -6 2 1 x x greedy + x x neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x inc be 0 -2 -5 x x x x x + - pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 / depth F ∧ x x x copy F x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "7 9 - ≥ ≥ if neg F x x x greedy + -4 x neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "4 -8 inc x greedy -3 F 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F -1 inc swap x < x 4 < x F ∨ F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x 4 x T -3 3 x 9 depth 2 -7 x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy x greedy? -6 0 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "swap 5 x > greedy x x x x x x -10 eql x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 / depth F ∧ + 3 1 x depth x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be x x x greedy -3 -5 x x x x > F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x > x greedy T x greedy x be x -10 + greedy eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be ≥ -1 x if T be 1 x / -9 x be x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be depth be x if T be 1 be x if x ∧ x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 723: "greedy 8 x neg 6 x 6 T -10 ungreedy -9 x dec F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "F -2 ¬ x - -6 dec ¬ 7 x copy / 9 2 x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "/ x T T ungreedy * / x 7 be > / F dec x dec -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 T 1 < F -4 x if inc pop x be ∧ -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-1 swap > x greedy T x greedy x be ∧ dec inc ∨ greedy? x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "T ≥ -1 x if -9 be x 7 / ∨ x 5 swap pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ * 0 1 - F inc x if greedy pop eql 8 T -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T -2 x + x if greedy pop -10 inc greedy x x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "6 -3 0 depth ungreedy depth x x 9 ¬ -9 F -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ x -3 T greedy? x ≤ -10 F F dec F -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "T / -10 x greedy? x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 F if -5 * 9 * + 5 *"
# 836: "-2 / -10 T -2 x 3 x if greedy -2 1 x F + * dec depth x ≥ -9 F if -5 * 9 * + 5 *"
# 848: "T / -10 x inc x -4 ∨ -10 x -2 ≤ x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F -2 ¬ F -4 4 dec x x greedy x 8 -3 T -10 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "greedy 8 x neg 6 9 x x * x ∨ x -10 eql pop greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F 1 x x inc x x swap x -3 dec F x 6 x T -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-1 / -3 F x T / x x F pop 7 x F x -5 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 899: "* - 9 -9 x - -7 x / F 3 F / x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1033: "-5 / T F ≥ x dec x x neg x > x greedy? x / ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1133: "+ dec x 2 -3 -8 eql 1 x 8 / T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * ∨ 5 *"
# 1173: "x x x F ungreedy * 8 x x x x < + -4 ¬ neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 25172: "-5 -1 0 + F F x T T -3 9 -7 x F pop neg ungreedy -5 x ≥ -9 -10 -4 -5 * 9 * + 5 *"
# 35897: "greedy F x neg 6 9 x x T x ∨ x -10 eql x greedy -5 -5 x ≥ x -10 if -5 - 9 * + inc *"
# 37202: "inc -1 -2 / -6 F -6 swap x -3 dec F x 6 x T -5 -5 x ≥ -9 -10 if -5 * 9 ∨ + 5 *"
# 42917: "-1 copy > x greedy T x greedy x be neg -10 + greedy x neg swap x dec -5 x x 2 x * 9 * + 5 T"
28451,43002,70
28452,43295,69
28453,43085,74
28454,43022,72
28455,43127,66
28456,42182,81
28457,104942,90
28458,64218,80
28459,43877,90
28460,42917,81
28461,42497,82
28462,639,83
28463,1408,84
28464,42077,79
28465,15000288,84
28466,3443,81
28467,1038,85
28468,3893,98
28469,42917,81
28470,51107,100
28471,51698,87
28472,48212,78
28473,678,87
28474,23212,83
28475,88022,93
28476,814,85
28477,42497,76
28478,61713,82
28479,54953,78
28480,17137,84
28481,44072,79
28482,57993,90
28483,25487,90
28484,2213,77
28485,836,78
28486,43058,84
28487,42917,85
28488,1324,82
28489,1173,90
28490,3443,85
28491,43085,78
28492,3913,77
28493,4072319,80
28494,678,86
28495,4185,71
28496,56998,84
28497,42917,88
28498,3443,78
28499,51170,85
28500,3443,82
28501,1133,93
28502,43295,81
28503,42182,74
28504,42917,77
28505,45017,90
28506,2791,75
28507,796,80
28508,57678,94
28509,392018,80
28510,42252,83
28511,848,81
28512,21000000,69
28513,44072,81
28514,61263,80
28515,45437,92
28516,4398,80
28517,42572,82
28518,36122,83
28519,46382,87
28520,62972,82
28521,42917,70
28522,678,84
28523,3443,89
28524,43022,91
28525,40163,83
28526,678,91
28527,1173,77
28528,507,79
28529,53332,76
28530,42077,80
28531,3443,86
28532,15000288,80
28533,2213,86
28534,83300,86
28535,85247,85
28536,1890,81
28537,109528,78
28538,79922,83
28539,42077,94
28540,814,81
28541,42077,84
28542,56998,83
28543,507,89
28544,793,102
28545,43022,95
28546,66017,89
28547,52322,81
28548,56998,82
28549,17773,81
28550,37202,88
28551,43022,81
28552,21000000,86
28553,39272,83
28554,777,85
28555,77042,81
28556,87842,79
28557,43547,89
28558,42854,91
28559,42890,94
28560,50222,94
28561,45243,83
28562,507,82
28563,3443,77
28564,12015333,75
28565,42077,86
28566,793,81
28567,51602,76
28568,31089,90
28569,2213,78
28570,1613,78
28571,19773,82
28572,801,80
28573,48272,79
28574,43022,80
28575,1740,84
28576,43127,82
28577,42707,81
28578,42152,92
28579,3443,78
28580,42917,80
28581,42896,98
28582,41657,79
28583,3443,88
28584,3443,75
28585,44012,89
28586,60374,87
28587,3783,86
28588,21000000,79
28589,796,81
28590,42917,98
28591,57273,73
28592,678,87
28593,21000000,89
28594,1324,74
28595,42077,72
28596,8001499,84
28597,42182,66
28598,48722,72
28599,43517,91
28600,52997,88
28601,2213,78
28602,59732,77
28603,42692,84
28604,42182,70
28605,678,83
28606,43043,97
28607,42428,73
28608,20512,79
28609,3443,78
28610,43022,84
28611,8498,87
28612,43022,83
28613,12016878,86
28614,75543,79
28615,53607,85
28616,45092,90
28617,2213,75
28618,15013137,89
28619,4252,95
28620,42712,79
28621,45497,81
28622,86632,89
28623,43022,72
28624,41953,79
28625,218533,103
28626,43547,78
28627,37202,78
28628,21000000,85
28629,26683,81
28630,52416,78
28631,41063,87
28632,4442,76
28633,3443,84
28634,33767,85
28635,36064,84
28636,51167,77
28637,43002,72
28638,36497,82
28639,21000000,94
28640,76498,81
28641,43022,101
28642,45447,75
28643,848,80
28644,796,80
28645,2213,80
28646,42917,85
28647,56868,85
28648,11467,88
28649,43022,74
28650,42077,81
28651,57158,69
28652,36512,78
28653,15010546,91
28654,929,81
28655,48797,82
28656,1662,83
28657,3443,82
28658,42802,81
28659,49458,88
28660,51527,80
28661,34622,80
28662,7001728,87
28663,1345,77
28664,43022,77
28665,3443,72
28666,796,93
28667,23212,87
28668,48722,82
28669,3443,82
28670,43022,81
28671,42077,93
28672,25670,82
28673,1289,78
28674,42077,79
28675,48722,89
28676,43022,85
28677,1918,79
28678,2078,78
28679,507,81
28680,43022,87
28681,44072,74
28682,3443,95
28683,77642,80
28684,2213,100
28685,43022,87
28686,43022,92
28687,42077,83
28688,1132,84
28689,678,93
28690,5002208,90
28691,43742,80
28692,21000000,84
28693,2213,84
28694,1391,78
28695,43002,101
28696,38972,80
28697,178413,87
28698,999,85
28699,9737,81
28700,37202,89
28701,42332,84
28702,42938,87
28703,1768,93
28704,43547,83
28705,37202,85
28706,43022,77
28707,647,88
28708,42959,80
28709,42077,81
28710,31089,87
28711,15011393,85
28712,38717,73
28713,1173,79
28714,678,89
28715,678,77
28716,21000000,90
28717,43547,90
28718,3443,97
28719,678,87
28720,1324,79
28721,43997,81
28722,1324,80
28723,41953,72
28724,678,91
28725,39587,98
28726,43967,66
28727,43022,88
28728,793,81
28729,42854,86
28730,1324,79
28731,43022,78
28732,48797,90
28733,23662,89
28734,43922,80
28735,50162,85
28736,33572,82
28737,44447,78
28738,1705,78
28739,43022,88
28740,42842,82
28741,42077,90
28742,1173,83
28743,678,82
28744,678,86
28745,678,82
28746,42917,74
28747,2258,82
28748,1730,87
28749,74977,96
28750,43967,87
28751,43232,79
28752,42917,81
28753,43547,81
28754,43232,85
28755,43022,80
28756,2213,83
28757,1673,82
28758,47068,90
28759,80082,99
28760,43022,76
28761,801,90
28762,3443,93
28763,62972,90
28764,107707,74
28765,40997,96
28766,1672,79
28767,597,82
28768,42812,80
28769,678,87
28770,4398,79
28771,69050,87
28772,1173,80
28773,43547,86
28774,848,87
28775,3443,85
28776,3637,82
28777,34968,75
28778,3443,94
28779,42077,83
28780,43022,88
28781,1673,79
28782,15000288,82
28783,52015,92
28784,42917,87
28785,21000000,83
28786,43547,82
28787,21000000,81
28788,678,84
28789,43547,84
28790,59958,84
28791,42252,85
28792,2988,85
28793,44072,89
28794,49363,84
28795,49637,87
28796,66197,93
28797,44157,88
28798,40163,84
28799,507,74
28800,1133,77
28801,59007,89
28802,44072,74
28803,1663,71
28804,35042,80
28805,1324,79
28806,3393,88
28807,43022,83
28808,21000000,90
28809,118172,80
28810,39977,84
28811,48722,77
28812,1536,78
28813,43064,85
28814,68955,76
28815,37202,87
28816,38297,104
28817,1117,80
28818,42917,91
28819,43922,88
28820,639,86
28821,3443,76
28822,45487,87
28823,34247,88
28824,1053,92
28825,43217,86
28826,15005652,78
28827,44497,80
28828,3773,90
28829,1089,79
28830,73120,88
28831,37152,86
28832,43022,88
28833,37202,81
28834,37202,72
28835,41923,78
28836,44072,80
28837,29614,76
28838,44072,85
28839,678,74
28840,40292,87
28841,58043,73
28842,43169,67
28843,43127,88
28844,678,78
28845,3443,84
28846,10002563,86
28847,37577,75
28848,38788,89
28849,6003830,78
28850,45162,88
28851,43547,78
28852,39713,80
28853,48722,83
28854,40318,84
28855,15024382,85
# After 14200 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -2 / inc -10 -5 x 9 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if -9 T x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F inc be 0 -2 ∧ -1 x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "5 greedy -2 ∨ inc neg 7 x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql x / inc F T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 / x x / x 4 -8 dec 4 x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 0 7 ungreedy depth x if x x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 x ∧ 1 inc * swap x 7 x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 x ∧ 1 x eql swap x 7 x x > + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "* x T T ungreedy * x 7 T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "< depth x copy greedy -3 x x -7 x < be inc x pop neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "+ x T T F * x x T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 T ∨ x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T ungreedy x / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 + F F x 7 T -3 9 -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop ≥ -1 x if T be T x -5 -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 F inc F -6 x x x x F x be x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F 0 - 1 inc neg x x pop x ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy x greedy? -6 0 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "< depth x copy ungreedy T / x 7 / -9 > x inc x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 / pop x x inc x x x -10 eql greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x 0 F ungreedy x / x F be ∨ x -3 inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x -9 x 9 neg -9 depth pop x greedy neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x inc be 0 -2 -5 x x x x x + - pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 T pop x F 9 -10 greedy pop 7 x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 8 x neg 6 x 6 T T ungreedy copy x < x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x inc -5 2 F x x inc x x x -10 eql greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F x greedy? T 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x -7 -3 8 swap T x 9 x F ∨ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "ungreedy -1 x x greedy -3 x x x x x -10 + x ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / -2 -10 greedy? x F 0 ¬ -4 -5 -9 ¬ 8 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy T x greedy x x x -10 + ≥ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x inc -5 / x - * greedy? -2 / x x x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ * 0 + F -5 > 7 ¬ -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x - 1 ungreedy * -6 2 1 x x greedy + x x neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 x greedy? x 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "swap 5 x > greedy x x x x x x -10 eql x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy -3 x greedy x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop x T x x F -6 x greedy x T F x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F x - 1 inc neg / x 7 5 ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be depth be x if T be 1 be x if x ∧ x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 x pop x F 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "4 -8 inc x greedy -3 F 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be x x x greedy -3 -5 x x x x > F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 inc -5 F x T x greedy x be x -10 x greedy < neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x > x greedy T x greedy x be x -10 + greedy eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x 3 1 T depth x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "7 9 - ≥ ≥ if neg F x x x greedy + -4 x neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be F x ungreedy depth F ∧ F 3 1 x T x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x 4 x T -3 3 x 9 depth 2 -7 x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x swap x < x 4 -8 x F ∨ F x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "/ x T T ungreedy * / x 7 be > / F dec x dec -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "F x 2 x 2 inc eql 1 x neg greedy? ∧ ∧ dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "F eql -2 / inc F -6 x greedy? x x x 9 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-1 swap > x greedy T x greedy x be ∧ dec inc ∨ greedy? x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-2 / -10 T -2 x + x if greedy pop -10 inc greedy x x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 T 1 < F -4 x if inc pop x be ∧ -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-1 x x x greedy T -1 x if greedy x eql 8 T - x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "6 -3 0 depth ungreedy depth x x 9 ¬ -9 F -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 798: "∧ x -3 T greedy? x ≤ -10 F F dec F -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "-2 / -10 ≤ -2 x 3 depth if / -2 1 x F + * dec depth x ≥ -9 F if -5 * 9 * + 5 *"
# 848: "greedy F x neg 6 9 x x T F x x -1 eql x greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "-2 x 4 x T 0 3 x 9 depth 2 x -10 x pop greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "T / -10 x inc x -4 ∨ -10 x -2 ≤ x F + * -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 848: "F -2 ¬ F -4 4 dec x x greedy x 8 -3 T -10 x -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1133: "pop copy > -1 greedy T x greedy x be neg + + x T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * T 5 *"
# 1133: "-2 inc ∧ F 2 T x greedy x x x < T -4 ¬ neg -5 be x ≥ -9 -10 if -5 * 9 * T 5 *"
# 1324: "-1 x F x greedy T x greedy x x x -10 + ≥ eql ∧ F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1391: "-1 x x x greedy T -1 x if swap 3 2 0 inc 4 * * -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 25172: "-5 -1 0 + F F x T T -3 9 -7 x F pop neg ungreedy -5 x ≥ -9 -10 -4 -5 * 9 * + 5 *"
# 43022: "-2 x - copy ungreedy * -6 2 1 -10 x greedy 0 x * -7 x dec inc x + -7 4 -10 -8 x -4 2 x x"
# 43127: "-3 x greedy? x be T copy 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 * x x x - / 3 -5"
28856,43022,79
28857,43022,67
28858,43022,73
28859,42979,73
28860,42770,70
28861,1569,75
28862,45243,85
28863,43547,80
28864,4228,92
28865,42602,69
28866,42770,87
28867,48747,68
28868,43022,90
28869,42572,86
28870,42077,79
28871,53882,71
28872,21000000,83
28873,4313,78
28874,38297,81
28875,1133,87
28876,2218,85
28877,43547,74
28878,117110,86
28879,507,78
28880,21000000,87
28881,44492,83
28882,37247,81
28883,48722,79
28884,678,88
28885,16967,80
28886,45147,77
28887,3637,74
28888,597,75
28889,43211,92
28890,66197,83
28891,453968,79
28892,43022,76
28893,678,76
28894,59568,90
28895,43022,75
28896,10997,83
28897,43022,87
28898,43022,74
28899,43022,85
28900,42917,77
28901,43022,77
28902,43967,86
28903,678,86
28904,15000288,93
28905,112430,83
28906,1760,95
28907,678,86
28908,34451,92
28909,1289,79
28910,2213,80
28911,48692,83
28912,53717,80
28913,42077,89
28914,39445,92
28915,48687,83
28916,42917,80
28917,42917,81
28918,4302,83
28919,848,83
28920,44353,86
28921,2743,84
28922,110090,83
28923,999,78
28924,1324,93
28925,507,80
28926,43547,91
28927,3007,86
28928,678,89
28929,90272,86
28930,3598,76
28931,47747,89
28932,44072,83
28933,34436,99
28934,50748,76
28935,43547,89
28936,37202,94
28937,23966,87
28938,42077,79
28939,41132,93
28940,267578,91
28941,66352,85
28942,42077,91
28943,44707,80
28944,678,83
28945,678,90
28946,21000000,90
28947,796,78
28948,44072,88
28949,1757,73
28950,678,82
28951,1324,82
28952,21000000,85
28953,678,81
28954,4183,89
28955,15329,86
28956,43547,92
28957,21000000,83
28958,21000000,82
28959,81557,87
28960,43022,79
28961,15000288,86
28962,43085,82
28963,43472,93
28964,43022,86
28965,90422,84
28966,639,75
28967,42602,87
28968,678,92
28969,1324,72
28970,40172,92
28971,43022,94
28972,43022,80
28973,4228,86
28974,4398,82
28975,67592,75
28976,77522,82
28977,70805,80
28978,34226,86
28979,42742,72
28980,52997,82
28981,44072,85
28982,1324,74
28983,40344,83
28984,43772,95
28985,1324,102
28986,43022,85
28987,43547,82
28988,3443,76
28989,38533,94
28990,994,79
28991,43817,78
28992,30110,80
28993,793,80
28994,56998,86
28995,42392,87
28996,42917,95
28997,43127,82
28998,29094,96
28999,36289,82
29000,43022,89
29001,48722,97
29002,42727,85
29003,21000000,81
29004,53417,88
29005,42602,93
29006,4963,73
29007,964,74
29008,2213,82
29009,42077,86
29010,21000000,79
29011,15005805,86
29012,25232,82
29013,43022,89
29014,796,93
29015,47777,86
29016,40163,92
29017,43121,84
29018,44072,81
29019,3913,83
29020,678,99
29021,43127,82
29022,15000288,85
29023,45092,85
29024,105247,86
29025,11000880,82
29026,43022,95
29027,964,82
29028,15031127,78
29029,43022,84
29030,1324,75
29031,43022,80
29032,43862,83
29033,76937,92
29034,999,85
29035,43022,75
29036,829,77
29037,170233,89
29038,3443,79
29039,42077,81
29040,793,80
29041,1585,83
29042,43547,79
29043,44452,82
29044,38192,86
29045,678,78
29046,48692,88
29047,43547,80
29048,45217,91
29049,3443,81
29050,43547,89
29051,43337,73
29052,4963,87
29053,1663,82
29054,56925,78
29055,1128,83
29056,43022,78
29057,18252,80
29058,2208,88
29059,57838,99
29060,47118,73
29061,40838,85
29062,121916,89
29063,42077,78
29064,63322,84
29065,41972,89
29066,3528,90
29067,57027,80
29068,2351,83
29069,883,79
29070,2213,80
29071,4893,77
29072,1359,77
29073,92717,92
29074,3443,85
29075,43022,83
29076,1289,88
29077,43337,82
29078,49097,97
29079,39242,77
29080,43022,91
29081,63047,81
29082,59298,92
29083,41942,85
29084,3443,85
29085,43022,81
29086,43127,92
29087,113492,82
29088,45292,87
29089,42077,81
29090,52197,91
29091,3443,78
29092,43967,82
29093,466382,69
29094,40163,74
29095,43022,84
29096,43022,100
29097,11000880,79
29098,41398,82
29099,44387,85
29100,1918,79
29101,507,81
29102,42917,78
29103,36617,88
29104,678,90
29105,21000000,91
29106,43732,85
29107,678,83
29108,21000000,86
29109,43547,83
29110,42707,75
29111,35042,73
29112,42917,83
29113,41702,83
29114,76097,85
29115,9039380,84
29116,43478,87
29117,2213,80
29118,21000000,75
29119,43547,77
29120,1128,88
29121,44072,75
29122,2213,88
29123,94023,80
29124,2213,78
29125,507,85
29126,1843,77
29127,10997,75
29128,1628,85
29129,48722,89
29130,60543,87
29131,43757,93
29132,27102,83
29133,1324,78
29134,43022,78
29135,39767,76
29136,42077,76
29137,33523,79
29138,999,83
29139,21000000,89
29140,678,88
29141,43022,75
29142,55158,97
29143,33767,100
29144,796,80
29145,21000000,84
29146,796,87
29147,37202,81
29148,1663,89
29149,59928,80
29150,3443,82
29151,821,95
29152,43043,75
29153,70022,75
29154,109590,70
29155,21000000,86
29156,21000000,102
29157,40538,78
29158,721,89
29159,1324,82
29160,13006536,86
29161,1918,76
29162,43232,97
29163,21000000,93
29164,37202,80
29165,1757,79
29166,42962,84
29167,58923,97
29168,43022,73
29169,21000000,79
29170,43967,81
29171,42917,85
29172,48272,85
29173,1324,72
29174,39722,88
29175,316927,83
29176,793,76
29177,4228,90
29178,21000000,87
29179,43022,82
29180,44072,88
29181,90272,89
29182,43022,77
29183,52242,82
29184,3788,75
29185,37352,79
29186,678,82
29187,678,84
29188,42938,89
29189,21000000,88
29190,1324,76
29191,42602,85
29192,1124,71
29193,43297,77
29194,2213,86
29195,48797,77
29196,1281,98
29197,45447,79
29198,1133,83
29199,43022,94
29200,3443,77
29201,47327,74
29202,1662,89
29203,42077,83
29204,43022,85
29205,43442,78
29206,2213,72
29207,45047,83
29208,5002208,82
29209,678,89
29210,43022,84
29211,42680,87
29212,42917,76
29213,42077,81
29214,678,88
29215,57293,88
29216,44072,94
29217,54508,88
29218,74563,79
29219,33677,101
29220,47582,85
29221,43652,81
29222,678,78
29223,43547,87
29224,13932,78
29225,21000000,79
29226,48722,80
29227,3238,78
29228,3443,84
29229,48722,89
29230,45162,73
29231,43169,86
29232,9433,99
29233,43022,90
29234,39826,89
29235,35233,81
29236,2243,83
29237,6828,87
29238,3443,83
29239,678,86
29240,678,79
29241,43715,85
29242,15013457,92
29243,44072,80
29244,1133,93
29245,35987,93
29246,8102,81
29247,678,79
29248,1983,100
29249,1343,87
29250,42252,85
29251,43877,83
29252,796,81
29253,15016847,79
29254,2468,77
29255,678,83
29256,678,86
29257,47027,81
29258,43211,87
29259,56868,72
29260,3443,88
# After 14400 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -2 / inc -10 -5 x 9 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql x / inc F T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 x x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if -9 T x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "5 greedy -2 ∨ inc neg 7 x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x F ∨ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F inc be 0 -2 ∧ -1 x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 / x x / x 4 -8 dec 4 x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc x -2 -2 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 0 7 ungreedy depth x if x x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 x ∧ 1 inc * swap x 7 x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 9 ∧ 1 2 eql swap x 7 x x > + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 + 5 ∧ -9 7 T -3 9 -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "* x T T ungreedy * x 7 T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "< depth x copy greedy -3 x x -7 x < be inc x pop neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 + F F x 7 T -3 9 -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T ungreedy x / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 T ∨ x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "+ x T T F * x x T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be x F x greedy swap -5 x x x x x F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-5 -1 0 + F F x x x x x x x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy x greedy? -6 0 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F swap - neg ≥ if neg F x x x greedy x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ eql -2 / if F -10 x -6 x F greedy + 0 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "- depth be x if T be 1 be x if x ∧ x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x inc be 0 -2 -5 x x x x x + - pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy T x greedy x x x -10 + ≥ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x -7 -3 8 swap T x 9 x F ∨ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F 0 - 1 inc neg x x pop x ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 x greedy? x 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x inc -5 / x - * greedy? -2 / x x x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x 3 1 T depth x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x > x greedy T x greedy x be x -10 + greedy eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy -5 / x - x if x x x -10 + swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F / -10 0 pop x 0 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql -2 F inc F -6 x x x x F x be x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "¬ x dec T 0 -2 ∧ -5 x x 4 x + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 8 x neg 6 x 6 T T ungreedy copy x < x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy inc x copy -3 x -9 x 9 neg -9 depth pop x greedy neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 ungreedy greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 x x x F 9 depth -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "swap 5 x > greedy x x x x x x -10 eql x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 inc -5 F x T x greedy x be x -10 x greedy < neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 T pop x F 9 -10 greedy pop 7 x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x ungreedy - inc neg / x 7 5 ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x -7 x greedy * x greedy x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ * 0 + F -5 > 7 ¬ -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x swap x < x 4 -8 x F ∨ F x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x 4 x * -3 3 x x x x > F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy? / x x / x x dec dec x x greedy? x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 x pop x F 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop x T x ≥ x -6 x greedy x T T x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F x greedy? T 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ -9 0 F ungreedy x inc x F be ∨ x -3 inc pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / -2 -10 greedy? x F 0 ¬ -4 -5 -9 ¬ 8 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop ≥ -1 x if T be T x -5 -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "F eql -2 / inc F -6 x greedy? x x x 9 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "F eql -2 / inc F T x greedy? x x x 9 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "copy depth x copy greedy -3 x x -7 x ∧ dec inc ∨ greedy? T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "6 -3 0 depth ungreedy depth x x 9 ¬ -9 F -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-3 / if -10 x T x 0 ¬ -4 -5 -9 ¬ x x eql ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "/ -1 T 1 < F -4 x if inc pop x be ∧ -1 x -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 836: "-2 / -10 ≤ -2 x 3 depth if / -2 1 x F + * dec depth x ≥ -9 F if -5 * 9 * + 5 *"
# 848: "greedy F x neg 6 9 x x T F x x -1 eql x greedy -5 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1128: "greedy? inc -5 / x greedy? depth 0 x T x ∧ + x pop neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1281: "ungreedy x 7 7 ungreedy depth x if greedy T x > + x pop 6 ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1324: "-8 x F x greedy -8 x 1 x x x -10 + ≥ eql ∧ F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1343: "F 8 x neg 6 x 6 T T ungreedy T x x ≤ pop neg ungreedy swap x ≥ -9 -10 if -5 * 9 * + 5 *"
# 4963: "-3 / -2 -10 greedy? x F 0 ¬ -4 -5 3 6 8 x neg ungreedy -5 x 8 dec -10 if -5 * 9 * + 5 *"
# 39242: "/ -1 0 + greedy? ∧ -9 7 T T 9 -7 * -10 -8 7 8 * F inc dec x -4 -1 * 9 * + 5 *"
# 42979: "x 3 -6 + -10 0 -5 inc -9 - dec x 4 x dec x x dec + - x x x + x x / - -3 -"
29261,43022,65
29262,42875,73
29263,43022,73
29264,43190,73
29265,43022,77
29266,999,74
29267,44072,79
29268,43022,86
29269,3443,92
29270,52334,84
29271,1324,82
29272,42812,104
29273,1391,86
29274,43022,82
29275,2213,80
29276,44072,77
29277,43190,75
29278,2208,91
29279,42917,89
29280,56998,75
29281,43190,76
29282,1324,77
29283,502,85
29284,35694,81
29285,44072,86
29286,43022,69
29287,3443,74
29288,1324,88
29289,43022,82
29290,42917,85
29291,42917,77
29292,41267,75
29293,3443,87
29294,507,84
29295,581,82
29296,48722,84
29297,723,79
29298,1918,78
29299,1038,89
29300,60917,74
29301,42077,82
29302,129782,81
29303,43022,77
29304,47777,78
29305,1117,84
29306,38642,79
29307,1848,82
29308,678,87
29309,634,89
29310,12542,90
29311,43022,84
29312,43190,90
29313,42707,76
29314,2093,73
29315,40913,76
29316,46222,80
29317,46600,84
29318,43337,87
29319,47747,88
29320,44072,87
29321,34622,84
29322,42917,78
29323,39242,73
29324,43022,82
29325,50162,93
29326,678,86
29327,21000000,79
29328,1740,77
29329,54888,87
29330,44950,82
29331,1324,80
29332,43022,75
29333,53567,79
29334,678,90
29335,52932,81
29336,85952,90
29337,43127,94
29338,49602,76
29339,119567,84
29340,20792,92
29341,42287,80
29342,1918,83
29343,41657,82
29344,1658,85
29345,47021,94
29346,7217,78
29347,15013072,90
29348,43547,85
29349,39242,72
29350,76506,83
29351,49217,87
29352,3228,77
29353,75152,89
29354,3443,78
29355,4252,89
29356,60468,81
29357,45857,90
29358,43967,81
29359,678,80
29360,43022,78
29361,40613,90
29362,43022,77
29363,639,93
29364,43022,85
29365,3443,79
29366,21000000,81
29367,30633,88
29368,34391,77
29369,43022,89
29370,1226,82
29371,44847,75
29372,45243,89
29373,79855,74
29374,796,90
29375,107493,80
29376,52472,80
29377,42917,98
29378,1324,80
29379,16006450,91
29380,59208,90
29381,44233,88
29382,639,79
29383,507,83
29384,15032947,80
29385,43022,80
29386,658,82
29387,1658,88
29388,1128,81
29389,27088,91
29390,42962,89
29391,3013,83
29392,3443,80
29393,41762,83
29394,42392,76
29395,45127,81
29396,42917,71
29397,43652,93
29398,42812,81
29399,57723,87
29400,42875,74
29401,43022,79
29402,34622,82
29403,45517,85
29404,43022,83
29405,44117,81
29406,66197,89
29407,1658,88
29408,3443,73
29409,48722,91
29410,44747,89
29411,9947,87
29412,15000442,92
29413,1790,83
29414,3443,73
29415,21000000,70
29416,2213,73
29417,3443,87
29418,15013102,87
29419,678,89
29420,1133,84
29421,678,92
29422,678,82
29423,46618,75
29424,43022,78
29425,2263,82
29426,50533,84
29427,39242,69
29428,43022,76
29429,43022,88
29430,66022,90
29431,43547,89
29432,45162,84
29433,43232,85
29434,678,84
29435,1324,77
29436,678,91
29437,35198,86
29438,3443,94
29439,2213,76
29440,45162,78
29441,54273,78
29442,678,94
29443,42602,92
29444,27198,84
29445,929,82
29446,3682,90
29447,42812,73
29448,723,77
29449,8008,87
29450,40013,83
29451,43032,95
29452,678,80
29453,999,91
29454,31242,79
29455,37202,83
29456,48722,81
29457,532,75
29458,52472,109
29459,68537,83
29460,45162,84
29461,43022,74
29462,50988,85
29463,1662,93
29464,53800,90
29465,43022,83
29466,41852,80
29467,10654,72
29468,42947,85
29469,15032997,87
29470,3127,88
29471,15013057,96
29472,42896,90
29473,35839,79
29474,41657,87
29475,56880,88
29476,15024622,91
29477,43022,90
29478,43022,84
29479,31089,89
29480,678,89
29481,46872,81
29482,1368,88
29483,43190,94
29484,43022,106
29485,19142,85
29486,1336,85
29487,44072,75
29488,103895,79
29489,2263,71
29490,639,78
29491,37202,79
29492,38612,100
29493,639,87
29494,2138,82
29495,1663,74
29496,678,80
29497,821,77
29498,65802,84
29499,58261,81
29500,43232,85
29501,1553,76
29502,1658,75
29503,42812,83
29504,40838,79
29505,1553,82
29506,48638,83
29507,75152,74
29508,1480,87
29509,796,92
29510,43022,72
29511,678,84
29512,45308,80
29513,8008,93
29514,43085,84
29515,678,81
29516,1757,87
29517,42917,89
29518,42707,77
29519,1324,84
29520,31089,88
29521,678,78
29522,57723,84
29523,43547,73
29524,1848,95
29525,55248,83
29526,42028,86
29527,53842,79
29528,43037,91
29529,42602,78
29530,42077,79
29531,3443,86
29532,1173,86
29533,42917,81
29534,2213,79
29535,43022,80
29536,3443,81
29537,3443,87
29538,24122,100
29539,37202,74
29540,37202,85
29541,44072,78
29542,43022,90
29543,40712,85
29544,43232,85
29545,259532,77
29546,31792,95
29547,48722,83
29548,59208,81
29549,49217,79
29550,4252,77
29551,102443,79
29552,42602,89
29553,4138,86
29554,42812,78
29555,43022,80
29556,43022,75
29557,42077,75
29558,26143,90
29559,47060,83
29560,3443,80
29561,1324,80
29562,12001482,89
29563,55921,84
29564,814,77
29565,57242,86
29566,43022,91
29567,1133,86
29568,10002563,79
29569,865,79
29570,43022,77
29571,577,77
29572,1673,82
29573,43022,84
29574,43547,80
29575,796,75
29576,3443,83
29577,45580,86
29578,15009322,76
29579,1662,80
29580,41510,84
29581,1454,81
29582,43043,91
29583,592,91
29584,43022,87
29585,44072,86
29586,1133,81
29587,2213,74
29588,678,89
29589,69617,95
29590,3443,79
29591,38072,89
29592,1657,71
29593,1324,78
29594,3443,82
29595,331567,88
29596,15026377,82
29597,43673,83
29598,69005,90
29599,15000288,83
29600,43817,91
29601,1717,96
29602,50372,85
29603,55992,85
29604,55397,89
29605,43022,87
29606,1903,81
29607,3443,82
29608,1193,89
29609,42077,74
29610,1336,84
29611,38631,96
29612,22148,73
29613,106932,86
29614,42917,77
29615,26012,81
29616,15011108,82
29617,43547,92
29618,1324,82
29619,502,89
29620,52472,77
29621,43085,81
29622,30604,75
29623,43757,93
29624,37997,78
29625,1324,75
29626,10002563,88
29627,796,80
29628,72317,76
29629,54400,75
29630,2213,80
29631,3443,85
29632,45017,95
29633,1226,84
29634,34247,74
29635,4252,90
29636,3443,83
29637,3443,84
29638,171783,96
29639,53444,78
29640,42287,82
29641,85547,91
29642,1133,90
29643,678,84
29644,3443,89
29645,42077,90
29646,21000000,91
29647,42917,92
29648,721,90
29649,43022,77
29650,43022,84
29651,28196,84
29652,3443,92
29653,42980,92
29654,1324,69
29655,46753,76
29656,39767,83
29657,108597,81
29658,66836,73
29659,953,77
29660,1757,92
29661,1133,87
29662,43211,87
29663,49217,78
29664,35908,82
29665,3443,84
# After 14600 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql x / inc F T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if -9 T x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "5 greedy -2 ∨ inc neg 7 x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc x -2 -2 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 x x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 / x x / x 4 -8 dec 4 x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -2 / inc -10 -5 x 9 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F inc be 0 -2 ∧ -1 x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T -4 -10 x inc x + T -10 x -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 0 7 ungreedy depth x if x x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 592: "greedy / 3 T < greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 9 ∧ 1 2 eql swap x 7 x x > + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 634: "copy x 1 ≥ greedy + greedy x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy x x -7 ungreedy x x 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "< depth x copy greedy -3 x x -7 x < be inc x pop neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "+ x T T F * x x T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x -4 ∧ ungreedy * / 1 7 x < x inc T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T ungreedy x / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 + 5 ∧ -9 7 T -3 9 -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 T ∨ x / x x dec dec x < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "* x T T ungreedy * x 7 T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ eql -2 / if F -10 x -6 x F greedy + 0 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop x T x ≥ x -6 x greedy x T T x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ -9 0 F ungreedy x inc x F be ∨ x -3 inc pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 8 x neg 6 x 6 T T ungreedy > x < x be neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "< x -10 1 pop x x 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x x T x greedy - be x -10 + greedy eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F 0 - 1 inc neg x x pop x ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "- depth be x if T be 1 be x if x ∧ x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "swap 5 x > greedy x x x x x x -10 eql x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ * 0 + F -5 > 7 ¬ -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ x inc be 0 -2 -5 x x x x x + - pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop ≥ -1 x if T be T x -5 -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 x x x F 9 depth -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be x F x greedy swap -5 x x x x x F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 8 x neg 6 x 6 T T 6 > x T x be neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 x greedy? x 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-5 -1 0 + F F x x x x x x x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x x x x 4 -8 dec x ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x swap x < x 4 -8 x F ∨ F x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 0 -5 x / x x be dec x x greedy? x F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 ungreedy greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 9 ∧ 1 2 * swap x 7 x x x depth x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 T pop x F 9 -10 greedy pop 7 x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x -7 x greedy * x greedy x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 4 x -7 -3 8 swap T x 9 x F ∨ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x 4 x * -3 3 x x x x > F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x inc -5 / x - * greedy? -2 / x x x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql F / / x x dec x x x greedy? ≥ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F swap - -8 ¬ if neg F x x x greedy x eql x neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / -2 -10 greedy? x F 0 ¬ -4 -5 -9 ¬ 8 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x 3 1 T depth x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy x greedy? -6 0 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy -5 / x - x if x x x -10 + swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy T x greedy x x x -10 + ≥ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "F eql -2 / inc F T x greedy? x x x 9 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-3 / if -10 x T x 0 ¬ -4 -5 -9 ¬ x x eql ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "copy depth x copy greedy -3 x x 2 x ∧ dec inc ∨ greedy? T -9 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "6 -3 0 depth ungreedy depth x x 9 ¬ -9 F -2 pop pop be greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "F F -10 0 pop F 0 9 -10 x x < x eql T neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1324: "T / -10 -8 ∧ x F greedy -10 inc -2 1 x 4 x neg > -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1343: "F 8 x neg 6 x 6 T T ungreedy T x x ≤ pop neg ungreedy swap x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1673: "¬ x dec T inc -2 x 4 -5 * 7 inc -5 copy T dec -8 inc -5 ≥ -9 -10 if -5 * 9 * + 5 *"
# 3443: "-3 / -2 F ungreedy x inc x F be ∨ x -3 inc 5 x T ∧ x ≥ -9 -10 if -5 * 9 * + 5 *"
# 3682: "F x -6 + -10 0 -5 inc x - dec ungreedy -3 x dec neg ungreedy -5 x ≥ -9 x if -5 * 9 * + 5 *"
# 42392: "-3 / if x dec x ∧ -10 x / -8 3 + - 2 - - be -1 x inc -1 4 F dec copy + F 5 *"
# 42875: "¬ x dec T 0 -2 ∧ -5 x x 4 x + -5 -3 inc 2 5 inc / * x pop x / -2 inc 2 x 7"
29666,43043,82
29667,43022,74
29668,43022,71
29669,42854,71
29670,43046,71
29671,40977,87
29672,43022,97
29673,678,86
29674,678,86
29675,3752,80
29676,90272,96
29677,1391,100
29678,52997,85
29679,3443,79
29680,60468,80
29681,21000000,78
29682,3443,89
29683,66197,78
29684,21000000,81
29685,43043,82
29686,41867,75
29687,42077,84
29688,49097,86
29689,15000288,93
29690,964,81
29691,42077,72
29692,57993,97
29693,1663,82
29694,43022,77
29695,3358,81
29696,52052,82
29697,568,72
29698,57293,86
29699,19478,81
29700,678,79
29701,43547,79
29702,44912,85
29703,42992,79
29704,62746,86
29705,43046,79
29706,3443,72
29707,21093,92
29708,51683,87
29709,2213,79
29710,65852,92
29711,43922,80
29712,36827,83
29713,49217,88
29714,4358,85
29715,43022,72
29716,15045382,96
29717,42938,87
29718,112952,85
29719,43517,87
29720,4398,91
29721,79742,82
29722,1740,82
29723,1740,83
29724,1663,91
29725,43547,83
29726,1658,79
29727,1027,73
29728,5002208,85
29729,46877,88
29730,3443,84
29731,37202,79
29732,42887,86
29733,34622,80
29734,639,84
29735,678,82
29736,3637,82
29737,42287,76
29738,42077,80
29739,3443,83
29740,165532,78
29741,46802,82
29742,2242,81
29743,56597,75
29744,56613,79
29745,793,87
29746,41342,74
29747,43022,77
29748,1133,91
29749,678,77
29750,2213,81
29751,66197,82
29752,92267,85
29753,8642,82
29754,45232,82
29755,43022,84
29756,43047,77
29757,343092,83
29758,39347,82
29759,37202,85
29760,48167,73
29761,57768,88
29762,42602,81
29763,42602,89
29764,10001073,81
29765,42875,73
29766,2208,85
29767,678,85
29768,40613,79
29769,678,83
29770,1324,91
29771,53442,90
29772,20342,79
29773,21000000,91
29774,43757,76
29775,43022,77
29776,15024332,72
29777,43022,79
29778,597,85
29779,44157,77
29780,43022,84
29781,1918,82
29782,38553,84
29783,31682,88
29784,12000703,85
29785,42812,86
29786,604,74
29787,3637,88
29788,57723,81
29789,43022,86
29790,42917,83
29791,42827,91
29792,21000000,82
29793,507,82
29794,51965,87
29795,42896,86
29796,275912,89
29797,86597,78
29798,1419,80
29799,1324,86
29800,43382,87
29801,1324,83
29802,1324,84
29803,47852,84
29804,21000000,82
29805,42854,75
29806,577,78
29807,507,79
29808,55323,82
29809,678,80
29810,42077,88
29811,21805,85
29812,28501,87
29813,41972,79
29814,3598,80
29815,42077,81
29816,40922,99
29817,1324,77
29818,48797,88
29819,43547,81
29820,43967,81
29821,60423,84
29822,27106,88
29823,507,87
29824,48242,83
29825,2208,86
29826,67697,88
29827,55323,87
29828,35357,92
29829,42077,93
29830,21000000,83
29831,15013153,85
29832,44630,81
29833,1730,79
29834,43022,72
29835,44072,81
29836,43922,75
29837,26572,74
29838,52997,105
29839,678,86
29840,678,78
29841,1683,81
29842,44158,84
29843,721,96
29844,42077,84
29845,1765,83
29846,43022,83
29847,3443,84
29848,3637,83
29849,678,82
29850,3443,90
29851,3443,74
29852,44072,79
29853,36827,80
29854,43022,91
29855,127883,84
29856,43547,82
29857,1663,90
29858,15013568,85
29859,43022,81
29860,43012,78
29861,47327,83
29862,1359,91
29863,3443,82
29864,38087,74
29865,678,85
29866,507,81
29867,43127,90
29868,21000000,83
29869,21000000,83
29870,42917,84
29871,2213,81
29872,3755,80
29873,43022,83
29874,507,86
29875,81767,84
29876,961,88
29877,507,79
29878,34066,77
29879,1918,82
29880,19142,82
29881,41867,99
29882,15758,89
29883,678,75
29884,507,81
29885,52517,77
29886,42994,84
29887,639,86
29888,57228,86
29889,5457,79
29890,1083,93
29891,10001683,75
29892,54573,81
29893,43022,83
29894,3443,73
29895,4640,86
29896,16001235,88
29897,21000000,84
29898,561,82
29899,74837,82
29900,3578,87
29901,21000000,76
29902,114842,84
29903,3443,82
29904,43022,91
29905,61188,94
29906,43022,83
29907,43043,81
29908,42752,86
29909,1324,93
29910,21000000,77
29911,647,83
29912,577,89
29913,42252,87
29914,3443,85
29915,44072,78
29916,678,80
29917,58107,80
29918,17192,88
29919,86897,78
29920,2213,81
29921,43097,87
29922,1653,74
29923,55077,83
29924,46717,87
29925,32758,81
29926,37408,92
29927,42770,81
29928,3443,82
29929,43022,80
29930,39236,91
29931,51617,85
29932,1848,78
29933,42077,87
29934,33002,80
29935,57762,92
29936,42875,82
29937,21000000,87
29938,43022,77
29939,40613,95
29940,43822,79
29941,69602,88
29942,3682,95
29943,42077,83
29944,43547,78
29945,43019,85
29946,21000000,71
29947,42077,86
29948,43497,89
29949,43022,74
29950,678,88
29951,57993,86
29952,3443,96
29953,48722,86
29954,20607,79
29955,38297,93
29956,43232,81
29957,43022,90
29958,908,85
29959,56492,91
29960,15000362,87
29961,17570,73
29962,2213,93
29963,43022,81
29964,43022,74
29965,42917,85
29966,52997,91
29967,4313,77
29968,1117,80
29969,31577,80
29970,42896,88
29971,4228,86
29972,21000000,78
29973,42875,86
29974,42077,90
29975,1663,92
29976,1173,87
29977,3443,81
29978,35142,89
29979,7397,90
29980,43022,87
29981,40833,85
29982,2242,81
29983,43022,79
29984,42707,101
29985,42938,83
29986,37202,83
29987,44072,72
29988,20447,81
29989,678,79
29990,25546,75
29991,42077,83
29992,43022,93
29993,21000000,80
29994,509,78
29995,42252,80
29996,74643,85
29997,87317,95
29998,3466,85
29999,55473,84
30000,4252,85
30001,20000008,73
30002,1730,78
30003,55908,90
30004,1663,80
30005,3443,86
30006,48692,76
30007,37352,82
30008,126182,81
30009,55473,82
30010,13772,94
30011,1173,83
30012,678,84
30013,31577,71
30014,37202,87
30015,44072,74
30016,43022,78
30017,26272,79
30018,43211,79
30019,42938,78
30020,37202,81
30021,9457,73
30022,43022,89
30023,54086,75
30024,964,93
30025,929,77
30026,48722,89
30027,42968,90
30028,48272,88
30029,43022,77
30030,3953,77
30031,4087,87
30032,86897,86
30033,42077,80
30034,964,85
30035,723,79
30036,4398,78
30037,1226,85
30038,2213,81
30039,1657,86
30040,678,91
30041,3443,92
30042,34196,75
30043,43632,77
30044,29094,78
30045,873,83
30046,829,73
30047,796,97
30048,1730,79
30049,21093,90
30050,83987,88
30051,3598,89
30052,2002,92
30053,1324,79
30054,43022,93
30055,37202,94
30056,3443,71
30057,2793,82
30058,41777,83
30059,1657,82
30060,42092,92
30061,43085,84
30062,85547,96
30063,44497,88
30064,57248,84
30065,39347,77
30066,678,84
30067,3358,74
30068,1688,82
30069,7333,92
30070,43022,80
# After 14800 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 / x x / x 4 -8 dec 4 x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x neg 6 9 -1 x neg x x copy + -9 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 x x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if -9 T x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x greedy + T x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc x -2 -2 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql x / inc F T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "5 greedy -2 ∨ inc neg 7 x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 ≥ dec 4 x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x 4 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F inc be 0 -2 ∧ -1 x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ depth neg x x copy + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 509: "-1 x - -2 F x 2 x + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T -4 -10 x inc x + T -10 x -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 561: "6 -3 x 7 ungreedy depth x if x x 3 x + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 568: "-8 9 ∧ 1 2 * swap x 6 x x > + F be neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 x 7 ungreedy depth greedy? inc ¬ x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 592: "greedy / 3 T < greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "6 -3 0 7 ungreedy x x if ¬ x x ≥ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 9 ∧ 1 2 eql swap x 7 x x > + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "-8 x ∧ 1 2 * swap x 6 inc x > + F be neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 634: "copy x 1 ≥ greedy + greedy x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy x x -7 ungreedy x x 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "* x T T ungreedy * x 7 T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "< depth x copy greedy -3 x x -7 x < be inc x pop neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T ungreedy x / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 + 5 ∧ -9 7 T -3 9 -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x -4 ∧ ungreedy * / 1 7 x < x inc T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "+ x T T F * x x T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "- 0 - 1 inc 2 x x pop x ¬ * x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x x T x greedy - be x -10 + greedy eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy / -2 -10 greedy? x F be ¬ -4 -5 7 ¬ 8 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x swap x < x 4 -8 x F ∨ F x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x greedy T x greedy x x x -10 + ≥ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy x greedy? -6 0 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "< x -10 1 pop x x 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy 8 x neg 6 x 6 T T ungreedy > x < x be neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 / -10 T pop x F 9 -10 greedy pop 7 x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F swap - -8 ¬ if neg F x x x greedy x eql x neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "be x F x greedy if -5 x x x x x ≥ x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 x 2 1 2 9 swap swap T x x x F ∨ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "9 T 2 F depth inc eql 1 be x if x ∧ x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x inc -5 T x depth * greedy? -2 / x F x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy 5 -10 greedy? x F 7 ¬ -3 dec -7 x 1 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 ungreedy greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ * 0 + F -5 > 7 ¬ -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 eql -10 x x x ≥ 9 depth -3 9 -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x eql F / / x x dec x x x greedy? ≥ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 0 3 x / x x be dec x x -10 < swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x 4 x * -3 3 x x x x > F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x 3 1 T depth x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 x greedy? x 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy -5 / x - x if x x x -10 + swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 T -1 ungreedy -2 -2 x ∧ x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop ≥ -1 x if T be T x -5 -9 x be T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x x x x 4 -8 dec x ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "F eql -2 / inc F T x greedy? x x x 9 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-8 x x * greedy? x x T copy / -9 x be T pop neg ungreedy inc 6 ≥ -9 -10 if -5 * 9 * + 5 *"
# 796: "-3 / if -10 x T x 0 ¬ -4 -5 -9 ¬ x x eql ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1117: "- 0 - 1 inc ¬ x x pop x ¬ * x F pop neg ungreedy -5 5 ≥ -9 -10 if -5 * 9 * + 5 *"
# 1663: "x inc -5 5 x 5 x if x x x x + x pop neg ungreedy -5 x x -9 -10 if -5 * 9 * T 5 *"
# 1730: "x inc -4 / x - x if x x x x + x pop greedy eql x x F -9 -10 inc -5 * 9 * + 5 *"
# 2208: "¬ x dec T greedy? x x T copy / -9 x be T < neg dec inc 6 ≥ -9 depth if -5 * 9 * + 5 *"
# 2242: "-1 copy 5 -10 greedy? x F 3 * x dec x - * x 0 x -4 - dec -9 -10 if -5 * 9 * + 5 *"
# 3466: "x eql x / x copy T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 x if -5 * 9 * + 5 *"
# 31577: "-2 x 4 x * -3 3 x x x x > ∨ x pop neg -5 T x be > -10 F -10 * 9 T + 5 *"
# 42392: "-3 / if x dec x ∧ -10 x / -8 3 + - 2 - - be -1 x inc -1 4 F dec copy + F 5 *"
30071,43022,68
30072,42896,70
30073,43211,64
30074,43022,65
30075,43022,71
30076,42287,79
30077,15000288,80
30078,42582,74
30079,559,92
30080,1324,86
30081,1133,86
30082,1117,88
30083,42917,80
30084,3443,82
30085,28847,80
30086,76517,85
30087,68780,86
30088,40838,79
30089,37307,81
30090,42917,86
30091,678,78
30092,67172,77
30093,48742,76
30094,1732,91
30095,1324,72
30096,1662,86
30097,14000405,78
30098,57883,89
30099,1324,85
30100,42681,82
30101,48797,94
30102,36932,90
30103,66197,80
30104,43022,81
30105,43022,65
30106,41132,89
30107,13598,80
30108,1652,88
30109,678,90
30110,3443,78
30111,1069,95
30112,678,80
30113,44072,77
30114,21000000,88
30115,43547,87
30116,4137,92
30117,60918,81
30118,44997,80
30119,87394,88
30120,21000000,88
30121,1324,90
30122,2763,81
30123,2213,82
30124,733,85
30125,21000000,81
30126,42917,76
30127,43022,90
30128,42917,82
30129,43952,83
30130,1974,76
30131,48377,79
30132,39272,92
30133,55548,90
30134,15000288,87
30135,42028,77
30136,4833,88
30137,1133,90
30138,43022,76
30139,60822,71
30140,678,78
30141,42182,88
30142,43967,76
30143,43022,81
30144,678,83
30145,56998,91
30146,639,89
30147,54548,91
30148,48692,87
30149,42917,90
30150,44072,82
30151,3238,87
30152,43022,91
30153,30766,77
30154,608,93
30155,11009230,80
30156,55698,80
30157,639,78
30158,42077,89
30159,48717,84
30160,47642,73
30161,43022,78
30162,43022,82
30163,34247,80
30164,4640,85
30165,2002,94
30166,2418,86
30167,56028,77
30168,21000000,90
30169,21000000,89
30170,42392,86
30171,3443,83
30172,49847,80
30173,47418,89
30174,2212,90
30175,43022,77
30176,42182,86
30177,1226,83
30178,1254,79
30179,43022,78
30180,51842,93
30181,1649,80
30182,42392,82
30183,1663,75
30184,3443,78
30185,42917,91
30186,801,81
30187,43997,95
30188,43098,74
30189,639,91
30190,76627,82
30191,43022,74
30192,21000000,92
30193,678,77
30194,43022,81
30195,55248,85
30196,15000288,80
30197,38042,87
30198,1398,84
30199,13591,70
30200,60364,84
30201,43022,80
30202,1189,90
30203,42077,86
30204,43697,75
30205,929,74
30206,40613,83
30207,43022,79
30208,4252,90
30209,94448,73
30210,77672,80
30211,21000000,80
30212,639,74
30213,26558,75
30214,40983,77
30215,3443,83
30216,43022,72
30217,65967,88
30218,3443,85
30219,1173,81
30220,67397,88
30221,104942,101
30222,4252,72
30223,15026152,78
30224,15000288,89
30225,2213,77
30226,44072,79
30227,41138,75
30228,37097,85
30229,42392,80
30230,43022,84
30231,29469,76
30232,55908,76
30233,658,87
30234,43547,89
30235,43547,80
30236,41342,90
30237,21000000,76
30238,49217,84
30239,1918,78
30240,43358,79
30241,37202,86
30242,1133,87
30243,898,74
30244,47692,91
30245,43106,85
30246,55473,85
30247,4517,86
30248,42938,93
30249,2213,90
30250,25873,85
30251,43547,85
30252,51222,88
30253,43085,86
30254,1693,92
30255,3443,77
30256,79955,86
30257,30487,89
30258,1918,78
30259,57723,91
30260,21000000,82
30261,43022,88
30262,873,78
30263,678,82
30264,40838,80
30265,87392,79
30266,43187,76
30267,42002,90
30268,50639,88
30269,43148,87
30270,3443,84
30271,1281,76
30272,60468,76
30273,15001478,89
30274,43713,73
30275,15722,97
30276,43022,65
30277,43211,90
30278,66422,83
30279,43997,86
30280,42896,77
30281,1173,98
30282,898,87
30283,678,92
30284,21000000,89
30285,41657,93
30286,1799,84
30287,3443,81
30288,793,80
30289,2213,85
30290,42602,87
30291,43022,80
30292,42917,75
30293,1757,78
30294,68267,93
30295,678,77
30296,21000000,77
30297,728,85
30298,15032947,87
30299,51107,85
30300,4043,76
30301,42077,75
30302,42077,84
30303,3443,92
30304,3443,74
30305,1128,94
30306,58247,89
30307,1183,80
30308,678,87
30309,21000000,85
30310,43242,80
30311,42077,78
30312,43022,86
30313,47747,79
30314,21000000,82
30315,42077,92
30316,47747,75
30317,1108,80
30318,43022,89
30319,1649,81
30320,48917,94
30321,72422,86
30322,2213,88
30323,3443,88
30324,43022,88
30325,21000000,84
30326,41308,81
30327,43127,87
30328,43547,87
30329,37097,80
30330,55773,73
30331,1324,79
30332,42917,78
30333,44072,81
30334,69972,74
30335,100667,88
30336,21000000,84
30337,43022,78
30338,3632353,96
30339,4228,78
30340,1883,77
30341,45437,74
30342,37202,97
30343,44072,91
30344,44072,79
30345,47422,83
30346,43022,68
30347,678,74
30348,44942,82
30349,62972,73
30350,44942,86
30351,3443,82
30352,52892,89
30353,34967,86
30354,42917,76
30355,61067,84
30356,56028,84
30357,9001302,83
30358,43127,86
30359,43757,87
30360,40988,80
30361,42602,92
30362,21000000,84
30363,51692,91
30364,1705,87
30365,44072,84
30366,2213,83
30367,43547,88
30368,829,86
30369,678,79
30370,21000000,88
30371,43022,72
30372,43022,78
30373,647,78
30374,21000000,82
30375,49217,93
30376,43022,86
30377,33991,104
30378,40744,83
30379,43022,82
30380,56252,77
30381,55248,80
30382,3443,82
30383,43022,79
30384,2213,75
30385,34417,96
30386,37772,87
30387,14267,86
30388,43022,91
30389,43022,74
30390,42122,89
30391,2242,92
30392,110222,93
30393,42602,74
30394,43547,73
30395,55788,88
30396,57318,77
30397,56088,81
30398,2263,80
30399,42077,76
30400,43190,85
30401,3637,78
30402,43022,81
30403,43022,90
30404,994,80
30405,43022,86
30406,43022,82
30407,43542,80
30408,45217,82
30409,561,83
30410,44072,95
30411,42287,80
30412,4157,79
30413,43043,80
30414,1662,76
30415,34367,84
30416,1324,76
30417,73538,89
30418,639,85
30419,42982,76
30420,51767,78
30421,43517,95
30422,6828,77
30423,8378,75
30424,43022,82
30425,1584,94
30426,44072,83
30427,43001,77
30428,964,76
30429,432272,83
30430,9463,93
30431,35989,90
30432,42077,78
30433,1148,93
30434,507,82
30435,74072,85
30436,639,74
30437,10128,84
30438,3443,94
30439,43547,84
30440,3443,94
30441,3443,85
30442,1245,80
30443,43022,88
30444,20757,84
30445,33523,83
30446,40838,83
30447,11001194,86
30448,44635,75
30449,1117,74
30450,55248,85
30451,507,87
30452,76622,90
30453,1684,91
30454,37202,86
30455,639,87
30456,21000000,91
30457,507,77
30458,43127,80
30459,678,80
30460,507,84
30461,43022,76
30462,46697,80
30463,42252,82
30464,678,81
30465,79672,87
30466,3713,83
30467,633,79
30468,3443,81
30469,61038,88
30470,1241,74
30471,678,81
30472,42812,90
30473,81872,94
30474,1226,80
30475,106804,91
# After 15000 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x > + T x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "5 greedy -2 ∨ inc neg 7 x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x x x ≥ 9 depth -3 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if -9 T x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 ≥ dec 4 x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- * -2 / inc -10 -5 x greedy? x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x neg 6 9 -1 x neg x x copy + -9 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql x / inc F T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x 4 / greedy -3 greedy x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 / x x / x 4 -8 dec 4 x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 x x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ depth neg x x copy + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 4 / greedy -3 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x greedy + T x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x 4 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc x -2 -2 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F inc be 0 -2 ∧ -1 x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x T greedy + T x greedy? x F T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 509: "-1 x - -2 F x 2 x + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T -4 -10 x inc x + T -10 x -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 561: "-1 -3 x 7 ungreedy depth x if F x 3 ∨ + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 568: "-8 9 ∧ 1 2 * swap x 6 x x > + F be neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 x 7 ungreedy depth greedy? inc ¬ x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 592: "greedy / 3 T < greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "6 -3 0 7 ungreedy x x if ¬ x x ≥ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 597: "-8 9 ∧ 1 2 eql swap x 7 x x > + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "-8 x ∧ 1 2 * swap x 6 inc x > + F be neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 608: "< depth x copy greedy -3 x T > -5 -9 -8 be T pop neg ungreedy -5 x - -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 + 5 ∧ -9 7 T -3 9 -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "* x T T ungreedy * x 7 T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "+ x T T F * x x T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "< depth x copy greedy -3 x x -7 x < be inc x pop neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy x greedy? -8 9 x / 1 -9 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T greedy T x greedy x < dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy x x -7 ungreedy x x 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x -4 ∧ ungreedy * / 1 7 x < x inc T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? greedy? x x + x x dec dec x < T inc ¬ x neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "/ -1 0 x 5 ∧ -9 7 T depth T -7 x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 647: "-3 / x x x x 4 -8 x T x + x F pop neg ungreedy -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy / -2 -10 greedy? x F be ¬ -4 -5 7 ¬ 8 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy -5 / x - x if x x x -10 + swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "< x -10 1 pop x x 9 -10 greedy pop x x eql x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "¬ / T F inc F -6 x 3 1 T depth x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 3 greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 x 2 1 2 9 swap swap T x x x F ∨ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "0 + -10 9 x -6 x F -7 if > ∨ F x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 T -1 ungreedy -2 -2 x ∧ x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 ungreedy greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ * 0 x F -5 > 7 ¬ -3 inc -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "- 0 - 1 inc 2 x x pop x ¬ * x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 T -1 x < > x x < x F depth + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 0 3 x / x x be dec x x -10 < swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 x 4 x * -3 3 x x x x > F x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 8 -10 1 pop x x 9 -10 F pop x x greedy x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "9 T 2 F depth inc eql 1 be x if x ∧ x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy dec / / x x dec -2 x x greedy? ≥ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 eql -10 9 x -3 x F -7 if x ∨ F x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x x x x 4 -8 dec x ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 x greedy? x 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x x x x T x greedy - be x -10 + greedy eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x inc -5 T x depth * greedy? -2 / x F x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 733: "¬ x F T greedy? x x T copy 4 9 x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "F eql -2 / inc F T x greedy? x x x 9 dec x 5 -10 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1108: "swap -6 if x dec x ∧ copy x / -8 2 x x pop neg dec -5 x ≥ -9 x if -5 * 9 * + 5 *"
# 1173: "5 - x x -10 greedy? depth 0 x T x ungreedy depth x -4 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 3443: "x eql x / x copy T x -6 x 5 > + 2 pop neg ungreedy -5 T ≥ -9 -10 if -5 * 9 * + 5 *"
# 4043: "-2 x 4 x * -3 3 x x x x x + x * neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 29469: "ungreedy * ∧ 0 -6 -2 -6 x 3 - * * T x x -3 x -5 x ≥ -9 -10 if -5 * x * + x *"
# 43022: "pop swap T x inc F -6 x -10 x x -10 4 greedy? x neg ungreedy -5 x ≥ -9 -2 / x x neg 0 x T *"
30476,43000,68
30477,43190,68
30478,43022,65
30479,43067,67
30480,43211,65
30481,48722,71
30482,48272,88
30483,1173,88
30484,1324,89
30485,43067,74
30486,639,86
30487,3127,86
30488,40570,77
30489,36778,87
30490,3918,79
30491,43022,80
30492,37202,83
30493,35042,79
30494,55713,79
30495,43967,86
30496,33332,73
30497,42920,81
30498,678,92
30499,27106,74
30500,6167,75
30501,2043,82
30502,112002,91
30503,1082,100
30504,4283,80
30505,43547,80
30506,6003597,73
30507,43022,86
30508,41552,85
30509,26162,91
30510,77147,78
30511,90272,88
30512,647,82
30513,43000,69
30514,44072,86
30515,2103,82
30516,678,87
30517,727,84
30518,15015082,86
30519,5622,78
30520,43022,79
30521,40088,77
30522,14672,85
30523,43022,82
30524,18452,72
30525,3443,79
30526,29497,80
30527,44582,77
30528,43022,84
30529,43022,84
30530,44072,80
30531,42937,74
30532,43022,81
30533,47777,81
30534,57903,83
30535,43547,83
30536,10997,89
30537,3443,91
30538,24467,84
30539,3443,83
30540,42392,92
30541,1918,84
30542,21000000,86
30543,507,73
30544,3031881,81
30545,75827,86
30546,56868,79
30547,1133,86
30548,5002208,88
30549,43022,81
30550,1649,72
30551,3443,93
30552,41237,78
30553,4963,83
30554,2213,78
30555,4228,75
30556,678,82
30557,42952,74
30558,42087,83
30559,43862,82
30560,1324,73
30561,51878,80
30562,58597,84
30563,54723,92
30564,15000288,89
30565,3443,89
30566,5222,74
30567,42917,81
30568,21093,84
30569,43647,81
30570,507,73
30571,507,83
30572,597,84
30573,1128,76
30574,42917,88
30575,1289,94
30576,41237,84
30577,11003345,79
30578,24958,80
30579,43022,77
30580,43547,92
30581,57260,79
30582,1148,99
30583,678,83
30584,43022,89
30585,42917,81
30586,42833,91
30587,1391,86
30588,48272,80
30589,43127,89
30590,3443,86
30591,54362,89
30592,43967,84
30593,38822,91
30594,54947,85
30595,1128,89
30596,43862,86
30597,3358,83
30598,1717,95
30599,11002420,82
30600,3913,74
30601,45162,85
30602,23567,88
30603,62972,76
30604,1757,89
30605,21328,83
30606,21000000,86
30607,9632,84
30608,3687,84
30609,11000880,89
30610,10997,85
30611,39767,86
30612,43022,84
30613,1938,80
30614,3443,86
30615,1324,76
30616,52060,87
30617,21000000,88
30618,3443,73
30619,43547,83
30620,1730,87
30621,3443,80
30622,999,90
30623,43022,75
30624,43022,76
30625,1872,85
30626,42743,90
30627,43022,87
30628,1454,77
30629,43742,85
30630,41312,75
30631,507,81
30632,2743,89
30633,49010,93
30634,3466,81
30635,48722,79
30636,59703,70
30637,678,89
30638,43022,76
30639,34517,87
30640,678,69
30641,3178,93
30642,31089,86
30643,639,86
30644,3577,81
30645,43211,65
30646,43547,83
30647,678,77
30648,56868,78
30649,43198,75
30650,43022,80
30651,678,85
30652,43022,83
30653,43022,92
30654,1687,77
30655,1173,77
30656,43547,84
30657,42917,82
30658,47327,89
30659,53943,81
30660,154013,84
30661,57293,86
30662,964,83
30663,68478,91
30664,42517,80
30665,43211,86
30666,43792,64
30667,42917,75
30668,42707,74
30669,507,94
30670,41132,89
30671,25760,83
30672,43022,74
30673,241939,70
30674,507,79
30675,821,84
30676,43652,89
30677,84822,81
30678,723,78
30679,42602,88
30680,507,80
30681,3443,80
30682,52052,81
30683,49217,90
30684,21000000,90
30685,34968,75
30686,42917,76
30687,678,77
30688,3443,79
30689,1790,78
30690,81872,94
30691,42182,94
30692,60738,71
30693,44072,74
30694,507,78
30695,721,90
30696,21000000,85
30697,43022,74
30698,3443,85
30699,37202,80
30700,45668,76
30701,94808,79
30702,2208,71
30703,43022,84
30704,19397,78
30705,873,76
30706,43022,79
30707,114353,82
30708,1672,77
30709,4318,81
30710,502,83
30711,4043,81
30712,43547,82
30713,41132,92
30714,14001715,94
30715,69842,82
30716,107083,77
30717,1117,81
30718,90312,89
30719,43022,85
30720,42077,86
30721,42917,86
30722,10001073,75
30723,44072,90
30724,76097,84
30725,41972,80
30726,42077,77
30727,23181,78
30728,1268,84
30729,15932,81
30730,42077,87
30731,58261,85
30732,1593,77
30733,43652,83
30734,111398,76
30735,3443,75
30736,1226,79
30737,2302,83
30738,40988,88
30739,502,80
30740,678,89
30741,1083,92
30742,53042,92
30743,551,76
30744,42917,77
30745,38297,79
30746,54873,76
30747,44770,82
30748,721,82
30749,1717,81
30750,76818,82
30751,42077,81
30752,43211,80
30753,43627,89
30754,28457,81
30755,44912,86
30756,1289,80
30757,41657,64
30758,43190,78
30759,507,88
30760,1324,76
30761,43022,87
30762,21000000,87
30763,6167,95
30764,111587,78
30765,15000288,87
30766,36957,77
30767,21000000,80
30768,821,82
30769,42077,84
30770,61787,88
30771,507,87
30772,42252,68
30773,42917,82
30774,43652,91
30775,42917,80
30776,43169,79
30777,35042,89
30778,37202,72
30779,55323,81
30780,42077,83
30781,507,92
30782,931,84
30783,3443,87
30784,507,79
30785,639,77
30786,3443,86
30787,678,81
30788,66197,95
30789,42917,88
30790,43127,80
30791,43022,87
30792,4252,85
30793,48722,77
30794,829,95
30795,43547,82
30796,1343,73
30797,44492,89
30798,639,77
30799,51814,76
30800,42077,83
30801,507,82
30802,42132,81
30803,41818,75
30804,47597,89
30805,507,78
30806,43172,94
30807,1078,78
30808,6272,87
30809,43169,99
30810,37352,83
30811,19397,72
30812,1213,84
30813,34517,82
30814,4833,87
30815,678,91
30816,3967,80
30817,41447,91
30818,37202,84
30819,43022,82
30820,37357,80
30821,35708,86
30822,3443,79
30823,34472,78
30824,11053,84
30825,55908,89
30826,48722,82
30827,3443,90
30828,641,84
30829,43022,81
30830,48722,86
30831,40301,78
30832,43022,84
30833,87392,85
30834,43547,80
30835,636,79
30836,43022,84
30837,42497,79
30838,39172,71
30839,44072,79
30840,42812,81
30841,53167,84
30842,1324,79
30843,678,81
30844,3443,86
30845,507,82
30846,3443,100
30847,81872,89
30848,1134,83
30849,42077,82
30850,999,79
30851,42287,74
30852,84602,75
30853,55548,87
30854,43064,86
30855,56998,82
30856,1653,88
30857,3443,84
30858,1083,74
30859,507,88
30860,1117,76
30861,42020,78
30862,47747,81
30863,43967,74
30864,81872,81
30865,42917,86
30866,36932,79
30867,507,82
30868,1918,83
30869,21000000,86
30870,48677,78
30871,45217,81
30872,3443,92
30873,43022,81
30874,43532,81
30875,678,86
30876,37177,78
30877,3830,75
30878,768,89
30879,15722,81
30880,42938,88
# After 15200 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 F F be 0 -2 ∧ -1 0 x x x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x 4 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 ≥ dec 4 x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc x -2 -2 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-9 x 8 / x x be x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ depth neg x x copy + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 / x x / x 4 -8 dec 4 x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy x greedy? -8 9 x / greedy ∧ -5 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T be inc be 0 -2 ∧ -1 x greedy? x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql x / inc F T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x 4 x greedy -3 greedy x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x 4 / greedy -3 greedy x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x x x ≥ 9 depth -3 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x neg 6 9 -1 x neg x x copy + -9 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 x x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / x - x -1 x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 9 ∧ 1 2 eql ∧ x x x > x + 4 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 8 -1 T pop x x 9 -10 x x x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x > + T x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x T greedy + T x greedy? x F T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 -3 0 7 ungreedy x x if x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc * -9 x x x x < + 9 pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "5 greedy -2 ∨ inc neg 7 x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 5 -2 x x x x x x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "0 T F x 0 -2 if x x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 F x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg F 9 -1 x neg x x copy + -9 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 3 x neg x 9 -5 x greedy? x x x + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 509: "-1 x - -2 F x 2 x + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 561: "-1 -3 x 7 ungreedy depth x if F x 3 ∨ + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 568: "-8 9 ∧ 1 2 * swap x 6 x x > + F be neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 x 7 ungreedy depth greedy? inc ¬ x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 592: "greedy / 3 T < greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "-8 x ∧ 1 2 * swap x 6 inc x > + F be neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 608: "< depth x copy greedy -3 x T > -5 -9 -8 be T pop neg ungreedy -5 x - -9 -10 if -5 * 9 * + 5 *"
# 636: "-1 if x -2 T x 2 1 + x x > + x pop neg ungreedy -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "x x x -7 ungreedy x x 1 7 / < ≤ inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy x x -7 ungreedy x x 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T greedy T x greedy x < dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "0 + -10 9 x -6 x swap -7 if > x F x inc neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x -4 ∧ ungreedy * / 1 7 x < x inc T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-2 8 x x * dec 3 x x x dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? greedy? x x + x x dec dec x < T inc ¬ x neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "+ x T T F * x x T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 T -6 ≥ 0 -2 ∧ depth neg x copy copy x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 647: "-3 / x x x x 4 -8 x T x + x F pop neg ungreedy -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy -5 / x - x if x x x -10 + swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 T -1 ungreedy -2 -2 x ∧ x x x -10 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-2 eql -10 + x -3 x F -7 if x ∨ x x x neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 0 3 x / x x be dec x x -10 < swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy / -2 -10 greedy? x F be ¬ -4 -5 7 ¬ 8 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy dec / / x x dec -2 x x greedy? ≥ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 x 1 x greedy > x x < x x -10 + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x x x x 4 -8 dec x ¬ / x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "6 -3 0 9 ungreedy swap x if x x x x + * pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "swap 5 inc > / x 4 ≥ dec x x x T 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 x greedy? x 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 3 greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "¬ / T F inc F -6 x 3 1 T depth x x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-8 x 2 1 2 9 swap swap T x x x F ∨ eql neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "- 0 - 1 inc 2 x x pop x ¬ * x F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "/ * 0 x F -5 > 7 ¬ -3 inc -7 x 1 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 768: "x x 9 x + - x x -2 x greedy ungreedy + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1324: "ungreedy * ∧ 0 -6 -2 > x ¬ - * * if x x -3 x -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 3443: "x eql x / x copy T x -6 x 5 > + 2 pop neg ungreedy -5 T ≥ -9 -10 if -5 * 9 * + 5 *"
# 41657: "x / - / x 7 x x 9 inc x -10 x x x F 6 7 - - x 3 + -5 * 9 4 + 5 *"
# 42077: "x inc -5 / x - x if -8 x x x + 0 pop > 5 ungreedy x copy -9 swap dec -5 * 9 x + 5 *"
# 42087: "-1 -3 x 7 ungreedy depth x if F x if ∨ + x pop neg F -5 x > -9 -1 if -5 * - 2 - + -"
30881,43022,71
30882,42833,67
30883,43085,77
30884,42896,70
30885,42875,73
30886,10392,83
30887,4482,80
30888,36827,84
30889,58247,84
30890,44592,82
30891,678,77
30892,43085,86
30893,43022,73
30894,43922,76
30895,15000288,77
30896,55323,78
30897,507,82
30898,57986,82
30899,1657,86
30900,15007972,99
30901,87392,85
30902,3598,87
30903,4252,89
30904,42917,82
30905,45447,75
30906,50597,80
30907,37202,82
30908,1324,84
30909,43547,77
30910,43106,80
30911,2743,83
30912,1133,91
30913,1133,82
30914,2213,82
30915,44233,94
30916,35042,91
30917,43148,77
30918,15635,73
30919,42875,85
30920,678,88
30921,44072,80
30922,43022,84
30923,1443,84
30924,44072,87
30925,8318,78
30926,41552,80
30927,102557,73
30928,6097,80
30929,46240,76
30930,746,77
30931,56998,75
30932,43022,93
30933,999,80
30934,22022,87
30935,42875,87
30936,42077,67
30937,41657,83
30938,53522,92
30939,38823,89
30940,51317,76
30941,85547,83
30942,37202,82
30943,43757,90
30944,42917,93
30945,86897,74
30946,43022,74
30947,42917,80
30948,34286,82
30949,43022,89
30950,507,86
30951,54550,70
30952,1117,76
30953,39578,72
30954,42917,85
30955,42572,80
30956,2213,85
30957,29897,81
30958,48272,81
30959,66093,77
30960,23818,81
30961,43022,85
30962,3443,90
30963,2791,81
30964,42077,86
30965,38147,82
30966,1324,73
30967,1403,84
30968,865,90
30969,43652,75
30970,53492,73
30971,3038,81
30972,44072,75
30973,3443,87
30974,1117,80
30975,40163,75
30976,42077,92
30977,43022,76
30978,721,79
30979,37307,90
30980,30717,78
30981,43022,84
30982,44072,80
30983,1519,81
30984,42917,91
30985,3637,84
30986,43022,79
30987,1391,80
30988,42896,93
30989,38297,75
30990,1336,86
30991,36827,78
30992,43064,74
30993,43442,78
30994,8008,72
30995,678,84
30996,15026588,86
30997,43022,87
30998,15015748,81
30999,94808,85
31000,43022,87
31001,43022,80
31002,48722,84
31003,1324,88
31004,721,85
31005,48722,90
31006,15000362,83
31007,75522,84
31008,468272,85
31009,721,81
31010,3443,85
31011,3443,84
31012,43022,93
31013,43442,82
31014,507,82
31015,9820,76
31016,36827,77
31017,44072,79
31018,1494,87
31019,639,93
31020,1133,89
31021,76622,82
31022,3443,83
31023,44072,78
31024,48722,88
31025,45243,81
31026,4332,85
31027,44072,83
31028,55248,89
31029,34247,91
31030,907,84
31031,3358,84
31032,43022,82
31033,1117,82
31034,38552,94
31035,43022,82
31036,41657,83
31037,21000000,87
31038,43022,79
31039,43022,73
31040,60468,88
31041,9712,85
31042,41657,78
31043,21000000,88
31044,604,78
31045,38337,84
31046,5002208,85
31047,16987,72
31048,255729,84
31049,678,78
31050,109012,78
31051,43547,86
31052,43211,91
31053,21000000,88
31054,21000000,86
31055,9878,92
31056,36827,91
31057,37202,83
31058,52292,85
31059,4753,81
31060,2213,76
31061,1649,76
31062,42917,78
31063,69067,86
31064,37202,85
31065,4183,79
31066,48717,77
31067,42917,79
31068,42977,87
31069,42917,80
31070,37202,83
31071,38867,81
31072,43022,78
31073,10001073,90
31074,48347,85
31075,42917,77
31076,15000288,78
31077,2213,70
31078,37202,75
31079,1324,83
31080,37307,91
31081,507,84
31082,54798,78
31083,3358,83
31084,678,81
31085,42077,84
31086,43022,81
31087,40688,87
31088,507,85
31089,6841,86
31090,16000195,89
31091,48182,86
31092,2313,76
31093,44072,85
31094,42896,81
31095,1717,73
31096,1038,81
31097,42812,83
31098,678,95
31099,507,80
31100,47747,82
31101,45217,84
31102,3068,87
31103,43190,89
31104,60407,77
31105,43022,81
31106,2024,82
31107,1128,79
31108,793,92
31109,21000000,77
31110,1324,71
31111,678,89
31112,43022,89
31113,27964,80
31114,835,87
31115,1324,83
31116,43547,81
31117,2428,74
31118,49127,91
31119,42938,75
31120,2213,83
31121,45243,83
31122,1281,80
31123,55330,84
31124,43001,90
31125,52997,84
31126,678,82
31127,999,77
31128,43022,74
31129,43022,85
31130,1324,85
31131,43022,85
31132,793,82
31133,2213,88
31134,14015645,91
31135,30807,94
31136,3443,93
31137,41657,85
31138,507,75
31139,43793,81
31140,678,77
31141,42875,82
31142,12000703,74
31143,43652,73
31144,37582,83
31145,43022,81
31146,61560,84
31147,58097,78
31148,4398,87
31149,37877,75
31150,1359,91
31151,1649,81
31152,678,87
31153,47747,83
31154,5012352,81
31155,35908,79
31156,3443,86
31157,15073,83
31158,3443,83
31159,3443,76
31160,43211,79
31161,21000000,80
31162,1108,78
31163,43652,70
31164,53682,73
31165,41837,97
31166,86492,69
31167,55248,92
31168,1038,71
31169,10001073,95
31170,1967,91
31171,62272,85
31172,70042,81
31173,45107,79
31174,41996,75
31175,10662,78
31176,42617,73
31177,43022,82
31178,969,84
31179,40120,79
31180,3528,76
31181,42917,81
31182,57048,87
31183,43022,73
31184,32473,79
31185,60468,99
31186,1705,81
31187,26026,85
31188,507,89
31189,1192,80
31190,2093,82
31191,42917,75
31192,14528,95
31193,3688,82
31194,44662,78
31195,38642,93
31196,507,84
31197,3443,74
31198,36787,79
31199,34391,81
31200,43967,81
31201,21000000,94
31202,43022,81
31203,507,83
31204,43067,99
31205,5047344,86
31206,3443,84
31207,4024786,88
31208,9002740,77
31209,721,84
31210,41657,90
31211,21000000,88
31212,28792,84
31213,57437,78
31214,14672,79
31215,37582,76
31216,507,92
31217,3443,86
31218,40492,80
31219,86113,88
31220,42833,79
31221,46398,66
31222,61972,83
31223,43442,82
31224,18433,91
31225,43955,79
31226,40688,92
31227,507,84
31228,141547,75
31229,898,88
31230,1717,73
31231,42707,84
31232,2213,84
31233,507,87
31234,59208,88
31235,43547,82
31236,48467,95
31237,40163,84
31238,3443,84
31239,561,78
31240,4398,80
31241,721,96
31242,126182,78
31243,43022,81
31244,48722,97
31245,21000000,76
31246,3443,80
31247,21818,79
31248,43022,83
31249,42812,88
31250,38967,88
31251,1133,82
31252,43022,71
31253,39587,83
31254,42077,81
31255,678,85
31256,43127,74
31257,21000000,80
31258,50162,83
31259,43190,78
31260,639,90
31261,61922,102
31262,44072,86
31263,34376,84
31264,54648,88
31265,95852,81
31266,89327,94
31267,42917,100
31268,678,86
31269,43547,92
31270,42077,86
31271,2213,82
31272,21000000,78
31273,61413,84
31274,77147,70
31275,49142,90
31276,2203,84
31277,171347,73
31278,835,74
31279,37202,83
31280,507,82
31281,67682,77
31282,678,88
31283,42959,84
31284,39242,82
31285,43337,90
# After 15400 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 F F be 0 -2 ∧ -1 0 x x x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 9 ∧ 1 2 eql ∧ x x x > x + 4 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc x -2 -2 x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 / x x / x 4 -8 dec 4 x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 3 x neg x 9 -5 x greedy? x x x + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x 4 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F dec be 0 -2 ∧ -1 0 x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql x / inc F T x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ depth neg x x copy + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / x - x -1 x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x x x ≥ 9 depth -3 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 8 -1 T pop x x 9 -10 x x x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / greedy? - -5 if x T x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy F if T < greedy? depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth 0 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "∧ x 1 x greedy > x x -2 x > x + 4 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc * -9 x x x x < + 9 pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x T greedy + T x greedy? x F T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 F x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "0 T F x 0 -2 if x x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x T 7 ungreedy * ≥ 1 7 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x 4 x greedy -3 greedy x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-9 x 5 copy * x be x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x > + T x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x 4 / greedy -3 greedy x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth inc if / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 5 -2 x x x x x x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "5 greedy -2 ∨ inc neg 7 x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 ≥ dec 4 x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 x x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy x greedy? -8 9 x / greedy ∧ -5 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T be inc be 0 -2 ∧ -1 x greedy? x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg F 9 -1 x neg x x copy + -9 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 inc > / x if x x x x be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 4 / greedy -3 greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 9 x / greedy ∧ x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 532: "T / -10 x inc x + T -10 greedy -2 1 x F + * dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 561: "-1 -3 x 7 ungreedy depth x if F x 3 ∨ + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 561: "-1 -3 x 7 ungreedy x x x F x 3 ∨ + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "6 -3 x 7 ungreedy depth greedy? inc ¬ x 3 x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "1 5 / x x F x dec dec x < T inc ¬ copy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 608: "< depth x copy greedy -3 x T > -5 -9 -8 be T pop neg ungreedy -5 x - -9 -10 if -5 * 9 * + 5 *"
# 636: "-1 if x -2 T x 2 1 + x x > + x pop neg ungreedy -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy + -10 9 x -6 5 swap -7 if neg x F x inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "F T ungreedy ≥ 0 F ∧ depth neg x copy copy x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? greedy? x x + x x dec dec x < T inc ¬ x neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-2 8 x x * dec 3 x x x dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T greedy T x greedy x < dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "+ x T T F * x x T -3 dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 T -6 ≥ 0 -2 ∧ depth neg x copy copy x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy x x -7 ungreedy x x 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 647: "-3 / x x x x 4 -8 x T x + x F pop neg ungreedy -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "T -3 x + x -3 x F -7 x x ∨ x x x neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 0 3 x / x x be dec x x -10 < swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 x greedy? x 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 3 greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x x x x -6 x dec x ¬ / + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "6 -3 0 9 ungreedy swap x if x x x x + * pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy / -2 -10 greedy? x F be ¬ -4 -5 7 ¬ 8 x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 -9 -1 ungreedy -2 -2 eql ∧ x x x 3 + x ≥ neg swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy dec / / x x dec -2 x x greedy? ≥ F x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x greedy -5 / x - x if x x x -10 + swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 793: "x T inc be 0 -2 x x x x x x + 0 depth neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 2313: "x x -6 / x if T x -6 x 5 > + dec pop neg dec -5 T ≥ -9 -10 if -5 * 9 * + 5 *"
# 6097: "x copy dec x x x 8 1 7 / < ≤ inc x pop neg ungreedy * x ≥ -9 x if -5 * 9 * + 5 *"
# 10662: "-1 -3 x 7 ≥ depth x if F x if ∨ + -10 pop neg F -5 x > -9 -1 if -5 * 9 * + 5 *"
# 42617: "x -7 depth x dec x 2 x 4 -5 inc x - + -10 9 + -2 x 6 5 x x -6 / + * + 5 *"
# 42833: "if -7 depth x dec x 2 x 4 -5 inc x - + -10 9 + -2 x 6 5 T x greedy? / + x / x 9"
# 43022: "x -3 / 1 inc dec 5 + - / + -9 x -2 -9 inc + -4 9 -3 6 x if -5 * 9 * x 5 *"
31286,43030,76
31287,43127,69
31288,43022,67
31289,43002,70
31290,43022,71
31291,21133,92
31292,42917,84
31293,43022,79
31294,2043,92
31295,723,86
31296,29637,84
31297,37202,102
31298,3358,80
31299,502,80
31300,1133,87
31301,3466,83
31302,3443,86
31303,58314,91
31304,48797,86
31305,3443,91
31306,50225,78
31307,43127,78
31308,1849,73
31309,42917,81
31310,57588,81
31311,3657,75
31312,53787,72
31313,41972,86
31314,507,94
31315,507,82
31316,1457,86
31317,48797,79
31318,35042,88
31319,29897,77
31320,44072,84
31321,4228,86
31322,43022,88
31323,48272,80
31324,21000000,81
31325,11537,81
31326,678,84
31327,46172,76
31328,43022,79
31329,43337,85
31330,43022,82
31331,36932,89
31332,42962,77
31333,42392,88
31334,1730,80
31335,21000000,82
31336,45092,78
31337,3127,90
31338,15000288,83
31339,48722,95
31340,50428,82
31341,41702,73
31342,43022,66
31343,20457,86
31344,43022,93
31345,2213,84
31346,40613,74
31347,3443,88
31348,43652,91
31349,43002,89
31350,1653,71
31351,43022,93
31352,42167,82
31353,35762,101
31354,41852,86
31355,121241,91
31356,43672,77
31357,40922,77
31358,43678,82
31359,24391,79
31360,40957,70
31361,45243,81
31362,42667,83
31363,507,89
31364,87617,81
31365,40688,81
31366,2213,69
31367,1649,79
31368,43347,74
31369,43547,85
31370,12143,76
31371,56998,86
31372,15026152,95
31373,507,93
31374,40927,76
31375,3443,77
31376,42917,84
31377,38262,80
31378,42980,80
31379,678,77
31380,35908,81
31381,76097,87
31382,1649,77
31383,43547,82
31384,1652,75
31385,43827,70
31386,43022,73
31387,11000880,77
31388,678,92
31389,678,96
31390,1324,92
31391,40712,91
31392,70437,91
31393,43547,82
31394,1324,77
31395,41552,71
31396,57017,80
31397,25906,80
31398,43022,84
31399,49662,86
31400,23212,84
31401,2218,77
31402,21000000,84
31403,3443,97
31404,21000000,82
31405,3443,89
31406,507,81
31407,59222,73
31408,37877,84
31409,639,79
31410,969,88
31411,53042,74
31412,42959,88
31413,1324,80
31414,43547,77
31415,52517,79
31416,42077,75
31417,42938,81
31418,1133,86
31419,43022,76
31420,42392,75
31421,678,86
31422,56353,77
31423,43022,86
31424,44007,80
31425,507,84
31426,507,85
31427,964,94
31428,31517,88
31429,42980,94
31430,42077,73
31431,21000000,85
31432,28952,70
31433,507,83
31434,4398,73
31435,678,89
31436,1647,83
31437,2213,82
31438,56998,75
31439,43547,90
31440,60468,79
31441,1359,88
31442,44597,87
31443,42182,84
31444,42077,82
31445,445862,87
31446,1324,87
31447,3443,85
31448,44072,79
31449,3443,89
31450,42872,72
31451,27739,87
31452,37227,86
31453,15000288,85
31454,10208,79
31455,1117,82
31456,42392,72
31457,3443,77
31458,38867,98
31459,43967,79
31460,2062,83
31461,29897,91
31462,42077,85
31463,37077,80
31464,58490,82
31465,24705,86
31466,3883,89
31467,4398,83
31468,29234,73
31469,21000000,75
31470,502,92
31471,43043,80
31472,42917,79
31473,1324,86
31474,43022,90
31475,38147,91
31476,3443,82
31477,47678,80
31478,43022,93
31479,42854,89
31480,50639,82
31481,2213,80
31482,43022,86
31483,42917,83
31484,43022,77
31485,1133,85
31486,36827,79
31487,42797,73
31488,604,92
31489,56148,85
31490,44177,69
31491,59214,85
31492,42917,77
31493,43022,72
31494,721,87
31495,40613,86
31496,112322,76
31497,3443,78
31498,29094,73
31499,42707,97
31500,48722,91
31501,37202,76
31502,678,77
31503,43127,86
31504,38623,70
31505,1918,77
31506,42077,96
31507,1324,78
31508,1324,79
31509,2213,80
31510,3443,78
31511,59208,92
31512,58107,100
31513,1883,84
31514,10001073,92
31515,2687,73
31516,507,93
31517,44072,81
31518,42833,84
31519,3637,83
31520,43022,83
31521,43997,84
31522,42182,79
31523,90032,77
31524,21000000,81
31525,639,85
31526,1133,81
31527,43022,78
31528,73309,76
31529,678,80
31530,48722,77
31531,678,91
31532,21000000,77
31533,507,87
31534,848,78
31535,44072,85
31536,36932,85
31537,43022,82
31538,2043,79
31539,507,92
31540,40383,76
31541,1289,82
31542,21000000,80
31543,56868,77
31544,8042,89
31545,37172,86
31546,43427,78
31547,3443,82
31548,95942,87
31549,4033,81
31550,49217,82
31551,2213,79
31552,45162,82
31553,44118,82
31554,41342,83
31555,1454,82
31556,76797,70
31557,53822,75
31558,41132,84
31559,43022,82
31560,60468,78
31561,43022,83
31562,83712,81
31563,1849,78
31564,116822,81
31565,507,88
31566,42917,83
31567,21000000,86
31568,2093,74
31569,42917,75
31570,53042,88
31571,5002208,81
31572,43967,70
31573,55473,77
31574,76097,79
31575,58217,91
31576,36827,100
31577,19712,89
31578,3443,87
31579,1918,85
31580,40913,87
31581,1324,71
31582,43022,87
31583,15000288,85
31584,678,84
31585,41552,88
31586,43247,82
31587,35117,84
31588,41657,76
31589,237647,81
31590,33761,79
31591,40787,80
31592,41552,81
31593,43022,85
31594,91690,96
31595,1918,76
31596,3443,79
31597,43097,80
31598,42917,83
31599,42917,78
31600,9023990,86
31601,507,82
31602,295388,84
31603,15007118,84
31604,1662,76
31605,50006,84
31606,721,82
31607,2818,78
31608,6001965,81
31609,964,90
31610,3658,85
31611,61742,81
31612,41672,79
31613,43022,83
31614,1454,80
31615,1133,83
31616,964,86
31617,141727,73
31618,999,82
31619,1237,81
31620,721,82
31621,43922,87
31622,21000000,80
31623,929,83
31624,509,79
31625,507,85
31626,42917,85
31627,42812,83
31628,29094,92
31629,45312,81
31630,14000405,81
31631,43022,86
31632,56998,73
31633,43022,86
31634,6223,79
31635,42917,84
31636,40082,77
31637,929,83
31638,76727,85
31639,42182,83
31640,1108,76
31641,3918,84
31642,52758,83
31643,8008,84
31644,82047,86
31645,1663,90
31646,21000000,76
31647,3443,84
31648,47892,76
31649,1038,90
31650,50639,78
31651,507,91
31652,48293,89
31653,39697,81
31654,51556,75
31655,48398,87
31656,4123,83
31657,42632,81
31658,3022,77
31659,43022,89
31660,793,85
31661,42875,85
31662,3107,73
31663,964,90
31664,507,71
31665,43547,79
31666,43337,77
31667,11000880,85
31668,507,94
31669,10997,82
31670,577,77
31671,1918,86
31672,3013,84
31673,469,83
31674,55473,81
31675,867,80
31676,29390,71
31677,3393,84
31678,793,93
31679,15000422,95
31680,3443,83
31681,678,85
31682,25892,81
31683,41798,77
31684,43022,78
31685,42875,82
31686,2707,80
31687,42392,87
31688,1324,76
31689,21000000,84
31690,43547,77
# After 15600 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T 7 ungreedy depth x x x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 F F be 0 -2 ∧ -1 0 x x x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / greedy? - -5 if x T x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x x x ≥ 9 depth -3 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 inc > / x if x x x x be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "∧ x 1 x greedy > x x -2 x > x + 4 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x 4 / greedy -3 greedy x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy x greedy? -8 9 x / neg ∧ -5 x x + T T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T greedy -5 inc greedy -3 greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "0 T F x 0 -2 if x x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy / -2 -10 greedy? T if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 9 ∧ 1 2 eql ∧ x x x > x + 4 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 3 x neg x 9 -5 x greedy? x x x + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x 4 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ depth neg x x copy + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc * -9 x x x x < + 9 pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 F x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 x x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 5 -2 x x x x x x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x swap ∧ x < greedy? x 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "+ x 5 copy * x be x x x ∨ x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x > + T x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 ≥ dec 4 x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec eql -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F dec be 0 -2 ∧ -1 0 x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 inc -5 / x - x if x x F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy F if T < greedy? depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / x - x -1 x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 9 x / greedy ∧ x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth + if x x - x if x T F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-9 x 5 copy * x be x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x copy x greedy -3 greedy swap x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 / x x / x 4 -8 dec 4 x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x T 7 ungreedy * ≥ 1 7 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T copy -6 x eql x depth -1 x x x x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x T greedy + T x F x F F + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 4 / greedy -3 greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 509: "-1 x F x inc F + T -10 greedy -2 1 x F + * swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 561: "-1 -3 x 7 ungreedy x x x F x 3 ∨ + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "1 5 / x x F x dec dec x < T inc ¬ copy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "greedy? greedy? x x + x ¬ 9 dec x < T inc ¬ inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 608: "< depth x copy greedy -3 x T > -5 -9 -8 be T pop neg ungreedy -5 x - -9 -10 if -5 * 9 * + 5 *"
# 636: "-1 if x -2 T x 2 1 + x x > + x pop neg ungreedy -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy + -10 9 x -6 5 swap -7 if neg x F x inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-2 8 x x * dec 3 x x x dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x ∧ ungreedy * / 1 < / x x inc x x neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 T -6 ≥ 0 -2 ∧ depth neg x copy copy x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy x x -7 ungreedy x x 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "F T ungreedy ≥ 0 F ∧ depth neg x copy copy x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T greedy T x greedy x < dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 647: "-3 / x x x x 4 -8 x T x + x F pop neg ungreedy -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "T -3 x + x -3 x F -7 x x ∨ x x x neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 / x x x x -6 x dec x ¬ / + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 3 greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x copy dec -5 x x eql x x x ≤ greedy ¬ -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-3 x greedy? x 2 T eql 1 x neg greedy? ∧ -1 T neg pop T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 0 3 x / x x be dec x x -10 < swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "6 -3 0 9 ungreedy swap x if x x x x + * pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 867: "-2 / depth x inc * -9 inc x x x < + x pop neg -5 -5 x > -9 -10 if -5 * 9 * + 5 *"
# 1117: "x -7 be x copy x 2 x 4 -9 F x - + pop neg ungreedy -5 2 ≥ -9 -10 if -5 * 9 * + 5 *"
# 1324: "-1 x x x 0 -2 x > < x x x + x pop x ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1454: "6 -3 0 9 ungreedy swap x if x x -9 T + * pop neg - -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1653: "x 0 dec / 2 x 0 x x x x - -6 x inc -3 8 7 / -2 -9 -10 if -5 * 9 * + 5 *"
# 1662: "-6 0 3 x 8 x x x x * 0 inc x -10 3 1 -3 -5 ∧ greedy -9 -10 if -5 * 9 * + 5 *"
# 1849: "copy x x neg -10 7 2 -7 -6 be -1 x + x be neg F * x ≥ -9 -10 if -5 * 9 * + 5 *"
# 10662: "-1 -3 x 7 ≥ depth x if F x if ∨ + -10 pop neg F -5 x > -9 -1 if -5 * 9 * + 5 *"
# 39697: "-1 x 8 / x -3 F x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 x copy * + 5 *"
31691,43022,73
31692,43085,81
31693,42252,77
31694,43064,67
31695,43022,74
31696,2213,90
31697,43933,74
31698,48722,90
31699,40608,83
31700,42472,76
31701,723,92
31702,43022,79
31703,91322,86
31704,4005355,83
31705,678,81
31706,639,85
31707,41207,79
31708,2213,77
31709,678,87
31710,42252,91
31711,56342,79
31712,15033127,82
31713,507,90
31714,1815,71
31715,42077,88
31716,2213,79
31717,43862,77
31718,43122,85
31719,56072,78
31720,1649,90
31721,43922,80
31722,678,89
31723,43022,77
31724,29792,79
31725,43085,87
31726,43457,93
31727,2768,85
31728,3517,80
31729,43967,91
31730,639,77
31731,2213,77
31732,507,80
31733,1593,84
31734,130082,81
31735,1883,80
31736,507,77
31737,42917,79
31738,58261,87
31739,507,86
31740,43547,78
31741,39242,76
31742,2213,78
31743,44662,83
31744,43022,86
31745,26092,79
31746,34391,88
31747,43547,86
31748,3501,80
31749,507,81
31750,4355,79
31751,29792,80
31752,28999,84
31753,507,73
31754,1192,77
31755,43022,77
31756,507,79
31757,2213,74
31758,876,79
31759,44547,82
31760,1108,78
31761,41996,89
31762,1442,73
31763,42962,91
31764,723,86
31765,639,79
31766,42077,83
31767,43022,87
31768,57498,77
31769,42677,81
31770,2213,74
31771,873,81
31772,2213,91
31773,43022,77
31774,42252,79
31775,43022,77
31776,1918,84
31777,2170,84
31778,6032890,77
31779,43003,81
31780,21000000,81
31781,6252,96
31782,44072,84
31783,96390,76
31784,80317,77
31785,1663,87
31786,49742,97
31787,43198,81
31788,57242,81
31789,40613,84
31790,42077,93
31791,58261,95
31792,1133,83
31793,54378,91
31794,43022,80
31795,43022,81
31796,56937,84
31797,1117,75
31798,15032947,79
31799,4077724,78
31800,1649,75
31801,70742,78
31802,43022,95
31803,743747,72
31804,507,87
31805,3443,78
31806,43022,80
31807,55698,70
31808,2213,78
31809,43022,78
31810,60468,79
31811,1038,86
31812,28742,75
31813,52974,72
31814,11537,92
31815,32468,81
31816,43022,76
31817,46872,98
31818,86597,79
31819,43127,73
31820,507,86
31821,43277,74
31822,3443,82
31823,647,79
31824,1117,77
31825,42077,92
31826,44148,71
31827,33477,79
31828,47482,94
31829,43022,73
31830,43547,92
31831,1324,82
31832,25172,86
31833,4228,84
31834,528,83
31835,678,82
31836,3738,96
31837,42077,89
31838,44072,75
31839,60468,82
31840,507,88
31841,987,80
31842,48392,74
31843,4002455,78
31844,1663,80
31845,43022,73
31846,1133,81
31847,44257,85
31848,4087,78
31849,43022,74
31850,1192,80
31851,28293,71
31852,55548,77
31853,56998,90
31854,1324,75
31855,42077,78
31856,3443,78
31857,4252,84
31858,37202,86
31859,47369,102
31860,33761,84
31861,60858,82
31862,40463,83
31863,1738,85
31864,678,88
31865,1324,74
31866,1324,75
31867,678,72
31868,24122,84
31869,42707,79
31870,46802,87
31871,4633,81
31872,678,76
31873,10003278,81
31874,42077,78
31875,44072,94
31876,43232,82
31877,43547,81
31878,8008,83
31879,45517,82
31880,1757,81
31881,30258,94
31882,76097,87
31883,1124,79
31884,43167,68
31885,43064,89
31886,21000000,91
31887,43547,92
31888,43022,84
31889,46234,79
31890,48797,82
31891,43967,78
31892,722162,87
31893,9137,89
31894,507,71
31895,43085,88
31896,43022,83
31897,42854,75
31898,1133,83
31899,47747,77
31900,42077,90
31901,15012652,83
31902,41831,82
31903,15000288,86
31904,3443,81
31905,42302,83
31906,999,73
31907,4252,78
31908,25172,78
31909,1454,83
31910,1663,70
31911,37202,93
31912,37202,81
31913,42917,73
31914,53042,76
31915,43022,76
31916,507,90
31917,678,81
31918,70637,82
31919,11000880,82
31920,52892,90
31921,3443,80
31922,234975,81
31923,40712,81
31924,116912,86
31925,3528,78
31926,38867,96
31927,1133,80
31928,507,77
31929,90272,93
31930,42527,88
31931,41342,78
31932,39272,79
31933,39242,76
31934,42917,73
31935,39242,78
31936,1069,79
31937,1649,85
31938,39042,75
31939,42917,86
31940,35327,82
31941,3443,89
31942,42077,83
31943,86597,84
31944,42077,82
31945,31072,77
31946,5002208,85
31947,37577,78
31948,57838,72
31949,95947,77
31950,1289,76
31951,507,71
31952,43012,81
31953,4653,81
31954,23091,82
31955,21000000,83
31956,678,89
31957,2213,89
31958,801,89
31959,1657,90
31960,469,84
31961,3322,75
31962,69320,82
31963,1738,89
31964,62972,88
31965,44072,82
31966,42707,87
31967,7482,87
31968,55388,83
31969,57543,80
31970,2743,80
31971,54993,77
31972,8008,86
31973,52992,87
31974,3443,71
31975,1798,79
31976,4347,94
31977,1114,83
31978,3443,96
31979,1757,82
31980,53042,86
31981,102410,77
31982,604,86
31983,1324,87
31984,43547,90
31985,42980,90
31986,1738,78
31987,507,81
31988,29094,78
31989,218850,86
31990,93287,78
31991,32568,94
31992,42347,85
31993,128072,85
31994,58452,70
31995,21000000,90
31996,21000000,78
31997,59377,86
31998,37582,74
31999,60468,98
32000,678,87
32001,60468,84
32002,3443,77
32003,15000288,81
32004,43064,73
32005,43967,86
32006,829,72
32007,4963,81
32008,33572,82
32009,44947,83
32010,6167,98
32011,37352,81
32012,1543,92
32013,848,78
32014,54400,83
32015,43547,74
32016,52803,85
32017,43067,80
32018,44072,75
32019,42119,83
32020,43022,80
32021,65418,77
32022,507,79
32023,43022,78
32024,48692,73
32025,43547,85
32026,12020610,82
32027,25741,81
32028,21000000,80
32029,507,84
32030,43232,83
32031,21000000,77
32032,48272,97
32033,45243,84
32034,4313,75
32035,40382,84
32036,15722,70
32037,999,88
32038,47572,71
32039,559,73
32040,829,90
32041,604,87
32042,1533,74
32043,43022,87
32044,44072,69
32045,43547,82
32046,58261,88
32047,91217,86
32048,68110,94
32049,53470,83
32050,2213,83
32051,32042,79
32052,45243,85
32053,639,83
32054,21000000,70
32055,62972,76
32056,1226,75
32057,3713,91
32058,55473,79
32059,528,86
32060,3528,74
32061,42252,95
32062,3443,76
32063,43064,71
32064,1140,78
32065,54243,84
32066,3443,89
32067,678,88
32068,3443,84
32069,26902,92
32070,21000000,93
32071,43022,81
32072,507,73
32073,29954,86
32074,21000000,93
32075,43022,94
32076,65247,83
32077,2213,82
32078,21000000,87
32079,86597,75
32080,3443,85
32081,1391,80
32082,46032,89
32083,86602,86
32084,721,85
32085,42896,90
32086,1413,87
32087,43148,78
32088,43267,93
32089,77412,70
32090,3658,81
32091,1436,83
32092,55518,83
32093,48722,79
32094,42077,83
32095,43862,86
# After 15800 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T 7 ungreedy depth x x x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 F F be 0 -2 ∧ -1 0 x x x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 ≤ x 1 F -1 x x x ∧ + 0 pop neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x x x ≥ 9 depth -3 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "+ x 5 copy * x be x x x ∨ x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / x - x -1 x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x copy 1 greedy -3 ungreedy swap -2 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 F x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth + if x x - x if x T F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x > + T x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc * -9 x x x x < + 9 pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 4 / greedy -3 greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x T greedy + T x F x F F + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy > x x -2 ≤ x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec eql -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T greedy -5 inc greedy -3 greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / greedy? - -5 if x T x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- x x 3 ungreedy - x copy x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy x greedy? -8 9 x / neg ∧ -5 x x + T T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "2 be F x 0 -2 x x < x x x + x pop neg ∧ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "> x 8 / x -3 > x x x x x + T pop neg copy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy / -2 -10 greedy? T if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 ≥ dec 4 x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 9 ∧ 1 2 eql ∧ x x x > x + 4 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x 4 / greedy -3 greedy x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 x eql 8 depth -1 x x x x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x T 7 ungreedy * ≥ 1 7 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ x -2 ∧ x neg x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy F if T < greedy? depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T copy -6 x eql x depth -1 x x x x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x / x ≥ / x 4 -8 dec 4 x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 ¬ -6 < 0 x 4 -8 dec 4 x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x swap ∧ x < greedy? x 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F dec be 0 -2 ∧ -1 0 x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x 4 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 3 x neg x 9 -5 x greedy? x x x + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-9 x 5 copy * x be x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 509: "-1 x F x inc F + T -10 greedy -2 1 x F + * swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 559: "-1 -3 x 7 ≥ ≥ x if 5 x if ∨ + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 561: "-1 -3 x 7 ungreedy x x x F x 3 ∨ + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "-1 x 1 T greedy T T x dec x be x inc ¬ inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "1 5 / x x F x dec dec x < T inc ¬ copy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "-1 x x T greedy T T x dec x < T inc ¬ inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 608: "< depth x copy greedy -3 x T > -5 -9 -8 be T pop neg ungreedy -5 x - -9 -10 if -5 * 9 * + 5 *"
# 636: "-1 if x -2 T x 2 1 + x x > + x pop neg ungreedy -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy x x -7 ungreedy x x 1 7 / < x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T greedy T x greedy x < dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "F T ungreedy ≥ 0 F ∧ depth neg x copy copy x F pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "x x -2 > T + -6 neg -2 + dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy + -10 9 x -6 5 swap -7 if neg x F x inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 643: "x eql -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "7 x x > / x 4 ≥ dec x x x swap 0 x neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "T -3 x + x -3 x F -7 x x ∨ x x x neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "pop swap T x inc F -6 x -10 x x -10 3 greedy? x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x T x > / 8 4 x x x ≤ greedy ¬ -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 0 3 x / x x be dec x x -10 < swap ≥ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1192: "≥ -3 T + 3 0 -10 1 inc x if -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * inc 5 *"
# 1192: "-2 8 x x * 6 3 x x x dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * inc 5 *"
# 1653: "x 0 dec / 2 x 0 x x x x - -6 x inc -3 8 7 / -2 -9 -10 if -5 * 9 * + 5 *"
# 3443: "9 ≥ -1 x 5 1 F x x ≤ ≤ greedy ¬ -4 pop neg x be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 4087: "-7 x 8 / x -3 F x x x x x + T pop neg ungreedy -5 + ≥ -9 -10 if -5 * 9 * + 5 *"
# 39697: "-1 x 8 / x -3 F x x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 x copy * + 5 *"
32096,42252,75
32097,43148,76
32098,43106,79
32099,43022,66
32100,43022,72
32101,1918,79
32102,49308,86
32103,58008,77
32104,48722,84
32105,49217,91
32106,44072,83
32107,21000000,82
32108,507,85
32109,42077,85
32110,1508,89
32111,36607,81
32112,49217,73
32113,43022,84
32114,42077,88
32115,55473,84
32116,3355,85
32117,509,82
32118,44072,78
32119,43862,89
32120,3443,78
32121,38717,77
32122,49742,92
32123,1324,85
32124,507,84
32125,1818,73
32126,77492,81
32127,43227,70
32128,43022,81
32129,1133,85
32130,22967,84
32131,59157,70
32132,40937,70
32133,999,85
32134,46173,83
32135,7112,87
32136,43232,72
32137,43967,77
32138,1053,81
32139,3443,77
32140,43022,83
32141,43022,76
32142,47747,72
32143,44072,71
32144,39172,80
32145,50639,70
32146,5024952,77
32147,1192,83
32148,44072,93
32149,1649,75
32150,1667,77
32151,3443,83
32152,42077,82
32153,86897,78
32154,43022,80
32155,3882,86
32156,43022,81
32157,44072,89
32158,56998,95
32159,33302,79
32160,42602,90
32161,507,80
32162,42917,87
32163,42077,85
32164,507,95
32165,1108,77
32166,15000382,84
32167,62867,75
32168,21000000,95
32169,43547,95
32170,999,71
32171,48722,89
32172,43022,96
32173,1133,80
32174,6272,87
32175,21000000,70
32176,43148,79
32177,1663,85
32178,122042,74
32179,3443,83
32180,9763,77
32181,38297,84
32182,40838,88
32183,41972,73
32184,796,77
32185,53042,83
32186,42917,86
32187,15000288,71
32188,50162,86
32189,1324,80
32190,1133,90
32191,21000000,81
32192,1878,82
32193,43022,92
32194,3358,80
32195,49427,81
32196,56868,75
32197,43022,75
32198,1148,79
32199,3178,91
32200,5002738,85
32201,15000288,88
32202,100238,88
32203,1663,72
32204,43112,84
32205,73903,84
32206,52052,82
32207,4087,79
32208,42287,83
32209,60468,83
32210,43106,80
32211,15000442,93
32212,639,84
32213,604,85
32214,42917,82
32215,72797,83
32216,21000000,85
32217,48587,92
32218,43022,92
32219,120836,85
32220,1738,86
32221,43022,77
32222,3443,89
32223,43106,79
32224,59703,83
32225,2213,89
32226,48797,72
32227,43952,87
32228,502,84
32229,43022,84
32230,42077,82
32231,116822,80
32232,43157,77
32233,21000000,79
32234,43022,95
32235,43169,89
32236,678,85
32237,1711,74
32238,27562,79
32239,35597,82
32240,721,91
32241,43547,86
32242,1556,83
32243,62027,89
32244,15000288,82
32245,1004,79
32246,45447,91
32247,3443,80
32248,2743,86
32249,37457,74
32250,183358,84
32251,234272,73
32252,43022,83
32253,2452,83
32254,1117,87
32255,639,83
32256,48797,67
32257,42917,81
32258,43043,83
32259,43022,86
32260,59208,84
32261,46382,83
32262,43148,81
32263,4042,82
32264,639,84
32265,678,89
32266,44492,81
32267,43022,74
32268,43106,80
32269,2918,84
32270,48272,77
32271,1662,83
32272,678,95
32273,43547,79
32274,42077,85
32275,60288,96
32276,34472,83
32277,898,83
32278,1324,79
32279,2208,90
32280,48632,86
32281,21000000,73
32282,47448,72
32283,41248,75
32284,42917,79
32285,53349,85
32286,21000000,91
32287,4123,91
32288,7247,85
32289,5934,91
32290,40838,81
32291,678,84
32292,3443,80
32293,4228,75
32294,1757,79
32295,122186,87
32296,1324,72
32297,56913,72
32298,48272,92
32299,44072,79
32300,47852,84
32301,48722,89
32302,678,89
32303,507,81
32304,3637,89
32305,44723,79
32306,37202,86
32307,26088,79
32308,43022,81
32309,27586,80
32310,44072,86
32311,3443,85
32312,15000288,88
32313,2588,78
32314,42917,86
32315,57242,88
32316,678,94
32317,1730,84
32318,1324,85
32319,4228,85
32320,43148,76
32321,999,91
32322,43022,87
32323,80052,89
32324,48722,78
32325,43022,81
32326,17507,74
32327,507,80
32328,42077,93
32329,48772,91
32330,43997,82
32331,48717,84
32332,40652,96
32333,60288,85
32334,95528,80
32335,43337,87
32336,9467,87
32337,23387,84
32338,2213,73
32339,45492,81
32340,21000000,84
32341,42938,79
32342,42497,82
32343,42287,89
32344,639,94
32345,32829,87
32346,639,82
32347,21000000,94
32348,42077,93
32349,48722,78
32350,53309,94
32351,56998,71
32352,41342,91
32353,44072,75
32354,52498,83
32355,48722,91
32356,507,84
32357,32568,72
32358,601,78
32359,21000000,90
32360,42896,83
32361,2775,80
32362,45437,80
32363,43022,75
32364,3487,77
32365,4228,86
32366,4228,83
32367,78917,84
32368,42917,86
32369,639,83
32370,42357,77
32371,37022,83
32372,3443,79
32373,43022,69
32374,2213,74
32375,56814,79
32376,507,99
32377,1103,79
32378,21000000,84
32379,1672,79
32380,502,85
32381,52371,82
32382,604,92
32383,1083,84
32384,4347,81
32385,37737,76
32386,43022,75
32387,21000000,78
32388,42896,95
32389,1324,74
32390,1133,96
32391,42887,82
32392,43022,88
32393,42602,87
32394,507,79
32395,43922,90
32396,1359,82
32397,1133,82
32398,3443,85
32399,3443,81
32400,45573,83
32401,2893,88
32402,10001073,82
32403,40236,74
32404,21000000,76
32405,42077,84
32406,43022,90
32407,43547,90
32408,39172,72
32409,45437,83
32410,8008,91
32411,21000000,95
32412,35087,92
32413,58422,91
32414,3358,79
32415,41737,83
32416,507,86
32417,8426,87
32418,15000288,86
32419,1776,78
32420,42896,75
32421,16013465,77
32422,46673,81
32423,43547,79
32424,43127,77
32425,678,80
32426,77147,85
32427,91217,86
32428,801,83
32429,7382,84
32430,3443,81
32431,33842,83
32432,48722,85
32433,39527,71
32434,3443,82
32435,1324,78
32436,15013072,86
32437,1649,84
32438,12563,76
32439,1038,84
32440,43022,82
32441,3013,78
32442,15000288,95
32443,15013372,84
32444,42917,89
32445,41132,74
32446,40838,86
32447,43001,81
32448,37027,88
32449,52472,81
32450,60588,86
32451,42917,85
32452,50639,83
32453,43547,87
32454,721,84
32455,2213,80
32456,42077,77
32457,507,76
32458,1758,91
32459,1393,82
32460,63047,77
32461,43967,81
32462,48692,86
32463,42917,90
32464,43022,81
32465,1324,73
32466,49942,76
32467,43127,86
32468,54242,85
32469,721,73
32470,42887,80
32471,75992,90
32472,43022,81
32473,3083,98
32474,42077,84
32475,18000089,88
32476,56998,76
32477,100540,78
32478,17024,80
32479,189933,96
32480,964,77
32481,43547,87
32482,2213,77
32483,41132,91
32484,37798,83
32485,48727,85
32486,43201,88
32487,37797,90
32488,1657,71
32489,721,74
32490,2213,82
32491,647,72
32492,15013104,89
32493,31622,88
32494,40007,82
32495,3443,73
32496,10010087,78
32497,4228,78
32498,15013372,87
32499,40922,93
32500,3918,88
# After 16000 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 ≤ x x depth -1 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T 7 ungreedy depth x x x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 F F be 0 -2 ∧ -1 0 x x x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x T 7 ungreedy * ≥ 1 7 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 F x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 inc x inc F -10 x T x greedy greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc * -9 x x x x < + 9 pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "8 x 4 ¬ greedy -3 neg x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x F + x x greedy? x swap T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T copy -6 x eql x depth -1 x x x x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec eql -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy x greedy? -8 9 x / neg ∧ -5 x x + T T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "> x 8 / x -3 > x x x x x + T pop neg copy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / greedy? - -5 if x T x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 / x x -3 x dec dec x x greedy + 0 if neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 3 F neg F 9 -5 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x x x F T x x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 9 ∧ 1 2 eql ∧ x x x > x + 4 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-9 x 5 copy * x be x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T inc -5 / x greedy? depth x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- x x 3 ungreedy - x copy x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 ≥ dec 4 x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F dec 2 0 -2 x -1 0 x x x + -6 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "2 be F x 0 -2 x x < x x x + x pop neg ∧ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 x eql 8 depth -1 x x x x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "+ x 5 copy * x be x x x ∨ x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 ¬ -6 < 0 x 4 -8 dec 4 x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ x -2 ∧ x neg x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy depth -2 -10 greedy? inc if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth + if x x - x if x T F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy F if T < greedy? depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x copy 1 greedy -3 ungreedy swap -2 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x / x ≥ / x 4 -8 dec 4 x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x ≤ inc F T copy x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x x x ≥ 9 depth -3 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy > x x -2 ≤ x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F F if T < x depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 3 x neg x 9 -5 x greedy? x x x + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x 4 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 4 / greedy -3 greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / x - x -1 x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x T greedy + T x F x F F + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T greedy -5 inc greedy -3 greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 509: "-1 x F x inc F + T -10 greedy -2 1 x F + * swap -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 559: "-1 -3 x 7 ≥ ≥ x if 5 x if ∨ + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 561: "-1 -3 x 7 ungreedy x x x F x 3 ∨ + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 604: "-1 x x T greedy greedy? T x dec T < T inc ¬ inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 636: "-1 if x -2 T x 2 1 + x x > + x pop neg ungreedy -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "x x -2 > T + -6 neg -2 + dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T greedy T x greedy x < dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 F if T greedy x x -6 x < T swap x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "ungreedy x x - ungreedy x x 1 -6 / -4 x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 647: "7 x x > / x 4 ≥ dec x x x swap x x neg -5 F x > -9 -10 if -5 * 9 * + 5 *"
# 658: "-8 x - 1 greedy? -10 x T copy T -9 ∧ < pop pop < ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 721: "7 x 8 / x -3 > 0 x x x x + T pop neg ungreedy -5 x ≥ -9 T T -5 * 9 * + 5 *"
# 1083: "-2 8 x x ∧ T x greedy eql < dec -7 pop 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 2213: "-1 x 1 x F + x T greedy? x x F T -6 T 8 -5 -5 x greedy -9 T if -5 * 9 * + 5 *"
# 2213: "-1 T F x 0 -2 x x x x x copy T T pop neg ungreedy F x x -9 -10 if -5 * 9 * + 5 *"
# 3358: "inc inc - - ≥ x 4 4 inc x x x x 4 -5 ≥ -9 x -9 greedy dec -10 if -5 * 9 * + 5 *"
# 3443: "-1 x x ∨ < -3 F x ∨ x -9 x inc ¬ inc neg ungreedy -5 4 T -9 -10 if -5 * 9 * + 5 *"
# 3487: "* F x / x pop x x x x x be + T dec neg ungreedy -5 x ≥ -9 x if -5 * 9 * + 5 *"
# 39172: "9 ≥ -1 / x -3 F T x x x x + T pop neg ungreedy -5 x ≥ -9 -10 if x x copy * + 5 *"
# 43022: "greedy F ≥ T < x F * x -2 1 -9 inc * -1 x / -9 pop / -3 0 -8 x x / x inc x x"
32501,43001,73
32502,43001,73
32503,43043,77
32504,43001,71
32505,43022,74
32506,48797,81
32507,50262,86
32508,43547,78
32509,45447,76
32510,999,87
32511,70805,89
32512,43982,79
32513,43001,80
32514,6828,75
32515,4933,84
32516,42077,86
32517,52997,84
32518,3617,76
32519,37352,91
32520,21000000,89
32521,45243,92
32522,43127,82
32523,3443,74
32524,43547,83
32525,4018,83
32526,21000000,87
32527,107083,86
32528,15000343,76
32529,509,80
32530,43022,84
32531,44072,69
32532,502,81
32533,507,82
32534,1738,89
32535,507,84
32536,41492,75
32537,801,76
32538,8198,79
32539,49777,83
32540,91217,87
32541,1730,84
32542,42854,87
32543,42776,87
32544,43022,71
32545,21000000,90
32546,507,82
32547,678,73
32548,43547,77
32549,507,77
32550,43127,80
32551,43022,74
32552,43022,73
32553,44072,86
32554,42917,80
32555,41807,86
32556,42896,87
32557,2213,80
32558,1398,79
32559,107849,90
32560,1454,83
32561,43022,81
32562,48722,88
32563,42182,90
32564,964,78
32565,2743,86
32566,2218,82
32567,41552,82
32568,39172,83
32569,56998,78
32570,42896,76
32571,55548,77
32572,27622,73
32573,738,77
32574,43022,77
32575,867,83
32576,55548,83
32577,49187,84
32578,864,89
32579,82742,86
32580,43043,81
32581,96950,75
32582,1343,77
32583,42602,85
32584,1672,77
32585,678,85
32586,3443,83
32587,793,88
32588,42917,99
32589,1859,91
32590,1170,79
32591,21000000,80
32592,87617,84
32593,42077,88
32594,37202,75
32595,4398,76
32596,43022,79
32597,42917,89
32598,2213,81
32599,3487,81
32600,43001,74
32601,507,71
32602,3443,79
32603,507,88
32604,43127,83
32605,8642,90
32606,44072,80
32607,15000288,83
32608,821,86
32609,829,83
32610,106192,80
32611,507,90
32612,43967,72
32613,1463,79
32614,42887,70
32615,3443,76
32616,39662,80
32617,42887,86
32618,999,85
32619,56532,86
32620,42077,86
32621,42917,73
32622,13762,95
32623,1787,76
32624,77147,78
32625,721,87
32626,21000000,85
32627,42812,76
32628,3461,74
32629,43169,81
32630,48722,83
32631,1653,88
32632,43547,90
32633,2213,73
32634,577,77
32635,48722,91
32636,3443,89
32637,42077,80
32638,107957,89
32639,721,72
32640,2213,82
32641,42077,86
32642,82322,87
32643,15000343,79
32644,43127,88
32645,3322,76
32646,3443,80
32647,43757,89
32648,468377,83
32649,47077,86
32650,1663,83
32651,1672,87
32652,1765,90
32653,38449,88
32654,58261,85
32655,25172,86
32656,42377,84
32657,48692,80
32658,42707,82
32659,32118,80
32660,14000405,81
32661,1918,85
32662,873,77
32663,43022,84
32664,1133,94
32665,48717,83
32666,40570,81
32667,678,94
32668,3995,81
32669,3773,82
32670,1192,84
32671,507,86
32672,43022,77
32673,112322,72
32674,43142,84
32675,678,82
32676,42896,89
32677,3443,76
32678,1324,82
32679,47432,95
32680,42938,83
32681,28743,84
32682,37202,79
32683,19000490,73
32684,639,74
32685,3443,82
32686,45437,79
32687,1563,76
32688,1281,83
32689,43022,83
32690,43022,95
32691,999,90
32692,678,71
32693,6272,83
32694,52292,91
32695,68915,81
32696,14228,77
32697,40117,84
32698,96390,88
32699,38553,83
32700,41657,87
32701,999,88
32702,43022,93
32703,21000000,77
32704,43148,90
32705,42896,96
32706,3443,73
32707,48797,94
32708,75032,81
32709,27433,78
32710,15011977,83
32711,4087,89
32712,1368,97
32713,59388,85
32714,43022,68
32715,43001,83
32716,43127,91
32717,451,84
32718,577,72
32719,40688,84
32720,93202,88
32721,43022,84
32722,42392,87
32723,1336,79
32724,3443,80
32725,57678,82
32726,43067,84
32727,52052,84
32728,37818,81
32729,42896,87
32730,3443,84
32731,3443,90
32732,2213,82
32733,2213,81
32734,61822,83
32735,43398,82
32736,5043952,72
32737,34187,82
32738,43022,78
32739,43022,87
32740,58261,94
32741,43022,89
32742,48717,85
32743,507,80
32744,38867,93
32745,92418,95
32746,52667,85
32747,507,77
32748,562,89
32749,43547,79
32750,86597,76
32751,1652,82
32752,6903,78
32753,51653,73
32754,46447,74
32755,929,71
32756,75677,75
32757,12307,91
32758,1038,81
32759,43547,89
32760,41447,78
32761,39242,87
32762,48722,80
32763,43652,73
32764,8378,82
32765,38297,78
32766,898,82
32767,678,75
32768,38867,79
32769,2193,86
32770,1730,80
32771,5002208,87
32772,43022,70
32773,43001,99
32774,74937,91
32775,639,85
32776,55417,76
32777,577,73
32778,43001,98
32779,1032534,72
32780,42737,86
32781,1343,70
32782,5051358,86
32783,42823,71
32784,38962,84
32785,43022,81
32786,42077,89
32787,43202,100
32788,58261,91
32789,37352,94
32790,47342,80
32791,42077,83
32792,43022,84
32793,8008,78
32794,42497,89
32795,999,97
32796,1684,83
32797,44032,80
32798,52168,89
32799,1194,72
32800,507,77
32801,3443,102
32802,43337,95
32803,721,86
32804,43022,83
32805,27734,87
32806,42917,89
32807,21000000,86
32808,130067,78
32809,42077,81
32810,3443,79
32811,3263,86
32812,32302,89
32813,3443,93
32814,40613,81
32815,528,72
32816,1336,83
32817,21000000,88
32818,38772,84
32819,848,75
32820,721,81
32821,51653,76
32822,42917,82
32823,42077,80
32824,42917,82
32825,721,83
32826,42622,82
32827,149849,91
32828,9673,84
32829,116522,88
32830,475,91
32831,64397,83
32832,3358,77
32833,15032947,79
32834,42028,75
32835,43022,81
32836,91217,76
32837,44072,86
32838,47962,73
32839,5002208,74
32840,15016632,89
32841,39242,94
32842,64705,84
32843,43022,87
32844,44147,85
32845,54432,81
32846,15000288,88
32847,3443,75
32848,507,79
32849,43022,84
32850,43022,83
32851,39347,86
32852,1717,77
32853,1128,78
32854,15000288,83
32855,44707,77
32856,507,83
32857,51518,79
32858,43967,83
32859,36932,91
32860,47027,80
32861,3443,86
32862,40297,81
32863,42917,77
32864,4398,81
32865,26375,80
32866,647,77
32867,1226,75
32868,507,87
32869,42707,85
32870,43232,85
32871,51107,68
32872,39662,92
32873,42875,76
32874,15000288,78
32875,36902,90
32876,8413,85
32877,1324,72
32878,20447,85
32879,1918,78
32880,42959,78
32881,43547,92
32882,43022,86
32883,43106,81
32884,2213,82
32885,507,85
32886,44072,83
32887,3783,89
32888,43022,89
32889,1133,80
32890,1324,87
32891,87617,81
32892,43001,87
32893,127172,72
32894,43547,85
32895,43022,75
32896,57943,95
32897,43001,90
32898,57883,90
32899,112322,80
32900,47235,93
32901,15010456,84
32902,647,75
32903,43043,87
32904,43547,85
32905,85547,87
# After 16200 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x x T greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 F F be 0 -2 ∧ -1 0 x x x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T 7 ungreedy depth x x x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 x eql 8 depth -1 x x x x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T -6 / greedy -3 F x F x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x x x F T x x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- x x 3 ungreedy - x copy x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "+ x 5 copy * x be x x x ∨ x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy > x x -2 ≤ x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy depth -2 -10 greedy? inc if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x ≤ inc F T copy x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x T 7 ungreedy * ≥ 1 7 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -2 ¬ x greedy -3 -5 x x x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy x greedy? -8 9 x / neg ∧ -5 x x + T T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / greedy? - -5 if x T x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 3 F x ≥ 9 -5 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 ≥ dec 4 x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-7 -9 5 7 x - / -4 x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-9 x 5 copy * x be x F x greedy x + -8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x x x ≥ 9 depth -3 x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x F + x x greedy? x swap T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 / x x -3 x dec dec x x greedy + 0 if neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 3 x neg x 9 -5 x greedy? x x x + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "> x 8 / x -3 > x x x x x + T pop neg copy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 inc x inc F -10 x T x greedy greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "2 be F x 0 -2 x x < x x x + x pop neg ∧ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x copy 1 greedy -3 ungreedy swap -2 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 -2 x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 ¬ -6 < 0 x 4 -8 dec 4 x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 ∨ / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / ¬ - x ∧ x -5 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x 4 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F dec 2 ∨ -2 x -1 0 9 x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-4 0 x < greedy F T x x neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x / x ≥ / x 4 -8 dec 4 x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 inc -5 / x x 8 x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x T greedy + T x F x F F + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc * -9 x x x x < + 9 pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec eql -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth x neg / T + -6 neg -3 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy F if T < greedy? depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be greedy F x 0 F x x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth + if x x - x if x T F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F F if T < x depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / x - x -1 x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 559: "-1 -3 x 7 ≥ ≥ x if 5 x if ∨ + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 561: "-1 -3 x 7 ungreedy x x x F x 3 ∨ + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 636: "-1 if x -2 T x 2 1 + x x > + x pop neg ungreedy -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 x x T greedy T x greedy x < dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "- x x T greedy x x 1 -6 5 -4 x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-3 F if T greedy x x -6 x < T swap x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "x x -2 > T + -6 neg -2 + dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 647: "T x -5 greedy? x x 6 ≥ dec x x x F x be neg -5 F x > -9 -10 if -5 * 9 * + 5 *"
# 647: "T F pop x eql 8 depth x F x 3 ∨ + x x neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 1128: "-1 -4 F ≥ 0 -2 ∧ x neg x x copy + -7 pop neg 3 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1652: "-1 ≤ -6 / x -2 ∧ x neg - x x + x pop neg ungreedy -5 F -3 -9 -10 if -5 * 9 * + 5 *"
# 3358: "-1 ≤ F be 0 x 4 4 inc x x x x 0 -5 ≥ -9 x -9 greedy dec -10 if -5 * 9 * + 5 *"
# 8008: "x 8 x - x dec 5 -2 x -10 -5 -4 + x pop neg -5 be x ≥ -9 -10 dec -5 * 9 * + 5 *"
# 14228: "-1 x 1 x F + x x greedy? < swap T + x pop neg -5 - x ≥ -9 x if -5 * 9 * + 5 *"
# 42028: "> -9 depth / ≥ - x -1 x x x x + x pop neg F -5 -5 ≥ -9 -10 if T * 9 * + 5 *"
# 43001: "-3 F if T greedy x x x x < T swap x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 x inc x -"
# 43001: "x -8 -10 / inc + -6 x greedy? x x greedy + -4 pop neg -5 be x ≥ -9 < if -5 -8 x + -2 x inc"
32906,42959,76
32907,43148,71
32908,43046,68
32909,43042,70
32910,43022,75
32911,100107,81
32912,507,84
32913,43022,82
32914,44072,88
32915,57956,82
32916,507,88
32917,1124,84
32918,1413,84
32919,41923,96
32920,746,77
32921,43022,75
32922,43001,90
32923,1672,92
32924,74463,72
32925,502,81
32926,15000288,83
32927,43172,89
32928,103258,83
32929,42896,84
32930,43022,88
32931,38327,87
32932,1128,83
32933,1133,87
32934,41657,78
32935,43232,94
32936,1763,86
32937,1133,92
32938,2428,93
32939,9001280,89
32940,53417,79
32941,55098,84
32942,1289,82
32943,43148,75
32944,42917,90
32945,47747,85
32946,41552,86
32947,20307,85
32948,43022,68
32949,1324,77
32950,60212,88
32951,56522,99
32952,34968,83
32953,999,84
32954,999,87
32955,44072,81
32956,43022,98
32957,60342,96
32958,3598,84
32959,3443,84
32960,40085,91
32961,1324,78
32962,43022,87
32963,56998,84
32964,42707,84
32965,44822,91
32966,678,82
32967,47522,66
32968,43043,92
32969,848,90
32970,42968,81
32971,216377,78
32972,63523,83
32973,43169,86
32974,3443,78
32975,42182,92
32976,52472,73
32977,43127,87
32978,43022,79
32979,29888,84
32980,43046,70
32981,1148,78
32982,42602,76
32983,44927,82
32984,507,79
32985,1649,92
32986,32672,70
32987,15005002,80
32988,1757,80
32989,43064,70
32990,37202,76
32991,507,77
32992,28553,70
32993,43442,88
32994,62568,77
32995,1281,95
32996,9933,98
32997,61773,78
32998,43022,86
32999,48722,78
33000,3637,80
33001,42917,85
33002,15013102,91
33003,43106,81
33004,74137,78
33005,4228,83
33006,43061,90
33007,42287,86
33008,35308,84
33009,43932,80
33010,42749,89
33011,21000000,97
33012,678,81
33013,42077,81
33014,45899,79
33015,3443,89
33016,13026684,79
33017,509,81
33018,90347,90
33019,48472,80
33020,42917,87
33021,4157,85
33022,35042,79
33023,33761,83
33024,44072,76
33025,44072,69
33026,1324,82
33027,54798,87
33028,3443,76
33029,2213,82
33030,7864,86
33031,1133,91
33032,42896,83
33033,53842,86
33034,721,86
33035,37127,85
33036,42077,76
33037,43232,85
33038,1461,88
33039,43547,77
33040,3443,88
33041,678,87
33042,44140,84
33043,1324,72
33044,42917,95
33045,678,78
33046,43022,95
33047,43169,87
33048,721,88
33049,45447,90
33050,43148,76
33051,730,88
33052,9947,94
33053,48722,78
33054,3443,85
33055,4047,83
33056,746,83
33057,24681,81
33058,57017,76
33059,52750,88
33060,801,86
33061,3443,76
33062,52637,79
33063,3443,88
33064,469,78
33065,37152,92
33066,1324,89
33067,1195,75
33068,41623,76
33069,41447,85
33070,3443,91
33071,43742,81
33072,64223,77
33073,43022,77
33074,172217,78
33075,3443,81
33076,21000000,85
33077,2213,78
33078,42077,79
33079,11002370,92
33080,43022,89
33081,3443,84
33082,1693,81
33083,43022,78
33084,601,83
33085,1324,70
33086,42677,75
33087,49952,73
33088,507,87
33089,8642,83
33090,525,75
33091,468692,80
33092,42077,82
33093,1918,87
33094,73622,87
33095,678,82
33096,28039,84
33097,15025522,85
33098,21000000,80
33099,21000000,68
33100,102557,82
33101,1669,74
33102,43198,88
33103,507,83
33104,21000000,85
33105,42077,86
33106,58247,77
33107,1556,74
33108,43547,85
33109,9628,83
33110,42297,75
33111,877,82
33112,42917,91
33113,42077,82
33114,47107,88
33115,43022,85
33116,42602,76
33117,43043,86
33118,43242,76
33119,76443,85
33120,639,84
33121,43022,72
33122,43054,84
33123,28196,86
33124,41342,85
33125,43022,81
33126,46102,84
33127,88797,84
33128,507,90
33129,42077,79
33130,3637,84
33131,41852,82
33132,43043,76
33133,55378,86
33134,40838,80
33135,42497,75
33136,57723,77
33137,2791,84
33138,37227,84
33139,848,80
33140,59658,82
33141,43022,82
33142,3443,81
33143,3443,85
33144,3443,89
33145,1053,82
33146,43022,82
33147,678,79
33148,507,84
33149,814,83
33150,41237,71
33151,43022,84
33152,964,75
33153,43162,79
33154,51653,91
33155,61413,87
33156,15000288,92
33157,43022,76
33158,57723,89
33159,43022,83
33160,507,88
33161,42393,91
33162,2163,83
33163,60468,80
33164,39662,82
33165,58261,83
33166,1717,83
33167,50639,81
33168,34472,88
33169,43022,78
33170,559,78
33171,9467,79
33172,43967,84
33173,15017122,89
33174,52472,97
33175,23041,70
33176,2213,80
33177,42602,82
33178,38942,75
33179,1133,81
33180,43022,83
33181,43022,81
33182,29998,82
33183,52292,84
33184,6507,79
33185,2093,89
33186,92492,85
33187,3885,86
33188,3443,81
33189,48722,92
33190,100667,90
33191,678,80
33192,1663,77
33193,48692,78
33194,43022,78
33195,43022,70
33196,1448,72
33197,42917,84
33198,43022,87
33199,1612,91
33200,42917,86
33201,42392,79
33202,5002208,79
33203,56522,88
33204,94547,78
33205,42959,77
33206,43022,87
33207,43120,76
33208,86627,86
33209,44112,82
33210,10037587,86
33211,451,79
33212,4252,90
33213,721,85
33214,999,77
33215,507,93
33216,9712,75
33217,33761,82
33218,21000000,77
33219,49772,82
33220,3941,84
33221,873,90
33222,507,77
33223,42959,89
33224,21000000,69
33225,3443,81
33226,43652,85
33227,42917,79
33228,43022,82
33229,41132,86
33230,42917,75
33231,1033,75
33232,43022,86
33233,42602,84
33234,43022,84
33235,56998,81
33236,43252,83
33237,2548,81
33238,43022,86
33239,502,85
33240,2707,78
33241,44072,85
33242,507,79
33243,22022,79
33244,21000000,87
33245,43022,81
33246,1393,78
33247,58247,81
33248,43022,85
33249,42917,82
33250,723,87
33251,507,84
33252,1006,88
33253,56998,79
33254,3443,84
33255,42077,82
33256,999,83
33257,48467,72
33258,43022,78
33259,43022,83
33260,43022,86
33261,38297,88
33262,36332,82
33263,43547,89
33264,43232,74
33265,43817,83
33266,28217,86
33267,85817,80
33268,36827,78
33269,1730,82
33270,48272,82
33271,42527,80
33272,42938,82
33273,3443,78
33274,1918,86
33275,678,86
33276,43042,83
33277,7242,75
33278,37307,87
33279,74432,84
33280,43547,83
33281,3443,78
33282,16000215,82
33283,3443,83
33284,42077,82
33285,21000000,84
33286,34216,81
33287,15000848,86
33288,15003247,80
33289,42938,81
33290,933,78
33291,647,81
33292,48272,94
33293,34932,76
33294,85442,73
33295,41907,87
33296,42917,98
33297,43022,85
33298,3443,87
33299,50162,74
33300,1688,93
33301,38822,84
33302,43022,81
33303,43022,76
33304,1878,87
33305,64616,72
33306,33797,81
33307,21000000,80
33308,53552,88
33309,45547,80
33310,723,82
# After 16400 updates
# 451: "x ≤ x x / x + -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x x T greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x 0 -2 x 6 < x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x -8 -3 x x < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T 7 ungreedy depth x x x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 F F be 0 -2 ∧ -1 0 x x x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 / x x -3 x dec dec x x greedy + 0 if neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "> x 8 / x -3 > x x x x x + T pop neg copy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 ¬ inc F x x if x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F F if T < x depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 inc -5 / x x 8 x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 ∨ / x T x x be + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth x neg / T + -6 neg -3 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 ¬ -6 < 0 x 4 -8 dec 4 x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy F if T < greedy? depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 -9 depth / x - x -1 F ∧ x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec eql -2 x inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T -6 / greedy -3 F x F x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-7 -9 5 7 x - / -4 x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / x - x -1 x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x 5 x ≥ 6 greedy? x x x + F pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F F -6 x T 8 depth x F x greedy x + -8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc * -9 x x x x < + 9 pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth + if x x - x if x T F x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "- x x 3 ungreedy - x copy x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "+ x 5 copy * x be x x x ∨ x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x x / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x x x F T x x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x / x 1 / x x -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy > x x -2 ≤ x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 3 F x ≥ 9 -5 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x F + x x greedy? x swap T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy x greedy? -8 9 x / neg ∧ -5 x x + T T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * ∧ / F -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x ≤ inc F T copy x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 ∨ / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-4 -10 F x 0 F greedy x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x copy 1 greedy -3 ungreedy swap -2 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / greedy? - -5 if x T x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -3 x x F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 F dec 2 ∨ -2 x -1 0 9 x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql pop / inc F T x -6 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / ¬ - x ∧ x -5 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy depth -2 -10 greedy? inc if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-4 0 x < greedy F T x x neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "ungreedy x x 3 ungreedy * x copy x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 x eql 8 depth -1 x x x x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 559: "x 7 -2 / F F -6 x greedy? x x 5 + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 559: "-1 -3 x 7 ≥ ≥ x if 5 x if ∨ + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 636: "-1 if x -2 T x 2 1 + x x > + x pop neg ungreedy -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "- x x T greedy x x 1 -6 5 -4 x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "- F if T greedy x x -6 x < T swap x swap pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "x x -2 > T + -6 neg -2 + dec -7 x 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 8 dec 0 T 1 ∧ x neg T x copy + x x neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 877: "F -2 ¬ x greedy -3 -5 x 6 depth x > + x pop neg -5 -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1133: "-1 ∧ -6 < 0 x ungreedy -8 dec 4 x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * ¬ 5 *"
# 3443: "greedy? eql x x / x x dec dec x depth T inc - pop neg -6 -5 x ≥ -9 -10 F -5 * 9 * + 5 *"
# 3637: "-3 F if T greedy x x x > x 0 swap x 1 pop neg ungreedy -5 x ≥ -9 x if -5 * 9 * + 5 *"
# 3941: "-2 0 x 9 x 9 -9 dec x x greedy x + T pop neg -7 ungreedy x ≥ -9 -6 if -5 * 9 * + 5 *"
# 8008: "x 8 x - x dec 5 -2 x -10 -5 -4 + x pop neg -5 be x ≥ -9 -10 dec -5 * 9 * + 5 *"
# 42028: "> -9 depth / ≥ - x -1 x x x x + x pop neg F -5 -5 ≥ -9 -10 if T * 9 * + 5 *"
# 42917: "-1 2 -6 / greedy -3 F neg + x x x + -9 pop neg F -5 x ≥ -9 if if -5 * 9 * + 5 T"
# 42959: "-1 T x x 0 -2 ∧ x x x x copy + x pop neg ungreedy -10 x ≥ -9 -10 if dec > 8 dec dec inc 3"
33311,43001,71
33312,43001,73
33313,43022,71
33314,43106,69
33315,43085,70
33316,89147,75
33317,43547,74
33318,43085,69
33319,678,73
33320,11193,80
33321,43022,79
33322,2213,79
33323,3463,79
33324,43022,93
33325,47062,81
33326,104513,81
33327,1173,89
33328,42959,81
33329,51802,94
33330,507,87
33331,1705,79
33332,2263,78
33333,43022,76
33334,43442,79
33335,43022,71
33336,16013111,90
33337,45638,84
33338,51692,75
33339,43022,90
33340,54288,82
33341,44312,80
33342,678,76
33343,3738,85
33344,1038,93
33345,43337,76
33346,42238,89
33347,25172,79
33348,730,68
33349,43106,77
33350,678,91
33351,507,86
33352,42692,82
33353,8953,78
33354,507,75
33355,64705,79
33356,1133,86
33357,44072,83
33358,68592,82
33359,41972,80
33360,76097,84
33361,43247,89
33362,43967,78
33363,43211,70
33364,1324,81
33365,3443,79
33366,48692,74
33367,43022,74
33368,4398,87
33369,51653,86
33370,17717,77
33371,19000370,86
33372,42077,80
33373,2763,79
33374,35810,76
33375,43922,101
33376,1918,80
33377,43022,79
33378,469,82
33379,42077,79
33380,62972,78
33381,39242,82
33382,70202,86
33383,1815,80
33384,42917,81
33385,45437,75
33386,19162,79
33387,26192,83
33388,639,86
33389,3443,88
33390,43106,79
33391,43118,73
33392,507,76
33393,42959,77
33394,52667,73
33395,37202,76
33396,1918,82
33397,1324,84
33398,1197,77
33399,801,89
33400,100772,80
33401,42917,88
33402,44072,78
33403,54142,80
33404,1065,85
33405,68332,96
33406,591,78
33407,11198,78
33408,42077,83
33409,69078,88
33410,507,81
33411,43127,81
33412,47747,84
33413,41657,89
33414,42917,87
33415,1346,81
33416,2213,81
33417,73983,83
33418,17534,84
33419,43043,84
33420,507,81
33421,43022,79
33422,43547,83
33423,999,92
33424,40712,79
33425,931,79
33426,3443,81
33427,42917,81
33428,40097,79
33429,43022,72
33430,3443,83
33431,56998,77
33432,17833,85
33433,12307,84
33434,43122,80
33435,37202,86
33436,44522,82
33437,43127,76
33438,3443,78
33439,1133,87
33440,43001,75
33441,42917,81
33442,43022,98
33443,56953,82
33444,733,86
33445,57883,78
33446,38867,77
33447,4252,92
33448,721,82
33449,95890,84
33450,43001,81
33451,38867,79
33452,821,90
33453,53417,75
33454,21000000,86
33455,79502,83
33456,898,76
33457,1343,90
33458,999,75
33459,43022,79
33460,42854,90
33461,54359,78
33462,6272,73
33463,4228,79
33464,42917,79
33465,44072,89
33466,507,78
33467,1038,93
33468,55548,75
33469,1117,77
33470,42917,87
33471,3443,85
33472,3443,82
33473,60508,90
33474,19362,89
33475,86667,77
33476,24848,85
33477,507,86
33478,43022,87
33479,801,72
33480,4193,90
33481,25067,77
33482,55998,82
33483,1324,81
33484,43193,83
33485,44072,90
33486,43442,78
33487,2213,92
33488,3443,82
33489,42679,82
33490,42917,77
33491,37582,76
33492,641,77
33493,12002163,81
33494,721,80
33495,58893,75
33496,43022,77
33497,24017,80
33498,507,87
33499,21000000,77
33500,41762,79
33501,1117,87
33502,1133,79
33503,678,78
33504,40163,73
33505,21000000,83
33506,21000000,82
33507,43001,71
33508,42868,78
33509,1519,88
33510,42392,75
33511,43022,81
33512,42077,82
33513,49588,88
33514,41083,82
33515,21000000,80
33516,44072,87
33517,43042,79
33518,47137,83
33519,41303,82
33520,4044217,75
33521,42917,80
33522,2213,90
33523,8001499,79
33524,1918,80
33525,1141,79
33526,17395,81
33527,3443,80
33528,43022,74
33529,3443,88
33530,793,80
33531,41642,88
33532,42077,78
33533,51737,83
33534,43022,97
33535,2763,79
33536,52437,82
33537,40712,80
33538,24178,81
33539,46382,79
33540,43772,90
33541,678,82
33542,43022,91
33543,42972,79
33544,639,77
33545,3443,82
33546,21000000,90
33547,2213,79
33548,3358,88
33549,43022,86
33550,21000000,84
33551,3443,81
33552,36957,80
33553,42917,70
33554,730,77
33555,41802,80
33556,43922,78
33557,36289,85
33558,40688,84
33559,678,87
33560,69752,81
33561,1738,85
33562,3547,95
33563,42917,83
33564,999,87
33565,929,77
33566,1117,84
33567,43022,79
33568,42917,81
33569,43064,78
33570,3466,85
33571,1631,80
33572,502,85
33573,507,79
33574,3443,77
33575,3657,75
33576,56998,77
33577,1198,87
33578,1173,85
33579,43697,92
33580,42497,81
33581,3443,84
33582,55473,79
33583,43022,83
33584,53042,89
33585,42872,84
33586,48892,77
33587,43022,82
33588,55473,84
33589,57260,79
33590,42077,84
33591,51527,88
33592,51416,77
33593,1232,79
33594,507,86
33595,41132,76
33596,4425,76
33597,42917,87
33598,43148,84
33599,7876,81
33600,1717,75
33601,30999,100
33602,43627,72
33603,42917,82
33604,6841,79
33605,42917,85
33606,2218,80
33607,507,80
33608,507,91
33609,24709,86
33610,183133,80
33611,93422,82
33612,44072,93
33613,51222,82
33614,1658,77
33615,10001073,74
33616,33523,80
33617,7876,76
33618,43022,80
33619,3443,80
33620,15013147,83
33621,43742,82
33622,964,83
33623,1391,81
33624,678,89
33625,43022,77
33626,43022,83
33627,1918,87
33628,1128,69
33629,24692,85
33630,33612,80
33631,43022,82
33632,502,87
33633,42917,81
33634,77192,88
33635,14408,75
33636,42917,86
33637,1133,101
33638,999,71
33639,41207,90
33640,42077,78
33641,507,81
33642,40097,86
33643,4283,74
33644,8001499,75
33645,86597,87
33646,43022,78
33647,43742,85
33648,507,86
33649,62912,82
33650,1324,75
33651,678,88
33652,730,80
33653,4398,81
33654,502,80
33655,678,84
33656,21000000,75
33657,43022,78
33658,29897,73
33659,42707,77
33660,42959,84
33661,43072,84
33662,48722,93
33663,1918,89
33664,33523,90
33665,48737,83
33666,47292,76
33667,2213,82
33668,502,81
33669,1324,79
33670,43022,81
33671,1593,86
33672,43085,82
33673,1133,83
33674,42122,75
33675,37227,90
33676,31089,95
33677,43022,80
33678,18467,79
33679,43232,83
33680,678,93
33681,11471,82
33682,43022,77
33683,43211,90
33684,41867,82
33685,678,69
33686,999,79
33687,37202,78
33688,35822,89
33689,63497,83
33690,34517,85
33691,50639,79
33692,44497,75
33693,28272,81
33694,3443,78
33695,8008,74
33696,71372,85
33697,43547,80
33698,2213,89
33699,919,84
33700,2213,102
33701,17183,87
33702,34151,81
33703,43043,80
33704,43397,87
33705,2515,84
33706,15000288,85
33707,2718,82
33708,931,81
33709,55998,78
33710,507,85
33711,1117,67
33712,39662,94
33713,26963,77
33714,451,87
33715,43862,86
# After 16600 updates
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ≤ x x / x + -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x x T greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec greedy? 0 x 8 7 x 4 T 9 x x + -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T 7 ungreedy depth x x x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x 0 -2 x 6 < x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x -8 -3 x x < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 F F be 0 -2 ∧ -1 0 x x x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy > x x -2 x 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x / x 1 / x x -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql pop x inc x 6 -4 dec x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec greedy? x x ∨ -2 x ≤ if x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 / x x -3 x dec dec x x greedy + 0 if neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / ¬ - x ∧ x -5 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy T x T T ≤ x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "∨ * -5 / -3 -10 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -10 x -6 x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "+ x 5 copy * x be x x x ∨ x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-4 0 x < greedy F T x x neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T F x 0 -2 ∧ x x x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / x - x -1 x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 ∨ / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 inc -5 / x x 8 x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F x x -6 x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 F eql 8 depth 8 x x F x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F F if T < x depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "6 3 F x ≥ 9 -5 ≥ dec x x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql pop / inc greedy 6 -4 x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T 2 F 2 inc eql x x x x greedy + -4 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 -9 depth / x - x -1 F ∧ x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy F if T < greedy? depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "0 x x 3 ungreedy * x copy x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x 5 x ≥ 6 greedy? x x x + F pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 ∨ / x T x x be + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x F -10 ¬ -6 x x ∧ + 0 pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy x greedy? -8 9 x / neg ∧ -5 x x + T T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 * F be 0 -2 F if x T x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 F T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-7 -9 5 7 x - / -4 x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 ¬ -6 < 0 x 4 -8 dec 4 x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 ¬ inc F x x if x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-4 -10 F x 0 F greedy x < x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x x / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x 1 ≥ greedy + -6 x greedy? x x T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / T + -6 neg greedy? x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x copy 1 greedy -3 ungreedy swap -2 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "depth x neg / T + -6 neg -3 x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F F -6 x T 8 depth x F x greedy x + -8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T -6 / greedy -3 F x F x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy depth -2 -10 greedy? inc if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x ≤ inc F T copy x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 1 x F + x x greedy? x swap T + x pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 559: "x 7 -2 / F F -6 x greedy? x x 5 + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 559: "-1 -3 x 7 ≥ ≥ x if 5 x if ∨ + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "-1 x - -2 T x 2 1 + x x > + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 591: "x x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -4 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "- F if T greedy x x -6 x < T swap x swap pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "greedy? / x x / x x dec dec x < T inc ¬ pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "- x x T greedy x x 1 -6 5 -4 x inc x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "x 7 -2 / T + -6 neg -2 + dec -7 T 1 x neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x + 2 + 9 -8 -10 6 -7 -7 x T x 1 / neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1128: "> T < < 0 -2 ∧ x x x x x F x if neg 3 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1918: "x x -5 greedy? x x F neg ≥ x x x + copy pop neg ungreedy F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 3443: "x x x - x dec copy -2 x -10 -5 x + 0 pop neg -5 x x ≥ -9 -10 if -5 * 9 * + 5 *"
# 4283: "-1 be x / x pop x x x x dec -7 x 1 pop dec x -5 x ≥ -9 x if -5 * 9 * + 5 *"
# 42959: "x 8 x - x dec ∧ -2 x -10 -5 -4 + x pop neg -6 be x ≥ -9 -10 dec -5 * 8 dec dec inc 3"
# 43001: "swap 5 6 x x x 7 x 1 * 7 - -8 F x dec x T dec -1 x -9 2 x * x 0 inc x +"
33716,43127,74
33717,43148,77
33718,43148,75
33719,43022,69
33720,43001,75
33721,12848,91
33722,41342,84
33723,746,83
33724,15009322,81
33725,42917,91
33726,59007,82
33727,45425,78
33728,42044,83
33729,42854,82
33730,507,73
33731,15012747,83
33732,58142,89
33733,1396,72
33734,721,80
33735,4888,89
33736,1082,88
33737,17303,84
33738,44072,77
33739,38634,83
33740,43022,81
33741,43190,89
33742,42287,84
33743,43922,71
33744,43022,84
33745,721,85
33746,2208,82
33747,80973,86
33748,1324,73
33749,3782,75
33750,43022,83
33751,43547,89
33752,44072,82
33753,78468,74
33754,42347,79
33755,507,86
33756,42497,83
33757,721,81
33758,1765,79
33759,43022,77
33760,43922,86
33761,53492,84
33762,1393,85
33763,55908,98
33764,3477,69
33765,3918,81
33766,451,84
33767,1133,79
33768,41072,83
33769,43547,80
33770,34472,87
33771,507,84
33772,36932,90
33773,41657,69
33774,43127,83
33775,44492,81
33776,61472,82
33777,3443,82
33778,678,89
33779,59718,91
33780,21000000,73
33781,42077,81
33782,42077,85
33783,1324,89
33784,507,80
33785,45347,83
33786,43022,79
33787,1757,79
33788,678,76
33789,3443,77
33790,43022,78
33791,44478,86
33792,73922,78
33793,31011,85
33794,1832,72
33795,43022,74
33796,43148,73
33797,60468,80
33798,507,82
33799,507,87
33800,507,87
33801,43022,81
33802,43127,87
33803,3443,89
33804,451,78
33805,43127,82
33806,43862,78
33807,49308,83
33808,86597,81
33809,507,87
33810,3466,74
33811,768,90
33812,999,74
33813,48707,89
33814,42077,74
33815,1253,71
33816,678,83
33817,43022,72
33818,43001,91
33819,2213,85
33820,1614,81
33821,44072,80
33822,1649,74
33823,1391,71
33824,3443,88
33825,639,98
33826,43022,72
33827,44302,85
33828,73947,85
33829,999,92
33830,10997,79
33831,35042,78
33832,2213,83
33833,42602,77
33834,1133,86
33835,28952,98
33836,106589,80
33837,507,84
33838,42917,81
33839,2471,76
33840,40688,81
33841,1324,86
33842,48047,81
33843,103334,86
33844,42077,87
33845,678,82
33846,58273,92
33847,44072,73
33848,40273,83
33849,46277,89
33850,21000000,78
33851,42959,88
33852,43022,73
33853,57723,83
33854,1324,73
33855,999,83
33856,107066,86
33857,43022,84
33858,20572,84
33859,7217,79
33860,42875,87
33861,502,88
33862,1903,77
33863,37202,92
33864,38837,88
33865,42959,94
33866,43022,80
33867,44072,76
33868,43022,81
33869,3872,78
33870,43127,79
33871,42077,88
33872,1662,73
33873,40838,84
33874,502,84
33875,678,85
33876,24077,87
33877,38192,79
33878,64237,97
33879,42917,80
33880,1672,73
33881,22276,83
33882,1133,74
33883,678,86
33884,44072,81
33885,43127,93
33886,507,82
33887,91817,73
33888,43022,84
33889,1324,77
33890,507,81
33891,1803,72
33892,1133,79
33893,1151,68
33894,507,97
33895,43547,69
33896,223662,77
33897,43067,85
33898,60468,78
33899,42252,70
33900,34271,85
33901,104792,80
33902,151447,77
33903,3033,69
33904,1573,83
33905,26458,74
33906,55518,87
33907,8764,84
33908,44072,83
33909,479,79
33910,29897,84
33911,76097,82
33912,43022,85
33913,639,76
33914,3466,78
33915,34496,74
33916,6272,81
33917,37227,84
33918,43127,83
33919,48722,82
33920,6272,75
33921,48722,84
33922,43832,80
33923,723,89
33924,43001,83
33925,58261,85
33926,43127,86
33927,43547,81
33928,41642,70
33929,42812,75
33930,43037,79
33931,47902,71
33932,1663,87
33933,507,88
33934,42917,80
33935,507,78
33936,711,92
33937,3443,78
33938,42077,75
33939,21000000,90
33940,3443,71
33941,3898,87
33942,8354,78
33943,42527,79
33944,76142,79
33945,507,83
33946,1918,77
33947,42896,81
33948,777,80
33949,866,74
33950,507,79
33951,40838,75
33952,3443,86
33953,3443,82
33954,1324,74
33955,21000000,88
33956,43001,88
33957,3443,88
33958,3443,74
33959,39077,76
33960,1289,84
33961,43232,79
33962,48722,86
33963,43232,93
33964,43022,80
33965,15000288,87
33966,18018593,85
33967,43022,66
33968,4228,81
33969,42812,81
33970,42764,85
33971,1226,84
33972,45308,78
33973,21658,70
33974,43547,95
33975,1289,77
33976,507,87
33977,993,72
33978,43022,84
33979,1324,84
33980,27739,91
33981,1519,81
33982,43148,76
33983,43022,80
33984,2213,76
33985,4398,98
33986,56088,74
33987,678,85
33988,507,86
33989,122222,90
33990,5039424,77
33991,36512,97
33992,42959,91
33993,41972,79
33994,507,87
33995,678,77
33996,134967,84
33997,44857,98
33998,873,81
33999,42896,89
34000,2213,76
34001,44072,88
34002,36092,88
34003,42077,78
34004,44072,84
34005,43442,86
34006,45237,78
34007,507,70
34008,43022,84
34009,42572,84
34010,42077,82
34011,3443,83
34012,21000000,89
34013,1614,76
34014,42287,89
34015,1643,70
34016,3443,79
34017,21000000,83
34018,42854,78
34019,15000288,86
34020,42077,78
34021,678,83
34022,958,86
34023,507,87
34024,55908,85
34025,41306,84
34026,5051418,81
34027,507,85
34028,56342,85
34029,42917,81
34030,678,86
34031,42812,84
34032,2358,81
34033,43442,93
34034,8018267,86
34035,16925,75
34036,999,82
34037,42917,72
34038,43817,94
34039,3598,82
34040,4252,80
34041,507,79
34042,1324,83
34043,53207,90
34044,42077,83
34045,43022,78
34046,76658,84
34047,837,86
34048,37202,91
34049,507,82
34050,3443,91
34051,502,82
34052,42917,85
34053,2743,88
34054,42917,86
34055,4002455,77
34056,42896,82
34057,43772,76
34058,507,85
34059,43127,83
34060,1649,77
34061,1324,83
34062,42842,81
34063,7108,81
34064,46382,81
34065,42875,79
34066,41342,95
34067,38942,88
34068,47812,85
34069,3443,91
34070,34517,82
34071,27472,80
34072,56998,73
34073,49602,77
34074,76097,87
34075,42917,81
34076,42812,86
34077,44072,75
34078,53862,85
34079,47793,86
34080,57723,77
34081,48797,87
34082,41657,70
34083,43922,89
34084,42896,88
34085,69602,75
34086,3443,71
34087,24517,77
34088,10037,85
34089,10025817,96
34090,77147,93
34091,43022,76
34092,40988,83
34093,757,71
34094,42917,73
34095,3443,85
34096,42287,91
34097,9947,78
34098,48272,80
34099,63322,82
34100,3443,88
34101,42542,79
34102,42182,80
34103,3443,79
34104,1083,84
34105,46966,89
34106,42077,84
34107,51527,88
34108,40533,82
34109,507,77
34110,678,81
34111,42602,81
34112,4228,88
34113,3443,87
34114,1324,73
34115,3443,80
34116,112253,70
34117,3443,78
34118,43022,98
34119,507,80
34120,10997,71
# After 16800 updates
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x x T greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ≤ x x / x + -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "-1 F F x 0 x -4 -1 0 x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T 7 ungreedy depth x x x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x 0 -2 x 6 < x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy > x x -2 x 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x ¬ -3 x eql < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x -8 -3 x x < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec greedy? 0 x 8 7 x 4 T 9 x x + -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x copy 1 greedy -3 ungreedy swap -2 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -5 / -3 -10 -5 / x x x ¬ + depth pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy greedy x x -8 -2 + 6 < x F x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -4 -5 T < greedy? inc 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-7 -9 5 7 x - / -4 x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T -6 / greedy -3 F x F x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if x -5 x x x x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F x x T < x depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? be x neg -6 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 inc -5 / x x 8 x x T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy depth -2 -10 greedy? T if dec x 3 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 ∨ / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F x x -6 x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy depth -2 -10 greedy? inc if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / x - x if x T x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "∨ * x / -3 -3 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 F eql 8 depth 8 x x F x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 F ∨ 2 x inc T x x + 9 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc 7 8 ∨ / x ungreedy x x be + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 6 T x x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-4 0 x < greedy F T x x neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 -9 depth / x - x -1 F ∧ x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "9 ≥ -1 x if 1 -5 x x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 ¬ -6 < 0 x 4 -8 dec 4 x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 / x x -3 x dec dec x x greedy + 0 if neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec greedy? x x ∨ -2 x ≤ if x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "+ x 5 copy * x be x x x ∨ x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "0 x x 3 ungreedy * x copy x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x F -10 ¬ -6 x x ∧ + 0 pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x / 6 1 / x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy T x T T ≤ x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 ¬ inc F x x if x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql pop x inc x 6 -4 dec x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T -6 x if 8 depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x ≤ inc F T copy x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 F T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql pop / inc greedy 6 -4 x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / ¬ - x ∧ x -5 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F x ungreedy ≥ x + -6 x greedy? x x T + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "∨ * -5 / -3 -10 -5 x -3 x x F + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "ungreedy x inc 7 x - x x x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 T x x -3 x dec dec x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x x greedy? be x neg -6 x T x ∧ + x pop neg greedy? -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 1 -10 x 5 x ≥ 6 greedy? x x x + F pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 559: "-1 -3 x 7 ≥ ≥ x if 5 x if ∨ + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 639: "-1 -3 T 7 ungreedy depth F x x x inc be greedy? x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "-1 * greedy? 2 0 x x if x T eql ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "T x 7 -8 F ∨ 2 x inc T F x be copy pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1133: "-1 -3 x 7 ≥ ≥ x if x greedy? if ∨ + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * T 5 *"
# 1519: "x x x -3 inc 6 - - x dec x + x x -10 neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 3443: "-2 1 -10 x 5 x - 6 greedy? x x x + F pop neg -5 x x ≥ -9 -10 if -5 * 9 * + 5 *"
# 4228: "F / T -2 inc x -9 3 dec - x x + x pop neg ungreedy -5 x ≥ T -10 if -5 * 9 * + 5 *"
# 41657: "F T -7 x / x - x -1 x 9 x x 2 eql x -8 -7 x ≥ -9 -10 if -5 * 9 4 + 5 *"
34121,43022,74
34122,43022,68
34123,43022,72
34124,42938,70
34125,42959,71
34126,3988,86
34127,58334,88
34128,42917,93
34129,46487,94
34130,3443,96
34131,42347,87
34132,1743,83
34133,96890,85
34134,1408,77
34135,62592,88
34136,3358,90
34137,2213,86
34138,37202,88
34139,1083,86
34140,1757,85
34141,58034,86
34142,36394,86
34143,678,79
34144,29017,82
34145,56088,75
34146,27057,84
34147,721,75
34148,50973,85
34149,3466,82
34150,3443,79
34151,89852,80
34152,44072,78
34153,1281,87
34154,43022,86
34155,55248,74
34156,14593,86
34157,42287,85
34158,3443,78
34159,42922,82
34160,42875,90
34161,507,73
34162,43043,96
34163,9842,75
34164,43967,79
34165,43022,79
34166,3443,84
34167,43022,78
34168,507,79
34169,43022,83
34170,39647,80
34171,1128,79
34172,28444,77
34173,42812,86
34174,43022,86
34175,37148,69
34176,42077,85
34177,43022,83
34178,8953,80
34179,29792,81
34180,463290,76
34181,507,92
34182,507,87
34183,48722,81
34184,2791,82
34185,58261,83
34186,35987,79
34187,43967,85
34188,42917,87
34189,13258,95
34190,2213,78
34191,4252,78
34192,2263,97
34193,38642,86
34194,85757,95
34195,43992,76
34196,1255,77
34197,85652,82
34198,39977,78
34199,28847,77
34200,53867,79
34201,42896,88
34202,88022,89
34203,38797,86
34204,43022,81
34205,3443,81
34206,8567,73
34207,721,87
34208,3443,92
34209,44747,77
34210,21000000,86
34211,42917,88
34212,43127,83
34213,100667,78
34214,41662,85
34215,42917,82
34216,51797,85
34217,126182,79
34218,1117,78
34219,42917,80
34220,43022,83
34221,2213,69
34222,42077,72
34223,551,91
34224,2588,98
34225,42917,74
34226,34963,75
34227,2208,90
34228,50639,81
34229,58247,80
34230,43022,81
34231,11180,91
34232,36722,89
34233,1212,74
34234,507,80
34235,1672,83
34236,3313,84
34237,2213,74
34238,678,82
34239,38147,77
34240,43232,74
34241,42938,79
34242,89642,81
34243,793,80
34244,469,84
34245,47897,99
34246,42917,83
34247,61820,94
34248,42959,83
34249,848,84
34250,43022,84
34251,42917,94
34252,507,86
34253,27739,87
34254,43027,95
34255,33572,69
34256,37302,93
34257,4087,77
34258,43022,90
34259,58389,78
34260,43022,97
34261,40702,86
34262,226412,73
34263,53492,83
34264,43001,70
34265,43022,87
34266,83846,86
34267,43042,86
34268,343293,87
34269,38357,83
34270,56088,72
34271,21000000,89
34272,51198,82
34273,42347,79
34274,35327,91
34275,79502,83
34276,3402273,87
34277,43043,81
34278,42977,85
34279,43022,81
34280,5140,81
34281,72422,76
34282,31708,78
34283,43547,83
34284,36932,78
34285,44072,78
34286,1614,81
34287,3657,87
34288,51392,90
34289,4252,86
34290,45308,81
34291,559,83
34292,1758,80
34293,43022,81
34294,54798,77
34295,39812,80
34296,4963,85
34297,28950,88
34298,43022,81
34299,1281,79
34300,6272,75
34301,1140,85
34302,43211,88
34303,14741,76
34304,43022,74
34305,36152,91
34306,835,83
34307,58734,82
34308,3695,84
34309,15012574,83
34310,3443,85
34311,43022,78
34312,4041079,85
34313,2263,84
34314,507,89
34315,80665,85
34316,43547,83
34317,43022,86
34318,3443,86
34319,19683,83
34320,43072,73
34321,44072,80
34322,17689,84
34323,3443,87
34324,42911,83
34325,678,96
34326,43547,92
34327,3443,95
34328,502,78
34329,3443,81
34330,43757,91
34331,85442,94
34332,43232,85
34333,43547,88
34334,38449,81
34335,34301,80
34336,55968,86
34337,3443,78
34338,1324,71
34339,47447,80
34340,1133,78
34341,1519,85
34342,4782,91
34343,38327,79
34344,37148,82
34345,43190,83
34346,964,82
34347,85097,82
34348,1848,73
34349,41647,89
34350,57858,85
34351,8362,84
34352,42887,85
34353,52905,77
34354,75563,83
34355,1133,84
34356,1063,81
34357,1649,80
34358,49217,97
34359,42437,77
34360,43082,74
34361,47802,91
34362,1324,84
34363,507,78
34364,3443,87
34365,1083,89
34366,37202,88
34367,3443,89
34368,2691,69
34369,730,80
34370,58261,76
34371,1128,77
34372,43232,89
34373,507,79
34374,43547,80
34375,4398,84
34376,4062,83
34377,38552,90
34378,8797,84
34379,1133,82
34380,721,72
34381,1556,85
34382,42959,83
34383,55473,79
34384,21000000,77
34385,43001,72
34386,3536,78
34387,2218,85
34388,23824,75
34389,42917,80
34390,43022,74
34391,42392,86
34392,2048,86
34393,873,73
34394,42707,85
34395,46817,92
34396,21000000,85
34397,52577,80
34398,57914,88
34399,2553,82
34400,60338,86
34401,3168,90
34402,1391,86
34403,1662,87
34404,3477,79
34405,43127,85
34406,4228,85
34407,11000880,83
34408,507,79
34409,32727,87
34410,2363,72
34411,43001,83
34412,21000000,84
34413,1083,73
34414,507,82
34415,42938,86
34416,58261,91
34417,43085,85
34418,42077,82
34419,43457,85
34420,50428,84
34421,3443,81
34422,43547,77
34423,38147,79
34424,9321,86
34425,48797,76
34426,104417,74
34427,55248,78
34428,43157,79
34429,42896,82
34430,3443,92
34431,752,78
34432,42077,80
34433,44072,82
34434,48797,81
34435,43043,78
34436,42077,86
34437,43317,81
34438,31682,69
34439,1687,82
34440,42602,76
34441,76113,81
34442,835,77
34443,37202,81
34444,21000000,93
34445,41867,83
34446,3443,92
34447,38492,93
34448,707,87
34449,57581,96
34450,40838,83
34451,1663,82
34452,42077,92
34453,36548,78
34454,42077,97
34455,2213,87
34456,42707,92
34457,43022,86
34458,49217,87
34459,507,86
34460,721,86
34461,1441,82
34462,40772,79
34463,1133,74
34464,42287,80
34465,3443,75
34466,34286,85
34467,2213,85
34468,43022,78
34469,44492,80
34470,36407,73
34471,46802,75
34472,2003,88
34473,42182,80
34474,43547,84
34475,507,76
34476,3443,74
34477,1713,79
34478,102662,88
34479,507,80
34480,44072,83
34481,44072,72
34482,43127,80
34483,42140,77
34484,39092,89
34485,36827,88
34486,38822,90
34487,43022,82
34488,43022,80
34489,469,83
34490,81767,74
34491,73625,88
34492,1324,70
34493,2213,94
34494,40443,89
34495,3882,72
34496,43169,83
34497,507,75
34498,70532,78
34499,27484,86
34500,91217,84
34501,43022,73
34502,73903,86
34503,3443,84
34504,41722,82
34505,723,82
34506,44072,76
34507,15722,80
34508,42917,95
34509,44072,81
34510,3443,85
34511,55703,71
34512,54625,83
34513,43232,87
34514,109012,82
34515,4398,76
34516,43742,86
34517,3443,74
34518,924,83
34519,42917,89
34520,507,85
34521,4313,74
34522,43997,87
34523,38633,72
34524,42602,85
34525,1867,92
# After 17000 updates
# 451: "-1 x x T greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ≤ x x / x + -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 greedy? / x - x -1 x x x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 F - x pop x x x x + copy pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "-1 F F x 0 x -4 -1 0 x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy > x x -2 x 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x ¬ -3 x eql < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x -8 -3 x x < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec greedy? 0 x 8 7 x 4 T 9 x x + -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 F x < x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x 0 -2 x 6 < x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T 7 ungreedy depth x x x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg T x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be F ≥ 0 -2 ∧ x neg x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x ≤ inc F T copy x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 swap x if 1 -5 x F x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-7 -9 5 7 x - / -4 x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy depth -2 -10 greedy? inc if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F x x T < x depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -4 -5 T < greedy? inc 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< x copy 1 greedy -3 ungreedy swap -2 x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 6 T x x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x T ∧ 8 ∨ / x T x ¬ x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 greedy pop x ≤ x ∧ -4 dec x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x ≥ -1 x if x -5 T x greedy x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 ∨ / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 F eql 8 depth 8 x x F x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap greedy? neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? be x neg -6 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / ¬ - x ∧ x -5 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec greedy? x x ∨ -2 x ≤ if x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "∨ * x / -3 -3 -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -5 / -3 -10 -5 / x x x ¬ + depth pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy T x T T ≤ x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 ¬ inc F x x if x x greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 -9 depth / x -7 x neg F ∧ x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 T x x -3 if T x T x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy F x x if -2 F x greedy? x F T + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -3 -2 0 inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 / x x -3 x dec dec x x greedy + 0 if neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 x pop / x greedy 6 -4 x x greedy x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T -6 / greedy -3 F x F x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 F T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy greedy x x -8 -2 + 6 < x F x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 ¬ -6 -9 0 x 4 neg dec x x x + copy pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 T x x -3 x dec dec x x greedy + copy pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F x x -6 x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x / 6 1 / x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc 7 8 ∨ / x ungreedy x x be + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "∨ * -5 / -3 -10 -5 x -3 x x F + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 T if x -3 x copy x x x x x x + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "ungreedy x inc 7 x - x x x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-4 0 x < greedy F T x x neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql pop / inc greedy 6 -4 x x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 551: "greedy T -7 x / x x -9 dec 4 x greedy? + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 1083: "3 -9 x / x -2 x 6 < x inc x + x pop neg 2 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1133: "x x 0 x 8 if x 4 T 9 x x pop -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * copy 5 *"
# 1133: "-1 -3 x 7 ≥ ≥ x if x greedy? if ∨ + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * T 5 *"
# 1212: "¬ greedy x x 0 F x 6 < x x x + F -2 neg -5 -1 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1687: "x ∧ F / greedy? - x x x x x x / x pop neg ungreedy -8 x 2 -9 -10 if -5 * 9 * + 5 *"
# 1713: "x ∧ x / greedy? x -1 x inc T x / dec 4 x x - + x ≥ -9 greedy? if -5 * 9 * + 5 *"
# 9842: "x -8 / x / + x * x inc inc -6 / x copy x - x inc -7 3 dec if -5 * 9 * + 5 *"
# 36548: "be greedy F x 0 -2 x x < x inc if + greedy 8 -8 -4 x x 4 -2 x - -5 * 9 * + 5 *"
34526,43127,77
34527,43022,80
34528,42980,76
34529,42896,69
34530,43022,73
34531,57872,74
34532,43547,84
34533,3443,85
34534,43022,89
34535,40467,70
34536,54242,88
34537,21000000,79
34538,1083,71
34539,10001073,84
34540,2213,89
34541,54648,82
34542,1343,82
34543,55518,83
34544,43442,84
34545,42077,81
34546,48692,77
34547,50448,82
34548,8462,90
34549,43127,83
34550,1124,84
34551,42896,70
34552,678,80
34553,8008,83
34554,1649,76
34555,29597,83
34556,38425,89
34557,507,83
34558,1662,84
34559,3068,88
34560,999,82
34561,475,91
34562,42707,92
34563,43022,79
34564,43022,81
34565,3443,88
34566,49097,83
34567,3637,97
34568,3643,80
34569,87692,88
34570,1173,70
34571,43547,90
34572,43022,76
34573,31066,86
34574,44072,85
34575,42077,84
34576,39142,90
34577,1133,72
34578,60468,94
34579,48212,91
34580,3443,82
34581,43022,78
34582,43127,80
34583,42497,93
34584,2223,75
34585,43145,86
34586,793,78
34587,48482,73
34588,33866,81
34589,730,87
34590,77883,77
34591,73433,77
34592,86797,84
34593,4252,79
34594,43022,85
34595,43022,75
34596,56878,80
34597,42902,85
34598,1324,81
34599,106242,83
34600,4398,88
34601,43311,84
34602,42977,83
34603,929,84
34604,43022,74
34605,41672,86
34606,43043,81
34607,41237,86
34608,814,78
34609,43022,86
34610,43547,79
34611,43547,75
34612,45932,88
34613,33158,95
34614,43817,85
34615,43022,89
34616,50183,90
34617,56570,78
34618,2588,87
34619,21000000,80
34620,678,80
34621,43022,80
34622,40913,80
34623,17192,81
34624,1195,81
34625,43148,86
34626,1173,91
34627,12018,83
34628,33767,85
34629,43022,87
34630,49742,82
34631,21038,92
34632,39767,76
34633,48272,81
34634,15021472,85
34635,26012,76
34636,507,79
34637,12601,86
34638,42917,91
34639,42980,86
34640,43022,75
34641,507,81
34642,111950,82
34643,42497,81
34644,2213,85
34645,507,73
34646,40838,98
34647,43211,81
34648,47112,79
34649,55497,78
34650,451,81
34651,48722,82
34652,38192,87
34653,1454,77
34654,44072,87
34655,21000000,77
34656,2543,95
34657,43547,90
34658,29897,84
34659,43022,76
34660,40817,79
34661,61397,85
34662,1117,83
34663,48797,90
34664,15011423,73
34665,43022,81
34666,3443,75
34667,44157,88
34668,58593,80
34669,678,80
34670,57293,80
34671,41027,85
34672,41818,78
34673,18000089,98
34674,507,78
34675,45057,79
34676,44667,79
34677,96402,85
34678,63322,85
34679,678,80
34680,43547,83
34681,43547,88
34682,3603,77
34683,40817,76
34684,3588,77
34685,678,78
34686,57258,83
34687,62103,94
34688,40817,85
34689,53922,81
34690,528,87
34691,1991,86
34692,37997,79
34693,61367,79
34694,3443,74
34695,25172,83
34696,507,86
34697,97177,77
34698,451,92
34699,3443,87
34700,3443,81
34701,42917,92
34702,42917,86
34703,57497,78
34704,43067,80
34705,1693,75
34706,502,90
34707,21000000,88
34708,43022,82
34709,1133,78
34710,14672,81
34711,27162,82
34712,507,75
34713,42602,85
34714,507,81
34715,16010720,85
34716,43127,90
34717,42917,85
34718,1368,96
34719,1923,83
34720,678,80
34721,96422,82
34722,14502,84
34723,43022,79
34724,43022,82
34725,647,86
34726,10001073,86
34727,46802,75
34728,42182,78
34729,47117,78
34730,4228,87
34731,1868,77
34732,43757,86
34733,34097,73
34734,9002,76
34735,44072,85
34736,42875,77
34737,21000000,78
34738,77147,91
34739,42917,75
34740,27512,90
34741,44072,81
34742,1687,81
34743,14083,82
34744,469,80
34745,31218,78
34746,11000880,85
34747,44072,84
34748,1653,86
34749,40558,81
34750,57203,91
34751,15568,90
34752,43022,72
34753,15013102,84
34754,56868,75
34755,3466,75
34756,721,77
34757,40838,93
34758,639,76
34759,42938,83
34760,7632,77
34761,3466,83
34762,18464,83
34763,43022,80
34764,848,79
34765,56998,77
34766,43085,83
34767,43106,80
34768,71118,78
34769,52052,77
34770,31066,84
34771,3443,86
34772,999,81
34773,43022,83
34774,43547,75
34775,43106,89
34776,61922,75
34777,42917,81
34778,3443,83
34779,15022978,100
34780,42917,90
34781,48797,87
34782,21000000,72
34783,60468,71
34784,43022,78
34785,65897,78
34786,43022,80
34787,829,81
34788,21038,83
34789,37202,80
34790,47147,80
34791,55077,89
34792,1253,82
34793,43001,85
34794,3443,82
34795,1649,88
34796,873,88
34797,76322,72
34798,42917,79
34799,3443,90
34800,42441,78
34801,51222,87
34802,42980,83
34803,43017,90
34804,1035,87
34805,15000288,83
34806,3907,92
34807,451,85
34808,59838,80
34809,15000288,81
34810,2213,87
34811,801,82
34812,42707,80
34813,999,80
34814,721,82
34815,42917,85
34816,37352,81
34817,43022,84
34818,43547,88
34819,502,76
34820,2213,74
34821,44562,81
34822,43022,84
34823,42917,70
34824,51222,84
34825,42980,83
34826,38717,83
34827,36997,84
34828,42787,86
34829,678,88
34830,2918,70
34831,1226,82
34832,1324,86
34833,89813,83
34834,62972,94
34835,43067,82
34836,47432,78
34837,1108,93
34838,469,81
34839,42252,77
34840,507,87
34841,3443,88
34842,999,95
34843,43317,84
34844,96390,83
34845,43067,90
34846,507,78
34847,507,86
34848,42077,81
34849,38147,86
34850,43022,87
34851,48272,88
34852,43022,83
34853,50162,90
34854,3443,91
34855,4715,75
34856,43022,80
34857,42392,79
34858,1059,81
34859,48707,83
34860,15000288,81
34861,1128,80
34862,60554,92
34863,21000000,90
34864,47747,79
34865,8067,83
34866,3443,74
34867,3443,75
34868,1879,93
34869,43022,80
34870,56570,83
34871,1133,85
34872,56657,81
34873,43022,74
34874,1883,82
34875,36857,85
34876,3443,80
34877,41522,93
34878,507,87
34879,1124,78
34880,43022,101
34881,507,85
34882,42896,85
34883,42137,84
34884,3512999,82
34885,118802,87
34886,678,84
34887,528,76
34888,42077,80
34889,507,82
34890,45162,75
34891,647,93
34892,479,78
34893,43547,84
34894,51818,89
34895,37202,80
34896,15033127,85
34897,48722,83
34898,1649,77
34899,43547,99
34900,48722,84
34901,1454,71
34902,3443,100
34903,3443,79
34904,15013177,86
34905,10000479,75
34906,507,86
34907,42780,82
34908,43022,83
34909,67942,83
34910,21000000,87
34911,42647,92
34912,35987,87
34913,1614,84
34914,1124,79
34915,15012574,85
34916,2213,86
34917,47327,75
34918,451,86
34919,127337,72
34920,42809,87
34921,42917,86
34922,123308,86
34923,507,91
34924,44072,77
34925,507,79
34926,45243,78
34927,26642,87
34928,70167,83
34929,44072,80
34930,3443,93
# After 17200 updates
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x x T greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 ≤ x ∨ / -6 x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 swap greedy ≥ greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 F - x pop x x x x + copy pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 greedy? / x - x -1 x x x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "T F F x 0 x -4 -1 0 x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 F x < x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x ¬ -3 x eql < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x 9 swap -7 0 -2 x x < x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x -8 -3 x x < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy > x x -2 x 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec greedy? 0 x 8 7 x 4 T 9 x x + -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x -2 x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc 7 8 ∨ / x ungreedy x x be + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 F T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 greedy? / x x x -1 x x x x + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 inc F -3 x -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x 8 / x -3 F x x x greedy x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy greedy x x -8 -2 + 6 < x F x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 6 T x x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 pop T x x -3 x dec dec x x greedy + -1 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -4 -5 T < greedy? inc 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x / 6 1 / x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * -5 / -3 -10 -5 / x x x ¬ + depth pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 F eql 8 depth 8 x x F x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec greedy? x x ∨ -2 x ≤ if x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F x x T < x depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T x F / -6 2 -9 dec 4 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "4 * -5 / -3 x -5 x -3 x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? ≥ x F x -2 * 9 7 x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x ≥ -1 x if x -5 T x greedy x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 neg 8 if / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x ungreedy / x pop x x x F x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy T x T T ≤ x x + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F x x -6 x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy T x x if -2 F x greedy? x F x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 -10 ungreedy inc if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 -9 depth / x -7 x neg F ∧ x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -3 -2 0 inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x inc -5 / ¬ - x ∧ x -5 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 / x x -3 x dec dec x x greedy + 0 if neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 depth x ≤ inc F T 2 x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 greedy pop x ≤ x ∧ -4 dec x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x T ∧ 8 ∨ / x T x ¬ x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? be x neg -6 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg ∨ x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy F x x if -2 F x greedy? x F T + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 T if x -3 x copy x x x x x x + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "greedy? 7 T x greedy T x T T -8 x x + * pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x 5 -2 / x greedy 6 -4 x x greedy x x 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1124: "-5 inc -2 -7 x 8 8 / x x inc -9 + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1212: "¬ greedy x x 0 F x 6 < x x x + F -2 neg -5 -1 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1687: "F greedy -4 x 0 F x 6 x x x x / x pop neg ungreedy * x 2 -9 -10 if -5 * 9 * + 5 *"
# 1713: "x ∧ x / greedy? x -1 x inc T x / dec 4 x x - + x ≥ -9 greedy? if -5 * 9 * + 5 *"
# 3443: "-1 x 8 / x -3 F x F x greedy x + - x neg ungreedy x x ≥ -9 -10 if -5 * 9 * + 5 *"
# 36548: "be greedy F x 0 -2 x x < x inc if + greedy 8 -8 -4 x x 4 -2 x - -5 * 9 * + 5 *"
# 40817: "inc 1 -8 * T x + - x x 4 x x 7 inc x -6 -2 dec inc x dec inc -5 * 9 depth + 5 *"
# 43022: "-1 F greedy -3 inc x x 7 x dec -5 x + x x -5 6 9 2 x 9 x dec inc - x x dec -8 x"
34931,43064,78
34932,43073,71
34933,43043,71
34934,43043,76
34935,43169,76
34936,43022,89
34937,43169,76
34938,3443,85
34939,11000880,84
34940,42473,84
34941,43352,77
34942,43022,80
34943,1324,70
34944,873,81
34945,647,81
34946,43022,86
34947,3293,77
34948,122722,74
34949,1324,85
34950,43067,81
34951,42392,86
34952,76097,83
34953,3466,92
34954,59838,79
34955,42077,83
34956,43022,71
34957,48797,82
34958,43022,87
34959,43022,80
34960,43166,84
34961,507,81
34962,43022,87
34963,21000000,79
34964,42917,99
34965,44072,87
34966,42917,82
34967,44262,87
34968,73903,90
34969,2753,84
34970,41972,82
34971,3443,89
34972,21000000,85
34973,41483,85
34974,59980,88
34975,2568,79
34976,1193,74
34977,43022,86
34978,42770,91
34979,40088,77
34980,42980,87
34981,56448,88
34982,48692,86
34983,4123,82
34984,67697,83
34985,43022,85
34986,43022,78
34987,42992,85
34988,1738,79
34989,91137,91
34990,43043,85
34991,48314,69
34992,43547,74
34993,41132,95
34994,3443,88
34995,36548,71
34996,44492,80
34997,13031368,85
34998,43085,84
34999,43862,82
35000,3443,90
35001,42917,81
35002,43022,83
35003,27208,89
35004,43967,72
35005,43022,90
35006,42812,84
35007,4087,85
35008,52862,85
35009,27604,80
35010,57723,83
35011,48722,87
35012,23777,79
35013,3358,79
35014,43997,97
35015,86647,81
35016,721,82
35017,21000000,86
35018,103578,77
35019,678,85
35020,44072,85
35021,898,78
35022,42077,85
35023,507,88
35024,42917,79
35025,3443,79
35026,721,83
35027,1237,89
35028,4002455,76
35029,42602,79
35030,1336,72
35031,507,80
35032,507,89
35033,6163,90
35034,54523,83
35035,43064,84
35036,43022,77
35037,48722,89
35038,42077,84
35039,44072,78
35040,43022,79
35041,22672,91
35042,2213,81
35043,42833,79
35044,507,80
35045,73792,84
35046,42833,79
35047,44072,84
35048,63122,84
35049,2213,87
35050,3443,83
35051,43547,83
35052,442,74
35053,10997,85
35054,42917,82
35055,12733,83
35056,55473,92
35057,1281,86
35058,41102,91
35059,4238,83
35060,1757,82
35061,1757,79
35062,43022,90
35063,43064,85
35064,634,70
35065,43043,92
35066,41867,87
35067,507,88
35068,507,82
35069,34066,86
35070,44072,92
35071,53102,79
35072,43547,84
35073,1061,80
35074,507,77
35075,2213,77
35076,43927,93
35077,21000000,81
35078,39167,84
35079,43022,89
35080,3443,84
35081,41285,74
35082,41692,95
35083,43022,74
35084,1253,86
35085,43190,83
35086,42917,77
35087,502,79
35088,730,75
35089,42077,87
35090,42833,82
35091,46382,85
35092,3443,78
35093,1241,83
35094,43547,76
35095,54312,71
35096,42077,81
35097,1324,77
35098,58218,80
35099,829,88
35100,86177,92
35101,51010,80
35102,13286,82
35103,77388,75
35104,104294,93
35105,43022,85
35106,54618,83
35107,678,80
35108,43022,92
35109,10020933,79
35110,41972,77
35111,746,90
35112,1663,77
35113,507,87
35114,43067,86
35115,964,89
35116,3443,80
35117,15000668,79
35118,2213,81
35119,66642,83
35120,41542,91
35121,42623,80
35122,1918,83
35123,42938,85
35124,43022,88
35125,43022,70
35126,67702,82
35127,57883,78
35128,37202,84
35129,1358,86
35130,2213,83
35131,77546,84
35132,48292,90
35133,43022,87
35134,42077,88
35135,44942,74
35136,3358,79
35137,44717,84
35138,27593,90
35139,21000000,79
35140,44072,81
35141,43022,84
35142,47948,84
35143,1324,76
35144,1653,83
35145,44072,78
35146,1038,93
35147,41692,80
35148,67697,81
35149,90272,85
35150,1082,87
35151,43547,70
35152,42077,74
35153,42959,90
35154,44072,79
35155,44118,85
35156,3443,88
35157,43190,92
35158,43647,87
35159,604,76
35160,42644,87
35161,48272,90
35162,3583,82
35163,36662,89
35164,3443,80
35165,3466,85
35166,74117,79
35167,43022,83
35168,24529,81
35169,43067,80
35170,1837,94
35171,3913,92
35172,1039,80
35173,36932,88
35174,21000000,87
35175,21093,81
35176,42077,85
35177,43027,79
35178,43022,98
35179,38002,82
35180,42917,96
35181,42896,83
35182,15011872,82
35183,42917,84
35184,6790,97
35185,17683,88
35186,44632,85
35187,112322,82
35188,44072,79
35189,43547,82
35190,45243,83
35191,1324,84
35192,195508,87
35193,3443,88
35194,43547,84
35195,21000000,81
35196,43148,82
35197,55831,78
35198,2213,78
35199,647,79
35200,37202,80
35201,45243,80
35202,42692,73
35203,17641,85
35204,40187,78
35205,1324,100
35206,43742,90
35207,1133,82
35208,43022,85
35209,15000288,92
35210,43022,84
35211,72548,90
35212,37577,74
35213,4002455,83
35214,1128,80
35215,42182,90
35216,43022,92
35217,3528,75
35218,451,85
35219,42917,79
35220,1658,82
35221,451,90
35222,183358,82
35223,42917,86
35224,49337,78
35225,1336,80
35226,43022,85
35227,43547,78
35228,37202,83
35229,1798,78
35230,639,79
35231,42770,88
35232,43073,93
35233,40163,67
35234,1730,74
35235,1593,86
35236,876,77
35237,723,84
35238,44687,81
35239,1663,79
35240,647,79
35241,9617,81
35242,1324,82
35243,507,84
35244,43022,83
35245,3443,80
35246,43012,80
35247,43022,87
35248,21000000,84
35249,2258,77
35250,31066,84
35251,451,80
35252,678,93
35253,18214,90
35254,721,84
35255,61593,79
35256,43022,74
35257,48272,75
35258,721,76
35259,95708,87
35260,36407,91
35261,43106,84
35262,43022,92
35263,70112,91
35264,48707,81
35265,553,84
35266,3443,80
35267,56778,79
35268,2093,85
35269,43211,84
35270,829,83
35271,43127,84
35272,507,87
35273,63322,78
35274,3443,81
35275,55473,84
35276,43022,69
35277,3703,80
35278,50639,89
35279,721,83
35280,41342,86
35281,42077,73
35282,314618,85
35283,60202,85
35284,43022,85
35285,34492,82
35286,2213,87
35287,117272,95
35288,1128,82
35289,1569,83
35290,73903,90
35291,2633,79
35292,117217,79
35293,1672,84
35294,58261,92
35295,38623,78
35296,43547,88
35297,3443,85
35298,43022,93
35299,1126,79
35300,43022,86
35301,999,85
35302,30422,83
35303,469,79
35304,746,80
35305,45217,79
35306,43022,82
35307,3243,88
35308,3443,80
35309,49667,82
35310,25931,71
35311,37202,84
35312,42812,89
35313,44492,86
35314,21000000,77
35315,28369,88
35316,609319,80
35317,15000288,78
35318,3443,86
35319,3466,80
35320,11957,81
35321,1918,80
35322,3443,84
35323,43022,94
35324,42252,86
35325,2213,90
35326,43022,70
35327,42917,94
35328,59208,83
35329,43547,81
35330,663,91
35331,20992,81
35332,42347,77
35333,42602,76
35334,43127,84
35335,502,91
# After 17400 updates
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 ≤ x ∨ / -6 x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 x 0 -2 x 6 x x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 greedy ≥ greedy be T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x x T greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 swap greedy ≥ greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 greedy? / x - x -1 x x x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 F - x pop x x x x + copy pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "T F F x 0 x -4 -1 0 x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec greedy? 0 x 8 7 x 4 T 9 x x + -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy > x x -2 x 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x ¬ -3 x eql < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x -2 x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy copy 2 if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x -8 -3 x x < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be greedy F x 0 -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x 9 swap -7 0 -2 x x < x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap -9 depth ∧ x / x neg F ∧ x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? ≥ x F x -2 * 9 7 x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -3 -2 0 inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F -4 -5 T < greedy? inc 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 depth x ≤ inc F T 2 x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy T x x if -2 F x greedy? x F x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc 7 8 ∨ / x ungreedy x x be + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? be x neg -6 x T x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x ≥ -1 x if x -5 T x greedy x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T x F / -6 2 -9 dec 4 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg ∨ x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 F T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 neg 8 if / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F x x -6 x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x T ∧ 8 ∨ / x T x ¬ x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 greedy pop x ≤ x ∧ -4 dec x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? x T x greedy ∧ 9 T T ≤ x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy greedy x x -8 -2 + 6 < x F x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 x F ungreedy -2 * 4 7 / ∨ x if T ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 inc F -3 x -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 6 T x x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x eql -2 / inc F -6 x greedy? x x greedy + 0 pop neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x ungreedy / x pop x x x F x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 T if x -3 x copy x x x x x x + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 -8 8 x / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F x eql / x pop / x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * T / -3 x -5 / x x x ¬ + depth pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F x x T < x depth 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 F eql 8 depth 8 x x F x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T greedy / pop -3 1 x x x greedy x + T ∧ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec greedy? x x ∨ -2 x ≤ if x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 -10 ungreedy inc if / x neg x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 634: "-2 F x x 0 + F x x x x x + x x neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 647: "-5 -9 depth / x T x -1 F ∧ F x + inc pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1038: "6 x -3 - -10 greedy? -6 x * / / -1 greedy? x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1713: "x ∧ x / greedy? x -1 x inc T x / dec 4 x x - + x ≥ -9 greedy? if -5 * 9 * + 5 *"
# 3443: "-1 x 8 / x -3 F x F x greedy x + - x neg ungreedy x x ≥ -9 -10 if -5 * 9 * + 5 *"
# 3443: "be greedy F x 0 -2 x x < x inc ¬ x depth pop neg ungreedy -5 x ≥ -9 -10 ¬ -5 * 9 * + 5 *"
# 3703: "x -9 T ∧ 8 ∨ / x T x depth x + T pop neg ungreedy -5 x - T -10 if -5 * 9 * + 5 *"
# 38002: "if -2 -5 if ungreedy -3 -8 x x x greedy x + -8 x -5 x 9 2 x 9 x dec -5 * 9 * + 5 *"
# 40817: "inc 1 -8 * T x + - x x 4 x x 7 inc x -6 -2 dec inc x dec inc -5 * 9 depth + 5 *"
# 43022: "-1 2 greedy ≥ greedy be T -1 x x ∨ be + T inc neg ungreedy x x greedy -9 -5 if x ≥ 9 * x 5 *"
35336,43022,71
35337,43022,67
35338,42959,67
35339,43022,80
35340,43232,74
35341,61413,85
35342,95870,89
35343,3443,79
35344,57723,84
35345,10002563,87
35346,42917,71
35347,57897,82
35348,1971,80
35349,3443,89
35350,42497,93
35351,40712,91
35352,42098,78
35353,87030,76
35354,45887,94
35355,730,78
35356,55473,79
35357,43022,91
35358,56868,92
35359,2213,88
35360,45227,84
35361,21000000,71
35362,51947,91
35363,678,81
35364,50639,84
35365,3443,84
35366,43127,91
35367,42917,80
35368,43022,84
35369,50774,89
35370,56998,78
35371,55497,89
35372,451,84
35373,730,88
35374,3443,82
35375,38902,81
35376,42896,90
35377,507,81
35378,39272,90
35379,442,75
35380,43127,83
35381,70623,81
35382,44072,91
35383,44562,75
35384,4313,85
35385,43742,74
35386,9842,79
35387,61502,83
35388,559,86
35389,43547,84
35390,29192,94
35391,43022,89
35392,639,84
35393,993,93
35394,873,93
35395,42917,78
35396,42422,88
35397,63123,84
35398,20447,92
35399,43547,85
35400,1918,80
35401,21000000,83
35402,3443,91
35403,62460,85
35404,47852,71
35405,39242,85
35406,43108,91
35407,43547,84
35408,159499,89
35409,3443,79
35410,44072,77
35411,26362,88
35412,3443,80
35413,42867,92
35414,507,94
35415,44072,84
35416,507,81
35417,43064,71
35418,801,87
35419,43022,80
35420,1343,88
35421,44087,89
35422,475,94
35423,76097,87
35424,502,82
35425,43067,80
35426,40187,81
35427,42917,85
35428,43232,80
35429,42980,72
35430,43022,87
35431,59298,86
35432,21000000,91
35433,1837,79
35434,3703,76
35435,442,83
35436,43022,77
35437,821,88
35438,41342,78
35439,28847,71
35440,42980,85
35441,42252,83
35442,57318,74
35443,71831,84
35444,57768,79
35445,47117,79
35446,43022,78
35447,893,86
35448,42077,84
35449,32907,91
35450,43967,87
35451,1227,93
35452,43022,92
35453,507,82
35454,21000000,93
35455,45802,71
35456,3443,80
35457,1614,89
35458,46117,81
35459,62460,83
35460,678,79
35461,663,86
35462,678,76
35463,58273,88
35464,4002455,86
35465,40066,81
35466,42959,72
35467,1141,82
35468,1971,79
35469,451,88
35470,449162,80
35471,2213,89
35472,50163,85
35473,45443,83
35474,43022,80
35475,100446,79
35476,48712,89
35477,1106,81
35478,678,84
35479,29309,81
35480,551,79
35481,108242,74
35482,43022,81
35483,36827,82
35484,43967,84
35485,55473,88
35486,37352,82
35487,221113,77
35488,43022,94
35489,41702,88
35490,502,83
35491,678,82
35492,43108,89
35493,2468,82
35494,3443,82
35495,1413,78
35496,2213,81
35497,42077,82
35498,107347,84
35499,502,80
35500,127883,94
35501,34463,87
35502,41753,96
35503,21000000,73
35504,43190,92
35505,999,72
35506,1343,77
35507,2050,93
35508,7490,81
35509,721,84
35510,21000000,68
35511,4510,85
35512,46802,79
35513,43022,91
35514,42917,85
35515,44072,77
35516,91217,81
35517,44072,85
35518,42806,90
35519,3443,79
35520,42917,76
35521,507,80
35522,55323,76
35523,3443,88
35524,1065,76
35525,507,88
35526,43066,88
35527,35042,83
35528,131148,74
35529,42896,90
35530,40952,90
35531,1237,89
35532,44072,93
35533,1058,75
35534,43547,88
35535,1763,86
35536,3918,80
35537,41627,87
35538,56998,86
35539,43022,82
35540,43022,80
35541,41132,74
35542,999,88
35543,507,80
35544,1459,88
35545,37202,87
35546,44027,79
35547,43127,82
35548,507,93
35549,507,81
35550,647,81
35551,67189,73
35552,48742,87
35553,2043,78
35554,1556,77
35555,42917,88
35556,1133,81
35557,43211,76
35558,3443,88
35559,43148,95
35560,18006536,89
35561,1662,74
35562,43547,76
35563,43127,83
35564,42077,81
35565,42917,87
35566,40823,89
35567,42917,86
35568,54438,82
35569,746,82
35570,7442,85
35571,3637,72
35572,43022,84
35573,43412,98
35574,43022,88
35575,15009610,76
35576,39347,89
35577,55248,83
35578,41762,106
35579,1877,73
35580,1147,79
35581,45327,83
35582,66197,76
35583,2213,81
35584,42602,81
35585,37352,81
35586,721,90
35587,41452,83
35588,2213,91
35589,51107,83
35590,999,95
35591,1991,93
35592,1684,84
35593,3443,89
35594,3443,80
35595,10263,88
35596,678,84
35597,1281,83
35598,16286,77
35599,43106,85
35600,21000000,81
35601,3468,79
35602,721,78
35603,43997,80
35604,37352,79
35605,1419,71
35606,64167,91
35607,43862,82
35608,43127,79
35609,3443,86
35610,21000000,82
35611,44072,82
35612,507,91
35613,43022,87
35614,1748,85
35615,42987,83
35616,647,89
35617,42896,82
35618,3788,87
35619,43022,81
35620,58597,74
35621,73397,91
35622,44072,78
35623,41972,84
35624,873,80
35625,55921,80
35626,451,90
35627,42917,72
35628,1757,89
35629,43106,84
35630,43067,90
35631,43022,79
35632,44072,81
35633,44072,81
35634,34391,85
35635,3466,84
35636,43547,85
35637,2213,79
35638,3443,88
35639,4252,86
35640,507,79
35641,468272,80
35642,36182,86
35643,37227,80
35644,42983,88
35645,43022,87
35646,42077,84
35647,41132,84
35648,40163,81
35649,3443,78
35650,43022,89
35651,43022,68
35652,5068,80
35653,53158,87
35654,60932,92
35655,42896,87
35656,55848,75
35657,929,82
35658,43022,78
35659,43862,88
35660,42917,89
35661,43022,83
35662,10997,85
35663,1324,75
35664,48272,86
35665,76097,78
35666,42287,99
35667,36827,80
35668,929,77
35669,2743,73
35670,21000000,80
35671,3443,92
35672,3443,84
35673,678,88
35674,27193,92
35675,43022,79
35676,42422,94
35677,43122,85
35678,9947,72
35679,15000288,76
35680,1223,86
35681,42896,77
35682,37877,81
35683,43022,85
35684,507,86
35685,35193,101
35686,1454,73
35687,27137,91
35688,2213,83
35689,45092,91
35690,114011,83
35691,2588,94
35692,507,81
35693,835,80
35694,52997,83
35695,678,86
35696,44777,80
35697,52207,78
35698,42077,84
35699,2213,83
35700,52997,79
35701,21000000,85
35702,507,84
35703,42854,87
35704,3443,75
35705,44492,90
35706,43967,86
35707,33022,88
35708,42917,75
35709,42842,84
35710,3443,92
35711,43106,85
35712,1324,84
35713,43022,82
35714,43022,96
35715,48717,84
35716,77523,91
35717,796,78
35718,42182,76
35719,2127,88
35720,42917,85
35721,43022,86
35722,1465,84
35723,3443,82
35724,1165,90
35725,48722,81
35726,601,86
35727,42392,84
35728,113942,91
35729,1324,81
35730,929,93
35731,55473,88
35732,42872,77
35733,41212,91
35734,2743,87
35735,567,87
35736,2213,88
35737,37277,82
35738,43127,79
35739,43022,86
35740,43022,84
# After 17600 updates
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 x 0 -2 x 6 x x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 ≤ x ∨ / -6 x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 swap greedy ≥ greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ T T T * -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 greedy? / x - x -1 x x x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 F - x pop x x x x + copy pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql be depth -1 x x dec x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "T F F x 0 x -4 -1 0 x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec greedy? 0 x 8 7 x 4 T 9 x x + -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x -2 x x inc be + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x - 7 x 8 greedy ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x ¬ -3 x eql < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x 9 swap -7 0 -2 x x < x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy? ≥ x F 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ greedy F x greedy -2 x 6 < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x -8 -3 x x < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 x x x if x F x < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy copy 2 if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F T ungreedy ≥ 0 + F x greedy? x x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x ≥ -1 x if x -5 T x greedy x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy greedy x x -8 -2 + 6 < x F x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x T x F / -2 2 -9 dec 4 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 depth x ≤ inc F T 2 x x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x ∧ 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 F eql 8 depth 8 x x F x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x ungreedy / x pop x x x F x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -3 -2 0 inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 inc F -3 x -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 T if x -3 x copy x x x x x x + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 - T be x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 neg 8 if / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 x x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x T ∧ 8 ∨ / x T x ¬ x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc x -6 x greedy? ≤ x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 greedy pop x ≤ x ∧ -4 dec x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * T / -3 x -5 / x x x ¬ + depth pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 -10 ungreedy T if / x neg x x + x pop neg ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 eql / x F x 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 x F ungreedy -2 * 4 7 / ∨ x if T ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg ∨ x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x 8 / x pop x x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T greedy / pop -3 1 x x x greedy x + T ∧ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql greedy? x x ∨ -2 depth ≤ 0 x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F T 5 greedy? x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -1 7 ¬ - x pop x 2 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 x > / x x T dec x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T ungreedy ≥ F x depth 0 x x x ∧ + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T eql * x pop / x x x x T + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap -9 depth ∧ x / x neg F ∧ x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 eql x / inc F T x -6 x x x + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 551: "≥ - dec + x 1 x x - -3 inc T x F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 567: "x T pop / 0 -2 ∧ x depth x F depth + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 929: "x dec * -6 x -10 x 3 -7 -1 + x -4 x -8 neg -2 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1837: "-5 -9 depth / x inc x -1 F - x x + -6 pop neg be 3 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 2213: "F greedy x x 0 -2 x 6 ∧ x inc x + F F x ungreedy x x F -9 -10 if -5 * 9 * + 5 *"
# 3443: "dec -1 - T be x / F T x x x + T pop neg dec -5 x 6 -9 -10 if -5 * 9 * + 5 *"
# 3443: "be greedy F x 0 -2 x x < x inc ¬ x depth pop neg ungreedy -5 x ≥ -9 -10 ¬ -5 * 9 * + 5 *"
# 38002: "if -2 -5 if ungreedy -3 -8 x x x greedy x + -8 x -5 x 9 2 x 9 x dec -5 * 9 * + 5 *"
# 40712: "be x F x 0 -2 x x < x inc ¬ x depth pop neg ungreedy -5 -4 ≥ -9 -10 copy -5 * 9 depth + 5 *"
# 43022: "< x ungreedy / greedy ∨ greedy x x x F x -1 0 - neg -5 be x ≥ -9 -10 if -5 ≥ 9 * x 5 *"
35741,43022,80
35742,43022,71
35743,43001,76
35744,43001,72
35745,43022,70
35746,44072,78
35747,3623,88
35748,23958,87
35749,10997,82
35750,3443,105
35751,41132,80
35752,43547,82
35753,604,89
35754,43127,85
35755,40292,83
35756,1463,89
35757,3443,89
35758,2213,83
35759,1693,82
35760,4252,74
35761,44072,87
35762,57792,80
35763,42938,91
35764,1226,79
35765,43085,81
35766,1663,92
35767,48747,89
35768,1663,79
35769,43547,85
35770,42252,75
35771,42917,91
35772,3443,89
35773,42980,82
35774,42707,88
35775,29480,74
35776,43547,82
35777,1133,80
35778,1140,75
35779,43022,83
35780,56570,81
35781,10028193,92
35782,3443,78
35783,43022,81
35784,1777,76
35785,43442,85
35786,104942,93
35787,49532,87
35788,42917,72
35789,40817,93
35790,1148,83
35791,53992,85
35792,37007,89
35793,47687,84
35794,33572,88
35795,21000000,82
35796,926,83
35797,61675,84
35798,678,79
35799,53717,75
35800,3443,95
35801,3565,86
35802,999,73
35803,57294,85
35804,42917,82
35805,43022,82
35806,451,87
35807,44327,79
35808,507,91
35809,56998,80
35810,45070,80
35811,43547,82
35812,42167,84
35813,678,82
35814,507,80
35815,43001,79
35816,43001,94
35817,43022,77
35818,56478,80
35819,994,81
35820,16527,97
35821,59208,81
35822,40502,87
35823,43022,79
35824,1324,94
35825,42077,76
35826,51527,83
35827,43022,78
35828,10718,92
35829,43127,74
35830,53042,84
35831,41762,81
35832,41342,81
35833,42077,71
35834,42497,73
35835,43022,82
35836,37252,70
35837,34247,83
35838,43547,77
35839,51788,87
35840,43022,80
35841,42896,76
35842,59523,88
35843,3443,78
35844,43757,73
35845,10057299,81
35846,15024832,76
35847,42182,77
35848,507,79
35849,3443,74
35850,48062,84
35851,48722,85
35852,33866,88
35853,43022,77
35854,42645,77
35855,121592,80
35856,63347,92
35857,76727,87
35858,44072,78
35859,77567,91
35860,2287,93
35861,21000000,70
35862,21000000,80
35863,90617,93
35864,41867,84
35865,1140,75
35866,90272,88
35867,43547,80
35868,3987,76
35869,468272,77
35870,21000000,81
35871,57182,84
35872,43022,82
35873,814,84
35874,44072,83
35875,44072,82
35876,122042,90
35877,43022,78
35878,43001,96
35879,21000000,81
35880,43148,90
35881,42077,87
35882,50842,89
35883,33816,86
35884,48902,80
35885,42077,85
35886,42422,80
35887,801,95
35888,41867,95
35889,3443,86
35890,43022,89
35891,2067,93
35892,189436,85
35893,43022,99
35894,43547,89
35895,1128,85
35896,3668,80
35897,54787,92
35898,38542,70
35899,1038,75
35900,507,78
35901,42602,79
35902,44357,86
35903,42917,99
35904,71068,75
35905,507,91
35906,1323,84
35907,42077,81
35908,768,83
35909,18452,92
35910,76022,98
35911,59208,91
35912,469,79
35913,175547,78
35914,43127,89
35915,1738,80
35916,15013051,75
35917,3443,81
35918,43022,86
35919,1684,77
35920,54843,78
35921,1649,80
35922,1268,94
35923,43067,93
35924,43043,82
35925,15000343,79
35926,4643,84
35927,47132,80
35928,2213,78
35929,678,78
35930,43001,86
35931,3443,75
35932,4252,80
35933,18000089,83
35934,1662,89
35935,3443,81
35936,2045543,84
35937,43022,85
35938,48797,89
35939,376566,80
35940,964,83
35941,42917,96
35942,43547,83
35943,1133,80
35944,97742,84
35945,43043,76
35946,42938,91
35947,509,82
35948,801,86
35949,1173,90
35950,34937,79
35951,43022,82
35952,3443,80
35953,76097,87
35954,76097,88
35955,1693,89
35956,746,79
35957,1368,95
35958,39938,78
35959,60404,88
35960,469,92
35961,21000000,74
35962,43547,89
35963,43022,78
35964,1705,90
35965,43022,92
35966,1061,87
35967,451,82
35968,43483,82
35969,55998,86
35970,502,88
35971,42182,77
35972,507,88
35973,42077,81
35974,42917,73
35975,43967,77
35976,43022,85
35977,38608,76
35978,3443,75
35979,24905,79
35980,451,89
35981,1368,84
35982,721,86
35983,61107,84
35984,21000000,83
35985,15000288,81
35986,44072,81
35987,83452,85
35988,746,95
35989,15000288,79
35990,48717,81
35991,61817,87
35992,45437,81
35993,43022,86
35994,43022,99
35995,1117,84
35996,469,81
35997,2213,77
35998,28743,78
35999,56570,82
36000,721,72
36001,42983,86
36002,678,77
36003,37523,98
36004,41132,75
36005,43022,86
36006,42077,85
36007,21000000,80
36008,43022,77
36009,1121,88
36010,43547,82
36011,21000000,93
36012,43022,83
36013,105167,78
36014,2213,83
36015,44887,80
36016,1368,78
36017,1324,92
36018,3443,78
36019,1693,89
36020,21000000,81
36021,43022,80
36022,42854,72
36023,44072,81
36024,29897,85
36025,22554,77
36026,47747,80
36027,658454,78
36028,41342,73
36029,29480,77
36030,42959,95
36031,442,77
36032,3443,86
36033,1362,83
36034,43988,85
36035,77258,86
36036,58178,80
36037,37247,77
36038,1556,84
36039,2208,82
36040,42602,71
36041,57197,90
36042,4252,88
36043,42502,79
36044,34127,80
36045,507,89
36046,43232,81
36047,993,80
36048,57138,86
36049,5222,91
36050,3258,87
36051,1133,97
36052,105280,75
36053,47857,88
36054,44267,94
36055,60018,89
36056,43022,86
36057,42392,79
36058,21000000,77
36059,4858,80
36060,48272,85
36061,43037,94
36062,69210,77
36063,53417,80
36064,47637,86
36065,1738,84
36066,1556,83
36067,42077,85
36068,34266,82
36069,43697,75
36070,801,87
36071,469,83
36072,876,88
36073,21000000,82
36074,28196,77
36075,44702,96
36076,507,85
36077,3443,79
36078,3443,90
36079,964,76
36080,6024595,80
36081,3443,76
36082,42917,85
36083,1740,79
36084,46447,84
36085,57723,79
36086,48717,77
36087,43022,89
36088,43862,82
36089,38222,79
36090,848,85
36091,507,82
36092,18418,79
36093,43022,76
36094,1790,82
36095,43022,85
36096,1293,89
36097,51466,67
36098,41657,84
36099,451,84
36100,42462,86
36101,43022,91
36102,25112,74
36103,507,79
36104,999,82
36105,4177,89
36106,66647,84
36107,42917,82
36108,1148,93
36109,21000000,72
36110,2212,87
36111,43022,77
36112,1324,77
36113,11616,70
36114,678,88
36115,43547,92
36116,43992,92
36117,42917,90
36118,43817,90
36119,37202,80
36120,1226,83
36121,43967,88
36122,44137,77
36123,9138,82
36124,42077,83
36125,42182,93
36126,469,93
36127,92426,87
36128,43127,80
36129,1165,93
36130,469,90
36131,502,82
36132,21000000,85
36133,1281,76
36134,17062,86
36135,57723,75
36136,4123,77
36137,43547,87
36138,42917,78
36139,929,88
36140,2471,82
36141,55878,83
36142,42077,82
36143,507,76
36144,34417,92
36145,42152,73
# After 17800 updates
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "3 -9 depth / * - x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 swap greedy ≥ greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ T T T * -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T -4 pop x 0 copy ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 ≤ x ∨ / -6 x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy ≥ 0 + x x greedy? x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 x 0 -2 x 6 x x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "x copy F / x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x ¬ + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x T ∧ 8 ∨ x x ungreedy x ¬ x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 greedy? / x - x -1 x x x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 x x ∧ x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql be depth -1 x x dec x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql 6 depth -1 x x dec x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "T F F x 0 x -4 -1 0 x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec greedy? 0 x 8 7 x 4 T 9 x x + -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy x x if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x - 7 x 8 greedy ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x -8 -3 x x < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 x x x if x F x < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x > x x inc T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x 9 swap -7 0 -2 x x < x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x ¬ -3 x eql < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "ungreedy x -5 ≤ x 1 T -1 x x ∨ x + T inc neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy copy 2 if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x neg ∨ x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 x be neg x x ∧ + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x ≥ -1 x if x -5 T x greedy x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T greedy / pop -3 1 x x x greedy x + T ∧ neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-8 greedy pop x ≤ x ∧ -4 dec x x x + 0 - neg -5 be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 neg 8 if / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap -9 depth ∧ x / x neg F ∧ x x + -6 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "1 5 T if x -3 x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 inc F -3 x -5 / x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc x -6 x greedy? ≤ x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T x * -7 pop / neg x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 - T be x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 -1 x neg x x copy + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x T x ≥ 0 F x x dec F x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x T x F / -2 2 -9 dec 4 x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc + -6 x greedy? x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 x F ungreedy -2 * 4 7 / ∨ x if T ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 1 > / x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 eql / x F x 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T ungreedy ≥ F x depth 0 x x x ∧ + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 F eql 8 depth 8 x x F x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -3 -2 0 inc + -6 x greedy? x x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F T 5 greedy? x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql greedy? x x ∨ -2 depth ≤ 0 x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * T / -3 x -5 / x x x ¬ + depth pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 -10 ungreedy T if / x neg x x + x pop neg ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "5 x -2 dec T 2 x + eql 3 ≤ dec + x pop neg 1 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 993: "2 inc x 7 x x x neg x T F x - x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 999: "T x -6 -5 eql be * -1 x x 1 < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1140: "1 5 T if x -3 x copy x x -8 x x x pop neg F -8 x ≥ -9 -10 if -5 * 9 * ¬ 5 *"
# 1140: "x -2 x x + 7 8 x 1 x -5 - x / inc x -8 -8 x ≥ -9 -10 if -5 * 9 * greedy 5 *"
# 1293: "/ inc -2 ≥ - x depth greedy x 3 x x -5 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 3443: "∧ x F x 0 -2 x x < x x ¬ x depth pop neg ungreedy -5 x ≥ -9 -10 ¬ -5 * 9 * + 5 *"
# 3443: "dec -1 - T be x / F T x x x + T pop neg dec -5 x 6 -9 -10 if -5 * 9 * + 5 *"
# 33816: "copy x x x ∨ -2 T ≤ 0 x x greedy + x pop neg ungreedy eql x * -9 -10 if -5 * 9 * + 5 -"
# 40502: "-1 x ungreedy 6 greedy ∨ greedy x x x -8 x x x + T 2 x x ≤ -9 x copy -5 * 9 depth + 5 *"
36146,43022,73
36147,43022,74
36148,43253,72
36149,43232,72
36150,43085,73
36151,10093,75
36152,59960,88
36153,42077,69
36154,43085,83
36155,507,81
36156,41657,87
36157,746,76
36158,55358,76
36159,183133,86
36160,18006686,82
36161,1765,77
36162,47948,73
36163,56953,81
36164,502,76
36165,15000288,85
36166,760,85
36167,44807,80
36168,21000000,84
36169,43022,82
36170,43022,74
36171,43064,91
36172,5302,74
36173,8191,78
36174,41972,88
36175,469,86
36176,37202,71
36177,56868,80
36178,96390,77
36179,38621,82
36180,48722,84
36181,48722,91
36182,48722,84
36183,746,83
36184,41742,85
36185,42917,70
36186,45374,78
36187,43127,89
36188,58097,71
36189,46097,101
36190,42917,81
36191,48742,85
36192,40897,83
36193,1313,86
36194,507,88
36195,42077,78
36196,678,76
36197,43127,90
36198,1918,89
36199,507,79
36200,43547,81
36201,507,85
36202,814,79
36203,41972,88
36204,41132,85
36205,44072,76
36206,67217,92
36207,50447,81
36208,37708,90
36209,43022,74
36210,1324,81
36211,3443,71
36212,52878,79
36213,15024622,83
36214,37277,80
36215,42077,81
36216,1343,91
36217,469,83
36218,793,78
36219,29897,85
36220,47747,88
36221,1688,86
36222,43022,82
36223,28769,85
36224,43007,84
36225,43022,84
36226,3253,97
36227,42047,75
36228,896,88
36229,21000000,80
36230,1324,78
36231,1083,74
36232,43022,79
36233,43022,79
36234,999,82
36235,76097,84
36236,3443,89
36237,678,84
36238,43148,79
36239,43547,95
36240,48692,70
36241,129032,95
36242,20172060,88
36243,43022,83
36244,46037,82
36245,32777,82
36246,3358,78
36247,43022,86
36248,1663,81
36249,58218,85
36250,43022,79
36251,82544,84
36252,42917,89
36253,43022,79
36254,26623,76
36255,42077,76
36256,647,87
36257,1837,93
36258,12000703,75
36259,45447,94
36260,66197,90
36261,43547,76
36262,95942,79
36263,746,80
36264,61079,84
36265,21000000,84
36266,111590,88
36267,41657,77
36268,43022,87
36269,33572,80
36270,15011393,87
36271,43652,88
36272,21000000,85
36273,1324,72
36274,43547,83
36275,42875,69
36276,43232,86
36277,42941,81
36278,24122,87
36279,10037598,84
36280,964,77
36281,46172,90
36282,35867,91
36283,721,84
36284,37877,85
36285,44478,90
36286,42917,94
36287,37247,83
36288,21000000,84
36289,1336,73
36290,1652,89
36291,1688,77
36292,37352,73
36293,43652,84
36294,43169,90
36295,933,86
36296,42868,74
36297,678,88
36298,1133,84
36299,15026737,89
36300,49007,86
36301,1220,82
36302,48692,81
36303,3443,82
36304,43022,85
36305,43169,84
36306,502,88
36307,507,75
36308,34738,88
36309,42875,71
36310,38897,77
36311,54067,90
36312,43892,80
36313,84707,97
36314,3443,98
36315,43022,89
36316,746,81
36317,43022,85
36318,33677,77
36319,3528,74
36320,1663,84
36321,1663,91
36322,20148,81
36323,14020531,93
36324,43085,78
36325,63177,77
36326,77672,75
36327,15013012,75
36328,43253,83
36329,1336,84
36330,71772,93
36331,1324,80
36332,43992,75
36333,42917,82
36334,91217,80
36335,87672,81
36336,40838,81
36337,1627,83
36338,53222,85
36339,43547,91
36340,77597,81
36341,16291,71
36342,746,75
36343,41182,86
36344,577,86
36345,21000000,88
36346,442,74
36347,507,78
36348,8008,89
36349,1673,76
36350,678,80
36351,1268,91
36352,66122,91
36353,43022,75
36354,42745,87
36355,678,76
36356,34457,81
36357,41174,78
36358,42917,96
36359,57723,85
36360,43022,83
36361,48722,85
36362,42770,89
36363,999,87
36364,42182,83
36365,1517,89
36366,1195,91
36367,77267,72
36368,35987,83
36369,2213,90
36370,43547,80
36371,42077,85
36372,42917,92
36373,2263,81
36374,21000000,82
36375,639,91
36376,1082,82
36377,43022,81
36378,94796,77
36379,43547,83
36380,66532,92
36381,45622,84
36382,6272,86
36383,21000000,87
36384,43967,78
36385,42917,78
36386,51352,86
36387,37877,76
36388,597,82
36389,38897,77
36390,21000000,87
36391,25967,90
36392,63322,80
36393,451,85
36394,801,100
36395,48742,79
36396,37202,85
36397,8378,77
36398,1324,76
36399,21000000,80
36400,37202,86
36401,66647,86
36402,42077,94
36403,43073,85
36404,18000089,88
36405,1121,71
36406,25067,87
36407,12733,90
36408,43022,85
36409,56492,83
36410,999,74
36411,35987,95
36412,50273,87
36413,4283,88
36414,37032,84
36415,1128,80
36416,27924,83
36417,1117,81
36418,15006878,78
36419,931,82
36420,3443,82
36421,1658,86
36422,36382,88
36423,42917,67
36424,929,80
36425,1684,81
36426,3443,79
36427,1225,82
36428,43022,80
36429,2743,73
36430,3443,74
36431,1294,87
36432,1133,85
36433,2213,75
36434,17417,89
36435,451,88
36436,43652,82
36437,43022,86
36438,3443,90
36439,92852,91
36440,43022,82
36441,72422,88
36442,25172,88
36443,34417,86
36444,57308,84
36445,39347,74
36446,46382,83
36447,1343,76
36448,16000195,86
36449,3393,83
36450,18006933,80
36451,43022,84
36452,1083,77
36453,2213,79
36454,42917,82
36455,42077,81
36456,35347,89
36457,43547,83
36458,49742,79
36459,1117,86
36460,3443,78
36461,16661,80
36462,3443,77
36463,42941,83
36464,42917,91
36465,43547,84
36466,55473,82
36467,57941,87
36468,2213,76
36469,1324,80
36470,1343,81
36471,42808,86
36472,721,83
36473,451,86
36474,502,85
36475,19397,78
36476,42917,95
36477,43022,92
36478,63593,73
36479,43022,89
36480,43022,84
36481,42077,84
36482,25186,93
36483,43022,82
36484,43667,82
36485,3783,90
36486,583,90
36487,44072,78
36488,3443,80
36489,43232,71
36490,46382,79
36491,55577,79
36492,30592,84
36493,31167,79
36494,507,80
36495,43022,84
36496,42077,79
36497,34241,83
36498,15000288,80
36499,43192,82
36500,469,81
36501,43547,81
36502,475,90
36503,43022,92
36504,451,87
36505,1663,92
36506,46692,78
36507,48342,91
36508,502,84
36509,43022,80
36510,48752,86
36511,75152,77
36512,37277,88
36513,29934,80
36514,56998,78
36515,825,94
36516,28330,79
36517,3518,78
36518,21000000,84
36519,43148,84
36520,952,78
36521,1738,90
36522,91547,83
36523,1108,97
36524,43337,85
36525,57993,79
36526,37352,82
36527,1918,91
36528,6077785,82
36529,55105,89
36530,42917,84
36531,48722,82
36532,63563,91
36533,43022,79
36534,43547,78
36535,45447,76
36536,42973,79
36537,47777,86
36538,37457,88
36539,21000000,79
36540,39697,85
36541,4398,79
36542,1173,79
36543,37172,75
36544,3443,75
36545,48722,88
36546,1059,86
36547,77987,82
36548,553,88
36549,18005291,92
36550,48452,82
# After 18000 updates
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x F if -2 F 6 -10 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T -4 pop x 0 copy ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 -9 depth / * - x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy ≥ 0 + x x greedy? x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy x F neg x 9 -1 x neg x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 swap greedy ≥ greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ T T T * -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 ≤ x ∨ / -6 x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 x 0 -2 x 6 x x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x copy F / x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 x x ∧ x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x ¬ + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x T ∧ 8 ∨ x x ungreedy x ¬ x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql be depth -1 x x dec x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 < eql 6 greedy -1 x x dec x + ∨ pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "T F F x 0 x -4 -1 0 x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x > x x inc T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy copy 2 if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x - 7 x 8 greedy ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "greedy F ≥ T < x depth 0 x x x ∧ + 1 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 x x x if x F x < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 < x x -8 -3 x x if x inc ungreedy + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ -6 7 x if -2 F 6 -10 x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be x x ¬ -3 x eql < x inc x + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 T swap swap pop -3 1 9 x x T x + T greedy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec greedy? 0 x 8 7 x 4 T 9 x x + -6 pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x ≥ -1 x if x -5 T x greedy x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T ungreedy ≥ F x depth 0 x x x ∧ + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 neg 8 if / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 x be neg x x ∧ + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 x F ungreedy -2 * 4 7 / ∨ x if T ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 / inc x < x greedy? ¬ x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -3 -2 0 inc + -6 T x x x greedy + x pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x x ∨ x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T x * -7 pop / neg x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql greedy? x x ∨ -2 depth ≤ 0 x x greedy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 - T be x + -8 dec 4 x x + 0 + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap -9 x x x -5 swap eql F T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap 5 1 > / x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F T 5 greedy? x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 -10 ungreedy T if / x neg x x + x pop neg ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 eql / x F x 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * T / -3 x -5 / x x x ¬ + depth pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T F -6 F eql 8 depth 8 x x F x + F pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x T x ≥ 0 F x x dec F x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "x x T / x 0 x x x x x < x 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 929: "x x -2 -10 ungreedy + F T x x be x + x 5 neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1121: "x 5 if > / x x T F x x x + x pop neg -1 -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1324: "x x 1 T inc T inc -9 -8 + + + x swap ungreedy x ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1343: "∧ x F x copy copy ∧ neg depth x x copy + x pop pop ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 1688: "-9 x 2 x x inc x * x inc 9 7 greedy x pop neg ungreedy -5 3 ≥ -9 -10 if -5 * 9 * + 5 *"
# 3253: "-1 T ungreedy 6 greedy / greedy x x x -8 x + swap pop neg ungreedy 9 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 30592: "-1 2 -5 ≥ greedy be copy -1 x x ∨ be - T pop neg dec -7 x ≥ -9 -10 if -5 * * * + 5 *"
# 33677: "T F F x 0 -2 T ≤ 0 x x 7 + x pop neg ungreedy eql x * T -10 if -5 * 9 * + 5 -"
# 42745: "T -1 -2 x x 7 T 5 greedy? x x greedy + x pop neg dec -7 x ≥ -9 -4 if -5 x 9 * + 5 depth"
36551,43022,71
36552,43232,68
36553,42938,71
36554,43022,68
36555,43022,66
36556,58317,84
36557,678,81
36558,3443,80
36559,1730,85
36560,89813,73
36561,43232,92
36562,26552,81
36563,21000000,93
36564,507,79
36565,44072,84
36566,67697,89
36567,43022,76
36568,2213,82
36569,479,81
36570,3443,78
36571,45127,88
36572,38867,96
36573,1193,80
36574,42917,82
36575,43547,83
36576,43022,80
36577,37202,78
36578,691,87
36579,85652,87
36580,835,80
36581,2213,82
36582,39572,85
36583,42907,88
36584,1133,79
36585,730,87
36586,3443,97
36587,58734,85
36588,2213,77
36589,2478,84
36590,43022,82
36591,613,87
36592,4398,81
36593,61560,88
36594,1133,86
36595,42917,80
36596,42917,81
36597,2428,74
36598,18000089,82
36599,54537,79
36600,43022,80
36601,43127,77
36602,2057,77
36603,48692,86
36604,3358,92
36605,43022,84
36606,43198,76
36607,79346,90
36608,57628,75
36609,43022,75
36610,507,78
36611,38942,86
36612,7128,83
36613,42917,84
36614,43022,86
36615,48797,99
36616,721,92
36617,1848,82
36618,37202,76
36619,3443,87
36620,44732,83
36621,3443,76
36622,1343,88
36623,42182,81
36624,43022,80
36625,121622,74
36626,43022,80
36627,42077,80
36628,42917,92
36629,90272,84
36630,1951,89
36631,45057,87
36632,41342,92
36633,42077,77
36634,60633,90
36635,21000000,81
36636,43022,77
36637,43232,81
36638,1324,80
36639,43547,81
36640,1140,81
36641,58397,80
36642,42917,78
36643,3443,84
36644,41132,87
36645,42077,82
36646,37367,91
36647,1702,91
36648,41237,87
36649,639,80
36650,3703,89
36651,90272,81
36652,38102,87
36653,8908,82
36654,45243,80
36655,61544,76
36656,45162,79
36657,38927,100
36658,33083,86
36659,121772,84
36660,79022,88
36661,43542,85
36662,746,72
36663,57971,85
36664,730,90
36665,678,73
36666,1950,83
36667,42497,74
36668,47015,79
36669,44072,77
36670,3443,87
36671,42917,86
36672,37202,85
36673,42077,81
36674,1082,78
36675,37202,85
36676,36827,84
36677,34472,94
36678,43022,81
36679,43547,87
36680,64705,81
36681,4157,88
36682,93977,75
36683,73262,92
36684,953,78
36685,746,77
36686,107849,81
36687,20447,82
36688,1065,91
36689,723,79
36690,76802,80
36691,21000000,78
36692,3443,76
36693,2067,87
36694,34054,75
36695,57563,79
36696,42917,80
36697,42854,91
36698,26719,80
36699,43022,85
36700,43022,80
36701,42077,85
36702,41552,92
36703,41342,93
36704,43022,90
36705,999,80
36706,57022,90
36707,42643,80
36708,3443,79
36709,91217,84
36710,1333,88
36711,57943,80
36712,16010915,91
36713,1368,91
36714,48717,93
36715,67559,75
36716,1271,75
36717,1363,93
36718,469,81
36719,3358,84
36720,21000000,87
36721,4215,71
36722,3443,82
36723,43022,87
36724,26096,79
36725,1705,98
36726,42077,84
36727,1343,80
36728,43190,73
36729,43148,82
36730,1173,71
36731,775,87
36732,53522,83
36733,21000000,87
36734,469,85
36735,1918,80
36736,54172,78
36737,8335,88
36738,49717,79
36739,1065,76
36740,43317,73
36741,14746,77
36742,48722,81
36743,43022,88
36744,56357,89
36745,808,78
36746,59208,87
36747,90782,90
36748,647,93
36749,43862,87
36750,43001,82
36751,1284,81
36752,21000000,85
36753,964,82
36754,21000000,82
36755,507,81
36756,107148,93
36757,42829,92
36758,43127,77
36759,43022,97
36760,479,82
36761,14672,87
36762,507,80
36763,41447,81
36764,43022,81
36765,3443,74
36766,24317,84
36767,62460,87
36768,48865,82
36769,15000288,90
36770,46698,80
36771,1173,82
36772,2666,89
36773,43064,85
36774,1861,82
36775,3632353,86
36776,36138,89
36777,1343,82
36778,1573,78
36779,59538,92
36780,18006596,89
36781,2213,87
36782,528,77
36783,44072,84
36784,2213,80
36785,21000000,76
36786,24050,82
36787,1281,81
36788,42854,87
36789,3443,83
36790,21000000,72
36791,42938,84
36792,43547,86
36793,1131,84
36794,43043,77
36795,1454,82
36796,479,75
36797,43022,72
36798,1343,85
36799,999,78
36800,43547,83
36801,42914,84
36802,639,77
36803,451,89
36804,59702,80
36805,42287,81
36806,667,81
36807,62423,85
36808,38147,83
36809,21000000,82
36810,89418,89
36811,42791,88
36812,42917,92
36813,42927,88
36814,31262,91
36815,3443,82
36816,33761,80
36817,15022372,83
36818,37202,85
36819,42077,73
36820,1688,87
36821,36827,80
36822,40804,81
36823,48242,83
36824,1684,83
36825,44072,88
36826,35170,90
36827,49217,84
36828,6758,99
36829,19463,88
36830,43022,82
36831,847,84
36832,21000000,72
36833,43022,82
36834,34358,82
36835,60557,83
36836,37322,96
36837,42749,89
36838,801,77
36839,1147,87
36840,42830,83
36841,22810,83
36842,15010486,87
36843,43652,78
36844,3443,88
36845,678,88
36846,43022,89
36847,9947,90
36848,44072,84
36849,52472,98
36850,15013024,88
36851,37097,79
36852,21000000,85
36853,963,77
36854,43547,74
36855,41447,89
36856,43022,81
36857,1254,77
36858,9947,86
36859,451,84
36860,43127,77
36861,42992,81
36862,3443,81
36863,43482,91
36864,43022,82
36865,35683,82
36866,678,79
36867,3443,86
36868,58597,84
36869,43442,75
36870,42917,92
36871,4608,92
36872,58223,79
36873,721,81
36874,1657,78
36875,43022,81
36876,40838,81
36877,4873,88
36878,451,79
36879,678,86
36880,1324,83
36881,76322,85
36882,1295,78
36883,2788,84
36884,70245,85
36885,887,89
36886,57723,80
36887,42917,83
36888,28008,91
36889,24227,82
36890,43547,81
36891,46648,81
36892,112790,86
36893,775,81
36894,873,81
36895,47747,84
36896,43148,83
36897,18000089,89
36898,43022,88
36899,3443,83
36900,67697,82
36901,3443,81
36902,4252,87
36903,42077,84
36904,3443,79
36905,1083,81
36906,54437,81
36907,43022,86
36908,34409,81
36909,37202,85
36910,86597,82
36911,45327,87
36912,1569,86
36913,40913,78
36914,43022,80
36915,61922,85
36916,2763,79
36917,61712,92
36918,72850,80
36919,61922,78
36920,42875,86
36921,37577,79
36922,21000000,86
36923,929,85
36924,80867,82
36925,1075,73
36926,721,79
36927,58098,88
36928,3443,84
36929,4920,84
36930,44427,83
36931,469,81
36932,26054,73
36933,40997,97
36934,43967,75
36935,43022,84
36936,44462,80
36937,42761,79
36938,45572,83
36939,1419,74
36940,8717,80
36941,1101,75
36942,3443,86
36943,42522,84
36944,76097,83
36945,82183,79
36946,4228,88
36947,44072,86
36948,6001807,83
36949,34391,88
36950,54298,78
36951,2263,89
36952,79652,86
36953,38172,88
36954,43022,88
36955,1475,80
# After 18200 updates
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "copy x F neg x 9 -1 x neg x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ T T T * -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 -9 depth / * - x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x F if -2 F 6 -10 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy ≥ 0 + x x greedy? x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 ≤ x ∨ / -6 x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T -4 pop x 0 copy ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x depth ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 x 0 -2 x 6 x x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 swap greedy ≥ greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "x T -2 / inc x < x greedy? x x x + 6 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x T ∧ 8 ∨ x x ungreedy x ¬ x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 x x ∧ x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-7 -9 depth 7 x - x -1 F x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x copy F / x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x -3 x x x -10 pop x ¬ + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x / x if x x x -10 pop x ¬ + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 < eql 6 greedy -1 x x dec x + ∨ pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql be depth -1 x x dec x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "copy F x T x T -4 -1 0 x x x + T inc neg if -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "T F F x 0 neg -4 -10 x x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "2 be x x -3 F 8 eql < x inc x + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 < x x -8 -3 x x if x inc ungreedy + F pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ -6 7 x if -2 F 6 -10 x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 x x x if x F x < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-4 x x < greedy + T x greedy? x F x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x > x x inc T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy copy 2 if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 T swap swap pop -3 1 9 x x T x + T greedy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x - 7 x 8 greedy ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 x F ungreedy -2 * 4 7 / ∨ x if T ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x x if x -5 T x greedy x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -3 -2 0 inc + -6 T x x x greedy + x pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap -9 x x x -5 swap eql F T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x x ∨ x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap x 1 > 6 x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 neg 8 if / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 x be neg x x ∧ + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T x * -7 pop / neg x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F T 5 greedy? x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 -10 ungreedy T if / x neg x x + x pop neg ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T * T / -3 x -5 / x x x ¬ + depth pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 eql / x F x 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T ungreedy ≥ F x depth 0 x x x ∧ + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "be x -6 F eql 8 depth 8 -9 x F x + x pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 999: "T * T / -3 x -5 / x x x ¬ + depth > neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1173: "-3 x inc x -4 F x 6 < -8 inc x -4 F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1271: "x ≥ -1 x if x -5 -8 x greedy x x + 0 - neg + F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1475: "eql x -8 7 -8 x eql neg x x -2 x + x pop neg 6 -5 -2 -4 -9 -10 if -5 * 9 * + 5 *"
# 1688: "-9 x 2 x x inc x * x inc 9 7 greedy x pop neg ungreedy -5 3 ≥ -9 -10 if -5 * 9 * + 5 *"
# 22810: "eql -1 -2 x x 7 T 5 greedy? x x greedy + x pop T dec -7 x ≥ -9 -4 if -5 * 9 * + T *"
# 30592: "-1 2 -5 ≥ greedy be copy -1 x x ∨ be - T pop neg dec -7 x ≥ -9 -10 if -5 * * * + 5 *"
# 33677: "T F F x 0 -2 T ≤ 0 x x 7 + x pop neg ungreedy eql x * T -10 if -5 * 9 * + 5 -"
# 42938: "x x F neg x 9 -1 x neg x -5 be x x pop neg ungreedy -5 x > -9 -10 -9 -8 x x - -9 2 4"
# 43022: "-1 T 7 be 0 -2 ∧ x x x copy F + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * -4 x -9 * x"
36956,43127,75
36957,43106,75
36958,42938,78
36959,43190,66
36960,43043,72
36961,2213,78
36962,48727,78
36963,43106,86
36964,42770,72
36965,43064,84
36966,1133,82
36967,3443,79
36968,3443,78
36969,66197,73
36970,68699,89
36971,3443,78
36972,67547,87
36973,3443,83
36974,54242,77
36975,39697,76
36976,3443,86
36977,41288,79
36978,51557,86
36979,18000089,81
36980,1441,79
36981,37227,90
36982,43022,87
36983,639,91
36984,34256,81
36985,2194,89
36986,1324,76
36987,42770,82
36988,43022,71
36989,41657,81
36990,42875,79
36991,87122,76
36992,57363,88
36993,10997,83
36994,43022,79
36995,3507,93
36996,507,79
36997,56088,76
36998,4252,96
36999,42077,78
37000,1543,81
37001,29897,82
37002,3443,85
37003,42938,78
37004,42938,84
37005,42917,74
37006,43022,82
37007,34598,82
37008,42602,82
37009,19502,93
37010,451,89
37011,43022,86
37012,1673,87
37013,31682,86
37014,21000000,78
37015,42707,84
37016,666644,88
37017,43022,80
37018,1730,81
37019,35840,77
37020,43022,91
37021,43022,84
37022,42917,78
37023,42077,83
37024,50639,88
37025,101063,82
37026,42917,77
37027,1757,86
37028,45023,83
37029,1705,78
37030,42780,88
37031,44072,79
37032,1663,93
37033,39272,82
37034,48747,91
37035,47747,76
37036,47117,73
37037,43647,82
37038,56657,88
37039,61217,82
37040,46382,81
37041,43043,73
37042,42849,99
37043,40547,89
37044,502,79
37045,116118,89
37046,42917,83
37047,42917,87
37048,3443,83
37049,64603,77
37050,64705,82
37051,1974,74
37052,1324,73
37053,43022,78
37054,3443,88
37055,18000089,91
37056,42602,79
37057,43127,82
37058,56868,75
37059,1099,90
37060,42959,91
37061,76097,89
37062,57066,87
37063,1133,84
37064,3443,81
37065,62448,88
37066,58367,88
37067,43022,83
37068,21000000,76
37069,9363,74
37070,43190,83
37071,43001,79
37072,29972,81
37073,42392,83
37074,1195,90
37075,49334,86
37076,1147,84
37077,42917,79
37078,49252,85
37079,706,83
37080,1757,83
37081,451,89
37082,33083,82
37083,3443,73
37084,43043,75
37085,57558,79
37086,3958,75
37087,43127,85
37088,49182,80
37089,18005329,83
37090,42987,83
37091,176563,77
37092,55998,83
37093,647,83
37094,37277,89
37095,502,81
37096,43169,78
37097,848,91
37098,43547,83
37099,1598,78
37100,5011752,85
37101,59343,82
37102,36331,83
37103,21000000,72
37104,42618,92
37105,43547,89
37106,101767,85
37107,51604,77
37108,67189,77
37109,678,83
37110,102647,79
37111,507,81
37112,1757,87
37113,43022,97
37114,51527,85
37115,42917,81
37116,3443,82
37117,71576,81
37118,43169,80
37119,760,76
37120,1757,94
37121,23968,83
37122,42938,83
37123,507,72
37124,21000000,89
37125,43897,86
37126,43022,81
37127,43022,83
37128,62972,83
37129,43022,87
37130,873,80
37131,674,95
37132,56357,82
37133,52859,83
37134,18000746,92
37135,62717,84
37136,23968,93
37137,42917,87
37138,1687,79
37139,17337,81
37140,48797,84
37141,2132,82
37142,42917,83
37143,2213,81
37144,721,83
37145,1195,77
37146,42947,86
37147,3695,86
37148,42917,91
37149,21000000,107
37150,43967,80
37151,23968,84
37152,62160,92
37153,451,88
37154,21000000,82
37155,34967,87
37156,77027,86
37157,929,85
37158,2428,77
37159,17002776,83
37160,1343,79
37161,1268,83
37162,43457,79
37163,50287,78
37164,42077,91
37165,112112,95
37166,43127,83
37167,39347,93
37168,2208,76
37169,42917,85
37170,42542,83
37171,53347,92
37172,2213,74
37173,639,77
37174,528,98
37175,4398,83
37176,81872,78
37177,21000000,86
37178,42917,76
37179,814,79
37180,42707,79
37181,678,89
37182,730,96
37183,42917,76
37184,84527,71
37185,43102,92
37186,72148,77
37187,6675,77
37188,18000089,91
37189,60468,88
37190,16355,84
37191,43098,93
37192,27662,81
37193,104027,96
37194,10346,83
37195,1603,82
37196,451,90
37197,77402,82
37198,42941,90
37199,43547,80
37200,3443,83
37201,46662,93
37202,67697,75
37203,51107,87
37204,34517,82
37205,1419,83
37206,1663,86
37207,38172,93
37208,2363,92
37209,3443,84
37210,55105,81
37211,42959,87
37212,2471,83
37213,42875,84
37214,16954,83
37215,39257,88
37216,3443,75
37217,15015757,74
37218,3443,81
37219,2213,79
37220,507,90
37221,44948,77
37222,43022,96
37223,71271,78
37224,3443,87
37225,647,81
37226,42763,84
37227,38147,77
37228,43547,91
37229,41762,83
37230,42917,79
37231,43067,84
37232,42077,85
37233,1757,85
37234,58734,81
37235,58261,80
37236,3443,91
37237,45447,80
37238,44492,86
37239,1738,91
37240,37202,79
37241,730,89
37242,44717,83
37243,3443,74
37244,6272,84
37245,45023,90
37246,647,86
37247,3443,78
37248,90377,82
37249,65656,89
37250,44082,74
37251,44072,89
37252,42287,85
37253,38973,82
37254,2588,86
37255,18009226,88
37256,1662,82
37257,43022,80
37258,43337,93
37259,43022,82
37260,41657,78
37261,43022,88
37262,42917,92
37263,754,83
37264,432272,81
37265,1140,89
37266,42287,74
37267,1662,75
37268,42770,87
37269,2543,87
37270,43106,75
37271,43287,83
37272,58597,80
37273,3443,83
37274,198992,80
37275,64705,82
37276,49217,82
37277,43652,71
37278,42077,83
37279,55105,88
37280,104312,83
37281,17213,91
37282,77717,76
37283,1888,79
37284,52292,73
37285,451,80
37286,1082,96
37287,46172,82
37288,37202,87
37289,62460,93
37290,42917,94
37291,56942,85
37292,45093,83
37293,634,82
37294,4377,75
37295,311928,82
37296,64473,88
37297,639,92
37298,1567,77
37299,1126,84
37300,42602,75
37301,58247,88
37302,687,88
37303,42497,82
37304,43022,75
37305,686,93
37306,42917,88
37307,22721,83
37308,1815,84
37309,1738,80
37310,42077,83
37311,1658,82
37312,48742,82
37313,3443,85
37314,57723,84
37315,44617,85
37316,2213,91
37317,42917,87
37318,21000000,82
37319,44072,77
37320,43853,80
37321,42077,79
37322,730,83
37323,37352,87
37324,43967,78
37325,678,80
37326,404559,85
37327,33862,87
37328,43022,76
37329,43022,93
37330,62147,84
37331,37277,76
37332,1608,82
37333,1362,75
37334,55773,74
37335,3443,84
37336,44207,85
37337,42917,91
37338,44498,77
37339,39785,86
37340,746,78
37341,4228,91
37342,821,82
37343,49844,94
37344,451,79
37345,42917,76
37346,442,81
37347,37277,82
37348,2363,75
37349,730,83
37350,60312,87
37351,42956,98
37352,34517,80
37353,94145,89
37354,43652,88
37355,42877,76
37356,3738,81
37357,35987,78
37358,42812,88
37359,665879,78
37360,43022,90
# After 18400 updates
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth -10 x neg -2 x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ T T T * -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x F if -2 F 6 -10 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x depth ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T * 0 -2 x x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 swap greedy ≥ greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy x F neg x 9 -1 x neg x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ ungreedy x 1 x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy ≥ 0 + x x greedy? x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 dec 0 -2 x x x x inc eql + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 x 0 -2 x 6 x x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ -9 T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T -4 pop x 0 copy ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "greedy? -9 depth 7 x 8 x ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 -9 depth / * - x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x T ∧ 8 ∨ x x ungreedy x ¬ x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x T -2 / inc x < x greedy? x x x + 6 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x -3 x x x -10 pop x ¬ + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x copy F / x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x / x if x x x -10 pop x ¬ + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 < eql 6 greedy -1 x x dec x + ∨ pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql be depth -1 x x dec x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "T F F x 0 neg -4 -10 x x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "2 be x x -3 F 8 eql < x inc x + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "T x -5 greedy? x x neg -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x -9 depth 7 x - x -1 F inc x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "/ -6 7 x if -2 F 6 -10 x inc x + F pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 T swap swap pop -3 1 9 x x T x + T greedy neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 x x x if x F x < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy copy 2 if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x - 7 x 8 greedy ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x > x x inc T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "< 9 ungreedy / greedy ∨ greedy x x x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 -10 ungreedy T if / x neg x x + x pop neg ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T x * -7 pop / neg x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 x F ungreedy -2 * 4 7 / ∨ x if T ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "¬ T T neg -7 -2 x swap depth x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-3 ≤ x x / x 4 neg eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x x if x -5 T x greedy x x + 0 - neg -5 F x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x x if x > x -9 x ≥ x + x pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 neg 8 if / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 x x inc F -10 x T x F greedy + 0 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "copy x x neg -1 9 x be neg x x ∧ + greedy? pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap x 1 > 6 x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T ungreedy ≥ F x depth 0 x x x ∧ + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x x ∨ x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 x depth -6 x - x 0 x x x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / / - x -1 2 * x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -3 -2 0 inc + x -5 x x x greedy + 5 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F T 5 greedy? x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 678: "F 6 F -5 x be greedy -1 -3 neg x x x x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1608: "> -9 -4 / x - x -1 x F F T greedy? x x neg ungreedy < x > -9 -10 if -5 * 9 * + 5 *"
# 2132: "T F F x 0 -2 T 5 0 x x greedy + 8 pop neg ungreedy F x ≥ -9 copy if -5 * 9 * + 5 *"
# 3443: "x -10 x + -3 T x x * x 1 x 4 x * * ungreedy -5 x x -9 -10 if -5 * 9 * + 5 *"
# 3443: "-1 2 -5 ≥ greedy T copy -1 x x ∨ be * T pop neg dec -5 x x -9 -10 if -5 * 9 * + 5 *"
# 22810: "eql -1 -2 x x 7 T 5 greedy? x x greedy + x pop T dec -7 x ≥ -9 -4 if -5 * 9 * + T *"
# 23968: "dec -1 x x inc F -10 x T x F greedy + 0 inc neg ungreedy * x greedy? -9 -10 -9 -8 * 9 * + 5 *"
# 34517: "T x -5 x -6 F 8 eql < F inc x + F x neg ungreedy -8 x x -9 -10 if -5 * 9 * + x -"
# 42917: "> -9 x / x - x -1 x x x x + -8 pop neg ungreedy -5 x x -9 x if 5 * 9 * + 5 T"
# 43127: "eql -1 -2 T x 7 T be greedy? x x greedy + x F T dec -7 x ≥ -9 -4 if -5 * 9 x < inc -5"
37361,43190,70
37362,43043,69
37363,43022,72
37364,43106,72
37365,42896,75
37366,37227,94
37367,58261,78
37368,1295,87
37369,37352,84
37370,43010,81
37371,31089,83
37372,1104,85
37373,42917,92
37374,43997,87
37375,1918,79
37376,55412,76
37377,479,77
37378,1419,74
37379,1073,79
37380,2228,86
37381,16000195,87
37382,43022,74
37383,55048,76
37384,42917,87
37385,60063,76
37386,1738,80
37387,38867,80
37388,41657,91
37389,15013102,91
37390,52517,71
37391,43064,82
37392,43022,75
37393,52897,89
37394,43036,82
37395,43547,66
37396,989,81
37397,451,81
37398,34184,89
37399,614,76
37400,89827,83
37401,43022,85
37402,507,74
37403,37352,94
37404,45920,79
37405,42896,78
37406,21000000,87
37407,1718,80
37408,55712,86
37409,18006686,79
37410,18677,86
37411,1831,88
37412,53228,76
37413,43022,79
37414,43668,79
37415,65255,85
37416,1815,84
37417,43022,83
37418,35987,87
37419,43022,75
37420,39172,86
37421,1083,89
37422,821,76
37423,79930,89
37424,48722,89
37425,52689,79
37426,10007,73
37427,79547,78
37428,16568,83
37429,3461,81
37430,43412,76
37431,42917,84
37432,451,80
37433,42602,85
37434,43022,73
37435,42182,77
37436,43022,81
37437,53267,80
37438,2213,80
37439,57370,74
37440,54922,76
37441,42986,82
37442,1187,82
37443,45447,87
37444,42648,73
37445,43547,78
37446,91217,82
37447,89294,82
37448,43127,79
37449,54537,87
37450,52472,90
37451,54242,79
37452,1133,80
37453,35546,82
37454,42077,89
37455,41622,90
37456,42077,88
37457,2318,78
37458,44732,86
37459,37227,88
37460,43022,84
37461,3443,79
37462,42047,80
37463,11128,84
37464,451,87
37465,963,85
37466,43022,81
37467,647,86
37468,55908,74
37469,43247,73
37470,678,82
37471,44072,85
37472,43647,87
37473,62460,88
37474,41304,86
37475,62447,76
37476,56238,86
37477,887,81
37478,2218,83
37479,57948,80
37480,3443,86
37481,47957,82
37482,507,84
37483,1730,89
37484,48722,84
37485,50533,88
37486,58247,93
37487,3358,81
37488,53882,78
37489,50533,104
37490,52457,80
37491,639,83
37492,1649,74
37493,3688,78
37494,41831,90
37495,59208,83
37496,44072,85
37497,42870,83
37498,451,91
37499,1556,83
37500,42077,80
37501,48692,82
37502,55713,79
37503,1133,84
37504,3443,85
37505,2213,93
37506,2213,78
37507,52283,83
37508,2527,86
37509,37227,82
37510,124792,79
37511,21000000,88
37512,35158,78
37513,42467,81
37514,1518,76
37515,451,86
37516,42182,72
37517,451,79
37518,45040,79
37519,42896,85
37520,48797,91
37521,18467,72
37522,20000093,88
37523,43427,81
37524,1663,86
37525,2213,87
37526,3358,86
37527,867,84
37528,44072,92
37529,1859,78
37530,8001564,94
37531,43022,80
37532,60468,78
37533,42077,83
37534,42896,77
37535,1663,83
37536,44478,89
37537,1765,79
37538,85547,83
37539,54572,86
37540,2263,82
37541,1289,86
37542,2263,82
37543,1918,89
37544,43190,74
37545,46872,81
37546,1918,85
37547,42077,84
37548,96392,80
37549,451,91
37550,2893,81
37551,1843,81
37552,43398,79
37553,451,83
37554,59793,78
37555,44072,81
37556,8533,92
37557,43967,78
37558,1556,74
37559,43022,81
37560,46727,91
37561,17608,95
37562,451,81
37563,86847,81
37564,42980,87
37565,43022,87
37566,43022,85
37567,10997,77
37568,9001280,84
37569,43232,86
37570,451,81
37571,2927,85
37572,721,82
37573,42917,89
37574,52398,83
37575,3443,88
37576,42077,81
37577,58457,88
37578,42917,87
37579,44072,80
37580,11002370,78
37581,85547,80
37582,43190,81
37583,42077,72
37584,49637,94
37585,746,79
37586,451,77
37587,1757,80
37588,21000000,85
37589,61312,86
37590,43022,86
37591,1663,77
37592,43022,75
37593,42707,87
37594,42077,86
37595,18340,79
37596,43246,83
37597,908,82
37598,43907,94
37599,21000000,74
37600,44582,79
37601,43127,86
37602,469,84
37603,105750,79
37604,43967,80
37605,647,82
37606,16742,76
37607,45023,80
37608,34517,81
37609,48682,70
37610,53417,78
37611,746,84
37612,58597,78
37613,958,87
37614,43022,80
37615,100238,80
37616,42917,80
37617,43022,79
37618,43127,86
37619,43022,89
37620,44072,87
37621,42896,83
37622,2208,74
37623,43022,86
37624,32608,82
37625,42917,82
37626,71173,85
37627,71477,81
37628,3443,83
37629,60468,85
37630,999,82
37631,873,75
37632,35597,86
37633,42077,85
37634,40163,82
37635,44202,90
37636,44072,80
37637,42077,80
37638,42392,79
37639,1110,84
37640,36827,82
37641,43547,85
37642,53717,90
37643,35987,90
37644,43022,86
37645,3443,91
37646,43022,80
37647,28007,88
37648,42917,82
37649,48717,82
37650,1765,70
37651,3443,84
37652,469,81
37653,1324,74
37654,1738,84
37655,567,77
37656,8953,84
37657,9947,83
37658,48722,84
37659,730,85
37660,451,86
37661,48797,83
37662,51664,84
37663,37202,84
37664,1343,78
37665,41657,73
37666,43022,93
37667,39267,88
37668,48747,71
37669,28653,85
37670,43022,80
37671,1693,89
37672,37743,82
37673,55937,78
37674,36827,69
37675,43547,92
37676,24227,85
37677,51482,82
37678,41117,76
37679,54367,90
37680,78567,82
37681,1738,81
37682,16547,87
37683,42917,78
37684,2655,85
37685,2588,81
37686,747,91
37687,43022,84
37688,3443,85
37689,4283,78
37690,42182,80
37691,42917,94
37692,21000000,91
37693,2207,91
37694,1403,79
37695,451,87
37696,721,79
37697,43211,86
37698,38488,81
37699,42896,85
37700,507,91
37701,2212,81
37702,44072,86
37703,53020,75
37704,21000000,87
37705,4143,84
37706,43967,77
37707,42252,81
37708,43022,83
37709,1542,86
37710,43022,89
37711,52052,85
37712,58273,91
37713,102443,84
37714,36227,82
37715,43211,92
37716,44072,86
37717,44192,90
37718,591,83
37719,1324,84
37720,55577,87
37721,3461,73
37722,730,83
37723,647,88
37724,119567,93
37725,43043,98
37726,43147,83
37727,57692,78
37728,1672,81
37729,1684,82
37730,51472,87
37731,87617,90
37732,52642,73
37733,964,91
37734,451,73
37735,3707,78
37736,1738,98
37737,43547,79
37738,43922,84
37739,24002,88
37740,43547,82
37741,43022,78
37742,451,86
37743,53842,80
37744,36488,82
37745,647,86
37746,48722,85
37747,18005734,88
37748,43022,83
37749,39267,95
37750,53943,94
37751,34417,88
37752,933,76
37753,469,79
37754,502,78
37755,44072,89
37756,42932,86
37757,42833,74
37758,3443,75
37759,1140,83
37760,1128,77
37761,42896,79
37762,42077,81
37763,46721,87
37764,37582,81
37765,43127,92
# After 18600 updates
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth -10 x neg -2 x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 dec 0 -2 x x x x inc eql + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T x -5 greedy? 4 x neg -6 x T x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T T * 0 -2 x x x x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy x 2 x 0 -2 x 6 x x inc x + F F neg ∨ -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F x F neg x 9 -1 x neg x x ¬ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* -3 ∧ if depth ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy ≥ 0 + x x greedy? x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 swap greedy ≥ greedy x T -1 x x ∨ be + T inc neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 x 0 -2 x 6 x x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T -4 pop x 0 copy ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ F inc 6 8 x T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy x x neg -1 9 4 be x x x ∧ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ -9 T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* ∧ T if -9 ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x F if -2 F 6 -10 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 -9 depth / * - x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ x -5 greedy? 4 x neg -9 x x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "greedy? -9 depth 7 x 8 x ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ungreedy -2 x 0 4 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -7 neg x 0 3 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x / F ∨ dec ¬ x -9 2 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ ungreedy x 1 x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-5 -6 7 x if greedy F 6 -10 x x x + x pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x copy F / x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x T ∧ 8 ∨ x x ungreedy x ¬ x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x / x if x x x -10 pop x ¬ + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -1 x T inc F -10 x T x ∨ greedy + 0 pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "swap x x x -3 x x x -10 pop x ¬ + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 < eql 6 greedy -1 x x dec x + ∨ pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 -5 eql be depth -1 x x dec x + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "T F F x 0 neg -4 -10 x x x x + T inc neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "2 be x x -3 F 8 eql < x inc x + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be x ungreedy x x -2 ≤ 6 < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 x x x if x F x < x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 ≥ 0 swap pop -3 F 6 -10 x inc x + F F neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x > x x inc T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "copy greedy copy 2 if -2 F 6 -10 x inc x + F F neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "x -9 depth 7 x - x -1 F inc x x + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x -2 -10 ungreedy T if / x neg x x + x pop neg ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T x -5 greedy? < x depth x eql 4 x copy + 0 pop neg -5 ungreedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap x 1 > 6 x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F T 5 greedy? x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -4 6 F 0 x ∧ x depth x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T 9 x swap -2 ∧ ungreedy x 1 x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 be be ≥ 0 -2 ∧ x x ∨ x ∧ + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T x * -7 pop / neg x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x - 7 7 8 9 T -1 -1 x x x + copy pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "F T ungreedy ≥ F x depth 0 x x x ∧ + x pop neg T -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 x F ungreedy -2 * 4 7 / ∨ x if T ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x x if x > x -9 x ≥ x + x pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "¬ T T neg -7 -2 x swap depth x x copy + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x x 7 neg 8 if / x T x x x + T pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 964: "2 T 9 x swap 2 ∧ ungreedy x 1 x copy + inc pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1128: "T x eql greedy? 4 x neg 0 x T x ¬ + x x neg 3 -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1133: "eql -1 -2 x 0 x ∧ x x ∨ x + + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * ∧ 5 *"
# 1663: "T x -5 x -6 F 8 eql < x -1 x + F x x ungreedy -8 x x -9 -10 if -5 * 9 * F 5 *"
# 23968: "dec -1 x x inc F -10 x T x F greedy + 0 inc neg ungreedy * x greedy? -9 -10 -9 -8 * 9 * + 5 *"
# 24227: "-3 -8 -2 x x / T be greedy? greedy x greedy + x F T -5 -7 x 5 -1 -4 if -5 * 9 * + 5 *"
# 35987: "-1 T pop if -9 ∨ / -3 ungreedy x F be F x pop neg ungreedy -5 x > -9 -10 if -5 8 9 * + 5 *"
# 36827: "0 F pop x ≤ x x x x x -4 x T 3 - -4 x x x - / -10 copy -5 * 9 ¬ + 5 *"
# 42917: "-5 -6 7 x if - greedy? -1 x x x x + -8 pop neg ungreedy -5 x x -9 T if 5 * 9 * x 5 T"
37766,43022,73
37767,42833,71
37768,42833,69
37769,43148,71
37770,42917,68
37771,85547,95
37772,43022,93
37773,451,82
37774,1083,81
37775,706,82
37776,1893,87
37777,721,81
37778,451,79
37779,2213,86
37780,42841,83
37781,64192,85
37782,1523,75
37783,41972,92
37784,104552,89
37785,41174,76
37786,1693,83
37787,647,83
37788,44747,95
37789,43148,88
37790,37772,72
37791,451,86
37792,2918,77
37793,38297,75
37794,48722,90
37795,29373,83
37796,721,85
37797,42077,77
37798,52367,89
37799,42917,81
37800,43022,83
37801,2893,79
37802,48867,86
37803,746,72
37804,2428,88
37805,103397,73
37806,43022,73
37807,74446,79
37808,37227,78
37809,34256,80
37810,721,75
37811,42938,85
37812,42252,81
37813,46858,89
37814,1457,87
37815,451,78
37816,42077,88
37817,48272,91
37818,43102,66
37819,18018593,79
37820,3353,94
37821,54982,87
37822,479,86
37823,86222,82
37824,44912,86
37825,44828,83
37826,58138,94
37827,721,79
37828,2213,80
37829,64768,89
37830,43757,76
37831,94796,85
37832,3443,72
37833,62672,80
37834,43232,87
37835,43627,74
37836,58247,79
37837,46802,85
37838,128662,83
37839,112547,85
37840,77027,83
37841,42917,68
37842,111062,73
37843,2518,87
37844,43198,74
37845,52997,84
37846,42836,86
37847,40502,72
37848,42917,78
37849,41699,79
37850,35987,86
37851,43547,88
37852,11202,81
37853,3443,80
37854,44072,90
37855,39037,96
37856,42917,84
37857,678,91
37858,15000288,80
37859,43022,77
37860,55767,74
37861,71898,86
37862,44950,78
37863,39863,88
37864,2667,92
37865,3443,86
37866,725,92
37867,551,87
37868,14547,83
37869,44701,90
37870,34286,81
37871,55248,76
37872,37502,90
37873,45017,80
37874,21000000,91
37875,43472,85
37876,61173,81
37877,63047,88
37878,42917,81
37879,73120,80
37880,2213,75
37881,28736,86
37882,21000000,86
37883,16160910,88
37884,41552,85
37885,469,88
37886,42833,92
37887,40502,75
37888,43022,78
37889,866,76
37890,43022,94
37891,42917,78
37892,43022,81
37893,45577,67
37894,42833,75
37895,53552,86
37896,42602,93
37897,91217,82
37898,35462,82
37899,42707,89
37900,475,86
37901,3443,78
37902,42812,72
37903,42917,89
37904,507,82
37905,43937,91
37906,42028,82
37907,56998,78
37908,647,80
37909,3713,77
37910,43022,79
37911,3363,83
37912,43547,70
37913,12733,73
37914,1614,77
37915,42833,84
37916,4228,75
37917,1117,91
37918,3443,85
37919,1245,72
37920,44478,94
37921,35322,81
37922,3938,78
37923,40712,89
37924,55417,80
37925,43022,87
37926,2213,86
37927,4347,82
37928,40983,78
37929,3443,71
37930,36827,82
37931,3358,82
37932,59838,83
37933,43121,82
37934,40502,76
37935,42875,88
37936,60468,77
37937,43085,85
37938,51097,75
37939,57293,82
37940,35462,83
37941,601,88
37942,87560,85
37943,48717,84
37944,2213,86
37945,1140,86
37946,867,88
37947,42077,81
37948,2213,93
37949,1730,80
37950,1705,87
37951,42077,91
37952,469,86
37953,42917,78
37954,469,83
37955,61922,88
37956,1441,83
37957,1951,82
37958,47747,86
37959,43022,88
37960,1295,86
37961,229492,75
37962,38542,78
37963,507,81
37964,12039822,86
37965,85547,69
37966,1324,84
37967,103124,82
37968,57467,88
37969,41972,70
37970,60138,77
37971,887,90
37972,43547,87
37973,1343,77
37974,42052,89
37975,57723,71
37976,821,73
37977,19726,75
37978,2044707,77
37979,21000000,78
37980,49502,87
37981,867,79
37982,502,77
37983,37772,89
37984,31198,80
37985,21000000,71
37986,42833,80
37987,42392,91
37988,39767,86
37989,16003385,77
37990,451,78
37991,45447,88
37992,507,87
37993,42182,80
37994,4087,89
37995,539442,83
37996,41867,83
37997,3443,81
37998,17507,96
37999,12601,77
38000,20474,84
38001,57858,82
38002,3443,84
38003,34417,86
38004,44584,79
38005,65942,79
38006,43022,86
38007,74194,76
38008,1261,78
38009,1658,84
38010,44072,82
38011,1061,80
38012,43547,83
38013,120872,90
38014,2213,85
38015,1777,88
38016,3456534,77
38017,43547,88
38018,507,82
38019,21000000,85
38020,42938,81
38021,502,79
38022,3443,85
38023,998,79
38024,442,74
38025,42896,81
38026,42980,81
38027,3358,72
38028,29897,87
38029,43022,80
38030,43022,88
38031,53507,89
38032,58107,81
38033,15000288,84
38034,40502,89
38035,38077,93
38036,1556,81
38037,1160,78
38038,41447,75
38039,43162,86
38040,467,83
38041,853,82
38042,814,84
38043,42917,82
38044,42980,87
38045,54937,72
38046,2588,91
38047,451,84
38048,1652,89
38049,44947,80
38050,1673,77
38051,43547,91
38052,3068,79
38053,43727,89
38054,3443,77
38055,42917,84
38056,42077,86
38057,37202,80
38058,3352,80
38059,24227,84
38060,577,86
38061,43198,73
38062,43232,98
38063,469,85
38064,35192,88
38065,829,79
38066,59117,83
38067,54817,96
38068,3443,74
38069,71898,79
38070,42896,80
38071,76902,76
38072,43547,77
38073,42617,81
38074,43547,81
38075,42938,80
38076,55417,88
38077,57448,82
38078,3443,83
38079,21000000,86
38080,721,81
38081,43022,88
38082,15453,96
38083,1140,87
38084,51107,74
38085,43652,94
38086,43398,85
38087,42982,88
38088,43427,79
38089,41827,90
38090,43547,85
38091,1343,79
38092,42833,75
38093,43022,85
38094,43106,79
38095,43757,84
38096,28377,75
38097,42428,77
38098,37277,81
38099,47747,78
38100,2213,76
38101,502,78
38102,18005599,86
38103,42917,89
38104,2213,72
38105,21000000,88
38106,3443,76
38107,821,82
38108,42823,85
38109,42077,80
38110,16012340,82
38111,2213,69
38112,451,82
38113,44177,80
38114,43022,77
38115,42917,85
38116,109760,88
38117,730,87
38118,59208,92
38119,634,75
38120,43022,84
38121,35158,88
38122,911,96
38123,3443,72
38124,43022,89
38125,3443,85
38126,123622,80
38127,85862,83
38128,33467,82
38129,21000000,88
38130,469,85
38131,451,91
38132,21000000,87
38133,42878,86
38134,39117,83
38135,469,86
38136,43022,91
38137,469,80
38138,107007,88
38139,2213,82
38140,13537,89
38141,81872,79
38142,57138,94
38143,40502,79
38144,14545,87
38145,43022,80
38146,1324,76
38147,45447,88
38148,451,84
38149,37432,75
38150,1757,98
38151,43022,80
38152,451,85
38153,44072,85
38154,1295,82
38155,29897,91
38156,43022,82
38157,3443,87
38158,44072,97
38159,43967,87
38160,21000000,88
38161,3443,84
38162,469,85
38163,10997,86
38164,16000195,88
38165,70842,77
38166,43022,95
38167,48757,89
38168,43022,79
38169,44072,85
38170,74054,90
# After 18800 updates
# 442: "* ∧ T 1 -9 F x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth -10 x neg -2 x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "x x 7 -3 8 9 T -1 -1 x x x + ∧ pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ x -5 greedy? 4 x neg -9 x x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T x -5 greedy? 4 x neg -6 x T x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "greedy? -9 depth 7 x 8 x ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy x 2 x 0 -2 x 6 x x inc x + F F neg ∨ -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F x F neg x 9 -1 x neg x x ¬ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy x x neg -1 9 4 be x x x ∧ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy ∧ x + 0 + eql -9 x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x x 0 -2 x 6 ∧ x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ ungreedy x 1 x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* ∧ T if -9 ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ F inc 6 8 x T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ x T 7 x x x neg x x ∧ x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T -4 pop -4 -2 copy ∧ x depth x x copy + x pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 x 0 -2 x 6 x x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy ≥ 0 + x x greedy? x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x depth / if T x -1 F + x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ -9 T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -7 neg x 0 3 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x F if -2 F 6 -10 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ungreedy -2 x 0 4 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy 2 dec 0 -2 x x x x inc eql + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "be x ungreedy x x - x x be x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 swap -5 greedy? 4 x neg swap x F x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy x F eql x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 -9 depth / * - x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T x -5 x < x depth x copy 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* -3 ∧ if depth ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T T * 0 -2 x x x x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 467: "-1 x -6 F 4 -3 F eql x x dec x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -1 x T inc F -10 x T x ∨ greedy + 0 pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x 7 x 8 ∨ x x ungreedy x ¬ F + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x copy F / x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "swap x x x -3 x x x -10 pop ∧ ¬ + -5 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 x pop x x x x F x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-5 -6 7 x if greedy F 6 -10 x x x + x pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T copy -6 F eql / -4 -10 x T x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x 5 F / greedy? - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "be x ungreedy x x - x x be x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x / x if x x x -10 pop x ¬ + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-1 -9 ungreedy / x if x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 < eql 6 greedy -1 x x dec x + ∨ pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "2 be x x -3 F 8 eql < x inc x + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-1 -3 T T ungreedy -3 x > x x inc T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "F greedy x x 0 F x 6 < x inc x + F T neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be 3 x -3 F x -1 inc inc x x + T pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T inc be 0 -2 ∧ x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F T 5 greedy? x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T x * -7 pop / neg x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -4 6 F 0 x ∧ x depth x x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x x if x > x -9 x ≥ x + x pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap x 1 > 6 x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "4 5 * + greedy? - x x x x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "T -9 x F ungreedy -2 * 4 7 / ∨ x if T ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 T if / ungreedy T if x x neg x x + x pop neg ¬ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "x 0 copy < greedy F T x F neg x x + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "eql x -3 x x - -6 x greedy? T x greedy + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "3 -9 depth / * F x > -9 x x F + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 577: "-3 -8 -7 x x -2 ≤ 6 < greedy? 3 x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 821: "x 0 x 6 T + F F x -5 be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1140: "x -8 -7 x x -2 ≤ -4 < greedy? 3 x + x pop neg ungreedy eql x ≥ -9 -10 if -5 * 9 * T 5 *"
# 1343: "x 0 x x T + F greedy? x -5 be x pop x pop neg x -5 x > -9 -10 if -5 * 9 * + 5 *"
# 2213: "-1 T inc if -9 ∨ x -3 ungreedy x x be < x pop F ungreedy x x greedy? -9 -10 if -5 * 9 * + 5 *"
# 3713: "-1 x depth x if T x -1 ¬ + x x + x pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 4228: "copy F x x x + F * x x if x + x pop neg ¬ -5 x ≥ swap -10 if -5 * 9 * + 5 *"
# 23968: "dec -1 x x inc F -10 x T x F greedy + 0 inc neg ungreedy * x greedy? -9 -10 -9 -8 * 9 * + 5 *"
38171,43022,69
38172,43002,74
38173,43022,76
38174,42812,68
38175,43022,64
38176,43043,74
38177,43022,82
38178,2093,80
38179,59958,80
38180,12001887,87
38181,41342,102
38182,43022,81
38183,48797,102
38184,54314,86
38185,42917,85
38186,42942,88
38187,87017,85
38188,43002,70
38189,1688,83
38190,42077,88
38191,42875,88
38192,1107,89
38193,15000288,79
38194,42917,87
38195,43022,89
38196,70277,81
38197,43022,79
38198,507,82
38199,95438,84
38200,43547,87
38201,479,74
38202,44072,81
38203,451,89
38204,43547,80
38205,42917,90
38206,43022,68
38207,43022,81
38208,41062,77
38209,999,78
38210,50639,80
38211,42917,79
38212,43127,88
38213,56958,78
38214,469,83
38215,43967,76
38216,1257,80
38217,67697,87
38218,62140,92
38219,1343,83
38220,451,77
38221,48692,78
38222,469,72
38223,8362,86
38224,42812,88
38225,80892,64
38226,3466,78
38227,21000000,75
38228,721,81
38229,746,74
38230,43022,85
38231,597,88
38232,9878,74
38233,42287,84
38234,34622,82
38235,63470,78
38236,2213,78
38237,451,72
38238,21000000,85
38239,469,83
38240,42952,89
38241,2212,83
38242,43022,74
38243,43022,81
38244,42077,72
38245,21000000,74
38246,43232,82
38247,88868,86
38248,52868,87
38249,54817,85
38250,42854,88
38251,39567,82
38252,2795,92
38253,42077,81
38254,53277,73
38255,62972,76
38256,451,92
38257,1173,91
38258,2213,84
38259,48722,82
38260,43232,80
38261,45907,89
38262,4858,76
38263,16000195,91
38264,55318,77
38265,43001,90
38266,39946,86
38267,1740,82
38268,22352,71
38269,469,88
38270,43022,86
38271,42498,87
38272,43022,84
38273,1419,81
38274,43547,85
38275,37277,82
38276,3443,74
38277,39032,86
38278,43022,89
38279,18988,83
38280,44478,84
38281,678,86
38282,42917,88
38283,41447,84
38284,48647,75
38285,1242,83
38286,507,88
38287,451,82
38288,1696,82
38289,56688,80
38290,45437,84
38291,73588,87
38292,42938,79
38293,66647,80
38294,42959,83
38295,647,82
38296,10997,89
38297,730,85
38298,2213,73
38299,42917,84
38300,116422,71
38301,634,81
38302,51227,85
38303,43022,84
38304,451,90
38305,451,80
38306,77567,103
38307,1765,82
38308,2213,78
38309,3443,86
38310,451,79
38311,56692,81
38312,723,83
38313,2213,77
38314,968,83
38315,52242,83
38316,43022,84
38317,30117,74
38318,42077,87
38319,1758,74
38320,46447,90
38321,42980,88
38322,469,84
38323,42917,87
38324,33992,78
38325,38702,85
38326,52675,87
38327,42917,90
38328,29642,77
38329,43064,69
38330,90367,76
38331,613,87
38332,993,78
38333,3443,77
38334,42896,79
38335,3443,71
38336,10997,81
38337,73433,80
38338,57658,87
38339,929,87
38340,3443,91
38341,48017,83
38342,101985,90
38343,8096,79
38344,61692,78
38345,42077,87
38346,41867,76
38347,442,76
38348,442,77
38349,3958,75
38350,40042,76
38351,3693,90
38352,42812,71
38353,1649,80
38354,38894,81
38355,808,81
38356,43967,83
38357,26863,83
38358,43547,87
38359,2013,76
38360,41447,82
38361,37202,82
38362,42917,81
38363,1971,86
38364,44072,90
38365,43442,70
38366,43022,91
38367,721,79
38368,1140,74
38369,41867,90
38370,3443,88
38371,43022,82
38372,42917,95
38373,1672,80
38374,43022,67
38375,43547,77
38376,502,78
38377,42497,82
38378,451,83
38379,37227,91
38380,1324,73
38381,43987,75
38382,29268,76
38383,3882,84
38384,469,77
38385,43026,83
38386,42077,90
38387,4398,75
38388,1393,79
38389,71372,77
38390,27773,81
38391,451,76
38392,952,87
38393,31307,77
38394,1479,81
38395,42252,85
38396,451,82
38397,60468,86
38398,1140,81
38399,3783,86
38400,44412,83
38401,469,78
38402,678,77
38403,43022,81
38404,37227,79
38405,907,82
38406,1082,81
38407,2213,82
38408,18000089,78
38409,38825,76
38410,42917,77
38411,21000000,74
38412,34482,87
38413,647,82
38414,48717,90
38415,58107,77
38416,37227,89
38417,39516,86
38418,46907,82
38419,42917,81
38420,469,80
38421,51222,82
38422,25812,83
38423,43547,82
38424,44967,85
38425,1107,79
38426,29897,85
38427,37227,82
38428,55105,83
38429,8001499,87
38430,54763,84
38431,73433,87
38432,43022,87
38433,21000000,76
38434,42917,89
38435,4252,75
38436,796,86
38437,451,79
38438,1117,91
38439,1034,89
38440,42512,85
38441,48717,88
38442,41807,86
38443,4228,74
38444,42980,78
38445,15722,87
38446,2213,83
38447,479,85
38448,41902,82
38449,42917,88
38450,26012,89
38451,1246,72
38452,1333,76
38453,44072,83
38454,4003315,83
38455,4252,79
38456,45828,83
38457,57498,75
38458,1403,88
38459,1343,74
38460,45447,83
38461,58247,75
38462,15422,90
38463,47062,79
38464,90272,80
38465,37307,80
38466,48692,80
38467,42077,83
38468,42077,81
38469,30597,78
38470,21000000,90
38471,1133,87
38472,48797,72
38473,43022,70
38474,730,83
38475,50162,83
38476,21000000,86
38477,31402,83
38478,2428,91
38479,42393,79
38480,3443,83
38481,43442,88
38482,43232,95
38483,479,76
38484,57310,81
38485,451,90
38486,43022,75
38487,6092780,77
38488,42990,81
38489,451,80
38490,26902,84
38491,21203,74
38492,48717,88
38493,43442,91
38494,43647,89
38495,3107,83
38496,21000000,80
38497,1663,79
38498,58597,71
38499,4313,71
38500,2788,85
38501,46753,85
38502,43127,82
38503,27549,89
38504,102557,80
38505,502,83
38506,41831,84
38507,507,82
38508,42875,91
38509,43992,91
38510,43547,80
38511,442,73
38512,2588,85
38513,48692,75
38514,1918,91
38515,42077,83
38516,1133,94
38517,39257,73
38518,1963,86
38519,50374,71
38520,2428,79
38521,16004470,84
38522,43022,77
38523,1324,80
38524,42902,80
38525,2213,87
38526,1653,87
38527,42422,86
38528,2213,86
38529,42994,87
38530,42602,90
38531,50861,86
38532,119064,83
38533,44947,77
38534,1553,85
38535,1662,69
38536,647,82
38537,1843,78
38538,17656,79
38539,43022,68
38540,3443,82
38541,42917,83
38542,1187,78
38543,42917,85
38544,887,76
38545,853,84
38546,3657,81
38547,43022,90
38548,45447,70
38549,1083,74
38550,451,83
38551,451,81
38552,42917,78
38553,89832,85
38554,663,75
38555,3443,78
38556,647,88
38557,2213,76
38558,48717,89
38559,42917,78
38560,43022,81
38561,43232,78
38562,43022,88
38563,1556,77
38564,43022,82
38565,1245,83
38566,613,87
38567,48742,77
38568,43098,79
38569,43547,74
38570,58597,74
38571,27916,83
38572,42077,83
38573,77602,78
38574,451,85
38575,451,79
# After 19000 updates
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F ∧ / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth -10 x neg -2 x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* ∧ T 1 -9 F x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 2 x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x be copy x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy x F if -2 F 6 -10 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F x F neg x 9 -1 x neg x x ¬ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T x -5 greedy? 4 x neg -10 x x greedy ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy copy neg / * x x ∧ -9 x x ∧ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x x 7 -3 8 9 T -1 -1 x x x + ∧ pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* -3 ∧ if depth ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* ∧ T if -9 ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x < dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "greedy? -9 depth 7 x 8 x ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "be x ungreedy x x - x x be x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy x F eql x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ x T 7 x x x neg x x ∧ x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x - x x 0 -2 x 6 > x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 2 x x x neg x x F x + 0 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy if x neg -1 9 4 be x x greedy? ∧ + ¬ pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ ungreedy x 1 x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T -5 -1 4 - x pop x x x copy + 5 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T x -5 x < x depth x copy 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -6 7 -3 8 9 T x -1 x x x + ∧ pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T T * 0 -2 x x x x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -7 neg x 0 3 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x depth / if T x -1 F + x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "6 x swap / pop -3 9 x x x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ -9 T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 depth / x T x -1 F ∧ x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 pop ungreedy / x + x 2 copy 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 swap -5 greedy? 4 x neg swap x F x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ F inc 6 8 x T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy ∧ x + 0 + eql -9 x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "+ 5 F / x x neg -9 -10 x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 x x x eql 9 4 be x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy ≥ 0 + x x greedy? x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "4 T * x greedy? - x x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ungreedy -2 x 0 4 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 467: "-1 x -6 F 4 -3 F eql x x dec x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 x pop x x x x F x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x copy F greedy x - x x x x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "be x ungreedy x x - x x be x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -1 x T inc F -10 x T x ∨ greedy + 0 pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 0 / x - x ∨ x if x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-5 -6 7 x if greedy F 6 -10 x x x + x pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "swap x x x -3 x x x -10 pop ∧ ¬ + -5 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-1 T -3 be 0 -2 ∧ x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-2 / depth T inc * x x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-5 F depth -10 x 9 -2 x -10 pop x F + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x 7 x 8 ∨ x x ungreedy x ¬ F + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy x copy 0 F x 6 < x inc ≥ + F T neg ∨ -7 x > -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 < eql 6 greedy -1 x x dec x + ∨ pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 479: "copy ∧ x x -3 be 8 eql < x inc x + F pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be T inc be 0 -2 ∧ dec x x x inc + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec -5 - 1 F 0 5 x -10 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be 3 x -3 F x -1 inc inc x x + T pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-1 x x x if x > x -9 x ≥ x + x pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap x 1 > 6 x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x depth ¬ -6 * x x x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? -8 x F x -2 * x 7 / ∨ x if swap ungreedy neg ≤ -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "dec -1 -2 x x F T 5 greedy? x x greedy + 8 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 613: "be -9 x F ungreedy -2 T T * x 1 be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 1082: "F T inc x 8 ∨ / -3 ungreedy / x be + x pop neg be -6 x ≥ -9 -10 if -5 * 9 * T 5 *"
# 1140: "dec -1 x x inc F -10 x 1 x F 3 + F T neg ∨ -7 x > -9 -10 if -5 * 9 * T 5 *"
# 1245: "-1 T -6 / greedy -3 F eql x x 9 x + x pop neg depth -5 x > -9 -10 if -5 * 9 * + 5 *"
# 1553: "copy x x neg -1 x 4 be x x copy x x x pop neg ungreedy 2 x > -9 -10 if -5 * 9 * + 5 *"
# 2093: "T -9 + F x - x -1 x if x inc + 7 pop neg ungreedy ¬ x ≥ -9 -10 if -5 * 9 * + 5 *"
# 17656: "-5 F depth x x x dec -1 F ∧ x -5 + 9 pop neg be -6 x ≥ -4 -10 if -5 * 9 * + 5 *"
# 43022: "-2 dec T 7 < x x neg x x ∧ x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + x x"
38576,43211,77
38577,40670,73
38578,42816,75
38579,42896,68
38580,43031,72
38581,1614,79
38582,1730,79
38583,38567,81
38584,102580,83
38585,9947,87
38586,42077,84
38587,2143,71
38588,48717,92
38589,43547,77
38590,21000000,85
38591,43022,84
38592,2078,76
38593,53097,82
38594,2212,78
38595,1463,87
38596,1147,87
38597,42917,74
38598,41316,71
38599,43022,91
38600,42157,83
38601,82447,77
38602,57843,82
38603,47537,84
38604,43337,85
38605,37877,88
38606,42938,93
38607,42896,71
38608,42896,69
38609,42917,76
38610,42896,83
38611,609764,82
38612,33488,83
38613,42182,80
38614,647,91
38615,1255,73
38616,42077,87
38617,2078,95
38618,62772,90
38619,42497,80
38620,42854,85
38621,21000000,74
38622,42780,84
38623,21000000,76
38624,43022,85
38625,46946,89
38626,1688,76
38627,21000000,81
38628,55987,78
38629,43211,82
38630,10108,77
38631,43067,74
38632,1663,76
38633,42896,77
38634,43967,77
38635,3747,82
38636,43262,86
38637,49662,91
38638,125993,83
38639,41657,91
38640,51563,76
38641,2902,97
38642,469,82
38643,57138,78
38644,1324,84
38645,42917,85
38646,989,75
38647,43127,81
38648,2213,84
38649,43047,78
38650,1951,77
38651,57125,82
38652,43106,80
38653,4846,73
38654,32868,84
38655,963,96
38656,42497,87
38657,16546,72
38658,1556,80
38659,21000000,82
38660,69222,80
38661,43022,74
38662,40670,72
38663,41132,85
38664,43922,84
38665,21000000,79
38666,63877,86
38667,54132,76
38668,93674,81
38669,42917,77
38670,35987,80
38671,42896,81
38672,43337,77
38673,99637,70
38674,43022,76
38675,43031,72
38676,54817,79
38677,746,74
38678,568,83
38679,43967,82
38680,41762,77
38681,1243,84
38682,42617,73
38683,1730,84
38684,721,72
38685,2213,80
38686,43148,86
38687,10997,75
38688,43022,84
38689,43042,83
38690,2093,88
38691,21000000,78
38692,72612,80
38693,68537,89
38694,42917,79
38695,46262,79
38696,42602,76
38697,21755,85
38698,887,81
38699,42497,86
38700,476804,87
38701,45005,80
38702,451,77
38703,43547,80
38704,42917,77
38705,775,85
38706,721,84
38707,43031,68
38708,54576,72
38709,44072,77
38710,2213,73
38711,35672,79
38712,17018872,84
38713,42896,81
38714,1082,85
38715,58292,81
38716,42287,87
38717,20438,82
38718,1068,74
38719,41237,89
38720,1101,79
38721,46248,77
38722,44843,79
38723,3202,77
38724,933,81
38725,1663,98
38726,28324,80
38727,60386,77
38728,4035,81
38729,43022,86
38730,43022,79
38731,442,78
38732,53522,83
38733,451,82
38734,62140,88
38735,3623,76
38736,18221,81
38737,43127,78
38738,16000195,85
38739,103099,91
38740,42014,75
38741,3443,78
38742,1324,76
38743,36932,79
38744,10108,80
38745,58247,80
38746,634,73
38747,49217,80
38748,43085,90
38749,43232,83
38750,43022,85
38751,647,81
38752,37252,76
38753,16010910,93
38754,56868,82
38755,37352,79
38756,37477,78
38757,59284,83
38758,3540839,90
38759,44622,83
38760,39242,86
38761,35017,76
38762,451,85
38763,42980,79
38764,60468,87
38765,1140,80
38766,43547,77
38767,53992,78
38768,4287,91
38769,43493,76
38770,71898,81
38771,2213,84
38772,22613,85
38773,647,74
38774,125885,78
38775,42238,76
38776,1971,81
38777,42917,84
38778,58721,95
38779,42917,81
38780,451,78
38781,41962,75
38782,48797,80
38783,39697,78
38784,46248,75
38785,44327,91
38786,8057,83
38787,721,86
38788,48797,78
38789,1082,85
38790,103502,84
38791,73262,79
38792,41762,78
38793,94892,88
38794,43022,85
38795,42892,77
38796,83272,89
38797,873,86
38798,21000000,90
38799,4252,81
38800,1463,79
38801,21000000,81
38802,3758,89
38803,469,80
38804,43022,85
38805,42077,84
38806,721,81
38807,41897,82
38808,42910,89
38809,41867,88
38810,42917,85
38811,3443,85
38812,41762,86
38813,41132,86
38814,1663,87
38815,67308,84
38816,46382,84
38817,59208,85
38818,469,80
38819,38822,83
38820,43547,83
38821,47708,87
38822,42182,73
38823,451,78
38824,21000000,73
38825,71372,92
38826,56755,78
38827,42077,77
38828,9058,86
38829,42875,84
38830,43022,86
38831,1082,83
38832,71587,87
38833,21000000,86
38834,38572,79
38835,647,82
38836,59208,81
38837,1121,73
38838,38797,88
38839,1693,78
38840,43022,83
38841,4228,98
38842,33947,71
38843,21000000,87
38844,1192,75
38845,110117,82
38846,3443,84
38847,3872,81
38848,25172,91
38849,35987,84
38850,9947,86
38851,77132,82
38852,55472,77
38853,1117,71
38854,42707,84
38855,43022,81
38856,43652,77
38857,52227,79
38858,2547,72
38859,43757,85
38860,3443,80
38861,43022,72
38862,721,76
38863,56570,86
38864,42917,80
38865,37227,83
38866,47432,83
38867,43627,70
38868,50447,86
38869,42980,72
38870,913,79
38871,42917,78
38872,7001728,86
38873,39767,81
38874,76622,79
38875,28343,93
38876,1343,77
38877,42602,81
38878,42392,87
38879,42812,78
38880,43022,85
38881,43022,79
38882,37227,85
38883,451,95
38884,43547,90
38885,42077,79
38886,442,74
38887,43642,77
38888,44072,75
38889,3443,81
38890,2263,89
38891,43442,84
38892,1141,83
38893,384172,87
38894,42917,91
38895,58047,89
38896,867,91
38897,55417,85
38898,730,87
38899,3443,83
38900,43022,73
38901,613,85
38902,121622,75
38903,44072,84
38904,51552,95
38905,44222,74
38906,451,78
38907,42854,73
38908,138116,79
38909,2667,77
38910,43022,81
38911,4228,80
38912,43022,82
38913,1313,92
38914,2213,79
38915,1394,77
38916,507,72
38917,746,76
38918,43022,90
38919,59262,94
38920,45162,83
38921,1082,84
38922,42917,78
38923,43992,78
38924,634,82
38925,43232,88
38926,48722,77
38927,42422,82
38928,1663,77
38929,451,88
38930,42896,83
38931,65242,77
38932,24720,94
38933,1345,79
38934,3443,73
38935,49128,82
38936,721,77
38937,43547,78
38938,42917,83
38939,43022,78
38940,49657,85
38941,5222,84
38942,1117,89
38943,37252,79
38944,9901,77
38945,73120,80
38946,44072,81
38947,999,86
38948,1419,73
38949,2747,83
38950,57125,86
38951,45197,82
38952,41827,72
38953,1082,85
38954,50330,85
38955,42182,90
38956,559,80
38957,27974,67
38958,43022,83
38959,451,79
38960,43967,77
38961,44072,85
38962,55417,78
38963,451,76
38964,43022,84
38965,41262,71
38966,38542,72
38967,42959,79
38968,44072,76
38969,44072,71
38970,451,83
38971,43127,89
38972,843,87
38973,17024002,81
38974,4228,78
38975,451,88
38976,48197,78
38977,47837,77
38978,40670,76
38979,43547,81
38980,48722,80
# After 19200 updates
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* ∧ T 1 -9 F x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x be copy x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 inc x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth -10 x neg -2 x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F ∧ / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "¬ neg -6 7 x x x 0 x x F x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 2 x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T x -5 greedy? 4 x neg -10 x x greedy ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "4 T * x greedy? - x x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T T * 0 -2 x x x x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy x F eql x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* ∧ T if -9 ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy ∧ x + 0 + eql -9 x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T x -5 x < x depth x copy 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "greedy? -9 depth 7 x 8 x ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec eql x F if -2 F 6 F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 pop 7 x greedy? - x 1 x x x F + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T -5 -1 4 - x pop x x x copy + 5 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 depth / x T x -1 F ∧ x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x T 1 x x x neg x x ∧ x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -7 neg x 0 3 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 2 x x x neg x x F x + 0 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F x F neg x 9 -1 x neg x x ¬ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "be x ungreedy x x - x x be x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ ungreedy x 1 x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth if 8 9 T -5 -1 x x x + ∧ pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ F inc 6 8 x T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 x x x eql 9 4 be x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ungreedy -2 x 0 4 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "6 x swap / pop -3 9 x x x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 swap -5 greedy? 4 x neg swap x F x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 x depth / pop T ∧ -1 F + x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T ¬ if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy copy neg / * x x ∧ -9 x x ∧ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x - x x 0 -2 x 6 > x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy 0 2 x 0 dec x > dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 pop ungreedy / x + x 2 copy 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 depth / F T x -1 F 4 x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "x x 7 -3 8 9 T -1 -1 x x x + ∧ pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "+ 5 F / x x neg -9 -10 x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ -9 T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* 8 ∧ if depth greedy x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "swap T ungreedy ≥ 0 + x x neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ x T F x x x neg x x ∧ x + 8 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy if x neg -1 9 4 be x x greedy? ∧ + ¬ pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 467: "-1 x -6 F 4 -3 F eql x x dec x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-5 pop 7 x be - x 1 x x x F + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-1 T -3 be 0 -2 ∧ x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "3 x x x eql 9 4 eql T x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "swap x x x -3 x x x -10 pop ∧ ¬ + -5 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-2 / depth T inc * x x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -1 x T inc F -10 x T x ∨ greedy + 0 pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 0 / x - x ∨ x if x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x 7 x 8 ∨ x x ungreedy x ¬ F + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x T 7 x pop x x x x F x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy x copy 0 F x 6 < x inc ≥ + F T neg ∨ -7 x > -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 < eql 6 greedy -1 x x dec x + ∨ pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be T inc be 0 -2 ∧ dec x x x inc + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec -5 - 1 F 0 5 x -10 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be 3 x -3 F x -1 inc inc x x + T pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 / x T inc ungreedy -9 x x x x < + 2 pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x depth ¬ -6 * x x x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap x 1 > 6 x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1082: "-5 pop 7 x greedy? - x 1 x x 5 F + x pop dec ungreedy -5 x > -9 -10 if -5 * 9 * F 5 *"
# 1082: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg F -5 x > -9 -10 if -5 * 9 * copy 5 *"
# 1553: "copy x x neg -1 x 4 be x x copy x x x pop neg ungreedy 2 x > -9 -10 if -5 * 9 * + 5 *"
# 2093: "T -9 + F x - x -1 x if x inc + 7 pop neg ungreedy ¬ x ≥ -9 -10 if -5 * 9 * + 5 *"
# 3443: "-2 dec T 7 < + x 2 copy 4 x x + pop pop neg ungreedy -3 x -8 -9 -10 if -5 * 9 * + 5 *"
# 3872: "-5 F depth x x x dec -1 F ∧ x -5 + 9 pop neg depth 1 1 ≥ -4 -10 if -5 * 9 * + 5 *"
# 9058: "-2 / depth if 8 9 3 -5 -1 x x x pop ∧ > 9 dec -8 greedy -7 greedy if -7 -8 * 9 * + 5 *"
# 27974: "-5 F ∧ + x -9 F x x * x x / - dec if x x x -10 -8 - x x * 9 * + 5 *"
# 40670: "inc inc x / -9 * x x 4 / / x * 5 / x dec dec 9 5 inc * 9 dec 8 x - -6 - *"
# 40670: "be x ungreedy x x - x T be x F x + x pop neg F -5 x 4 x F 9 dec 8 x - -6 - *"
38981,43127,75
38982,43022,73
38983,42875,71
38984,43022,77
38985,42875,76
38986,42833,81
38987,20469,83
38988,38767,89
38989,43692,77
38990,42917,82
38991,3443,88
38992,41062,84
38993,42077,91
38994,23963,90
38995,1662,82
38996,47927,83
38997,442,74
38998,88151,91
38999,25673,87
39000,28847,77
39001,56227,88
39002,3443,97
39003,451,85
39004,43127,77
39005,42875,82
39006,43022,87
39007,58329,73
39008,43127,86
39009,42077,75
39010,3443,81
39011,62460,85
39012,43967,79
39013,120022,86
39014,43022,85
39015,56868,87
39016,3443,83
39017,20418,78
39018,37307,87
39019,41316,86
39020,929,79
39021,3443,91
39022,41132,78
39023,796,78
39024,3443,81
39025,42875,81
39026,1108,74
39027,933,81
39028,3852,80
39029,43232,66
39030,43211,76
39031,91217,77
39032,99922,77
39033,721,81
39034,41182,83
39035,647,88
39036,3443,79
39037,28304,72
39038,42077,96
39039,43001,79
39040,65440,84
39041,28501,86
39042,43967,78
39043,2213,76
39044,43022,74
39045,1057,89
39046,46559,84
39047,43022,78
39048,43127,88
39049,43652,77
39050,2288,80
39051,3967,80
39052,1790,87
39053,502,76
39054,993,85
39055,647,85
39056,54412,85
39057,25490,77
39058,3443,79
39059,39998,72
39060,451,90
39061,2213,78
39062,721,79
39063,42077,76
39064,51638,81
39065,43022,79
39066,87617,79
39067,647,89
39068,451,82
39069,42287,86
39070,42266,84
39071,43022,92
39072,43022,82
39073,43022,95
39074,41657,75
39075,1108,82
39076,41867,81
39077,509811,80
39078,469,79
39079,721,87
39080,50428,87
39081,451,75
39082,48467,81
39083,50273,81
39084,1039,70
39085,34514,78
39086,85547,76
39087,41727,85
39088,3443,92
39089,42917,84
39090,35737,80
39091,20588,82
39092,2588,81
39093,43148,79
39094,451,88
39095,2793,79
39096,42917,96
39097,1951,76
39098,21000000,84
39099,2213,89
39100,52277,85
39101,38297,90
39102,21000000,91
39103,40077,85
39104,43022,84
39105,87030,89
39106,63820,84
39107,42077,82
39108,43022,87
39109,451,87
39110,288042,72
39111,1419,73
39112,43232,81
39113,51237,76
39114,887,85
39115,42497,81
39116,1343,78
39117,43041,86
39118,634,78
39119,1363,80
39120,3872,95
39121,678,83
39122,42014,72
39123,39242,75
39124,18006551,79
39125,43022,72
39126,108743,81
39127,663,71
39128,40797,79
39129,43022,80
39130,43022,87
39131,51107,79
39132,1165,80
39133,835,79
39134,43022,81
39135,15617,96
39136,10001073,93
39137,42478,75
39138,48717,93
39139,1693,89
39140,43022,91
39141,60468,89
39142,639,90
39143,43522,80
39144,42924,74
39145,3443,89
39146,38488,88
39147,42252,87
39148,35042,83
39149,37227,86
39150,502,74
39151,44072,77
39152,90272,77
39153,451,85
39154,451,75
39155,3738,83
39156,42917,87
39157,35487,79
39158,451,78
39159,52997,80
39160,54377,80
39161,16000195,90
39162,62460,78
39163,43547,80
39164,44072,77
39165,21000000,87
39166,1649,80
39167,41018,84
39168,56028,85
39169,43022,71
39170,42917,83
39171,34290,80
39172,43792,80
39173,1226,74
39174,42182,82
39175,42812,74
39176,36229,78
39177,43127,91
39178,10042,76
39179,39892,86
39180,78747,83
39181,1148,79
39182,42875,69
39183,42028,88
39184,37252,78
39185,721,91
39186,34857,71
39187,72662,74
39188,42422,82
39189,48717,99
39190,42917,83
39191,898,73
39192,44492,76
39193,55217,77
39194,43022,74
39195,43022,84
39196,51002,80
39197,747,84
39198,1683,93
39199,38488,83
39200,43297,75
39201,44072,85
39202,7611478,85
39203,42707,95
39204,1556,76
39205,38390,79
39206,2471,77
39207,451,81
39208,43597,75
39209,48047,92
39210,43127,77
39211,1918,83
39212,1110,89
39213,42077,89
39214,507,76
39215,4398,90
39216,451,90
39217,1463,80
39218,746,77
39219,42077,91
39220,62493,90
39221,48707,90
39222,721,76
39223,730,85
39224,469,89
39225,15000308,95
39226,52997,80
39227,42077,85
39228,48712,89
39229,56868,84
39230,43148,85
39231,2213,73
39232,1394,72
39233,45447,92
39234,44292,83
39235,37877,70
39236,36827,70
39237,43022,90
39238,3288,81
39239,38297,88
39240,17463,85
39241,747,87
39242,42077,86
39243,37737,78
39244,451,76
39245,125118,80
39246,44912,77
39247,42917,84
39248,754,76
39249,43997,82
39250,43022,87
39251,42077,84
39252,1693,82
39253,451,84
39254,28357,79
39255,47772,87
39256,43547,75
39257,16021215,90
39258,36197,100
39259,1403,80
39260,34301,85
39261,2213,83
39262,42917,74
39263,45122,82
39264,41762,90
39265,1663,90
39266,647,86
39267,1310,75
39268,2618,89
39269,57302,74
39270,1673,79
39271,16000660,88
39272,43547,77
39273,41762,86
39274,42917,73
39275,40542,82
39276,469,79
39277,11002370,84
39278,42938,77
39279,42917,86
39280,42077,76
39281,43967,74
39282,45310,75
39283,48797,78
39284,42287,73
39285,3443,79
39286,51788,84
39287,3443,84
39288,2428,75
39289,57008,94
39290,43547,83
39291,3733,80
39292,43022,88
39293,42497,79
39294,56988,90
39295,1343,87
39296,43022,80
39297,42917,74
39298,2213,80
39299,647,83
39300,1705,87
39301,39257,91
39302,42917,74
39303,42938,83
39304,7948,76
39305,3313,76
39306,21000000,91
39307,1672,80
39308,3443,79
39309,42896,74
39310,21000000,88
39311,42266,92
39312,634,80
39313,42077,82
39314,35618,90
39315,7154,75
39316,43022,88
39317,451,81
39318,2213,77
39319,21000000,84
39320,43022,82
39321,2527,85
39322,81872,77
39323,67189,74
39324,39167,83
39325,647,84
39326,4228,80
39327,44072,88
39328,867,78
39329,21000000,80
39330,43021,85
39331,43022,77
39332,71447,78
39333,48717,75
39334,43547,85
39335,87137,79
39336,1419,80
39337,43022,87
39338,21000000,90
39339,42266,91
39340,3443,81
39341,1067,84
39342,43148,73
39343,38297,70
39344,1343,89
39345,55417,78
39346,43022,73
39347,48717,84
39348,41447,85
39349,451,86
39350,36747,81
39351,1147,88
39352,2428,91
39353,42602,70
39354,30722,81
39355,43652,91
39356,1324,84
39357,887,80
39358,721,76
39359,21000000,81
39360,43022,74
39361,3843,87
39362,60668,94
39363,43022,87
39364,1253,75
39365,1108,76
39366,1343,73
39367,43022,77
39368,43022,82
39369,43166,83
39370,42917,94
39371,42077,74
39372,2213,81
39373,42917,94
39374,601,79
39375,44072,74
39376,54442,75
39377,43022,84
39378,3372,78
39379,44072,82
39380,1217,93
39381,721,85
39382,37077,83
39383,44555,81
39384,1757,90
39385,43022,77
# After 19400 updates
# 442: "* ∧ T 1 -9 F x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* 5 T 1 -9 2 x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x be copy x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth -10 x neg -2 x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 inc x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 2 x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F ∧ / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "¬ neg -6 7 x x x 0 x x F x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "copy if x neg -1 9 4 be x x greedy? ∧ + ¬ pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ greedy x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy 5 -8 / T x neg -9 -10 x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 2 x x x neg x x F x + 0 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ungreedy -2 x 0 4 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy x F eql x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "+ 5 F / x x neg -9 -10 x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy copy neg / * x x ∧ -9 x x ∧ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "6 x swap / pop -3 9 x x x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "4 T * x greedy? - x x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -7 neg x 0 3 ∧ x depth inc x copy + 3 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ ungreedy x 1 x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "greedy? -9 depth 7 x 8 x ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 pop 7 x greedy? - x 1 x x x F + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* 8 ∧ if depth greedy x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy ∧ x + 0 + eql -9 x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "¬ -9 T 7 x x x neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x F 0 x ∧ x neg copy x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec eql x F if -2 F 6 F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 pop ungreedy / x + x 2 copy 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T -5 -1 4 - x -6 x x x copy + 5 pop neg ∨ -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy + x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 F swap / pop F 1 x neg x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 swap T greedy? 4 T neg swap x F x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ x T F x x x neg depth x ∧ x + 8 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy 0 2 / x T ∧ -1 F + x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy inc x 0 dec eql x x x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "be F inc 6 8 x inc -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* ∧ T if -9 ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x T 1 x x x neg x x ∧ x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 depth / x T F -1 + x x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T T * 0 -2 x x x x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F x F neg x 9 -1 x neg x x ¬ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "be x ungreedy x x - x x be x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T ¬ if -9 ∨ / -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 x x x eql 9 4 be x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth if 8 9 T -5 -1 x x x + ∧ pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x - x x 0 -2 x 6 > x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x F 1 x x x neg copy x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* 5 T 1 -9 2 T x x x be T + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 depth / F T x -1 F 4 x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 ∨ T -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "-1 T -3 be 0 -2 ∧ x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x if x x x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth / x - x -1 x x x x + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "3 x x x eql 9 4 eql T x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "swap x x x -3 x x x -10 pop ∧ ¬ + -5 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 + / x - x -1 x if x x + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-5 pop 7 x be - x 1 x x x F + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -1 x T inc F -10 x T x ∨ greedy + 0 pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x 7 x 8 ∨ x x ungreedy x ¬ F + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "T -9 0 / x - x ∨ x if x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy F -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x / F T inc ungreedy -9 x x x x < + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F greedy x copy 0 F x 6 < x inc ≥ + F T neg ∨ -7 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "-2 / depth T inc * x x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 475: "T copy -6 < eql 6 greedy -1 x x dec x + ∨ pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "< x -5 greedy? x x x -6 x T x ∧ + x pop neg dec -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "be T inc be 0 -2 ∧ dec x x x inc + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be 6 x -3 F x -8 < x x inc + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "dec -5 - 1 F 0 5 x -10 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x depth ¬ -6 * x x x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap x 1 > 6 x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-5 F depth / x -9 / x x F x T + -4 pop neg -5 T x ≥ -9 -10 if -5 * 9 * + 5 *"
# 647: "dec 3 - T 9 x x 6 if x inc -1 + x copy neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 678: "-5 F 7 if x neg x copy -3 F x x x T be neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 721: "5 T ∧ -1 4 - x 5 x x x copy + 5 pop neg ungreedy x x > -9 -10 if -5 * 9 * + 5 *"
# 746: "x -7 x / -6 3 ∧ x depth x F x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 747: "-1 T -6 / greedy -3 F / F x x 9 + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 2428: "dec -6 x T 9 x x 6 if x ungreedy -1 + x copy neg ungreedy -5 inc > -9 -10 if -5 * 9 * + 5 *"
# 3852: "-5 F ∧ + x -9 F F -1 x -1 x + ∧ pop neg ungreedy -5 x < -9 -10 if -5 * 9 * + 5 *"
# 30722: "copy if x T < 9 4 be x x F ∧ + ¬ pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + T *"
# 38297: "dec -6 x 5 - F ¬ x dec x x -5 x 4 x neg T x x ≥ T -1 if -5 * 9 * + 5 *"
39386,43148,73
39387,43022,71
39388,43022,71
39389,43022,67
39390,43043,74
39391,3443,80
39392,76132,76
39393,835,76
39394,35123,84
39395,46447,81
39396,3613,75
39397,3443,85
39398,45017,89
39399,48712,80
39400,38627,81
39401,43022,89
39402,1702,80
39403,647,83
39404,42052,79
39405,479,80
39406,38022,82
39407,746,81
39408,2978,85
39409,16245,85
39410,43547,81
39411,1225,75
39412,42077,76
39413,43148,75
39414,43022,72
39415,42896,97
39416,16000195,87
39417,3443,76
39418,43232,74
39419,43043,77
39420,3443,85
39421,451,87
39422,2213,76
39423,442,79
39424,1652,89
39425,48667,84
39426,48692,95
39427,1126,80
39428,647,86
39429,4398,89
39430,43022,80
39431,3443,75
39432,43022,70
39433,1556,77
39434,933,81
39435,167142,86
39436,3377,87
39437,38822,88
39438,44072,81
39439,38297,74
39440,45447,83
39441,2743,81
39442,613,94
39443,38867,82
39444,4228,93
39445,993,83
39446,1663,80
39447,479,82
39448,43022,78
39449,42917,88
39450,42917,80
39451,58310,91
39452,43022,74
39453,47192,89
39454,1663,80
39455,1727,79
39456,42917,96
39457,38297,72
39458,43022,79
39459,37252,80
39460,746,75
39461,79202,79
39462,39142,75
39463,42917,86
39464,43022,87
39465,53405,73
39466,87558,83
39467,42442,87
39468,451,85
39469,44967,87
39470,42917,74
39471,72548,82
39472,647,78
39473,6003155,72
39474,56668,87
39475,1343,72
39476,35852,86
39477,42797,88
39478,2798,85
39479,22893,83
39480,128072,93
39481,3443,87
39482,1140,83
39483,2547,84
39484,21000000,79
39485,43862,81
39486,2213,77
39487,451,89
39488,49217,75
39489,1705,78
39490,42924,76
39491,52927,68
39492,55052,82
39493,42917,84
39494,2213,94
39495,42938,84
39496,42232,84
39497,730,77
39498,3443,74
39499,38488,75
39500,21000000,73
39501,42392,74
39502,2218,83
39503,43098,72
39504,1150,78
39505,43232,90
39506,44843,75
39507,2213,93
39508,43022,79
39509,18009521,81
39510,57197,82
39511,43127,87
39512,43022,73
39513,15002430,85
39514,1061,72
39515,55082,81
39516,721,93
39517,721,83
39518,561,91
39519,43022,82
39520,42392,83
39521,43022,82
39522,43022,80
39523,42077,78
39524,730,88
39525,451,80
39526,43106,90
39527,67697,86
39528,52528,90
39529,99703,80
39530,442,74
39531,41657,80
39532,1343,81
39533,57508,81
39534,122003,80
39535,39242,80
39536,3038,96
39537,1461,85
39538,40327,80
39539,21000000,80
39540,42497,87
39541,1958,80
39542,47142,85
39543,41713,81
39544,42077,76
39545,55239,77
39546,442,80
39547,3443,83
39548,2213,76
39549,39117,90
39550,43967,83
39551,3443,84
39552,7039487,75
39553,42077,81
39554,82687,79
39555,86597,85
39556,56058,78
39557,1108,70
39558,43922,79
39559,16000535,93
39560,3443,83
39561,45017,75
39562,78557,75
39563,10997,79
39564,42077,74
39565,48667,79
39566,54308,75
39567,9422,79
39568,45187,77
39569,21000000,77
39570,41657,83
39571,43022,76
39572,1556,71
39573,70280,74
39574,106750,90
39575,1693,84
39576,451,78
39577,43547,81
39578,1673,85
39579,46382,76
39580,47777,72
39581,42077,81
39582,1343,84
39583,42917,77
39584,37227,79
39585,62102,76
39586,42917,85
39587,37227,81
39588,37202,87
39589,451,79
39590,647,81
39591,36113,94
39592,44072,85
39593,37102,87
39594,72778,77
39595,442,87
39596,42077,89
39597,42472,78
39598,55737,84
39599,41662,76
39600,43022,76
39601,36092,84
39602,50162,85
39603,72548,91
39604,873,82
39605,40539,76
39606,1003200,73
39607,4447,82
39608,44423,95
39609,11022055,81
39610,1343,84
39611,18013166,80
39612,1343,91
39613,451,80
39614,1345,83
39615,1197,94
39616,639,85
39617,42077,84
39618,43547,72
39619,68785,76
39620,34923,86
39621,40838,78
39622,64017,86
39623,1768,81
39624,43022,70
39625,451,80
39626,721,91
39627,2213,83
39628,43022,76
39629,21000000,75
39630,45662,83
39631,42917,87
39632,43022,77
39633,40602,70
39634,37247,83
39635,86597,69
39636,43022,81
39637,451,86
39638,3967,76
39639,73472,74
39640,14347,79
39641,42252,73
39642,42632,82
39643,1649,83
39644,451,85
39645,10346,88
39646,43169,83
39647,3698,69
39648,16000284,83
39649,42938,85
39650,1313,79
39651,442,84
39652,37352,74
39653,20000237,83
39654,43022,67
39655,42938,79
39656,1717,78
39657,20447,80
39658,993,90
39659,3443,91
39660,835,83
39661,3443,70
39662,42077,85
39663,52377,87
39664,42917,77
39665,37227,78
39666,43022,82
39667,17025572,90
39668,43022,75
39669,40052,97
39670,41657,89
39671,76681,74
39672,2471,88
39673,21000000,79
39674,469,90
39675,42917,74
39676,55062,87
39677,72547,91
39678,3022,82
39679,58622,74
39680,42607,88
39681,3852,80
39682,42959,80
39683,34401,79
39684,3443,84
39685,42780,98
39686,41831,85
39687,3443,72
39688,42917,84
39689,42182,91
39690,44012,75
39691,42917,95
39692,1556,78
39693,442,77
39694,721,94
39695,43022,70
39696,3443,78
39697,66902,76
39698,153548,78
39699,33322,83
39700,25844,84
39701,469,79
39702,43001,80
39703,451,86
39704,43022,84
39705,43022,83
39706,43022,88
39707,43022,79
39708,926,75
39709,16000195,85
39710,44072,87
39711,51527,75
39712,47913,74
39713,634,73
39714,727,96
39715,43652,77
39716,128072,82
39717,1343,80
39718,37252,77
39719,647,73
39720,2943,76
39721,31382,92
39722,42077,82
39723,2795,75
39724,36827,88
39725,1140,79
39726,34622,82
39727,43547,84
39728,33761,76
39729,42987,82
39730,1663,77
39731,451,81
39732,45155,88
39733,55417,79
39734,3063,78
39735,3063,75
39736,1419,72
39737,3443,85
39738,1715,76
39739,43022,85
39740,1082,84
39741,42077,78
39742,1730,80
39743,43022,75
39744,776,76
39745,44072,78
39746,57808,75
39747,44072,72
39748,36827,76
39749,138768,87
39750,43022,94
39751,33827,88
39752,42917,79
39753,451,78
39754,43022,84
39755,451,82
39756,48572,90
39757,84570,74
39758,43082,83
39759,1758,88
39760,3964,81
39761,31714,77
39762,40712,82
39763,1226,82
39764,43169,83
39765,33656,77
39766,31743,79
39767,42917,83
39768,451,90
39769,1673,88
39770,1693,82
39771,63158,83
39772,1918,70
39773,56652,83
39774,1738,78
39775,42822,80
39776,1662,84
39777,1345,83
39778,44732,100
39779,17463,83
39780,3443,77
39781,868,97
39782,1823,83
39783,42917,81
39784,1082,78
39785,40913,73
39786,54886,79
39787,1738,75
39788,57228,79
39789,41462,92
39790,43022,82
# After 19600 updates
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* 5 T 1 -9 2 x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 2 x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* ∧ T 1 -9 F x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "¬ neg -6 7 x x x 0 x x F x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "T -9 0 / 9 - dec greedy x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 inc x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* ∧ T 1 -9 F x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "F greedy x ungreedy x + x x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "be F T -10 x neg -2 x F x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "F copy -6 < eql 6 greedy x x x greedy x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth -10 x neg -2 x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "T ¬ swap / pop -3 1 x T x ∨ x + T greedy neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F ∧ / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x be copy x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "F T ungreedy x F eql x ∧ -9 x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "ungreedy T ≤ be 0 -2 neg neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T -6 / greedy -3 x eql x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T pop x 0 -2 ∧ ungreedy x 1 x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 T T -3 ungreedy + x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth if 8 9 T -5 -1 x x x + ∧ pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "greedy? -9 depth 7 x 8 x ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ungreedy -2 x 0 4 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 2 x x x neg x x F x + 0 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T -9 + / x T x -1 depth x x copy + x pop neg ∨ -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 pop 7 x greedy? - x 1 x x x F + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x F 1 x x x neg copy x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "inc -9 depth / F T x -1 F 4 x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x swap x ∨ x -7 ≤ neg x x x + -9 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -9 T 7 x x x neg x x F x + swap pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy ∧ x + 0 + eql -9 x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "4 T * x greedy? - x x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy greedy inc x 0 dec eql x x x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth T inc * -9 x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- - depth / F T 9 -1 x 4 x x + 9 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 depth / x T F -1 + x x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 F swap / pop F 1 x neg x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -7 neg x 0 3 ∧ x depth inc x copy + 3 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 x x x eql 9 4 be x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T T * 0 -2 x x x x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "6 x swap / pop -3 9 x x x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x F 0 x ∧ x neg copy x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy if x neg -1 9 4 be x x greedy? ∧ + ¬ pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy 0 2 / x T ∧ -1 F + x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x T 1 x x x neg x x ∧ x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec eql x F if -2 F 6 F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T -5 -1 4 - x -6 x x x copy + 5 pop neg ∨ -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy copy neg / * x x ∧ -9 x x ∧ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* 8 ∧ if depth greedy x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T ¬ if x ∨ / -3 < x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x - x x 0 -2 x 6 > x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* 5 T 1 -9 2 T x x x be T + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ greedy x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x 5 -8 / T 5 neg -9 * x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ x T F x x x neg depth x ∧ x + 8 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "+ 5 F / x x neg -9 -10 x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc 7 8 ∨ T -3 ungreedy x x be + F pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 F -10 x T F -1 + 2 x x + 9 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 pop ungreedy / x + x 2 copy 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* ∧ T if -9 ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 swap T greedy? 4 T neg swap x F x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F greedy x -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "x x 7 x 8 ∨ x x ungreedy x ¬ F + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -1 x T inc F -10 x T x ∨ greedy + 0 pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-8 greedy pop x ≤ x x pop x F x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-5 pop 7 x be - x 1 x x x F + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth ungreedy ≥ - x -1 x x x ∨ + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-1 T -3 be 0 -2 ∧ x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x x x copy x F x -10 pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "swap x x x -3 x x x -10 pop ∧ ¬ + -5 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "3 x x x eql 9 4 eql T x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x / F T inc ungreedy -9 x x x x < + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-2 / depth T inc * x x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "0 x x x if x x x - pop x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x -6 pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be 6 x -3 F x -8 < x x inc + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x depth ¬ -6 * x x x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "greedy? pop T if x neg x copy x F x x x T + neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "swap x 1 > 6 x x T F x x x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1343: "> x -4 -1 eql pop pop 6 5 x inc F x 4 pop ∨ ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 1556: "neg x x x x -6 x x x x x x + x pop -2 x -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1702: "x 9 x + dec -5 - x ungreedy -2 / -6 * * dec x 1 4 dec F -9 -10 if -5 * 9 * + 5 *"
# 1738: "+ 0 inc x 0 dec x - x x x x + x pop neg dec be x ≥ -9 -10 if -5 * 9 * + 5 *"
# 2428: "dec -6 x T 9 x x 6 if x ungreedy -1 + x copy neg ungreedy -5 inc > -9 -10 if -5 * 9 * + 5 *"
# 3443: "≤ 5 -5 -1 inc * -9 x x x x < + x pop neg T -5 x > -9 -10 greedy -5 * 9 * + 5 *"
# 3443: "copy if x x greedy? - x 1 x x x F + x pop < ungreedy -5 T > -9 -10 if -5 * 9 * + 5 *"
# 3852: "-1 F F F x -9 F F -1 x -1 ¬ + ∧ pop neg ungreedy -5 x < -9 -10 if -5 * 9 * + 5 *"
39791,42854,77
39792,43027,73
39793,43022,78
39794,43022,67
39795,42917,69
39796,1556,87
39797,34857,80
39798,43064,87
39799,502,83
39800,42917,84
39801,9220,85
39802,721,79
39803,43022,72
39804,451,84
39805,746,79
39806,3443,78
39807,3463,71
39808,21000000,73
39809,44492,84
39810,647,87
39811,42182,82
39812,442,84
39813,42812,81
39814,42077,75
39815,2213,83
39816,43027,71
39817,45447,72
39818,43022,82
39819,55105,83
39820,43001,88
39821,48742,72
39822,442,74
39823,1803,80
39824,48497,85
39825,3443,77
39826,451,88
39827,56570,83
39828,21000000,91
39829,37227,87
39830,3713,83
39831,48717,79
39832,42896,83
39833,36907,72
39834,42287,78
39835,42938,90
39836,42875,71
39837,68837,89
39838,78302,71
39839,42287,85
39840,8766,74
39841,57533,88
39842,52194,83
39843,1556,82
39844,539442,79
39845,42676,80
39846,44843,80
39847,1343,74
39848,57723,71
39849,81307,79
39850,42917,83
39851,45093,76
39852,41842,85
39853,1343,78
39854,42182,84
39855,55908,90
39856,43547,84
39857,56238,73
39858,43022,73
39859,42917,97
39860,42077,86
39861,41657,85
39862,1346,81
39863,43022,78
39864,16020590,83
39865,90272,77
39866,43757,80
39867,42077,82
39868,37227,73
39869,42077,75
39870,60977,78
39871,42077,82
39872,43547,79
39873,1693,78
39874,451,93
39875,451,80
39876,43223,83
39877,43547,85
39878,843,80
39879,721,80
39880,43022,79
39881,102834,86
39882,721,84
39883,20000177,81
39884,43022,74
39885,85967,81
39886,42896,81
39887,442,85
39888,28158,93
39889,2213,80
39890,43027,81
39891,9947,75
39892,42392,83
39893,42963,78
39894,60298,69
39895,42875,72
39896,835,88
39897,442,79
39898,38222,88
39899,867,82
39900,678,71
39901,1138,73
39902,48707,91
39903,451,81
39904,42875,83
39905,42252,73
39906,1653,88
39907,469,80
39908,746,84
39909,37173,85
39910,43022,95
39911,37227,79
39912,1653,82
39913,43022,84
39914,198448,71
39915,43022,74
39916,38822,84
39917,85547,86
39918,1567,72
39919,3443,83
39920,43216,89
39921,43022,81
39922,451,80
39923,42833,75
39924,42780,80
39925,10442,75
39926,70245,89
39927,29897,79
39928,43022,66
39929,43022,84
39930,2471,81
39931,43022,81
39932,47587,79
39933,42077,80
39934,25172,84
39935,3207,81
39936,3547,79
39937,44843,75
39938,468272,89
39939,1083,75
39940,41742,77
39941,41762,90
39942,1569,82
39943,507,82
39944,42917,82
39945,41237,84
39946,4252,71
39947,42902,90
39948,107022,93
39949,216272,71
39950,42077,89
39951,1663,83
39952,1082,86
39953,43022,77
39954,43337,84
39955,47767,77
39956,42077,85
39957,1556,85
39958,42917,75
39959,43022,80
39960,9947,77
39961,394211,75
39962,3443,72
39963,62140,96
39964,3443,70
39965,37457,91
39966,42962,82
39967,21000000,79
39968,43197,83
39969,62867,78
39970,45092,75
39971,42917,86
39972,18005464,86
39973,30117,79
39974,551,85
39975,1117,81
39976,55417,86
39977,1738,81
39978,44072,77
39979,1257,85
39980,43022,88
39981,46382,79
39982,21000000,92
39983,34622,85
39984,43274,75
39985,4557,82
39986,75502,86
39987,43022,78
39988,4228,100
39989,44072,82
39990,43022,78
39991,86339,75
39992,1343,85
39993,43022,80
39994,41142,84
39995,2213,93
39996,51727,83
39997,43022,86
39998,90504,74
39999,3443,85
40000,7027867,77
40001,816,74
40002,55998,79
40003,42938,74
40004,2428,79
40005,62140,83
40006,42812,87
40007,47672,82
40008,2213,87
40009,91217,74
40010,50533,78
40011,1693,96
40012,37567,77
40013,42917,83
40014,2213,72
40015,43547,72
40016,1057,78
40017,72197,88
40018,437,89
40019,35607,76
40020,469,83
40021,1117,82
40022,43967,82
40023,1765,78
40024,52997,84
40025,42077,82
40026,1569,86
40027,21000000,86
40028,1261,70
40029,42917,77
40030,3443,78
40031,53417,81
40032,609,77
40033,50330,82
40034,43022,79
40035,42917,83
40036,609,78
40037,43192,85
40038,647,87
40039,34427,89
40040,1027,80
40041,48717,84
40042,875,78
40043,3443,80
40044,53042,78
40045,21000000,80
40046,4228,78
40047,37477,79
40048,98777,82
40049,22825,95
40050,727,78
40051,1556,72
40052,21000000,77
40053,42707,83
40054,451,74
40055,1918,80
40056,3738,80
40057,43022,76
40058,963,79
40059,63232,89
40060,1683,82
40061,634,79
40062,185840,74
40063,42854,82
40064,48692,82
40065,15000288,87
40066,1082,82
40067,1683,76
40068,21000000,88
40069,18001252,83
40070,41657,86
40071,43217,95
40072,43547,79
40073,43022,80
40074,43463,71
40075,21000000,77
40076,254279,79
40077,52377,79
40078,55417,83
40079,34401,76
40080,46892,72
40081,42917,81
40082,730,78
40083,1567,78
40084,42911,82
40085,2213,75
40086,43117,81
40087,64967,80
40088,1441,82
40089,34370,75
40090,1715,77
40091,42257,82
40092,61780,89
40093,17019222,79
40094,4228,86
40095,67189,78
40096,1518,87
40097,8008,89
40098,43022,84
40099,1082,74
40100,42854,78
40101,52588,80
40102,43022,89
40103,451,83
40104,42717,78
40105,634,75
40106,56117,79
40107,3443,79
40108,451,76
40109,56440,79
40110,451,78
40111,1427,88
40112,3443,75
40113,3958,77
40114,42252,73
40115,47535,81
40116,1373,75
40117,42497,92
40118,42933,81
40119,42917,88
40120,34517,79
40121,12024466,84
40122,39253,84
40123,42077,91
40124,111062,79
40125,51107,87
40126,58863,87
40127,37352,77
40128,442,78
40129,43022,77
40130,37227,81
40131,37352,97
40132,1663,73
40133,42998,81
40134,62460,86
40135,451,74
40136,55497,80
40137,1693,82
40138,27162,89
40139,647,92
40140,42917,75
40141,43022,81
40142,1343,81
40143,43043,75
40144,1343,75
40145,43022,78
40146,43022,81
40147,66197,83
40148,25818,89
40149,85547,98
40150,60657,82
40151,37202,86
40152,16000284,75
40153,42602,74
40154,95350,82
40155,9076,77
40156,43190,76
40157,43022,95
40158,2893,91
40159,41477,81
40160,1848,83
40161,451,78
40162,42917,81
40163,4557,79
40164,44576,86
40165,15011572,80
40166,8812,82
40167,67542,86
40168,43022,78
40169,1765,94
40170,1717,92
40171,1718,97
40172,634,76
40173,90272,79
40174,53042,79
40175,42077,79
40176,42917,73
40177,48692,81
40178,70067,80
40179,1121,77
40180,55908,85
40181,1738,80
40182,43022,75
40183,42917,82
40184,3443,79
40185,1173,77
40186,451,90
40187,1295,70
40188,451,98
40189,1394,73
40190,647,82
40191,43022,91
40192,561,77
40193,723,80
40194,43547,84
40195,48692,82
# After 19800 updates
# 437: "F copy -6 < -5 6 greedy x x x greedy greedy + x pop neg T -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 2 x 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* 5 T 1 -9 2 x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "F copy -6 < eql 6 greedy x x x greedy x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x 0 + F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "neg copy -6 < eql 6 x x x x greedy T + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-1 2 x ≥ greedy be copy -1 x x ∨ be + T pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "F greedy x ungreedy x + x x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* ∧ T 1 -9 F x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "T -9 0 / 9 - dec greedy x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-2 5 if F eql 6 greedy x x x greedy x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F ∧ / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "¬ neg -6 7 x x x 0 x x F x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x x x 6 T + F neg x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy 0 inc x 0 dec x F x x x T + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "x be T 0 0 dec x x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth -10 x neg -2 x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* ∧ T 1 -9 F x x x x be T + -4 pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "* ∧ T 1 -9 F x x x x be greedy? + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "-5 F depth / x -9 F x x x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "be F T -10 x neg -2 x F x x x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "copy F x x x + F x x x be x + x pop neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 442: "T ¬ swap / pop -3 1 x T x ∨ x + T greedy neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x T 1 x x x neg x x ∧ x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* 8 ∧ if depth greedy x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "4 T * x greedy? - x x x x x < + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-2 / depth if 8 9 T -5 -1 x x x + ∧ pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec eql x F if -2 F 6 F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* ∧ T if -9 ∨ x -3 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 F swap / pop F 1 x neg x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 pop F x x + x -9 x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 2 x ∨ / ¬ x -9 dec 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x swap -3 ∨ x -7 ≤ x x x x + F pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -7 neg x 0 3 ∧ x depth inc x copy + 3 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x -9 T 7 x x x neg x x F x + swap pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x be F 7 0 dec x x F x x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 F -10 x T F -1 + 2 x x + 9 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x T 2 x x x neg x x F x + 0 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T ¬ if x ∨ / -3 < x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x ungreedy -2 x 0 4 ∧ x depth x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "≤ T -5 -1 4 - x -6 x x x copy + 5 pop neg ∨ -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 -9 depth / x T x -1 F ∧ x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "x T -6 / greedy -3 x eql x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "3 x x x eql 9 4 be x x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- - depth / F T 9 -1 x 4 x x + 9 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "* 5 T 1 -9 2 T x x x be T + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc x 8 T T -3 ungreedy + x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec 3 - T 9 x x 6 if x inc x + F F neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ greedy x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "dec greedy? 0 F 8 7 greedy 4 x 9 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "- -9 depth / x T F -1 + x x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "T T T x 0 -2 x x F x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T -6 / greedy -3 F eql F x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "2 x F 1 x x x neg copy x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 pop 7 x greedy? - x 1 x x x F + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x be F 7 0 dec x x F 9 x x + x pop neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 F inc 7 8 ∨ T -3 ungreedy x x be + F pop neg F -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T -6 - greedy -3 x eql x x x copy + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T inc x 8 ∨ / -3 ungreedy x x be + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "/ x T F x x x neg depth x ∧ x + 8 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "inc -9 depth / F T x -1 F 4 x x + 9 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "+ 5 F / x x neg -9 -10 x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "greedy? -9 depth 7 x 8 x ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "T -9 + greedy? 3 T x -1 depth x x copy + x pop neg ∨ -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-1 T swap / pop -3 1 x x x greedy x + T greedy neg dec -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "ungreedy T ≤ be 0 -2 neg neg x x F x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x 5 -8 / T 5 neg -9 * x x ∨ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy x x + greedy? copy x inc * 4 x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "copy 0 2 / x T ∧ -1 F + x x + -6 pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "6 x swap / pop -3 9 x x x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x swap x ∨ x -7 ≤ neg x x x + -9 pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x T x F / dec F -9 ungreedy x x be + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "eql x x x ∨ x -7 ≤ neg x x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F greedy x -5 eql be depth -1 5 x ∧ x + T pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "x be F T 0 dec x x F x x x + x if neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "0 pop x x 7 x x x -2 pop x x + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "F T T x F eql x 1 x x T F + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 451: "-5 F depth T x T x -1 F ∧ x x + T pop neg be -6 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 451: "copy copy neg / * x x ∧ -9 x x ∧ + x pop neg ungreedy -5 x > -9 -10 if -5 * 9 * + 5 *"
# 469: "> -9 depth ungreedy ≥ - x -1 x x x ∨ + -8 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "eql x x x x x x x -10 pop F ¬ + -5 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x x 7 x 8 ∨ x x ungreedy x ¬ F + 7 pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "x / F T inc ungreedy -9 x x x x < + swap pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "3 x x x eql 9 4 eql T x x x + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "F x F 0 inc eql x x x x ≤ T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "-1 T -3 be 0 -2 ∧ x x x x T + x pop neg ungreedy -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 469: "dec -1 x T inc F -10 x T x ∨ greedy + 0 pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "-2 x x F pop pop x 6 5 x inc x + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 502: "2 be 6 x -3 F x -8 < x x inc + x pop neg F -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 507: "-2 x depth ¬ -6 * x x x x x T + x pop neg ungreedy -5 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 634: "-1 7 F F x be F -7 -1 x -1 ¬ + x be neg dec -7 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 721: "T x F 0 x ∧ x neg copy x x x + x pop neg ungreedy -5 x > -9 F if -5 * 9 * + 5 *"
# 730: "be 5 F / x F -10 x T x ∨ greedy if 0 pop neg T -8 x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1082: "+ 0 inc x 0 dec x - x x x copy -1 x ¬ neg ungreedy -5 x > -9 -10 if -5 * 9 * T 5 *"
# 1518: "-8 -9 pop x greedy? -9 x 1 x x ∨ be + T pop neg dec greedy x ≥ -9 -10 if -5 * 9 * + 5 *"
# 1556: "≤ 2 x T 9 x x 6 x x ungreedy > ≤ x copy neg ungreedy 6 inc > -9 -10 if -5 * 9 * + 5 *"
# 3443: "copy if x x greedy? - x 1 x x x F + x pop < ungreedy -5 T > -9 -10 if -5 * 9 * + 5 *"
# 42252: "copy 0 / x 0 dec x x x x * x x if -3 7 x x 0 9 x dec - -6 inc F - + neg *"
# 42854: "≤ T -5 -1 + - x -6 x x x copy + 5 pop neg ∨ -5 x > -9 -9 if x 2 -4 x dec dec 8"
# 42917: "¬ neg F 7 x x x 0 x x F x + x pop neg dec x x + -9 -10 if 1 x x x -5 -1 *"
40196,43022,74
40197,42959,70
40198,42980,67
40199,43106,69
40200,43022,62
40201,42917,87
40202,42240,86
40203,3443,76
40204,1343,76
40205,43022,79
40206,678,81
40207,43127,86
40208,38147,78
40209,1790,88
40210,3443,86
40211,451,90
40212,43992,91
40213,2988,86
40214,4087,87
40215,993,88
40216,43022,89
40217,68923,80
40218,1403,80
40219,2502,80
40220,43102,78
40221,451,80
40222,1511,84
40223,2273,81
40224,37227,77
40225,16000284,96
40226,3443,72
40227,442,75
40228,464222,85
40229,1343,85
40230,13813,79
40231,44072,79
40232,3443,82
40233,451,80
40234,1738,87
40235,42917,84
40236,2763,74
40237,451,70
40238,43022,76
40239,42917,85
40240,48272,92
40241,4123,82
40242,42854,72
40243,43757,79
40244,35607,84
40245,42938,80
40246,42854,76
40247,8933,88
40248,90272,84
40249,54598,71
40250,43967,79
40251,3443,79
40252,39347,85
40253,61537,75
40254,49637,90
40255,42980,76
40256,1068,72
40257,45447,77
40258,3443,73
40259,44072,80
40260,1757,85
40261,43022,74
40262,43897,70
40263,42980,85
40264,43992,78
40265,104422,75
40266,63792,86
40267,43106,75
40268,27899,67
40269,43022,82
40270,43022,72
40271,42028,97
40272,21000000,83
40273,1082,75
40274,56242,81
40275,74493,83
40276,1868,77
40277,44843,81
40278,42938,94
40279,44072,81
40280,89292,81
40281,4721,77
40282,15012427,88
40283,42854,93
40284,43022,91
40285,42980,82
40286,16024290,89
40287,37252,71
40288,42959,81
40289,37352,80
40290,77147,82
40291,3482578,84
40292,647,91
40293,43547,77
40294,3283,88
40295,591,76
40296,933,81
40297,43022,75
40298,34517,86
40299,3443,76
40300,3443,77
40301,43547,76
40302,48712,79
40303,25656,72
40304,44782,73
40305,4398,75
40306,53417,80
40307,34417,73
40308,43022,88
40309,43022,67
40310,2489,70
40311,528,79
40312,1343,82
40313,3443,72
40314,5846,84
40315,1672,74
40316,56238,70
40317,37122,83
40318,45782,81
40319,2633,84
40320,43001,75
40321,1117,84
40322,43022,85
40323,42077,79
40324,43992,87
40325,43169,91
40326,42252,74
40327,451,88
40328,81767,98
40329,33523,77
40330,45023,73
40331,7447,88
40332,42497,77
40333,613,79
40334,42393,78
40335,42891,81
40336,55217,76
40337,4252,80
40338,42077,74
40339,18501,85
40340,1343,85
40341,21000000,73
40342,97438,80
40343,42602,89
40344,1195,72
40345,44102,88
40346,1730,78
40347,37973,76
40348,3443,77
40349,123792,80
40350,42077,80
40351,48732,84
40352,1147,80
40353,1082,92
40354,4027,99
40355,44072,80
40356,36827,87
40357,43022,82
40358,57125,82
40359,42182,84
40360,43022,77
40361,451,80
40362,43222,97
40363,41762,93
40364,44072,85
40365,44718,71
40366,2213,78
40367,42077,88
40368,43127,92
40369,43127,80
40370,42077,83
40371,42077,80
40372,1442,79
40373,2213,80
40374,33572,79
40375,29792,77
40376,3443,78
40377,43022,80
40378,45857,78
40379,64277,81
40380,43742,77
40381,42252,70
40382,44700,73
40383,8908,80
40384,43547,72
40385,451,90
40386,96120,80
40387,21000000,97
40388,43022,81
40389,1082,73
40390,451,91
40391,42077,72
40392,55087,73
40393,43292,78
40394,1419,74
40395,48967,82
40396,13638,86
40397,42868,80
40398,4543,72
40399,42822,92
40400,38197,74
40401,57758,72
40402,42854,77
40403,43169,84
40404,43148,81
40405,27022,79
40406,4963,79
40407,1758,70
40408,48489,81
40409,746,75
40410,24397,86
40411,43022,68
40412,43757,73
40413,41482,71
40414,3443,69
40415,919,82
40416,634,80
40417,613,86
40418,687,83
40419,42077,88
40420,43022,73
40421,43967,82
40422,42077,75
40423,43022,77
40424,442,90
40425,44807,74
40426,89327,74
40427,21000000,74
40428,48682,78
40429,1107,84
40430,43547,83
40431,68329,81
40432,15289168,96
40433,44072,82
40434,27899,70
40435,43062,83
40436,451,83
40437,39267,84
40438,43967,78
40439,42532,77
40440,1082,76
40441,1117,79
40442,1039,78
40443,42107,85
40444,44072,79
40445,4398,85
40446,67697,73
40447,95870,74
40448,48712,77
40449,43022,84
40450,44807,78
40451,948,89
40452,1293,74
40453,57723,82
40454,21000000,83
40455,746,78
40456,42917,95
40457,41257,83
40458,12482,85
40459,57062,73
40460,3360,85
40461,43085,86
40462,14323,74
40463,26267,77
40464,43967,80
40465,3443,82
40466,38822,78
40467,451,81
40468,31396,82
40469,57858,80
40470,887,76
40471,42077,79
40472,43202,88
40473,48717,78
40474,3443,91
40475,53703,92
40476,50857,90
40477,5524,75
40478,48272,72
40479,442,75
40480,43211,79
40481,69348,71
40482,38652,87
40483,1662,88
40484,72548,81
40485,3443,80
40486,44072,83
40487,3443,70
40488,38297,78
40489,41662,79
40490,43547,85
40491,38077,75
40492,43852,91
40493,42854,79
40494,51663,75
40495,1343,79
40496,36722,75
40497,16138880,82
40498,38597,76
40499,3443,88
40500,2228,83
40501,20000193,79
40502,1774,93
40503,63062,74
40504,1918,79
40505,553,81
40506,22165,87
40507,3443,76
40508,41867,75
40509,451,76
40510,37227,95
40511,42287,75
40512,1187,83
40513,48717,82
40514,115368,77
40515,3443,84
40516,38602,78
40517,1642,73
40518,21000000,81
40519,43022,77
40520,43001,81
40521,43022,88
40522,730,81
40523,2471,71
40524,553,89
40525,3738,81
40526,502,77
40527,43022,85
40528,43022,81
40529,43148,82
40530,647,72
40531,111062,76
40532,48712,89
40533,33992,78
40534,2213,71
40535,43547,88
40536,42077,78
40537,28112,82
40538,44072,81
40539,31868,93
40540,18000089,76
40541,42917,89
40542,36932,82
40543,43127,74
40544,124544,89
40545,31938,86
40546,43022,77
40547,42854,82
40548,43442,76
40549,634,79
40550,3912,74
40551,11042,87
40552,45322,82
40553,2588,82
40554,2213,81
40555,48712,74
40556,3443,97
40557,47327,71
40558,58262,85
40559,42854,80
40560,721,80
40561,42917,89
40562,43043,82
40563,37252,83
40564,42448,71
40565,4228,78
40566,3443,87
40567,929,84
40568,43547,87
40569,54617,84
40570,48272,78
40571,43022,80
40572,42896,76
40573,43022,81
40574,1075,81
40575,2213,76
40576,853,72
40577,1343,83
40578,721,83
40579,27924,75
40580,42917,82
40581,1147,86
40582,44843,76
40583,44072,76
40584,42686,93
40585,43127,71
40586,43211,81
40587,41316,82
40588,48712,73
40589,1117,95
40590,43022,73
40591,1757,80
40592,44072,83
40593,2213,80
40594,41923,77
40595,57613,80
40596,41132,81
40597,42077,71
40598,159323,70
40599,59833,84
40600,77186,74
