Special messages:
  :step
  :run
  :halt
  :reset
  :fast_forward
  :contents
  :start_value
  :end_value
  :index
  :increment
  - a bunch of List methods (:shatter, )

Int.times_do
  creates an Iterator, with
    Span (0..int.value)
    _i = 0
    increment = +1
    contents = any item
  step:
    produces [self, _i, contents].flatten
    
    
List.each
  creates an Iterator with
    Span (0..list.length)
    _i = 0
    increment = +1
    contents = list contents
  step:
    produces [self, _i, contents[i]].flatten
    
    
Span.each
  creates an Iterator with
    Span = the span
    _i = start_value
    increment = some float
    contents = nil
  step:
    produces [self, _i, (nil)].flatten